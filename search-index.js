var searchIndex = JSON.parse('{\
"adler32":{"doc":"A minimal implementation of Adler32 for Rust.","i":[[3,"RollingAdler32","adler32","A rolling version of the Adler32 hash, which can \'forget\' …",null,null],[11,"new","","Creates an empty Adler32 context (with hash 1).",0,[[],["rollingadler32",3]]],[11,"from_value","","Creates an Adler32 context with the given initial value.",0,[[["u32",15]],["rollingadler32",3]]],[11,"from_buffer","","Convenience function initializing a context from the hash …",0,[[],["rollingadler32",3]]],[11,"hash","","Returns the current hash.",0,[[],["u32",15]]],[11,"remove","","Removes the given <code>byte</code> that was fed to the algorithm <code>size</code> …",0,[[["usize",15],["u8",15]]]],[11,"update","","Feeds a new <code>byte</code> to the algorithm to update the hash.",0,[[["u8",15]]]],[11,"update_buffer","","Feeds a vector of bytes to the algorithm to update the …",0,[[]]],[5,"adler32","","Consume a Read object and returns the Adler32 hash.",null,[[["read",8]],[["result",6],["u32",15]]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"default","","",0,[[],["rollingadler32",3]]]],"p":[[3,"RollingAdler32"]]},\
"ansi_term":{"doc":"This is a library for controlling colours and formatting, …","i":[[3,"Prefix","ansi_term","Like <code>ANSIString</code>, but only displays the style prefix.",null,null],[3,"Infix","","Like <code>ANSIString</code>, but only displays the difference between …",null,null],[3,"Suffix","","Like <code>ANSIString</code>, but only displays the style suffix.",null,null],[4,"Colour","","A colour is one specific type of ANSI escape code, and …",null,null],[13,"Black","","Colour #0 (foreground code <code>30</code>, background code <code>40</code>).",0,null],[13,"Red","","Colour #1 (foreground code <code>31</code>, background code <code>41</code>).",0,null],[13,"Green","","Colour #2 (foreground code <code>32</code>, background code <code>42</code>).",0,null],[13,"Yellow","","Colour #3 (foreground code <code>33</code>, background code <code>43</code>).",0,null],[13,"Blue","","Colour #4 (foreground code <code>34</code>, background code <code>44</code>).",0,null],[13,"Purple","","Colour #5 (foreground code <code>35</code>, background code <code>45</code>).",0,null],[13,"Cyan","","Colour #6 (foreground code <code>36</code>, background code <code>46</code>).",0,null],[13,"White","","Colour #7 (foreground code <code>37</code>, background code <code>47</code>).",0,null],[13,"Fixed","","A colour number from 0 to 255, for use in 256-colour …",0,null],[13,"RGB","","A 24-bit RGB color, as specified by ISO-8613-3.",0,null],[3,"Style","","A style is a collection of properties that can format a …",null,null],[12,"foreground","","The style\'s foreground colour, if it has one.",1,null],[12,"background","","The style\'s background colour, if it has one.",1,null],[12,"is_bold","","Whether this style is bold.",1,null],[12,"is_dimmed","","Whether this style is dimmed.",1,null],[12,"is_italic","","Whether this style is italic.",1,null],[12,"is_underline","","Whether this style is underlined.",1,null],[12,"is_blink","","Whether this style is blinking.",1,null],[12,"is_reverse","","Whether this style has reverse colours.",1,null],[12,"is_hidden","","Whether this style is hidden.",1,null],[12,"is_strikethrough","","Whether this style is struckthrough.",1,null],[4,"Color","","A colour is one specific type of ANSI escape code, and …",null,null],[13,"Black","","Colour #0 (foreground code <code>30</code>, background code <code>40</code>).",0,null],[13,"Red","","Colour #1 (foreground code <code>31</code>, background code <code>41</code>).",0,null],[13,"Green","","Colour #2 (foreground code <code>32</code>, background code <code>42</code>).",0,null],[13,"Yellow","","Colour #3 (foreground code <code>33</code>, background code <code>43</code>).",0,null],[13,"Blue","","Colour #4 (foreground code <code>34</code>, background code <code>44</code>).",0,null],[13,"Purple","","Colour #5 (foreground code <code>35</code>, background code <code>45</code>).",0,null],[13,"Cyan","","Colour #6 (foreground code <code>36</code>, background code <code>46</code>).",0,null],[13,"White","","Colour #7 (foreground code <code>37</code>, background code <code>47</code>).",0,null],[13,"Fixed","","A colour number from 0 to 255, for use in 256-colour …",0,null],[13,"RGB","","A 24-bit RGB color, as specified by ISO-8613-3.",0,null],[3,"ANSIGenericString","","An <code>ANSIGenericString</code> includes a generic string type and a …",null,null],[6,"ANSIString","","An ANSI String is a string coupled with the <code>Style</code> to …",null,null],[6,"ANSIByteString","","An <code>ANSIByteString</code> represents a formatted series of bytes. …",null,null],[3,"ANSIGenericStrings","","A set of <code>ANSIGenericString</code>s collected together, in order …",null,null],[12,"0","","",2,null],[6,"ANSIStrings","","A set of <code>ANSIString</code>s collected together, in order to be …",null,null],[5,"ANSIStrings","","A function to construct an <code>ANSIStrings</code> instance.",null,[[],["ansistrings",6]]],[6,"ANSIByteStrings","","A set of <code>ANSIByteString</code>s collected together, in order to …",null,null],[5,"ANSIByteStrings","","A function to construct an <code>ANSIByteStrings</code> instance.",null,[[],["ansibytestrings",6]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"to_string","","",3,[[],["string",3]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"to_string","","",4,[[],["string",3]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"to_string","","",5,[[],["string",3]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"to_string","","",6,[[],["string",3]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","You can turn a <code>Colour</code> into a <code>Style</code> with the foreground …",1,[[["colour",4]],["style",3]]],[11,"from","","",6,[[],["ansigenericstring",3]]],[11,"clone","","",3,[[],["prefix",3]]],[11,"clone","","",4,[[],["infix",3]]],[11,"clone","","",5,[[],["suffix",3]]],[11,"clone","","",1,[[],["style",3]]],[11,"clone","","",0,[[],["colour",4]]],[11,"clone","","",6,[[],["ansigenericstring",3]]],[11,"default","","Returns a style with <em>no</em> properties set. Formatting text …",1,[[],["style",3]]],[11,"eq","","",1,[[["style",3]],["bool",15]]],[11,"ne","","",1,[[["style",3]],["bool",15]]],[11,"eq","","",0,[[["colour",4]],["bool",15]]],[11,"ne","","",0,[[["colour",4]],["bool",15]]],[11,"eq","","",6,[[["ansigenericstring",3]],["bool",15]]],[11,"ne","","",6,[[["ansigenericstring",3]],["bool",15]]],[11,"deref","","",6,[[]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"prefix","","The prefix for this style.",1,[[],["prefix",3]]],[11,"infix","","The infix between this style and another.",1,[[["style",3]],["infix",3]]],[11,"suffix","","The suffix for this style.",1,[[],["suffix",3]]],[11,"prefix","","The prefix for this colour.",0,[[],["prefix",3]]],[11,"infix","","The infix between this colour and another.",0,[[["colour",4]],["infix",3]]],[11,"suffix","","The suffix for this colour.",0,[[],["suffix",3]]],[11,"new","","Creates a new Style with no differences.",1,[[],["style",3]]],[11,"bold","","Returns a <code>Style</code> with the bold property set.",1,[[],["style",3]]],[11,"dimmed","","Returns a <code>Style</code> with the dimmed property set.",1,[[],["style",3]]],[11,"italic","","Returns a <code>Style</code> with the italic property set.",1,[[],["style",3]]],[11,"underline","","Returns a <code>Style</code> with the underline property set.",1,[[],["style",3]]],[11,"blink","","Returns a <code>Style</code> with the blink property set.",1,[[],["style",3]]],[11,"reverse","","Returns a <code>Style</code> with the reverse property set.",1,[[],["style",3]]],[11,"hidden","","Returns a <code>Style</code> with the hidden property set.",1,[[],["style",3]]],[11,"strikethrough","","Returns a <code>Style</code> with the hidden property set.",1,[[],["style",3]]],[11,"fg","","Returns a <code>Style</code> with the foreground colour property set.",1,[[["colour",4]],["style",3]]],[11,"on","","Returns a <code>Style</code> with the background colour property set.",1,[[["colour",4]],["style",3]]],[11,"is_plain","","Return true if this <code>Style</code> has no actual styles, and can …",1,[[],["bool",15]]],[11,"normal","","Return a <code>Style</code> with the foreground colour set to this …",0,[[],["style",3]]],[11,"bold","","Returns a <code>Style</code> with the bold property set.",0,[[],["style",3]]],[11,"dimmed","","Returns a <code>Style</code> with the dimmed property set.",0,[[],["style",3]]],[11,"italic","","Returns a <code>Style</code> with the italic property set.",0,[[],["style",3]]],[11,"underline","","Returns a <code>Style</code> with the underline property set.",0,[[],["style",3]]],[11,"blink","","Returns a <code>Style</code> with the blink property set.",0,[[],["style",3]]],[11,"reverse","","Returns a <code>Style</code> with the reverse property set.",0,[[],["style",3]]],[11,"hidden","","Returns a <code>Style</code> with the hidden property set.",0,[[],["style",3]]],[11,"strikethrough","","Returns a <code>Style</code> with the strikethrough property set.",0,[[],["style",3]]],[11,"on","","Returns a <code>Style</code> with the background colour property set.",0,[[["colour",4]],["style",3]]],[11,"paint","","Paints the given text with this colour, returning an ANSI …",1,[[],[["ansigenericstring",3],["toowned",8],["sized",8]]]],[11,"paint","","Paints the given text with this colour, returning an ANSI …",0,[[],[["ansigenericstring",3],["toowned",8],["sized",8]]]],[11,"write_to","","Write an <code>ANSIByteString</code> to an <code>io::Write</code>.  This writes the …",6,[[],["result",6]]],[11,"write_to","","Write an <code>ANSIByteString</code> to an <code>io::Write</code>.  This writes the …",9,[[],["result",6]]],[11,"write_to","","Write <code>ANSIByteStrings</code> to an <code>io::Write</code>.  This writes the …",2,[[],["result",6]]],[11,"write_to","","Write <code>ANSIByteStrings</code> to an <code>io::Write</code>.  This writes the …",10,[[],["result",6]]]],"p":[[4,"Colour"],[3,"Style"],[3,"ANSIGenericStrings"],[3,"Prefix"],[3,"Infix"],[3,"Suffix"],[3,"ANSIGenericString"],[6,"ANSIString"],[6,"ANSIStrings"],[6,"ANSIByteString"],[6,"ANSIByteStrings"]]},\
"atty":{"doc":"atty is a simple utility that answers one question","i":[[4,"Stream","atty","possible stream sources",null,null],[13,"Stdout","","",0,null],[13,"Stderr","","",0,null],[13,"Stdin","","",0,null],[5,"is","","returns true if this is a tty",null,[[["stream",4]],["bool",15]]],[5,"isnt","","returns true if this is <em>not</em> a tty",null,[[["stream",4]],["bool",15]]],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"clone","","",0,[[],["stream",4]]]],"p":[[4,"Stream"]]},\
"backtrace":{"doc":"A library for acquiring a backtrace at runtime","i":[[5,"trace_unsynchronized","backtrace","Same as <code>trace</code>, only unsafe as it\'s unsynchronized.",null,[[["fnmut",8]]]],[3,"Frame","","A trait representing one frame of a backtrace, yielded to …",null,null],[5,"resolve_frame_unsynchronized","","Same as <code>resolve_frame</code>, only unsafe as it\'s unsynchronized.",null,[[["frame",3]]]],[5,"resolve_unsynchronized","","Same as <code>resolve</code>, only unsafe as it\'s unsynchronized.",null,[[]]],[3,"Symbol","","A trait representing the resolution of a symbol in a file.",null,null],[3,"SymbolName","","A wrapper around a symbol name to provide ergonomic …",null,null],[4,"BytesOrWideString","","A platform independent representation of a string. When …",null,null],[13,"Bytes","","A slice, typically provided on Unix platforms.",0,null],[13,"Wide","","Wide strings typically from Windows.",0,null],[5,"clear_symbol_cache","","Attempt to reclaim that cached memory used to symbolicate …",null,[[]]],[3,"BacktraceFmt","","A formatter for backtraces.",null,null],[3,"BacktraceFrameFmt","","A formatter for just one frame of a backtrace.",null,null],[4,"PrintFmt","","The styles of printing that we can print",null,null],[13,"Short","","Prints a terser backtrace which ideally only contains …",1,null],[13,"Full","","Prints a backtrace that contains all possible information",1,null],[5,"trace","","Inspects the current call-stack, passing all active …",null,[[["fnmut",8]]]],[5,"resolve","","Resolve an address to a symbol, passing the symbol to the …",null,[[["fnmut",8]]]],[5,"resolve_frame","","Resolve a previously capture frame to a symbol, passing …",null,[[["fnmut",8],["frame",3]]]],[3,"Backtrace","","Representation of an owned and self-contained backtrace.",null,null],[3,"BacktraceFrame","","Captured version of a frame in a backtrace.",null,null],[3,"BacktraceSymbol","","Captured version of a symbol in a backtrace.",null,null],[11,"from","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"from","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"into","","",4,[[]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"to_string","","",4,[[],["string",3]]],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"to_string","","",0,[[],["string",3]]],[11,"from","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"into","","",5,[[]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"from","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"into","","",6,[[]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"into","","",7,[[]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"from","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"into","","",8,[[]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"from","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"into","","",9,[[]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"from","","",7,[[["backtraceframe",3],["vec",3]]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"eq","","",1,[[["printfmt",4]],["bool",15]]],[11,"drop","","",6,[[]]],[11,"into","","",7,[[],[["backtraceframe",3],["vec",3]]]],[11,"clone","","",2,[[],["frame",3]]],[11,"clone","","",1,[[],["printfmt",4]]],[11,"clone","","",7,[[],["backtrace",3]]],[11,"clone","","",8,[[],["backtraceframe",3]]],[11,"clone","","",9,[[],["backtracesymbol",3]]],[11,"default","","",7,[[],["backtrace",3]]],[11,"ip","","Returns the current instruction pointer of this frame.",2,[[]]],[11,"symbol_address","","Returns the starting symbol address of the frame of this …",2,[[]]],[11,"name","","Returns the name of this function.",3,[[],[["symbolname",3],["option",4]]]],[11,"addr","","Returns the starting address of this function.",3,[[],["option",4]]],[11,"filename_raw","","Returns the raw filename as a slice. This is mainly …",3,[[],[["option",4],["bytesorwidestring",4]]]],[11,"lineno","","Returns the line number for where this symbol is …",3,[[],[["u32",15],["option",4]]]],[11,"filename","","Returns the file name where this function was defined.",3,[[],[["option",4],["path",3]]]],[11,"new","","Creates a new symbol name from the raw underlying bytes.",4,[[],["symbolname",3]]],[11,"as_str","","Returns the raw (mangled) symbol name as a <code>str</code> if the …",4,[[],[["option",4],["str",15]]]],[11,"as_bytes","","Returns the raw symbol name as a list of bytes",4,[[]]],[11,"to_str_lossy","","Lossy converts to a <code>Cow<str></code>, will allocate if <code>Bytes</code> is …",0,[[],[["cow",4],["str",15]]]],[11,"into_path_buf","","Provides a <code>Path</code> representation of <code>BytesOrWideString</code>.",0,[[],["pathbuf",3]]],[11,"new","","Create a new <code>BacktraceFmt</code> which will write output to the …",5,[[["fnmut",8],["formatter",3],["printfmt",4]]]],[11,"add_context","","Prints a preamble for the backtrace about to be printed.",5,[[],["result",6]]],[11,"frame","","Adds a frame to the backtrace output.",5,[[],["backtraceframefmt",3]]],[11,"finish","","Completes the backtrace output.",5,[[],["result",6]]],[11,"backtrace_frame","","Prints a <code>BacktraceFrame</code> with this frame formatter.",6,[[["backtraceframe",3]],["result",6]]],[11,"backtrace_symbol","","Prints a <code>BacktraceSymbol</code> within a <code>BacktraceFrame</code>.",6,[[["backtracesymbol",3],["backtraceframe",3]],["result",6]]],[11,"symbol","","Prints a raw traced <code>Frame</code> and <code>Symbol</code>, typically from …",6,[[["frame",3],["symbol",3]],["result",6]]],[11,"print_raw","","Adds a raw frame to the backtrace output.",6,[[["u32",15],["bytesorwidestring",4],["option",4],["symbolname",3],["option",4],["option",4]],["result",6]]],[11,"new","","Captures a backtrace at the callsite of this function, …",7,[[],["backtrace",3]]],[11,"new_unresolved","","Similar to <code>new</code> except that this does not resolve any …",7,[[],["backtrace",3]]],[11,"frames","","Returns the frames from when this backtrace was captured.",7,[[]]],[11,"resolve","","If this backtrace was created from <code>new_unresolved</code> then …",7,[[]]],[11,"ip","","Same as <code>Frame::ip</code>",8,[[]]],[11,"symbol_address","","Same as <code>Frame::symbol_address</code>",8,[[]]],[11,"symbols","","Returns the list of symbols that this frame corresponds …",8,[[]]],[11,"name","","Same as <code>Symbol::name</code>",9,[[],[["symbolname",3],["option",4]]]],[11,"addr","","Same as <code>Symbol::addr</code>",9,[[],["option",4]]],[11,"filename","","Same as <code>Symbol::filename</code>",9,[[],[["option",4],["path",3]]]],[11,"lineno","","Same as <code>Symbol::lineno</code>",9,[[],[["u32",15],["option",4]]]]],"p":[[4,"BytesOrWideString"],[4,"PrintFmt"],[3,"Frame"],[3,"Symbol"],[3,"SymbolName"],[3,"BacktraceFmt"],[3,"BacktraceFrameFmt"],[3,"Backtrace"],[3,"BacktraceFrame"],[3,"BacktraceSymbol"]]},\
"backtrace_sys":{"doc":"","i":[[5,"backtrace_create_state","backtrace_sys","",null,null],[5,"backtrace_syminfo","","",null,null],[5,"backtrace_pcinfo","","",null,null],[6,"backtrace_syminfo_callback","","",null,null],[6,"backtrace_full_callback","","",null,null],[6,"backtrace_error_callback","","",null,null],[4,"backtrace_state","","",null,null],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]]],"p":[[4,"backtrace_state"]]},\
"bitflags":{"doc":"A typesafe bitmask flag generator useful for sets of …","i":[[14,"bitflags","bitflags","The macro used to generate the flag structure.",null,null]],"p":[]},\
"byteorder":{"doc":"This crate provides convenience methods for encoding and …","i":[[8,"ReadBytesExt","byteorder","Extends <code>Read</code> with methods for reading numbers. (For …",null,null],[11,"read_u8","","Reads an unsigned 8 bit integer from the underlying …",0,[[],[["u8",15],["result",6]]]],[11,"read_i8","","Reads a signed 8 bit integer from the underlying reader.",0,[[],[["result",6],["i8",15]]]],[11,"read_u16","","Reads an unsigned 16 bit integer from the underlying …",0,[[],[["result",6],["u16",15]]]],[11,"read_i16","","Reads a signed 16 bit integer from the underlying reader.",0,[[],[["result",6],["i16",15]]]],[11,"read_u24","","Reads an unsigned 24 bit integer from the underlying …",0,[[],[["result",6],["u32",15]]]],[11,"read_i24","","Reads a signed 24 bit integer from the underlying reader.",0,[[],[["result",6],["i32",15]]]],[11,"read_u32","","Reads an unsigned 32 bit integer from the underlying …",0,[[],[["result",6],["u32",15]]]],[11,"read_i32","","Reads a signed 32 bit integer from the underlying reader.",0,[[],[["result",6],["i32",15]]]],[11,"read_u48","","Reads an unsigned 48 bit integer from the underlying …",0,[[],[["result",6],["u64",15]]]],[11,"read_i48","","Reads a signed 48 bit integer from the underlying reader.",0,[[],[["i64",15],["result",6]]]],[11,"read_u64","","Reads an unsigned 64 bit integer from the underlying …",0,[[],[["result",6],["u64",15]]]],[11,"read_i64","","Reads a signed 64 bit integer from the underlying reader.",0,[[],[["i64",15],["result",6]]]],[11,"read_u128","","Reads an unsigned 128 bit integer from the underlying …",0,[[],[["result",6],["u128",15]]]],[11,"read_i128","","Reads a signed 128 bit integer from the underlying reader.",0,[[],[["i128",15],["result",6]]]],[11,"read_uint","","Reads an unsigned n-bytes integer from the underlying …",0,[[["usize",15]],[["result",6],["u64",15]]]],[11,"read_int","","Reads a signed n-bytes integer from the underlying reader.",0,[[["usize",15]],[["i64",15],["result",6]]]],[11,"read_uint128","","Reads an unsigned n-bytes integer from the underlying …",0,[[["usize",15]],[["result",6],["u128",15]]]],[11,"read_int128","","Reads a signed n-bytes integer from the underlying reader.",0,[[["usize",15]],[["i128",15],["result",6]]]],[11,"read_f32","","Reads a IEEE754 single-precision (4 bytes) floating point …",0,[[],[["result",6],["f32",15]]]],[11,"read_f64","","Reads a IEEE754 double-precision (8 bytes) floating point …",0,[[],[["f64",15],["result",6]]]],[11,"read_u16_into","","Reads a sequence of unsigned 16 bit integers from the …",0,[[],["result",6]]],[11,"read_u32_into","","Reads a sequence of unsigned 32 bit integers from the …",0,[[],["result",6]]],[11,"read_u64_into","","Reads a sequence of unsigned 64 bit integers from the …",0,[[],["result",6]]],[11,"read_u128_into","","Reads a sequence of unsigned 128 bit integers from the …",0,[[],["result",6]]],[11,"read_i8_into","","Reads a sequence of signed 8 bit integers from the …",0,[[],["result",6]]],[11,"read_i16_into","","Reads a sequence of signed 16 bit integers from the …",0,[[],["result",6]]],[11,"read_i32_into","","Reads a sequence of signed 32 bit integers from the …",0,[[],["result",6]]],[11,"read_i64_into","","Reads a sequence of signed 64 bit integers from the …",0,[[],["result",6]]],[11,"read_i128_into","","Reads a sequence of signed 128 bit integers from the …",0,[[],["result",6]]],[11,"read_f32_into","","Reads a sequence of IEEE754 single-precision (4 bytes) …",0,[[],["result",6]]],[11,"read_f32_into_unchecked","","<strong>DEPRECATED</strong>.",0,[[],["result",6]]],[11,"read_f64_into","","Reads a sequence of IEEE754 double-precision (8 bytes) …",0,[[],["result",6]]],[11,"read_f64_into_unchecked","","<strong>DEPRECATED</strong>.",0,[[],["result",6]]],[8,"WriteBytesExt","","Extends <code>Write</code> with methods for writing numbers. (For …",null,null],[11,"write_u8","","Writes an unsigned 8 bit integer to the underlying writer.",1,[[["u8",15]],["result",6]]],[11,"write_i8","","Writes a signed 8 bit integer to the underlying writer.",1,[[["i8",15]],["result",6]]],[11,"write_u16","","Writes an unsigned 16 bit integer to the underlying …",1,[[["u16",15]],["result",6]]],[11,"write_i16","","Writes a signed 16 bit integer to the underlying writer.",1,[[["i16",15]],["result",6]]],[11,"write_u24","","Writes an unsigned 24 bit integer to the underlying …",1,[[["u32",15]],["result",6]]],[11,"write_i24","","Writes a signed 24 bit integer to the underlying writer.",1,[[["i32",15]],["result",6]]],[11,"write_u32","","Writes an unsigned 32 bit integer to the underlying …",1,[[["u32",15]],["result",6]]],[11,"write_i32","","Writes a signed 32 bit integer to the underlying writer.",1,[[["i32",15]],["result",6]]],[11,"write_u48","","Writes an unsigned 48 bit integer to the underlying …",1,[[["u64",15]],["result",6]]],[11,"write_i48","","Writes a signed 48 bit integer to the underlying writer.",1,[[["i64",15]],["result",6]]],[11,"write_u64","","Writes an unsigned 64 bit integer to the underlying …",1,[[["u64",15]],["result",6]]],[11,"write_i64","","Writes a signed 64 bit integer to the underlying writer.",1,[[["i64",15]],["result",6]]],[11,"write_u128","","Writes an unsigned 128 bit integer to the underlying …",1,[[["u128",15]],["result",6]]],[11,"write_i128","","Writes a signed 128 bit integer to the underlying writer.",1,[[["i128",15]],["result",6]]],[11,"write_uint","","Writes an unsigned n-bytes integer to the underlying …",1,[[["usize",15],["u64",15]],["result",6]]],[11,"write_int","","Writes a signed n-bytes integer to the underlying writer.",1,[[["i64",15],["usize",15]],["result",6]]],[11,"write_uint128","","Writes an unsigned n-bytes integer to the underlying …",1,[[["usize",15],["u128",15]],["result",6]]],[11,"write_int128","","Writes a signed n-bytes integer to the underlying writer.",1,[[["usize",15],["i128",15]],["result",6]]],[11,"write_f32","","Writes a IEEE754 single-precision (4 bytes) floating …",1,[[["f32",15]],["result",6]]],[11,"write_f64","","Writes a IEEE754 double-precision (8 bytes) floating …",1,[[["f64",15]],["result",6]]],[8,"ByteOrder","","<code>ByteOrder</code> describes types that can serialize integers as …",null,null],[10,"read_u16","","Reads an unsigned 16 bit integer from <code>buf</code>.",2,[[],["u16",15]]],[11,"read_u24","","Reads an unsigned 24 bit integer from <code>buf</code>, stored in u32.",2,[[],["u32",15]]],[10,"read_u32","","Reads an unsigned 32 bit integer from <code>buf</code>.",2,[[],["u32",15]]],[11,"read_u48","","Reads an unsigned 48 bit integer from <code>buf</code>, stored in u64.",2,[[],["u64",15]]],[10,"read_u64","","Reads an unsigned 64 bit integer from <code>buf</code>.",2,[[],["u64",15]]],[10,"read_u128","","Reads an unsigned 128 bit integer from <code>buf</code>.",2,[[],["u128",15]]],[10,"read_uint","","Reads an unsigned n-bytes integer from <code>buf</code>.",2,[[["usize",15]],["u64",15]]],[10,"read_uint128","","Reads an unsigned n-bytes integer from <code>buf</code>.",2,[[["usize",15]],["u128",15]]],[10,"write_u16","","Writes an unsigned 16 bit integer <code>n</code> to <code>buf</code>.",2,[[["u16",15]]]],[11,"write_u24","","Writes an unsigned 24 bit integer <code>n</code> to <code>buf</code>, stored in u32.",2,[[["u32",15]]]],[10,"write_u32","","Writes an unsigned 32 bit integer <code>n</code> to <code>buf</code>.",2,[[["u32",15]]]],[11,"write_u48","","Writes an unsigned 48 bit integer <code>n</code> to <code>buf</code>, stored in u64.",2,[[["u64",15]]]],[10,"write_u64","","Writes an unsigned 64 bit integer <code>n</code> to <code>buf</code>.",2,[[["u64",15]]]],[10,"write_u128","","Writes an unsigned 128 bit integer <code>n</code> to <code>buf</code>.",2,[[["u128",15]]]],[10,"write_uint","","Writes an unsigned integer <code>n</code> to <code>buf</code> using only <code>nbytes</code>.",2,[[["usize",15],["u64",15]]]],[10,"write_uint128","","Writes an unsigned integer <code>n</code> to <code>buf</code> using only <code>nbytes</code>.",2,[[["usize",15],["u128",15]]]],[11,"read_i16","","Reads a signed 16 bit integer from <code>buf</code>.",2,[[],["i16",15]]],[11,"read_i24","","Reads a signed 24 bit integer from <code>buf</code>, stored in i32.",2,[[],["i32",15]]],[11,"read_i32","","Reads a signed 32 bit integer from <code>buf</code>.",2,[[],["i32",15]]],[11,"read_i48","","Reads a signed 48 bit integer from <code>buf</code>, stored in i64.",2,[[],["i64",15]]],[11,"read_i64","","Reads a signed 64 bit integer from <code>buf</code>.",2,[[],["i64",15]]],[11,"read_i128","","Reads a signed 128 bit integer from <code>buf</code>.",2,[[],["i128",15]]],[11,"read_int","","Reads a signed n-bytes integer from <code>buf</code>.",2,[[["usize",15]],["i64",15]]],[11,"read_int128","","Reads a signed n-bytes integer from <code>buf</code>.",2,[[["usize",15]],["i128",15]]],[11,"read_f32","","Reads a IEEE754 single-precision (4 bytes) floating point …",2,[[],["f32",15]]],[11,"read_f64","","Reads a IEEE754 double-precision (8 bytes) floating point …",2,[[],["f64",15]]],[11,"write_i16","","Writes a signed 16 bit integer <code>n</code> to <code>buf</code>.",2,[[["i16",15]]]],[11,"write_i24","","Writes a signed 24 bit integer <code>n</code> to <code>buf</code>, stored in i32.",2,[[["i32",15]]]],[11,"write_i32","","Writes a signed 32 bit integer <code>n</code> to <code>buf</code>.",2,[[["i32",15]]]],[11,"write_i48","","Writes a signed 48 bit integer <code>n</code> to <code>buf</code>, stored in i64.",2,[[["i64",15]]]],[11,"write_i64","","Writes a signed 64 bit integer <code>n</code> to <code>buf</code>.",2,[[["i64",15]]]],[11,"write_i128","","Writes a signed 128 bit integer <code>n</code> to <code>buf</code>.",2,[[["i128",15]]]],[11,"write_int","","Writes a signed integer <code>n</code> to <code>buf</code> using only <code>nbytes</code>.",2,[[["i64",15],["usize",15]]]],[11,"write_int128","","Writes a signed integer <code>n</code> to <code>buf</code> using only <code>nbytes</code>.",2,[[["usize",15],["i128",15]]]],[11,"write_f32","","Writes a IEEE754 single-precision (4 bytes) floating …",2,[[["f32",15]]]],[11,"write_f64","","Writes a IEEE754 double-precision (8 bytes) floating …",2,[[["f64",15]]]],[10,"read_u16_into","","Reads unsigned 16 bit integers from <code>src</code> into <code>dst</code>.",2,[[]]],[10,"read_u32_into","","Reads unsigned 32 bit integers from <code>src</code> into <code>dst</code>.",2,[[]]],[10,"read_u64_into","","Reads unsigned 64 bit integers from <code>src</code> into <code>dst</code>.",2,[[]]],[10,"read_u128_into","","Reads unsigned 128 bit integers from <code>src</code> into <code>dst</code>.",2,[[]]],[11,"read_i16_into","","Reads signed 16 bit integers from <code>src</code> to <code>dst</code>.",2,[[]]],[11,"read_i32_into","","Reads signed 32 bit integers from <code>src</code> into <code>dst</code>.",2,[[]]],[11,"read_i64_into","","Reads signed 64 bit integers from <code>src</code> into <code>dst</code>.",2,[[]]],[11,"read_i128_into","","Reads signed 128 bit integers from <code>src</code> into <code>dst</code>.",2,[[]]],[11,"read_f32_into","","Reads IEEE754 single-precision (4 bytes) floating point …",2,[[]]],[11,"read_f32_into_unchecked","","<strong>DEPRECATED</strong>.",2,[[]]],[11,"read_f64_into","","Reads IEEE754 single-precision (4 bytes) floating point …",2,[[]]],[11,"read_f64_into_unchecked","","<strong>DEPRECATED</strong>.",2,[[]]],[10,"write_u16_into","","Writes unsigned 16 bit integers from <code>src</code> into <code>dst</code>.",2,[[]]],[10,"write_u32_into","","Writes unsigned 32 bit integers from <code>src</code> into <code>dst</code>.",2,[[]]],[10,"write_u64_into","","Writes unsigned 64 bit integers from <code>src</code> into <code>dst</code>.",2,[[]]],[10,"write_u128_into","","Writes unsigned 128 bit integers from <code>src</code> into <code>dst</code>.",2,[[]]],[11,"write_i8_into","","Writes signed 8 bit integers from <code>src</code> into <code>dst</code>.",2,[[]]],[11,"write_i16_into","","Writes signed 16 bit integers from <code>src</code> into <code>dst</code>.",2,[[]]],[11,"write_i32_into","","Writes signed 32 bit integers from <code>src</code> into <code>dst</code>.",2,[[]]],[11,"write_i64_into","","Writes signed 64 bit integers from <code>src</code> into <code>dst</code>.",2,[[]]],[11,"write_i128_into","","Writes signed 128 bit integers from <code>src</code> into <code>dst</code>.",2,[[]]],[11,"write_f32_into","","Writes IEEE754 single-precision (4 bytes) floating point …",2,[[]]],[11,"write_f64_into","","Writes IEEE754 double-precision (8 bytes) floating point …",2,[[]]],[10,"from_slice_u16","","Converts the given slice of unsigned 16 bit integers to a …",2,[[]]],[10,"from_slice_u32","","Converts the given slice of unsigned 32 bit integers to a …",2,[[]]],[10,"from_slice_u64","","Converts the given slice of unsigned 64 bit integers to a …",2,[[]]],[10,"from_slice_u128","","Converts the given slice of unsigned 128 bit integers to …",2,[[]]],[11,"from_slice_i16","","Converts the given slice of signed 16 bit integers to a …",2,[[]]],[11,"from_slice_i32","","Converts the given slice of signed 32 bit integers to a …",2,[[]]],[11,"from_slice_i64","","Converts the given slice of signed 64 bit integers to a …",2,[[]]],[11,"from_slice_i128","","Converts the given slice of signed 128 bit integers to a …",2,[[]]],[10,"from_slice_f32","","Converts the given slice of IEEE754 single-precision (4 …",2,[[]]],[10,"from_slice_f64","","Converts the given slice of IEEE754 double-precision (8 …",2,[[]]],[4,"BigEndian","","Defines big-endian serialization.",null,null],[6,"BE","","A type alias for <code>BigEndian</code>.",null,null],[4,"LittleEndian","","Defines little-endian serialization.",null,null],[6,"LE","","A type alias for <code>LittleEndian</code>.",null,null],[6,"NetworkEndian","","Defines network byte order serialization.",null,null],[6,"NativeEndian","","Defines system native-endian serialization.",null,null],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"read_u16","","",3,[[],["u16",15]]],[11,"read_u32","","",3,[[],["u32",15]]],[11,"read_u64","","",3,[[],["u64",15]]],[11,"read_u128","","",3,[[],["u128",15]]],[11,"read_uint","","",3,[[["usize",15]],["u64",15]]],[11,"read_uint128","","",3,[[["usize",15]],["u128",15]]],[11,"write_u16","","",3,[[["u16",15]]]],[11,"write_u32","","",3,[[["u32",15]]]],[11,"write_u64","","",3,[[["u64",15]]]],[11,"write_u128","","",3,[[["u128",15]]]],[11,"write_uint","","",3,[[["usize",15],["u64",15]]]],[11,"write_uint128","","",3,[[["usize",15],["u128",15]]]],[11,"read_u16_into","","",3,[[]]],[11,"read_u32_into","","",3,[[]]],[11,"read_u64_into","","",3,[[]]],[11,"read_u128_into","","",3,[[]]],[11,"write_u16_into","","",3,[[]]],[11,"write_u32_into","","",3,[[]]],[11,"write_u64_into","","",3,[[]]],[11,"write_u128_into","","",3,[[]]],[11,"from_slice_u16","","",3,[[]]],[11,"from_slice_u32","","",3,[[]]],[11,"from_slice_u64","","",3,[[]]],[11,"from_slice_u128","","",3,[[]]],[11,"from_slice_f32","","",3,[[]]],[11,"from_slice_f64","","",3,[[]]],[11,"read_u16","","",4,[[],["u16",15]]],[11,"read_u32","","",4,[[],["u32",15]]],[11,"read_u64","","",4,[[],["u64",15]]],[11,"read_u128","","",4,[[],["u128",15]]],[11,"read_uint","","",4,[[["usize",15]],["u64",15]]],[11,"read_uint128","","",4,[[["usize",15]],["u128",15]]],[11,"write_u16","","",4,[[["u16",15]]]],[11,"write_u32","","",4,[[["u32",15]]]],[11,"write_u64","","",4,[[["u64",15]]]],[11,"write_u128","","",4,[[["u128",15]]]],[11,"write_uint","","",4,[[["usize",15],["u64",15]]]],[11,"write_uint128","","",4,[[["usize",15],["u128",15]]]],[11,"read_u16_into","","",4,[[]]],[11,"read_u32_into","","",4,[[]]],[11,"read_u64_into","","",4,[[]]],[11,"read_u128_into","","",4,[[]]],[11,"write_u16_into","","",4,[[]]],[11,"write_u32_into","","",4,[[]]],[11,"write_u64_into","","",4,[[]]],[11,"write_u128_into","","",4,[[]]],[11,"from_slice_u16","","",4,[[]]],[11,"from_slice_u32","","",4,[[]]],[11,"from_slice_u64","","",4,[[]]],[11,"from_slice_u128","","",4,[[]]],[11,"from_slice_f32","","",4,[[]]],[11,"from_slice_f64","","",4,[[]]],[11,"clone","","",3,[[],["bigendian",4]]],[11,"clone","","",4,[[],["littleendian",4]]],[11,"default","","",3,[[],["bigendian",4]]],[11,"default","","",4,[[],["littleendian",4]]],[11,"cmp","","",3,[[["bigendian",4]],["ordering",4]]],[11,"cmp","","",4,[[["littleendian",4]],["ordering",4]]],[11,"eq","","",3,[[["bigendian",4]],["bool",15]]],[11,"eq","","",4,[[["littleendian",4]],["bool",15]]],[11,"partial_cmp","","",3,[[["bigendian",4]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",4,[[["littleendian",4]],[["ordering",4],["option",4]]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"hash","","",3,[[]]],[11,"hash","","",4,[[]]],[11,"read_u8","","Reads an unsigned 8 bit integer from the underlying …",0,[[],[["u8",15],["result",6]]]],[11,"read_i8","","Reads a signed 8 bit integer from the underlying reader.",0,[[],[["result",6],["i8",15]]]],[11,"read_u16","","Reads an unsigned 16 bit integer from the underlying …",0,[[],[["result",6],["u16",15]]]],[11,"read_i16","","Reads a signed 16 bit integer from the underlying reader.",0,[[],[["result",6],["i16",15]]]],[11,"read_u24","","Reads an unsigned 24 bit integer from the underlying …",0,[[],[["result",6],["u32",15]]]],[11,"read_i24","","Reads a signed 24 bit integer from the underlying reader.",0,[[],[["result",6],["i32",15]]]],[11,"read_u32","","Reads an unsigned 32 bit integer from the underlying …",0,[[],[["result",6],["u32",15]]]],[11,"read_i32","","Reads a signed 32 bit integer from the underlying reader.",0,[[],[["result",6],["i32",15]]]],[11,"read_u48","","Reads an unsigned 48 bit integer from the underlying …",0,[[],[["result",6],["u64",15]]]],[11,"read_i48","","Reads a signed 48 bit integer from the underlying reader.",0,[[],[["i64",15],["result",6]]]],[11,"read_u64","","Reads an unsigned 64 bit integer from the underlying …",0,[[],[["result",6],["u64",15]]]],[11,"read_i64","","Reads a signed 64 bit integer from the underlying reader.",0,[[],[["i64",15],["result",6]]]],[11,"read_u128","","Reads an unsigned 128 bit integer from the underlying …",0,[[],[["result",6],["u128",15]]]],[11,"read_i128","","Reads a signed 128 bit integer from the underlying reader.",0,[[],[["i128",15],["result",6]]]],[11,"read_uint","","Reads an unsigned n-bytes integer from the underlying …",0,[[["usize",15]],[["result",6],["u64",15]]]],[11,"read_int","","Reads a signed n-bytes integer from the underlying reader.",0,[[["usize",15]],[["i64",15],["result",6]]]],[11,"read_uint128","","Reads an unsigned n-bytes integer from the underlying …",0,[[["usize",15]],[["result",6],["u128",15]]]],[11,"read_int128","","Reads a signed n-bytes integer from the underlying reader.",0,[[["usize",15]],[["i128",15],["result",6]]]],[11,"read_f32","","Reads a IEEE754 single-precision (4 bytes) floating point …",0,[[],[["result",6],["f32",15]]]],[11,"read_f64","","Reads a IEEE754 double-precision (8 bytes) floating point …",0,[[],[["f64",15],["result",6]]]],[11,"read_u16_into","","Reads a sequence of unsigned 16 bit integers from the …",0,[[],["result",6]]],[11,"read_u32_into","","Reads a sequence of unsigned 32 bit integers from the …",0,[[],["result",6]]],[11,"read_u64_into","","Reads a sequence of unsigned 64 bit integers from the …",0,[[],["result",6]]],[11,"read_u128_into","","Reads a sequence of unsigned 128 bit integers from the …",0,[[],["result",6]]],[11,"read_i8_into","","Reads a sequence of signed 8 bit integers from the …",0,[[],["result",6]]],[11,"read_i16_into","","Reads a sequence of signed 16 bit integers from the …",0,[[],["result",6]]],[11,"read_i32_into","","Reads a sequence of signed 32 bit integers from the …",0,[[],["result",6]]],[11,"read_i64_into","","Reads a sequence of signed 64 bit integers from the …",0,[[],["result",6]]],[11,"read_i128_into","","Reads a sequence of signed 128 bit integers from the …",0,[[],["result",6]]],[11,"read_f32_into","","Reads a sequence of IEEE754 single-precision (4 bytes) …",0,[[],["result",6]]],[11,"read_f32_into_unchecked","","<strong>DEPRECATED</strong>.",0,[[],["result",6]]],[11,"read_f64_into","","Reads a sequence of IEEE754 double-precision (8 bytes) …",0,[[],["result",6]]],[11,"read_f64_into_unchecked","","<strong>DEPRECATED</strong>.",0,[[],["result",6]]],[11,"write_u8","","Writes an unsigned 8 bit integer to the underlying writer.",1,[[["u8",15]],["result",6]]],[11,"write_i8","","Writes a signed 8 bit integer to the underlying writer.",1,[[["i8",15]],["result",6]]],[11,"write_u16","","Writes an unsigned 16 bit integer to the underlying …",1,[[["u16",15]],["result",6]]],[11,"write_i16","","Writes a signed 16 bit integer to the underlying writer.",1,[[["i16",15]],["result",6]]],[11,"write_u24","","Writes an unsigned 24 bit integer to the underlying …",1,[[["u32",15]],["result",6]]],[11,"write_i24","","Writes a signed 24 bit integer to the underlying writer.",1,[[["i32",15]],["result",6]]],[11,"write_u32","","Writes an unsigned 32 bit integer to the underlying …",1,[[["u32",15]],["result",6]]],[11,"write_i32","","Writes a signed 32 bit integer to the underlying writer.",1,[[["i32",15]],["result",6]]],[11,"write_u48","","Writes an unsigned 48 bit integer to the underlying …",1,[[["u64",15]],["result",6]]],[11,"write_i48","","Writes a signed 48 bit integer to the underlying writer.",1,[[["i64",15]],["result",6]]],[11,"write_u64","","Writes an unsigned 64 bit integer to the underlying …",1,[[["u64",15]],["result",6]]],[11,"write_i64","","Writes a signed 64 bit integer to the underlying writer.",1,[[["i64",15]],["result",6]]],[11,"write_u128","","Writes an unsigned 128 bit integer to the underlying …",1,[[["u128",15]],["result",6]]],[11,"write_i128","","Writes a signed 128 bit integer to the underlying writer.",1,[[["i128",15]],["result",6]]],[11,"write_uint","","Writes an unsigned n-bytes integer to the underlying …",1,[[["usize",15],["u64",15]],["result",6]]],[11,"write_int","","Writes a signed n-bytes integer to the underlying writer.",1,[[["i64",15],["usize",15]],["result",6]]],[11,"write_uint128","","Writes an unsigned n-bytes integer to the underlying …",1,[[["usize",15],["u128",15]],["result",6]]],[11,"write_int128","","Writes a signed n-bytes integer to the underlying writer.",1,[[["usize",15],["i128",15]],["result",6]]],[11,"write_f32","","Writes a IEEE754 single-precision (4 bytes) floating …",1,[[["f32",15]],["result",6]]],[11,"write_f64","","Writes a IEEE754 double-precision (8 bytes) floating …",1,[[["f64",15]],["result",6]]]],"p":[[8,"ReadBytesExt"],[8,"WriteBytesExt"],[8,"ByteOrder"],[4,"BigEndian"],[4,"LittleEndian"]]},\
"cfg_if":{"doc":"A macro for defining <code>#[cfg]</code> if-else statements.","i":[[14,"cfg_if","cfg_if","The main macro provided by this crate. See crate …",null,null]],"p":[]},\
"clap":{"doc":"<code>clap</code> is a simple-to-use, efficient, and full-featured …","i":[[3,"Arg","clap","The abstract representation of a command line argument. …",null,null],[3,"ArgGroup","","<code>ArgGroup</code>s are a family of related arguments and way for …",null,null],[3,"ArgMatches","","Used to get information about the arguments that where …",null,null],[4,"ArgSettings","","Various settings that apply to arguments and may be set, …",null,null],[13,"Required","","The argument must be used",0,null],[13,"Multiple","","The argument may be used multiple times such as …",0,null],[13,"EmptyValues","","The argument allows empty values such as <code>--option \\\"\\\"</code>",0,null],[13,"Global","","The argument should be propagated down through all child …",0,null],[13,"Hidden","","The argument should <strong>not</strong> be shown in help text",0,null],[13,"TakesValue","","The argument accepts a value, such as <code>--option <value></code>",0,null],[13,"UseValueDelimiter","","Determines if the argument allows values to be grouped …",0,null],[13,"NextLineHelp","","Prints the help text on the line after the argument",0,null],[13,"RequireDelimiter","","Requires the use of a value delimiter for all multiple …",0,null],[13,"HidePossibleValues","","Hides the possible values from the help string",0,null],[13,"AllowLeadingHyphen","","Allows vals that start with a \'-\'",0,null],[13,"RequireEquals","","Require options use <code>--option=val</code> syntax",0,null],[13,"Last","","Specifies that the arg is the last positional argument …",0,null],[13,"HideDefaultValue","","Hides the default value from the help string",0,null],[13,"CaseInsensitive","","Makes <code>Arg::possible_values</code> case insensitive",0,null],[13,"HideEnvValues","","Hides ENV values in the help message",0,null],[13,"HiddenShortHelp","","The argument should <strong>not</strong> be shown in short help text",0,null],[13,"HiddenLongHelp","","The argument should <strong>not</strong> be shown in long help text",0,null],[3,"OsValues","","An iterator for getting multiple values out of an …",null,null],[3,"SubCommand","","The abstract representation of a command line subcommand.",null,null],[3,"Values","","An iterator for getting multiple values out of an …",null,null],[3,"App","","Used to create a representation of a command line program …",null,null],[4,"AppSettings","","Application level settings, which affect how <code>App</code> operates",null,null],[13,"AllowInvalidUtf8","","Specifies that any invalid UTF-8 code points should <em>not</em> …",1,null],[13,"AllArgsOverrideSelf","","Essentially sets [<code>Arg::overrides_with(\\\"itself\\\")</code>] for all …",1,null],[13,"AllowLeadingHyphen","","Specifies that leading hyphens are allowed in argument <em>…",1,null],[13,"AllowNegativeNumbers","","Allows negative numbers to pass as values. This is …",1,null],[13,"AllowMissingPositional","","Allows one to implement two styles of CLIs where …",1,null],[13,"AllowExternalSubcommands","","Specifies that an unexpected positional argument, which …",1,null],[13,"ArgsNegateSubcommands","","Specifies that use of a valid argument negates subcommands…",1,null],[13,"ArgRequiredElseHelp","","Specifies that the help text should be displayed (and …",1,null],[13,"ColoredHelp","","Uses colorized help messages.",1,null],[13,"ColorAuto","","Enables colored output only when the output is going to a …",1,null],[13,"ColorAlways","","Enables colored output regardless of whether or not the …",1,null],[13,"ColorNever","","Disables colored output no matter if the output is going …",1,null],[13,"DontCollapseArgsInUsage","","Disables the automatic collapsing of positional args into …",1,null],[13,"DontDelimitTrailingValues","","Disables the automatic delimiting of values when <code>--</code> or …",1,null],[13,"DisableHelpFlags","","Disables <code>-h</code> and <code>--help</code> <code>App</code> without affecting any of the …",1,null],[13,"DisableHelpSubcommand","","Disables the <code>help</code> subcommand",1,null],[13,"DisableVersion","","Disables <code>-V</code> and <code>--version</code> <code>App</code> without affecting any of …",1,null],[13,"DeriveDisplayOrder","","Displays the arguments and <code>SubCommand</code>s in the help …",1,null],[13,"GlobalVersion","","Specifies to use the version of the current command for …",1,null],[13,"Hidden","","Specifies that this <code>SubCommand</code> should be hidden from help …",1,null],[13,"HidePossibleValuesInHelp","","Tells <code>clap</code> <em>not</em> to print possible values when displaying …",1,null],[13,"InferSubcommands","","Tries to match unknown args to partial <code>subcommands</code> or …",1,null],[13,"NoBinaryName","","Specifies that the parser should not assume the first …",1,null],[13,"NextLineHelp","","Places the help string for all arguments on the line …",1,null],[13,"PropagateGlobalValuesDown","","<strong>DEPRECATED</strong>: This setting is no longer required in order …",1,null],[13,"SubcommandsNegateReqs","","Allows <code>SubCommand</code>s to override all requirements of the …",1,null],[13,"SubcommandRequiredElseHelp","","Specifies that the help text should be displayed (before …",1,null],[13,"StrictUtf8","","Specifies that any invalid UTF-8 code points should be …",1,null],[13,"SubcommandRequired","","Allows specifying that if no <code>SubCommand</code> is present at …",1,null],[13,"TrailingVarArg","","Specifies that the final positional argument is a …",1,null],[13,"UnifiedHelpMessage","","Groups flags and options together, presenting a more …",1,null],[13,"VersionlessSubcommands","","Disables <code>-V</code> and <code>--version</code> for all <code>SubCommand</code>s (Defaults …",1,null],[13,"WaitOnError","","Will display a message \\\"Press [ENTER]/[RETURN] to …",1,null],[3,"Error","","Command Line Argument Parser Error",null,null],[12,"message","","Formatted error message",2,null],[12,"kind","","The type of error",2,null],[12,"info","","Any additional information passed along, such as the …",2,null],[4,"ErrorKind","","Command line argument parser kind of error",null,null],[13,"InvalidValue","","Occurs when an <code>Arg</code> has a set of possible values, and the …",3,null],[13,"UnknownArgument","","Occurs when a user provides a flag, option, argument or …",3,null],[13,"InvalidSubcommand","","Occurs when the user provides an unrecognized [<code>SubCommand</code>]…",3,null],[13,"UnrecognizedSubcommand","","Occurs when the user provides an unrecognized <code>SubCommand</code> …",3,null],[13,"EmptyValue","","Occurs when the user provides an empty value for an …",3,null],[13,"ValueValidation","","Occurs when the user provides a value for an argument …",3,null],[13,"TooManyValues","","Occurs when a user provides more values for an argument …",3,null],[13,"TooFewValues","","Occurs when the user provides fewer values for an …",3,null],[13,"WrongNumberOfValues","","Occurs when the user provides a different number of …",3,null],[13,"ArgumentConflict","","Occurs when the user provides two values which conflict …",3,null],[13,"MissingRequiredArgument","","Occurs when the user does not provide one or more …",3,null],[13,"MissingSubcommand","","Occurs when a subcommand is required (as defined by …",3,null],[13,"MissingArgumentOrSubcommand","","Occurs when either an argument or <code>SubCommand</code> is required, …",3,null],[13,"UnexpectedMultipleUsage","","Occurs when the user provides multiple values to an …",3,null],[13,"InvalidUtf8","","Occurs when the user provides a value containing invalid …",3,null],[13,"HelpDisplayed","","Not a true \\\"error\\\" as it means <code>--help</code> or similar was used.…",3,null],[13,"VersionDisplayed","","Not a true \\\"error\\\" as it means <code>--version</code> or similar was …",3,null],[13,"ArgumentNotFound","","Occurs when using the [<code>value_t!</code>] and [<code>values_t!</code>] macros …",3,null],[13,"Io","","Represents an [I/O error]. Can occur when writing to …",3,null],[13,"Format","","Represents a Format error (which is a part of <code>Display</code>). …",3,null],[6,"Result","","Short hand for <code>Result</code> type",null,null],[4,"Shell","","Describes which shell to produce a completions file for",null,null],[13,"Bash","","Generates a .bash completion file for the Bourne Again …",4,null],[13,"Fish","","Generates a .fish completion file for the Friendly …",4,null],[13,"Zsh","","Generates a completion file for the Z SHell (ZSH)",4,null],[13,"PowerShell","","Generates a completion file for PowerShell",4,null],[13,"Elvish","","Generates a completion file for Elvish",4,null],[14,"value_t","","Convenience macro getting a typed value <code>T</code> where <code>T</code> …",null,null],[14,"value_t_or_exit","","Convenience macro getting a typed value <code>T</code> where <code>T</code> …",null,null],[14,"values_t","","Convenience macro getting a typed value <code>Vec<T></code> where <code>T</code> …",null,null],[14,"values_t_or_exit","","Convenience macro getting a typed value <code>Vec<T></code> where <code>T</code> …",null,null],[14,"_clap_count_exprs","","Counts the number of comma-delimited expressions passed …",null,null],[14,"arg_enum","","Convenience macro to generate more complete enums with …",null,null],[14,"crate_version","","Allows you to pull the version from your Cargo.toml at …",null,null],[14,"crate_authors","","Allows you to pull the authors for the app from your …",null,null],[14,"crate_description","","Allows you to pull the description from your Cargo.toml …",null,null],[14,"crate_name","","Allows you to pull the name from your Cargo.toml at …",null,null],[14,"app_from_crate","","Allows you to build the <code>App</code> instance from your Cargo.toml …",null,null],[14,"clap_app","","Build <code>App</code>, <code>Arg</code>s, <code>SubCommand</code>s and <code>Group</code>s with Usage-string …",null,null],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"to_string","","",5,[[],["string",3]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"into_iter","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"into_iter","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"to_string","","",4,[[],["string",3]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",6,[[["arg",3]]]],[11,"from","","",11,[[["arggroup",3]]]],[11,"from","","",2,[[["error",3]]]],[11,"from","","",2,[[["error",3]]]],[11,"next_back","","",8,[[],[["str",15],["option",4]]]],[11,"next_back","","",9,[[],[["option",4],["osstr",3]]]],[11,"next","","",8,[[],[["str",15],["option",4]]]],[11,"size_hint","","",8,[[]]],[11,"next","","",9,[[],[["option",4],["osstr",3]]]],[11,"size_hint","","",9,[[]]],[11,"clone","","",1,[[],["appsettings",4]]],[11,"clone","","",5,[[]]],[11,"clone","","",6,[[],["arg",3]]],[11,"clone","","",7,[[],["argmatches",3]]],[11,"clone","","",8,[[],["values",3]]],[11,"clone","","",9,[[],["osvalues",3]]],[11,"clone","","",10,[[],["subcommand",3]]],[11,"clone","","",11,[[]]],[11,"clone","","",0,[[],["argsettings",4]]],[11,"clone","","",3,[[],["errorkind",4]]],[11,"clone","","",4,[[],["shell",4]]],[11,"default","","",6,[[],["arg",3]]],[11,"default","","",7,[[]]],[11,"default","","",8,[[]]],[11,"default","","",9,[[]]],[11,"default","","",11,[[],["arggroup",3]]],[11,"eq","","",1,[[["appsettings",4]],["bool",15]]],[11,"eq","","",6,[[["arg",3]],["bool",15]]],[11,"eq","","",0,[[["argsettings",4]],["bool",15]]],[11,"eq","","",3,[[["errorkind",4]],["bool",15]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"from_str","","",1,[[["str",15]],["result",4]]],[11,"from_str","","",0,[[["str",15]],["result",4]]],[11,"from_str","","",4,[[["str",15]],["result",4]]],[11,"description","","",2,[[],["str",15]]],[11,"new","","Creates a new instance of an application requiring a …",5,[[["string",3],["into",8]]]],[11,"get_name","","Get the name of the app",5,[[],["str",15]]],[11,"get_bin_name","","Get the name of the binary",5,[[],[["str",15],["option",4]]]],[11,"with_defaults","","Creates a new instance of an application requiring a …",5,[[["string",3],["into",8]]]],[11,"author","","Sets a string of author(s) that will be displayed to the …",5,[[["str",15],["into",8]]]],[11,"bin_name","","Overrides the system-determined binary name. This should …",5,[[["string",3],["into",8]]]],[11,"about","","Sets a string describing what the program does. This will …",5,[[["str",15],["into",8]]]],[11,"long_about","","Sets a string describing what the program does. This will …",5,[[["str",15],["into",8]]]],[11,"name","","Sets the program\'s name. This will be displayed when …",5,[[["string",3],["into",8]]]],[11,"after_help","","Adds additional help information to be displayed in …",5,[[["str",15],["into",8]]]],[11,"before_help","","Adds additional help information to be displayed in …",5,[[["str",15],["into",8]]]],[11,"version","","Sets a string of the version number to be displayed when …",5,[[["str",15],["into",8]]]],[11,"long_version","","Sets a string of the version number to be displayed when …",5,[[["str",15],["into",8]]]],[11,"usage","","Sets a custom usage string to override the auto-generated …",5,[[["str",15],["into",8]]]],[11,"help","","Sets a custom help message and overrides the …",5,[[["str",15],["into",8]]]],[11,"help_short","","Sets the <code>short</code> for the auto-generated <code>help</code> argument.",5,[[["str",15],["asref",8]]]],[11,"version_short","","Sets the <code>short</code> for the auto-generated <code>version</code> argument.",5,[[["str",15],["asref",8]]]],[11,"help_message","","Sets the help text for the auto-generated <code>help</code> argument.",5,[[["str",15],["into",8]]]],[11,"version_message","","Sets the help text for the auto-generated <code>version</code> …",5,[[["str",15],["into",8]]]],[11,"template","","Sets the help template to be used, overriding the default …",5,[[["str",15],["into",8]]]],[11,"setting","","Enables a single command, or <code>SubCommand</code>, level settings.",5,[[["appsettings",4]]]],[11,"settings","","Enables multiple command, or <code>SubCommand</code>, level settings",5,[[]]],[11,"global_setting","","Enables a single setting that is propagated down through …",5,[[["appsettings",4]]]],[11,"global_settings","","Enables multiple settings which are propagated <em>down</em> …",5,[[]]],[11,"unset_setting","","Disables a single command, or <code>SubCommand</code>, level setting.",5,[[["appsettings",4]]]],[11,"unset_settings","","Disables multiple command, or <code>SubCommand</code>, level settings.",5,[[]]],[11,"set_term_width","","Sets the terminal width at which to wrap help messages. …",5,[[["usize",15]]]],[11,"max_term_width","","Sets the max terminal width at which to wrap help …",5,[[["usize",15]]]],[11,"arg","","Adds an argument to the list of valid possibilities.",5,[[["arg",3],["into",8]]]],[11,"args","","Adds multiple arguments to the list of valid possibilities",5,[[]]],[11,"arg_from_usage","","A convenience method for adding a single argument from a …",5,[[["str",15]]]],[11,"args_from_usage","","Adds multiple arguments at once from a usage string, one …",5,[[["str",15]]]],[11,"alias","","Allows adding a <code>SubCommand</code> alias, which function as …",5,[[["str",15],["into",8]]]],[11,"aliases","","Allows adding <code>SubCommand</code> aliases, which function as …",5,[[]]],[11,"visible_alias","","Allows adding a <code>SubCommand</code> alias that functions exactly …",5,[[["str",15],["into",8]]]],[11,"visible_aliases","","Allows adding multiple <code>SubCommand</code> aliases that functions …",5,[[]]],[11,"group","","Adds an <code>ArgGroup</code> to the application. <code>ArgGroup</code>s are a …",5,[[["arggroup",3]]]],[11,"groups","","Adds multiple <code>ArgGroup</code>s to the <code>App</code> at once.",5,[[]]],[11,"subcommand","","Adds a <code>SubCommand</code> to the list of valid possibilities. …",5,[[["app",3]]]],[11,"subcommands","","Adds multiple subcommands to the list of valid …",5,[[]]],[11,"display_order","","Allows custom ordering of <code>SubCommand</code>s within the help …",5,[[["usize",15]]]],[11,"print_help","","Prints the full help message to <code>io::stdout()</code> using a …",5,[[],["clapresult",6]]],[11,"print_long_help","","Prints the full help message to <code>io::stdout()</code> using a …",5,[[],["clapresult",6]]],[11,"write_help","","Writes the full help message to the user to a <code>io::Write</code> …",5,[[],["clapresult",6]]],[11,"write_long_help","","Writes the full help message to the user to a <code>io::Write</code> …",5,[[],["clapresult",6]]],[11,"write_version","","Writes the version message to the user to a <code>io::Write</code> …",5,[[],["clapresult",6]]],[11,"write_long_version","","Writes the version message to the user to a <code>io::Write</code> …",5,[[],["clapresult",6]]],[11,"gen_completions","","Generate a completions file for a specified shell at …",5,[[["string",3],["shell",4],["osstring",3],["into",8],["into",8]]]],[11,"gen_completions_to","","Generate a completions file for a specified shell at …",5,[[["string",3],["into",8],["shell",4]]]],[11,"get_matches","","Starts the parsing process, upon a failed parse an error …",5,[[],["argmatches",3]]],[11,"get_matches_safe","","Starts the parsing process. This method will return a …",5,[[],[["clapresult",6],["argmatches",3]]]],[11,"get_matches_from","","Starts the parsing process. Like <code>App::get_matches</code> this …",5,[[],["argmatches",3]]],[11,"get_matches_from_safe","","Starts the parsing process. A combination of …",5,[[],[["clapresult",6],["argmatches",3]]]],[11,"get_matches_from_safe_borrow","","Starts the parsing process without consuming the <code>App</code> …",5,[[],[["clapresult",6],["argmatches",3]]]],[11,"with_name","","Creates a new instance of <code>Arg</code> using a unique string name. …",6,[[["str",15]]]],[11,"from_usage","","Creates a new instance of <code>Arg</code> from a usage string. Allows …",6,[[["str",15]]]],[11,"short","","Sets the short version of the argument without the …",6,[[["str",15],["asref",8]]]],[11,"long","","Sets the long version of the argument without the …",6,[[["str",15]]]],[11,"alias","","Allows adding a <code>Arg</code> alias, which function as \\\"hidden\\\" …",6,[[["str",15],["into",8]]]],[11,"aliases","","Allows adding <code>Arg</code> aliases, which function as \\\"hidden\\\" …",6,[[]]],[11,"visible_alias","","Allows adding a <code>Arg</code> alias that functions exactly like …",6,[[["str",15],["into",8]]]],[11,"visible_aliases","","Allows adding multiple <code>Arg</code> aliases that functions exactly …",6,[[]]],[11,"help","","Sets the short help text of the argument that will be …",6,[[["str",15]]]],[11,"long_help","","Sets the long help text of the argument that will be …",6,[[["str",15]]]],[11,"last","","Specifies that this arg is the last, or final, positional …",6,[[["bool",15]]]],[11,"required","","Sets whether or not the argument is required by default. …",6,[[["bool",15]]]],[11,"require_equals","","Requires that options use the <code>--option=val</code> syntax (i.e. …",6,[[["bool",15]]]],[11,"allow_hyphen_values","","Allows values which start with a leading hyphen (<code>-</code>)",6,[[["bool",15]]]],[11,"required_unless","","Sets an arg that override this arg\'s required setting. …",6,[[["str",15]]]],[11,"required_unless_all","","Sets args that override this arg\'s required setting. …",6,[[]]],[11,"required_unless_one","","Sets args that override this arg\'s required setting. …",6,[[]]],[11,"conflicts_with","","Sets a conflicting argument by name. I.e. when using this …",6,[[["str",15]]]],[11,"conflicts_with_all","","The same as <code>Arg::conflicts_with</code> but allows specifying …",6,[[]]],[11,"overrides_with","","Sets a overridable argument by name. I.e. this argument …",6,[[["str",15]]]],[11,"overrides_with_all","","Sets multiple mutually overridable arguments by name. …",6,[[]]],[11,"requires","","Sets an argument by name that is required when this one …",6,[[["str",15]]]],[11,"requires_if","","Allows a conditional requirement. The requirement will …",6,[[["str",15],["str",15]]]],[11,"requires_ifs","","Allows multiple conditional requirements. The requirement …",6,[[]]],[11,"required_if","","Allows specifying that an argument is required …",6,[[["str",15],["str",15]]]],[11,"required_ifs","","Allows specifying that an argument is required based on …",6,[[]]],[11,"requires_all","","Sets multiple arguments by names that are required when …",6,[[]]],[11,"takes_value","","Specifies that the argument takes a value at run time.",6,[[["bool",15]]]],[11,"hide_possible_values","","Specifies if the possible values of an argument should be …",6,[[["bool",15]]]],[11,"hide_default_value","","Specifies if the default value of an argument should be …",6,[[["bool",15]]]],[11,"index","","Specifies the index of a positional argument <strong>starting at</strong> …",6,[[["u64",15]]]],[11,"multiple","","Specifies that the argument may appear more than once. …",6,[[["bool",15]]]],[11,"value_terminator","","Specifies a value that <em>stops</em> parsing multiple values of a …",6,[[["str",15]]]],[11,"global","","Specifies that an argument can be matched to all child …",6,[[["bool",15]]]],[11,"empty_values","","Allows an argument to accept explicitly empty values. An …",6,[[["bool",15]]]],[11,"hidden","","Hides an argument from help message output.",6,[[["bool",15]]]],[11,"possible_values","","Specifies a list of possible values for this argument. At …",6,[[]]],[11,"possible_value","","Specifies a possible value for this argument, one at a …",6,[[["str",15]]]],[11,"case_insensitive","","When used with [<code>Arg::possible_values</code>] it allows the …",6,[[["bool",15]]]],[11,"group","","Specifies the name of the <code>ArgGroup</code> the argument belongs …",6,[[["str",15]]]],[11,"groups","","Specifies the names of multiple <code>ArgGroup</code>\'s the argument …",6,[[]]],[11,"number_of_values","","Specifies how many values are required to satisfy this …",6,[[["u64",15]]]],[11,"validator","","Allows one to perform a custom validation on the argument …",6,[[]]],[11,"validator_os","","Works identically to Validator but is intended to be used …",6,[[]]],[11,"max_values","","Specifies the <em>maximum</em> number of values are for this …",6,[[["u64",15]]]],[11,"min_values","","Specifies the <em>minimum</em> number of values for this argument. …",6,[[["u64",15]]]],[11,"use_delimiter","","Specifies whether or not an argument should allow …",6,[[["bool",15]]]],[11,"require_delimiter","","Specifies that <em>multiple values</em> may only be set using the …",6,[[["bool",15]]]],[11,"value_delimiter","","Specifies the separator to use when values are clumped …",6,[[["str",15]]]],[11,"value_names","","Specify multiple names for values of option arguments. …",6,[[]]],[11,"value_name","","Specifies the name for value of option or positional …",6,[[["str",15]]]],[11,"default_value","","Specifies the value of the argument when <em>not</em> specified at …",6,[[["str",15]]]],[11,"default_value_os","","Provides a default value in the exact same manner as […",6,[[["osstr",3]]]],[11,"default_value_if","","Specifies the value of the argument if <code>arg</code> has been used …",6,[[["str",15],["option",4],["str",15]]]],[11,"default_value_if_os","","Provides a conditional default value in the exact same …",6,[[["option",4],["str",15],["osstr",3]]]],[11,"default_value_ifs","","Specifies multiple values and conditions in the same …",6,[[]]],[11,"default_value_ifs_os","","Provides multiple conditional default values in the exact …",6,[[]]],[11,"env","","Specifies that if the value is not passed in as an …",6,[[["str",15]]]],[11,"env_os","","Specifies that if the value is not passed in as an …",6,[[["osstr",3]]]],[11,"hide_env_values","","@TODO @p2 @docs @release: write docs",6,[[["bool",15]]]],[11,"next_line_help","","When set to <code>true</code> the help string will be displayed on the …",6,[[["bool",15]]]],[11,"display_order","","Allows custom ordering of args within the help message. …",6,[[["usize",15]]]],[11,"raw","","Indicates that all parameters passed after this should …",6,[[["bool",15]]]],[11,"hidden_short_help","","Hides an argument from short help message output.",6,[[["bool",15]]]],[11,"hidden_long_help","","Hides an argument from long help message output.",6,[[["bool",15]]]],[11,"is_set","","Checks if one of the <code>ArgSettings</code> settings is set for the …",6,[[["argsettings",4]],["bool",15]]],[11,"set","","Sets one of the <code>ArgSettings</code> settings for the argument.",6,[[["argsettings",4]]]],[11,"unset","","Unsets one of the <code>ArgSettings</code> settings for the argument.",6,[[["argsettings",4]]]],[11,"value_of","","Gets the value of a specific option or positional …",7,[[["str",15],["asref",8]],[["str",15],["option",4]]]],[11,"value_of_lossy","","Gets the lossy value of a specific argument. If the …",7,[[["str",15],["asref",8]],[["option",4],["cow",4]]]],[11,"value_of_os","","Gets the OS version of a string value of a specific …",7,[[["str",15],["asref",8]],[["osstr",3],["option",4]]]],[11,"values_of","","Gets a <code>Values</code> struct which implements <code>Iterator</code> for values …",7,[[["str",15],["asref",8]],[["option",4],["values",3]]]],[11,"values_of_lossy","","Gets the lossy values of a specific argument. If the …",7,[[["str",15],["asref",8]],[["option",4],["vec",3]]]],[11,"values_of_os","","Gets a [<code>OsValues</code>] struct which is implements [<code>Iterator</code>] …",7,[[["str",15],["asref",8]],[["osvalues",3],["option",4]]]],[11,"is_present","","Returns <code>true</code> if an argument was present at runtime, …",7,[[["str",15],["asref",8]],["bool",15]]],[11,"occurrences_of","","Returns the number of times an argument was used at …",7,[[["str",15],["asref",8]],["u64",15]]],[11,"index_of","","Gets the starting index of the argument in respect to all …",7,[[["str",15],["asref",8]],[["option",4],["usize",15]]]],[11,"indices_of","","Gets all indices of the argument in respect to all other …",7,[[["str",15],["asref",8]],[["indices",3],["option",4]]]],[11,"subcommand_matches","","Because <code>Subcommand</code>s are essentially \\\"sub-<code>App</code>s\\\" they have …",7,[[["str",15],["asref",8]],[["option",4],["argmatches",3]]]],[11,"subcommand_name","","Because <code>Subcommand</code>s are essentially \\\"sub-<code>App</code>s\\\" they have …",7,[[],[["str",15],["option",4]]]],[11,"subcommand","","This brings together <code>ArgMatches::subcommand_matches</code> and …",7,[[]]],[11,"usage","","Returns a string slice of the usage statement for the <code>App</code> …",7,[[],["str",15]]],[11,"with_name","","Creates a new instance of a subcommand requiring a name. …",10,[[["str",15]],["app",3]]],[11,"with_name","","Creates a new instance of <code>ArgGroup</code> using a unique string …",11,[[["str",15]]]],[11,"arg","","Adds an argument to this group by name",11,[[["str",15]]]],[11,"args","","Adds multiple arguments to this group by name",11,[[]]],[11,"multiple","","Allows more than one of the \'Arg\'s in this group to be …",11,[[["bool",15]]]],[11,"required","","Sets the group as required or not. A required group will …",11,[[["bool",15]]]],[11,"requires","","Sets the requirement rules of this group. This is not to …",11,[[["str",15]]]],[11,"requires_all","","Sets the requirement rules of this group. This is not to …",11,[[]]],[11,"conflicts_with","","Sets the exclusion rules of this group. Exclusion (aka …",11,[[["str",15]]]],[11,"conflicts_with_all","","Sets the exclusion rules of this group. Exclusion rules …",11,[[]]],[11,"use_stderr","","Should the message be written to <code>stdout</code> or not",2,[[],["bool",15]]],[11,"exit","","Prints the error to <code>stderr</code> and exits with a status of <code>1</code>",2,[[]]],[11,"with_description","","Create an error with a custom description.",2,[[["errorkind",4],["str",15]]]],[11,"variants","","A list of possible variants in <code>&\'static str</code> form",4,[[]]]],"p":[[4,"ArgSettings"],[4,"AppSettings"],[3,"Error"],[4,"ErrorKind"],[4,"Shell"],[3,"App"],[3,"Arg"],[3,"ArgMatches"],[3,"Values"],[3,"OsValues"],[3,"SubCommand"],[3,"ArgGroup"]]},\
"color_quant":{"doc":"Color quantization libraryThis library provides a color …","i":[[3,"NeuQuant","color_quant","Neural network based color quantizer.",null,null],[11,"new","","Creates a new neuronal network and trains it with the …",0,[[["usize",15],["i32",15]]]],[11,"init","","Initializes the neuronal network and trains it with the …",0,[[]]],[11,"map_pixel","","Maps the rgba-pixel in-place to the best-matching color …",0,[[]]],[11,"index_of","","Finds the best-matching index in the color map.",0,[[],["usize",15]]],[11,"color_map_rgba","","Returns the RGBA color map calculated from the sample. ",0,[[],[["vec",3],["u8",15]]]],[11,"color_map_rgb","","Returns the RGBA color map calculated from the sample. ",0,[[],[["vec",3],["u8",15]]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]]],"p":[[3,"NeuQuant"]]},\
"crossbeam_deque":{"doc":"Concurrent work-stealing deques.","i":[[3,"Worker","crossbeam_deque","A worker queue.",null,null],[11,"new_fifo","","Creates a FIFO worker queue.",0,[[],["worker",3]]],[11,"new_lifo","","Creates a LIFO worker queue.",0,[[],["worker",3]]],[11,"stealer","","Creates a stealer for this queue.",0,[[],["stealer",3]]],[11,"is_empty","","Returns <code>true</code> if the queue is empty.",0,[[],["bool",15]]],[11,"push","","Pushes a task into the queue.",0,[[]]],[11,"pop","","Pops a task from the queue.",0,[[],["option",4]]],[3,"Stealer","","A stealer handle of a worker queue.",null,null],[11,"is_empty","","Returns <code>true</code> if the queue is empty.",1,[[],["bool",15]]],[11,"steal","","Steals a task from the queue.",1,[[],["steal",4]]],[11,"steal_batch","","Steals a batch of tasks and pushes them into another …",1,[[["worker",3]],["steal",4]]],[11,"steal_batch_and_pop","","Steals a batch of tasks, pushes them into another worker, …",1,[[["worker",3]],["steal",4]]],[3,"Injector","","An injector queue.",null,null],[11,"new","","Creates a new injector queue.",2,[[],["injector",3]]],[11,"push","","Pushes a task into the queue.",2,[[]]],[11,"steal","","Steals a task from the queue.",2,[[],["steal",4]]],[11,"steal_batch","","Steals a batch of tasks and pushes them into a worker.",2,[[["worker",3]],["steal",4]]],[11,"steal_batch_and_pop","","Steals a batch of tasks, pushes them into a worker, and …",2,[[["worker",3]],["steal",4]]],[11,"is_empty","","Returns <code>true</code> if the queue is empty.",2,[[],["bool",15]]],[4,"Steal","","Possible outcomes of a steal operation.",null,null],[13,"Empty","","The queue was empty at the time of stealing.",3,null],[13,"Success","","At least one task was successfully stolen.",3,null],[13,"Retry","","The steal operation needs to be retried.",3,null],[11,"is_empty","","Returns <code>true</code> if the queue was empty at the time of …",3,[[],["bool",15]]],[11,"is_success","","Returns <code>true</code> if at least one task was stolen.",3,[[],["bool",15]]],[11,"is_retry","","Returns <code>true</code> if the steal operation needs to be retried.",3,[[],["bool",15]]],[11,"success","","Returns the result of the operation, if successful.",3,[[],["option",4]]],[11,"or_else","","If no task was stolen, attempts another steal operation.",3,[[],["steal",4]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"drop","","",2,[[]]],[11,"clone","","",1,[[],["stealer",3]]],[11,"clone","","",3,[[],["steal",4]]],[11,"eq","","",3,[[["steal",4]],["bool",15]]],[11,"ne","","",3,[[["steal",4]],["bool",15]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"from_iter","","Consumes items until a <code>Success</code> is found and returns it.",3,[[],["steal",4]]]],"p":[[3,"Worker"],[3,"Stealer"],[3,"Injector"],[4,"Steal"]]},\
"crossbeam_epoch":{"doc":"Epoch-based memory reclamation.","i":[[3,"Atomic","crossbeam_epoch","An atomic pointer that can be safely shared between …",null,null],[3,"CompareAndSetError","","The error returned on failed compare-and-set operation.",null,null],[12,"current","","The value in the atomic pointer at the time of the failed …",0,null],[12,"new","","The new value, which the operation failed to store.",0,null],[8,"CompareAndSetOrdering","","Memory orderings for compare-and-set operations.",null,null],[10,"success","","The ordering of the operation when it succeeds.",1,[[],["ordering",4]]],[10,"failure","","The ordering of the operation when it fails.",1,[[],["ordering",4]]],[3,"Owned","","An owned heap-allocated object.",null,null],[8,"Pointer","","A trait for either <code>Owned</code> or <code>Shared</code> pointers.",null,null],[10,"into_usize","","Returns the machine representation of the pointer.",2,[[],["usize",15]]],[10,"from_usize","","Returns a new pointer pointing to the tagged pointer <code>data</code>.",2,[[["usize",15]]]],[3,"Shared","","A pointer to an object protected by the epoch GC.",null,null],[3,"Collector","","An epoch-based garbage collector.",null,null],[3,"LocalHandle","","A handle to a garbage collector.",null,null],[5,"unprotected","","Returns a reference to a dummy guard that allows …",null,[[],["guard",3]]],[3,"Guard","","A guard that keeps the current thread pinned.",null,null],[5,"default_collector","","Returns the default global collector.",null,[[],["collector",3]]],[5,"is_pinned","","Returns <code>true</code> if the current thread is pinned.",null,[[],["bool",15]]],[5,"pin","","Pins the current thread.",null,[[],["guard",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"into_usize","","",4,[[],["usize",15]]],[11,"from_usize","","Returns a new pointer pointing to the tagged pointer <code>data</code>.",4,[[["usize",15]]]],[11,"into_usize","","",5,[[],["usize",15]]],[11,"from_usize","","",5,[[["usize",15]]]],[11,"drop","","",4,[[]]],[11,"drop","","",7,[[]]],[11,"drop","","",8,[[]]],[11,"as_mut","","",4,[[]]],[11,"as_ref","","",4,[[]]],[11,"from","","Returns a new atomic pointer pointing to <code>owned</code>.",3,[[["owned",3]]]],[11,"from","","",3,[[["box",3]]]],[11,"from","","",3,[[]]],[11,"from","","Returns a new atomic pointer pointing to <code>ptr</code>.",3,[[["shared",3]]]],[11,"from","","Returns a new atomic pointer pointing to <code>raw</code>.",3,[[]]],[11,"from","","",4,[[]]],[11,"from","","Returns a new owned pointer pointing to <code>b</code>.",4,[[["box",3]]]],[11,"from","","Returns a new pointer pointing to <code>raw</code>.",5,[[]]],[11,"clone","","Returns a copy of the atomic value.",3,[[]]],[11,"clone","","",4,[[]]],[11,"clone","","",5,[[]]],[11,"clone","","Creates another reference to the same garbage collector.",6,[[]]],[11,"default","","",3,[[]]],[11,"default","","",5,[[]]],[11,"cmp","","",5,[[],["ordering",4]]],[11,"eq","","",5,[[],["bool",15]]],[11,"eq","","Checks if both handles point to the same collector.",6,[[["collector",3]],["bool",15]]],[11,"partial_cmp","","",5,[[],[["option",4],["ordering",4]]]],[11,"deref","","",4,[[]]],[11,"deref_mut","","",4,[[]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"null","","Returns a new null atomic pointer.",3,[[],["atomic",3]]],[11,"new","","Allocates <code>value</code> on the heap and returns a new atomic …",3,[[],["atomic",3]]],[11,"load","","Loads a <code>Shared</code> from the atomic pointer.",3,[[["guard",3],["ordering",4]],["shared",3]]],[11,"load_consume","","Loads a <code>Shared</code> from the atomic pointer using a \\\"consume\\\" …",3,[[["guard",3]],["shared",3]]],[11,"store","","Stores a <code>Shared</code> or <code>Owned</code> pointer into the atomic pointer.",3,[[["ordering",4],["pointer",8]]]],[11,"swap","","Stores a <code>Shared</code> or <code>Owned</code> pointer into the atomic pointer, …",3,[[["ordering",4],["guard",3],["pointer",8]],["shared",3]]],[11,"compare_and_set","","Stores the pointer <code>new</code> (either <code>Shared</code> or <code>Owned</code>) into the …",3,[[["shared",3],["guard",3]],[["shared",3],["compareandseterror",3],["result",4]]]],[11,"compare_and_set_weak","","Stores the pointer <code>new</code> (either <code>Shared</code> or <code>Owned</code>) into the …",3,[[["shared",3],["guard",3]],[["shared",3],["compareandseterror",3],["result",4]]]],[11,"fetch_and","","Bitwise \\\"and\\\" with the current tag.",3,[[["usize",15],["guard",3],["ordering",4]],["shared",3]]],[11,"fetch_or","","Bitwise \\\"or\\\" with the current tag.",3,[[["usize",15],["guard",3],["ordering",4]],["shared",3]]],[11,"fetch_xor","","Bitwise \\\"xor\\\" with the current tag.",3,[[["usize",15],["guard",3],["ordering",4]],["shared",3]]],[11,"into_owned","","Takes ownership of the pointee.",3,[[],["owned",3]]],[11,"new","","Allocates <code>value</code> on the heap and returns a new owned …",4,[[],["owned",3]]],[11,"from_raw","","Returns a new owned pointer pointing to <code>raw</code>.",4,[[],["owned",3]]],[11,"into_shared","","Converts the owned pointer into a <code>Shared</code>.",4,[[["guard",3]],["shared",3]]],[11,"into_box","","Converts the owned pointer into a <code>Box</code>.",4,[[],["box",3]]],[11,"tag","","Returns the tag stored within the pointer.",4,[[],["usize",15]]],[11,"with_tag","","Returns the same pointer, but tagged with <code>tag</code>. <code>tag</code> is …",4,[[["usize",15]],["owned",3]]],[11,"null","","Returns a new null pointer.",5,[[],["shared",3]]],[11,"is_null","","Returns <code>true</code> if the pointer is null.",5,[[],["bool",15]]],[11,"as_raw","","Converts the pointer to a raw pointer (without the tag).",5,[[]]],[11,"deref","","Dereferences the pointer.",5,[[]]],[11,"deref_mut","","Dereferences the pointer.",5,[[]]],[11,"as_ref","","Converts the pointer to a reference.",5,[[],["option",4]]],[11,"into_owned","","Takes ownership of the pointee.",5,[[],["owned",3]]],[11,"tag","","Returns the tag stored within the pointer.",5,[[],["usize",15]]],[11,"with_tag","","Returns the same pointer, but tagged with <code>tag</code>. <code>tag</code> is …",5,[[["usize",15]],["shared",3]]],[11,"new","","Creates a new collector.",6,[[]]],[11,"register","","Registers a new handle for the collector.",6,[[],["localhandle",3]]],[11,"pin","","Pins the handle.",7,[[],["guard",3]]],[11,"is_pinned","","Returns <code>true</code> if the handle is pinned.",7,[[],["bool",15]]],[11,"collector","","Returns the <code>Collector</code> associated with this handle.",7,[[],["collector",3]]],[11,"defer","","Stores a function so that it can be executed at some …",8,[[]]],[11,"defer_unchecked","","Stores a function so that it can be executed at some …",8,[[]]],[11,"defer_destroy","","Stores a destructor for an object so that it can be …",8,[[["shared",3]]]],[11,"flush","","Clears up the thread-local cache of deferred functions by …",8,[[]]],[11,"repin","","Unpins and then immediately re-pins the thread.",8,[[]]],[11,"repin_after","","Temporarily unpins the thread, executes the given …",8,[[]]],[11,"collector","","Returns the <code>Collector</code> associated with this guard.",8,[[],[["option",4],["collector",3]]]]],"p":[[3,"CompareAndSetError"],[8,"CompareAndSetOrdering"],[8,"Pointer"],[3,"Atomic"],[3,"Owned"],[3,"Shared"],[3,"Collector"],[3,"LocalHandle"],[3,"Guard"]]},\
"crossbeam_queue":{"doc":"Concurrent queues.","i":[[3,"ArrayQueue","crossbeam_queue","A bounded multi-producer multi-consumer queue.",null,null],[3,"PopError","","Error which occurs when popping from an empty queue.",null,null],[3,"PushError","","Error which occurs when pushing into a full queue.",null,null],[12,"0","","",0,null],[3,"SegQueue","","An unbounded multi-producer multi-consumer queue.",null,null],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"drop","","",1,[[]]],[11,"drop","","",3,[[]]],[11,"clone","","",2,[[],["poperror",3]]],[11,"clone","","",0,[[],["pusherror",3]]],[11,"default","","",3,[[],["segqueue",3]]],[11,"eq","","",2,[[["poperror",3]],["bool",15]]],[11,"eq","","",0,[[["pusherror",3]],["bool",15]]],[11,"ne","","",0,[[["pusherror",3]],["bool",15]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"new","","Creates a new bounded queue with the given capacity.",1,[[["usize",15]],["arrayqueue",3]]],[11,"push","","Attempts to push an element into the queue.",1,[[],[["result",4],["pusherror",3]]]],[11,"pop","","Attempts to pop an element from the queue.",1,[[],[["result",4],["poperror",3]]]],[11,"capacity","","Returns the capacity of the queue.",1,[[],["usize",15]]],[11,"is_empty","","Returns <code>true</code> if the queue is empty.",1,[[],["bool",15]]],[11,"is_full","","Returns <code>true</code> if the queue is full.",1,[[],["bool",15]]],[11,"len","","Returns the number of elements in the queue.",1,[[],["usize",15]]],[11,"new","","Creates a new unbounded queue.",3,[[],["segqueue",3]]],[11,"push","","Pushes an element into the queue.",3,[[]]],[11,"pop","","Pops an element from the queue.",3,[[],[["result",4],["poperror",3]]]],[11,"is_empty","","Returns <code>true</code> if the queue is empty.",3,[[],["bool",15]]],[11,"len","","Returns the number of elements in the queue.",3,[[],["usize",15]]]],"p":[[3,"PushError"],[3,"ArrayQueue"],[3,"PopError"],[3,"SegQueue"]]},\
"crossbeam_utils":{"doc":"Miscellaneous tools for concurrent programming.","i":[[0,"atomic","crossbeam_utils","Atomic types.",null,null],[3,"AtomicCell","crossbeam_utils::atomic","A thread-safe mutable memory location.",null,null],[8,"AtomicConsume","","Trait which allows reading from primitive atomic types …",null,null],[16,"Val","","Type returned by <code>load_consume</code>.",0,null],[10,"load_consume","","Loads a value from the atomic using a \\\"consume\\\" memory …",0,[[]]],[0,"sync","crossbeam_utils","Thread synchronization primitives.",null,null],[3,"ShardedLock","crossbeam_utils::sync","A sharded reader-writer lock.",null,null],[3,"ShardedLockReadGuard","","A guard used to release the shared read access of a …",null,null],[3,"ShardedLockWriteGuard","","A guard used to release the exclusive write access of a …",null,null],[3,"Parker","","A thread parking primitive.",null,null],[3,"Unparker","","Unparks a thread parked by the associated <code>Parker</code>.",null,null],[3,"WaitGroup","","Enables threads to synchronize the beginning or end of …",null,null],[0,"thread","crossbeam_utils","Threads that can borrow variables from the stack.",null,null],[5,"scope","crossbeam_utils::thread","Creates a new scope for spawning threads.",null,[[],["result",6]]],[3,"Scope","","A scope for spawning threads.",null,null],[11,"spawn","","Spawns a scoped thread.",1,[[],["scopedjoinhandle",3]]],[11,"builder","","Creates a builder that can configure a thread before …",1,[[],["scopedthreadbuilder",3]]],[3,"ScopedThreadBuilder","","Configures the properties of a new thread.",null,null],[11,"name","","Sets the name for the new thread.",2,[[["string",3]],["scopedthreadbuilder",3]]],[11,"stack_size","","Sets the size of the stack for the new thread.",2,[[["usize",15]],["scopedthreadbuilder",3]]],[11,"spawn","","Spawns a scoped thread with this configuration.",2,[[],[["scopedjoinhandle",3],["result",6]]]],[3,"ScopedJoinHandle","","A handle that can be used to join its scoped thread.",null,null],[11,"join","","Waits for the thread to finish and returns its result.",3,[[],["result",6]]],[11,"thread","","Returns a handle to the underlying thread.",3,[[],["thread",3]]],[3,"CachePadded","crossbeam_utils","Pads and aligns a value to the length of a cache line.",null,null],[3,"Backoff","","Performs exponential backoff in spin loops.",null,null],[11,"from","crossbeam_utils::atomic","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","crossbeam_utils","",5,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","crossbeam_utils::sync","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_string","","",10,[[],["string",3]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_string","","",11,[[],["string",3]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","crossbeam_utils::thread","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"drop","crossbeam_utils::sync","",11,[[]]],[11,"drop","","",12,[[]]],[11,"from","crossbeam_utils","",5,[[]]],[11,"from","crossbeam_utils::sync","",9,[[]]],[11,"clone","crossbeam_utils","",5,[[],["cachepadded",3]]],[11,"clone","crossbeam_utils::sync","",8,[[],["unparker",3]]],[11,"clone","","",12,[[],["waitgroup",3]]],[11,"default","crossbeam_utils::atomic","",4,[[],["atomiccell",3]]],[11,"default","crossbeam_utils","",5,[[],["cachepadded",3]]],[11,"default","","",6,[[],["backoff",3]]],[11,"default","crossbeam_utils::sync","",9,[[],["shardedlock",3]]],[11,"eq","crossbeam_utils","",5,[[["cachepadded",3]],["bool",15]]],[11,"ne","","",5,[[["cachepadded",3]],["bool",15]]],[11,"deref","","",5,[[]]],[11,"deref","crossbeam_utils::sync","",10,[[]]],[11,"deref","","",11,[[]]],[11,"deref_mut","crossbeam_utils","",5,[[]]],[11,"deref_mut","crossbeam_utils::sync","",11,[[]]],[11,"fmt","crossbeam_utils::atomic","",4,[[["formatter",3]],["result",6]]],[11,"fmt","crossbeam_utils","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","crossbeam_utils::sync","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","crossbeam_utils::thread","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","crossbeam_utils::sync","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"hash","crossbeam_utils","",5,[[]]],[11,"new","crossbeam_utils::atomic","Creates a new atomic cell initialized with <code>val</code>.",4,[[],["atomiccell",3]]],[11,"into_inner","","Unwraps the atomic cell and returns its inner value.",4,[[]]],[11,"is_lock_free","","Returns <code>true</code> if operations on values of this type are …",4,[[],["bool",15]]],[11,"store","","Stores <code>val</code> into the atomic cell.",4,[[]]],[11,"swap","","Stores <code>val</code> into the atomic cell and returns the previous …",4,[[]]],[11,"as_ptr","","Returns a raw pointer to the underlying data in this …",4,[[]]],[11,"take","","Takes the value of the atomic cell, leaving …",4,[[]]],[11,"load","","Loads a value.",4,[[]]],[11,"compare_and_swap","","If the current value equals <code>current</code>, stores <code>new</code> into the …",4,[[]]],[11,"compare_exchange","","If the current value equals <code>current</code>, stores <code>new</code> into the …",4,[[],["result",4]]],[11,"fetch_add","","Increments the current value by <code>val</code> and returns the …",4,[[["u8",15]],["u8",15]]],[11,"fetch_sub","","Decrements the current value by <code>val</code> and returns the …",4,[[["u8",15]],["u8",15]]],[11,"fetch_and","","Applies bitwise \\\"and\\\" to the current value and returns …",4,[[["u8",15]],["u8",15]]],[11,"fetch_or","","Applies bitwise \\\"or\\\" to the current value and returns the …",4,[[["u8",15]],["u8",15]]],[11,"fetch_xor","","Applies bitwise \\\"xor\\\" to the current value and returns …",4,[[["u8",15]],["u8",15]]],[11,"fetch_add","","Increments the current value by <code>val</code> and returns the …",4,[[["i8",15]],["i8",15]]],[11,"fetch_sub","","Decrements the current value by <code>val</code> and returns the …",4,[[["i8",15]],["i8",15]]],[11,"fetch_and","","Applies bitwise \\\"and\\\" to the current value and returns …",4,[[["i8",15]],["i8",15]]],[11,"fetch_or","","Applies bitwise \\\"or\\\" to the current value and returns the …",4,[[["i8",15]],["i8",15]]],[11,"fetch_xor","","Applies bitwise \\\"xor\\\" to the current value and returns …",4,[[["i8",15]],["i8",15]]],[11,"fetch_add","","Increments the current value by <code>val</code> and returns the …",4,[[["u16",15]],["u16",15]]],[11,"fetch_sub","","Decrements the current value by <code>val</code> and returns the …",4,[[["u16",15]],["u16",15]]],[11,"fetch_and","","Applies bitwise \\\"and\\\" to the current value and returns …",4,[[["u16",15]],["u16",15]]],[11,"fetch_or","","Applies bitwise \\\"or\\\" to the current value and returns the …",4,[[["u16",15]],["u16",15]]],[11,"fetch_xor","","Applies bitwise \\\"xor\\\" to the current value and returns …",4,[[["u16",15]],["u16",15]]],[11,"fetch_add","","Increments the current value by <code>val</code> and returns the …",4,[[["i16",15]],["i16",15]]],[11,"fetch_sub","","Decrements the current value by <code>val</code> and returns the …",4,[[["i16",15]],["i16",15]]],[11,"fetch_and","","Applies bitwise \\\"and\\\" to the current value and returns …",4,[[["i16",15]],["i16",15]]],[11,"fetch_or","","Applies bitwise \\\"or\\\" to the current value and returns the …",4,[[["i16",15]],["i16",15]]],[11,"fetch_xor","","Applies bitwise \\\"xor\\\" to the current value and returns …",4,[[["i16",15]],["i16",15]]],[11,"fetch_add","","Increments the current value by <code>val</code> and returns the …",4,[[["u32",15]],["u32",15]]],[11,"fetch_sub","","Decrements the current value by <code>val</code> and returns the …",4,[[["u32",15]],["u32",15]]],[11,"fetch_and","","Applies bitwise \\\"and\\\" to the current value and returns …",4,[[["u32",15]],["u32",15]]],[11,"fetch_or","","Applies bitwise \\\"or\\\" to the current value and returns the …",4,[[["u32",15]],["u32",15]]],[11,"fetch_xor","","Applies bitwise \\\"xor\\\" to the current value and returns …",4,[[["u32",15]],["u32",15]]],[11,"fetch_add","","Increments the current value by <code>val</code> and returns the …",4,[[["i32",15]],["i32",15]]],[11,"fetch_sub","","Decrements the current value by <code>val</code> and returns the …",4,[[["i32",15]],["i32",15]]],[11,"fetch_and","","Applies bitwise \\\"and\\\" to the current value and returns …",4,[[["i32",15]],["i32",15]]],[11,"fetch_or","","Applies bitwise \\\"or\\\" to the current value and returns the …",4,[[["i32",15]],["i32",15]]],[11,"fetch_xor","","Applies bitwise \\\"xor\\\" to the current value and returns …",4,[[["i32",15]],["i32",15]]],[11,"fetch_add","","Increments the current value by <code>val</code> and returns the …",4,[[["u64",15]],["u64",15]]],[11,"fetch_sub","","Decrements the current value by <code>val</code> and returns the …",4,[[["u64",15]],["u64",15]]],[11,"fetch_and","","Applies bitwise \\\"and\\\" to the current value and returns …",4,[[["u64",15]],["u64",15]]],[11,"fetch_or","","Applies bitwise \\\"or\\\" to the current value and returns the …",4,[[["u64",15]],["u64",15]]],[11,"fetch_xor","","Applies bitwise \\\"xor\\\" to the current value and returns …",4,[[["u64",15]],["u64",15]]],[11,"fetch_add","","Increments the current value by <code>val</code> and returns the …",4,[[["i64",15]],["i64",15]]],[11,"fetch_sub","","Decrements the current value by <code>val</code> and returns the …",4,[[["i64",15]],["i64",15]]],[11,"fetch_and","","Applies bitwise \\\"and\\\" to the current value and returns …",4,[[["i64",15]],["i64",15]]],[11,"fetch_or","","Applies bitwise \\\"or\\\" to the current value and returns the …",4,[[["i64",15]],["i64",15]]],[11,"fetch_xor","","Applies bitwise \\\"xor\\\" to the current value and returns …",4,[[["i64",15]],["i64",15]]],[11,"fetch_add","","Increments the current value by <code>val</code> and returns the …",4,[[["u128",15]],["u128",15]]],[11,"fetch_sub","","Decrements the current value by <code>val</code> and returns the …",4,[[["u128",15]],["u128",15]]],[11,"fetch_and","","Applies bitwise \\\"and\\\" to the current value and returns …",4,[[["u128",15]],["u128",15]]],[11,"fetch_or","","Applies bitwise \\\"or\\\" to the current value and returns the …",4,[[["u128",15]],["u128",15]]],[11,"fetch_xor","","Applies bitwise \\\"xor\\\" to the current value and returns …",4,[[["u128",15]],["u128",15]]],[11,"fetch_add","","Increments the current value by <code>val</code> and returns the …",4,[[["i128",15]],["i128",15]]],[11,"fetch_sub","","Decrements the current value by <code>val</code> and returns the …",4,[[["i128",15]],["i128",15]]],[11,"fetch_and","","Applies bitwise \\\"and\\\" to the current value and returns …",4,[[["i128",15]],["i128",15]]],[11,"fetch_or","","Applies bitwise \\\"or\\\" to the current value and returns the …",4,[[["i128",15]],["i128",15]]],[11,"fetch_xor","","Applies bitwise \\\"xor\\\" to the current value and returns …",4,[[["i128",15]],["i128",15]]],[11,"fetch_add","","Increments the current value by <code>val</code> and returns the …",4,[[["usize",15]],["usize",15]]],[11,"fetch_sub","","Decrements the current value by <code>val</code> and returns the …",4,[[["usize",15]],["usize",15]]],[11,"fetch_and","","Applies bitwise \\\"and\\\" to the current value and returns …",4,[[["usize",15]],["usize",15]]],[11,"fetch_or","","Applies bitwise \\\"or\\\" to the current value and returns the …",4,[[["usize",15]],["usize",15]]],[11,"fetch_xor","","Applies bitwise \\\"xor\\\" to the current value and returns …",4,[[["usize",15]],["usize",15]]],[11,"fetch_add","","Increments the current value by <code>val</code> and returns the …",4,[[["isize",15]],["isize",15]]],[11,"fetch_sub","","Decrements the current value by <code>val</code> and returns the …",4,[[["isize",15]],["isize",15]]],[11,"fetch_and","","Applies bitwise \\\"and\\\" to the current value and returns …",4,[[["isize",15]],["isize",15]]],[11,"fetch_or","","Applies bitwise \\\"or\\\" to the current value and returns the …",4,[[["isize",15]],["isize",15]]],[11,"fetch_xor","","Applies bitwise \\\"xor\\\" to the current value and returns …",4,[[["isize",15]],["isize",15]]],[11,"fetch_and","","Applies logical \\\"and\\\" to the current value and returns …",4,[[["bool",15]],["bool",15]]],[11,"fetch_or","","Applies logical \\\"or\\\" to the current value and returns the …",4,[[["bool",15]],["bool",15]]],[11,"fetch_xor","","Applies logical \\\"xor\\\" to the current value and returns …",4,[[["bool",15]],["bool",15]]],[11,"new","crossbeam_utils","Pads and aligns a value to the length of a cache line.",5,[[],["cachepadded",3]]],[11,"into_inner","","Returns the inner value.",5,[[]]],[11,"new","","Creates a new <code>Backoff</code>.",6,[[]]],[11,"reset","","Resets the <code>Backoff</code>.",6,[[]]],[11,"spin","","Backs off in a lock-free loop.",6,[[]]],[11,"snooze","","Backs off in a blocking loop.",6,[[]]],[11,"is_completed","","Returns <code>true</code> if exponential backoff has completed and …",6,[[],["bool",15]]],[11,"new","crossbeam_utils::sync","Creates a new <code>Parker</code>.",7,[[],["parker",3]]],[11,"park","","Blocks the current thread until the token is made …",7,[[]]],[11,"park_timeout","","Blocks the current thread until the token is made …",7,[[["duration",3]]]],[11,"unparker","","Returns a reference to an associated <code>Unparker</code>.",7,[[],["unparker",3]]],[11,"unpark","","Atomically makes the token available if it is not already.",8,[[]]],[11,"new","","Creates a new sharded reader-writer lock.",9,[[],["shardedlock",3]]],[11,"into_inner","","Consumes this lock, returning the underlying data.",9,[[],["lockresult",6]]],[11,"is_poisoned","","Returns <code>true</code> if the lock is poisoned.",9,[[],["bool",15]]],[11,"get_mut","","Returns a mutable reference to the underlying data.",9,[[],["lockresult",6]]],[11,"try_read","","Attempts to acquire this lock with shared read access.",9,[[],[["trylockresult",6],["shardedlockreadguard",3]]]],[11,"read","","Locks with shared read access, blocking the current …",9,[[],[["shardedlockreadguard",3],["lockresult",6]]]],[11,"try_write","","Attempts to acquire this lock with exclusive write access.",9,[[],[["shardedlockwriteguard",3],["trylockresult",6]]]],[11,"write","","Locks with exclusive write access, blocking the current …",9,[[],[["lockresult",6],["shardedlockwriteguard",3]]]],[11,"new","","Creates a new wait group and returns the single reference …",12,[[],["waitgroup",3]]],[11,"wait","","Drops this reference and waits until all other references …",12,[[]]]],"p":[[8,"AtomicConsume"],[3,"Scope"],[3,"ScopedThreadBuilder"],[3,"ScopedJoinHandle"],[3,"AtomicCell"],[3,"CachePadded"],[3,"Backoff"],[3,"Parker"],[3,"Unparker"],[3,"ShardedLock"],[3,"ShardedLockReadGuard"],[3,"ShardedLockWriteGuard"],[3,"WaitGroup"]]},\
"deflate":{"doc":"An implementation an encoder using DEFLATE compression …","i":[[0,"write","deflate","Encoders implementing a <code>Write</code> interface.",null,null],[3,"DeflateEncoder","deflate::write","A DEFLATE encoder/compressor.",null,null],[3,"ZlibEncoder","","A Zlib encoder/compressor.",null,null],[3,"CompressionOptions","deflate","A struct describing the options for a compressor or …",null,null],[12,"max_hash_checks","","The maximum number of checks to make in the hash table …",0,null],[12,"lazy_if_less_than","","Only lazy match if we have a length less than this value.",0,null],[12,"matching_type","","Whether to use lazy or greedy matching.",0,null],[12,"special","","Force fixed/stored blocks (Not implemented yet).",0,null],[4,"SpecialOptions","","Enum allowing some special options (not implemented yet)!",null,null],[13,"Normal","","Compress normally.",1,null],[13,"_ForceFixed","","Force fixed huffman tables. (Unimplemented!).",1,null],[13,"_ForceStored","","Force stored (uncompressed) blocks only. (Unimplemented!).",1,null],[4,"Compression","","An enum describing the level of compression to be used by …",null,null],[13,"Fast","","Fast minimal compression (<code>CompressionOptions::fast()</code>).",2,null],[13,"Default","","Default level (<code>CompressionOptions::default()</code>).",2,null],[13,"Best","","Higher compression level (<code>CompressionOptions::high()</code>).",2,null],[4,"MatchingType","","An enum describing whether we use lazy or greedy matching.",null,null],[13,"Greedy","","Use greedy matching: the matching algorithm simply uses a …",3,null],[13,"Lazy","","Use lazy matching: after finding a match, the next input …",3,null],[5,"deflate_bytes_conf","","Compress the given slice of bytes with DEFLATE …",null,[[["compressionoptions",3],["into",8]],[["vec",3],["u8",15]]]],[5,"deflate_bytes","","Compress the given slice of bytes with DEFLATE …",null,[[],[["vec",3],["u8",15]]]],[5,"deflate_bytes_zlib_conf","","Compress the given slice of bytes with DEFLATE …",null,[[["compressionoptions",3],["into",8]],[["vec",3],["u8",15]]]],[5,"deflate_bytes_zlib","","Compress the given slice of bytes with DEFLATE …",null,[[],[["vec",3],["u8",15]]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"to_string","","",3,[[],["string",3]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","deflate::write","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"drop","","When the encoder is dropped, output the rest of the data.",4,[[]]],[11,"drop","","When the encoder is dropped, output the rest of the data.",5,[[]]],[11,"from","deflate","",0,[[["compression",4]],["compressionoptions",3]]],[11,"clone","","",2,[[],["compression",4]]],[11,"clone","","",1,[[],["specialoptions",4]]],[11,"clone","","",0,[[],["compressionoptions",3]]],[11,"clone","","",3,[[],["matchingtype",4]]],[11,"default","","",2,[[],["compression",4]]],[11,"default","","",1,[[],["specialoptions",4]]],[11,"default","","Returns the options describing the default compression …",0,[[],["compressionoptions",3]]],[11,"cmp","","",2,[[["compression",4]],["ordering",4]]],[11,"cmp","","",3,[[["matchingtype",4]],["ordering",4]]],[11,"eq","","",2,[[["compression",4]],["bool",15]]],[11,"eq","","",1,[[["specialoptions",4]],["bool",15]]],[11,"eq","","",0,[[["compressionoptions",3]],["bool",15]]],[11,"ne","","",0,[[["compressionoptions",3]],["bool",15]]],[11,"eq","","",3,[[["matchingtype",4]],["bool",15]]],[11,"partial_cmp","","",2,[[["compression",4]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",3,[[["matchingtype",4]],[["ordering",4],["option",4]]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"hash","","",2,[[]]],[11,"hash","","",1,[[]]],[11,"hash","","",0,[[]]],[11,"hash","","",3,[[]]],[11,"write","deflate::write","",4,[[],[["result",6],["usize",15]]]],[11,"flush","","Flush the encoder.",4,[[],["result",6]]],[11,"write","","",5,[[],[["result",6],["usize",15]]]],[11,"flush","","Flush the encoder.",5,[[],["result",6]]],[11,"high","deflate","Returns compression settings rouhgly corresponding to the …",0,[[],["compressionoptions",3]]],[11,"fast","","Returns  a fast set of compression settings",0,[[],["compressionoptions",3]]],[11,"huffman_only","","Returns a set of compression settings that makes the …",0,[[],["compressionoptions",3]]],[11,"rle","","Returns a set of compression settings that makes the …",0,[[],["compressionoptions",3]]],[11,"new","deflate::write","Creates a new encoder using the provided compression …",4,[[["compressionoptions",3],["into",8]],["deflateencoder",3]]],[11,"finish","","Encode all pending data to the contained writer, consume …",4,[[],["result",6]]],[11,"reset","","Resets the encoder (except the compression options), …",4,[[],["result",6]]],[11,"new","","Create a new <code>ZlibEncoder</code> using the provided compression …",5,[[["compressionoptions",3],["into",8]],["zlibencoder",3]]],[11,"finish","","Encode all pending data to the contained writer, consume …",5,[[],["result",6]]],[11,"reset","","Resets the encoder (except the compression options), …",5,[[],["result",6]]],[11,"checksum","","Return the adler32 checksum of the currently consumed …",5,[[],["u32",15]]]],"p":[[3,"CompressionOptions"],[4,"SpecialOptions"],[4,"Compression"],[4,"MatchingType"],[3,"DeflateEncoder"],[3,"ZlibEncoder"]]},\
"either":{"doc":"The enum <code>Either</code> with variants <code>Left</code> and <code>Right</code> is a general …","i":[[4,"Either","either","The enum <code>Either</code> with variants <code>Left</code> and <code>Right</code> is a general …",null,null],[13,"Left","","A value of type <code>L</code>.",0,null],[13,"Right","","A value of type <code>R</code>.",0,null],[11,"is_left","","Return true if the value is the <code>Left</code> variant.",0,[[],["bool",15]]],[11,"is_right","","Return true if the value is the <code>Right</code> variant.",0,[[],["bool",15]]],[11,"left","","Convert the left side of <code>Either<L, R></code> to an <code>Option<L></code>.",0,[[],["option",4]]],[11,"right","","Convert the right side of <code>Either<L, R></code> to an <code>Option<R></code>.",0,[[],["option",4]]],[11,"as_ref","","Convert <code>&Either<L, R></code> to <code>Either<&L, &R></code>.",0,[[],["either",4]]],[11,"as_mut","","Convert <code>&mut Either<L, R></code> to <code>Either<&mut L, &mut R></code>.",0,[[],["either",4]]],[11,"flip","","Convert <code>Either<L, R></code> to <code>Either<R, L></code>.",0,[[],["either",4]]],[11,"map_left","","Apply the function <code>f</code> on the value in the <code>Left</code> variant if …",0,[[],["either",4]]],[11,"map_right","","Apply the function <code>f</code> on the value in the <code>Right</code> variant if …",0,[[],["either",4]]],[11,"either","","Apply one of two functions depending on contents, …",0,[[]]],[11,"either_with","","Like <code>either</code>, but provide some context to whichever of the …",0,[[]]],[11,"left_and_then","","Apply the function <code>f</code> on the value in the <code>Left</code> variant if …",0,[[],["either",4]]],[11,"right_and_then","","Apply the function <code>f</code> on the value in the <code>Right</code> variant if …",0,[[],["either",4]]],[11,"into_iter","","Convert the inner value to an iterator.",0,[[],["either",4]]],[11,"left_or","","Return left value or given value",0,[[]]],[11,"left_or_default","","Return left or a default",0,[[]]],[11,"left_or_else","","Returns left value or computes it from a closure",0,[[]]],[11,"right_or","","Return right value or given value",0,[[]]],[11,"right_or_default","","Return right or a default",0,[[]]],[11,"right_or_else","","Returns right value or computes it from a closure",0,[[]]],[11,"factor_first","","Factor out a homogeneous type from an either of pairs.",0,[[]]],[11,"factor_second","","Factor out a homogeneous type from an either of pairs.",0,[[]]],[11,"into_inner","","Extract the value of an either over two equivalent types.",0,[[]]],[11,"map","","Map <code>f</code> over the contained value and return the result in …",0,[[],["either",4]]],[14,"try_left","","Macro for unwrapping the left side of an <code>Either</code>, which …",null,null],[14,"try_right","","Dual to <code>try_left!</code>, see its documentation for more …",null,null],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"into_iter","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"from","","",0,[[["result",4]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"eq","","",0,[[["either",4]],["bool",15]]],[11,"ne","","",0,[[["either",4]],["bool",15]]],[11,"cmp","","",0,[[["either",4]],["ordering",4]]],[11,"partial_cmp","","",0,[[["either",4]],[["ordering",4],["option",4]]]],[11,"hash","","",0,[[]]],[11,"as_ref","","",0,[[]]],[11,"as_ref","","",0,[[],["str",15]]],[11,"as_ref","","",0,[[]]],[11,"as_mut","","",0,[[],["str",15]]],[11,"as_mut","","",0,[[]]],[11,"as_mut","","",0,[[]]],[11,"into","","",0,[[],["result",4]]],[11,"next_back","","",0,[[],["option",4]]],[11,"next","","",0,[[],["option",4]]],[11,"size_hint","","",0,[[]]],[11,"fold","","",0,[[]]],[11,"count","","",0,[[],["usize",15]]],[11,"last","","",0,[[],["option",4]]],[11,"nth","","",0,[[["usize",15]],["option",4]]],[11,"collect","","",0,[[]]],[11,"all","","",0,[[],["bool",15]]],[11,"extend","","",0,[[]]],[11,"clone","","",0,[[],["either",4]]]],"p":[[4,"Either"]]},\
"event_loop":{"doc":"A Piston event loop for games and interactive applications","i":[[3,"EventSettings","event_loop","Stores event loop settings.",null,null],[12,"max_fps","","The maximum number of frames per second",0,null],[12,"ups","","The number of updates per second",0,null],[12,"ups_reset","","The number of delayed updates before skipping them to …",0,null],[12,"swap_buffers","","Enable or disable automatic swapping of buffers.",0,null],[12,"bench_mode","","Enable or disable benchmark mode. When enabled, it will …",0,null],[12,"lazy","","Enable or disable rendering only when receiving input. …",0,null],[11,"new","","Creates new with default settings.",0,[[],["eventsettings",3]]],[3,"Events","","An event loop iterator",null,null],[17,"DEFAULT_UPS","","The default updates per second.",null,null],[17,"DEFAULT_UPS_RESET","","The default delayed updates reset.",null,null],[17,"DEFAULT_MAX_FPS","","The default maximum frames per second.",null,null],[11,"new","","Creates a new event iterator with default UPS and FPS …",1,[[["eventsettings",3]],["events",3]]],[11,"next","","Returns the next event.",1,[[],[["event",4],["option",4]]]],[8,"EventLoop","","Methods implemented for changing event loop settings.",null,null],[10,"get_event_settings","","Returns event loop settings.",2,[[],["eventsettings",3]]],[10,"set_event_settings","","Sets event loop settings.",2,[[["eventsettings",3]]]],[11,"set_ups","","The number of updates per second",2,[[["u64",15]]]],[11,"ups","","The number of updates per second",2,[[["u64",15]]]],[11,"set_ups_reset","","The number of delayed updates before skipping them to …",2,[[["u64",15]]]],[11,"ups_reset","","The number of delayed updates before skipping them to …",2,[[["u64",15]]]],[11,"set_max_fps","","The maximum number of frames per second",2,[[["u64",15]]]],[11,"max_fps","","The maximum number of frames per second",2,[[["u64",15]]]],[11,"set_swap_buffers","","Enable or disable automatic swapping of buffers.",2,[[["bool",15]]]],[11,"swap_buffers","","Enable or disable automatic swapping of buffers.",2,[[["bool",15]]]],[11,"set_bench_mode","","Enable or disable benchmark mode. When enabled, it will …",2,[[["bool",15]]]],[11,"bench_mode","","Enable or disable benchmark mode. When enabled, it will …",2,[[["bool",15]]]],[11,"set_lazy","","Enable or disable rendering only when receiving input. …",2,[[["bool",15]]]],[11,"lazy","","Enable or disable rendering only when receiving input. …",2,[[["bool",15]]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"get_event_settings","","",0,[[]]],[11,"set_event_settings","","",0,[[]]],[11,"get_event_settings","","",1,[[],["eventsettings",3]]],[11,"set_event_settings","","",1,[[["eventsettings",3]]]],[11,"clone","","",0,[[],["eventsettings",3]]],[11,"clone","","",1,[[],["events",3]]],[11,"default","","",0,[[],["eventsettings",3]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]]],"p":[[3,"EventSettings"],[3,"Events"],[8,"EventLoop"]]},\
"failure":{"doc":"An experimental new error-handling library. Guide-style …","i":[[8,"AsFail","failure","The <code>AsFail</code> trait",null,null],[10,"as_fail","","Converts a reference to <code>Self</code> into a dynamic trait object …",0,[[],["fail",8]]],[3,"Backtrace","","A <code>Backtrace</code>.",null,null],[3,"Compat","","A compatibility wrapper around an error type from this …",null,null],[3,"Context","","An error with context around it.",null,null],[8,"ResultExt","","Extension methods for <code>Result</code>.",null,null],[10,"compat","","Wraps the error in <code>Compat</code> to make it compatible with …",1,[[],[["result",4],["compat",3]]]],[10,"context","","Wraps the error type in a context type.",1,[[],[["result",4],["context",3]]]],[10,"with_context","","Wraps the error type in a context type generated by …",1,[[],[["result",4],["context",3]]]],[3,"SyncFailure","","Wrapper for <code>std</code> errors to make them <code>Sync</code>.",null,null],[3,"Error","","The <code>Error</code> type, which can contain any failure.",null,null],[6,"Fallible","","A common result with an <code>Error</code>.",null,null],[5,"err_msg","","Constructs a <code>Fail</code> type from a string.",null,[[["debug",8],["send",8],["sync",8],["display",8]],["error",3]]],[8,"Fail","","The <code>Fail</code> trait.",null,null],[11,"name","","Returns the \\\"name\\\" of the error.",2,[[],[["str",15],["option",4]]]],[11,"cause","","Returns a reference to the underlying cause of this …",2,[[],[["option",4],["fail",8]]]],[11,"backtrace","","Returns a reference to the <code>Backtrace</code> carried by this …",2,[[],[["option",4],["backtrace",3]]]],[11,"context","","Provides context for this failure.",2,[[],["context",3]]],[11,"compat","","Wraps this failure in a compatibility wrapper that …",2,[[],["compat",3]]],[11,"downcast_ref","","Attempts to downcast this failure to a concrete type by …",2,[[],["option",4]]],[11,"downcast_mut","","Attempts to downcast this failure to a concrete type by …",2,[[],["option",4]]],[11,"find_root_cause","","Returns the \\\"root cause\\\" of this <code>Fail</code> - the last value in …",2,[[],["fail",8]]],[11,"iter_causes","","Returns a iterator over the causes of this <code>Fail</code> with the …",2,[[],["causes",3]]],[11,"iter_chain","","Returns a iterator over all fails up the chain from the …",2,[[],["causes",3]]],[11,"root_cause","","Deprecated alias to <code>find_root_cause</code>.",2,[[],["fail",8]]],[11,"causes","","Deprecated alias to <code>iter_chain</code>.",2,[[],["causes",3]]],[3,"Causes","","A iterator over the causes of a <code>Fail</code>",null,null],[14,"bail","","Exits a function early with an <code>Error</code>.",null,null],[14,"ensure","","Exits a function early with an <code>Error</code> if the condition is …",null,null],[14,"format_err","","Constructs an <code>Error</code> using the standard string …",null,null],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_string","","",3,[[],["string",3]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"to_string","","",4,[[],["string",3]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_string","","",5,[[],["string",3]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_string","","",6,[[],["string",3]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_string","","",7,[[],["string",3]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"into_iter","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"as_fail","","",2,[[],["fail",8]]],[11,"as_fail","","",7,[[],["fail",8]]],[11,"name","","",5,[[],[["str",15],["option",4]]]],[11,"cause","","",5,[[],[["option",4],["fail",8]]]],[11,"backtrace","","",5,[[],[["option",4],["backtrace",3]]]],[11,"as_ref","","",7,[[],["fail",8]]],[11,"from","","",5,[[],["context",3]]],[11,"from","","",7,[[],["error",3]]],[11,"next","","",8,[[],[["option",4],["fail",8]]]],[11,"clone","","",4,[[],["compat",3]]],[11,"default","","",3,[[],["backtrace",3]]],[11,"default","","",4,[[],["compat",3]]],[11,"eq","","",4,[[["compat",3]],["bool",15]]],[11,"ne","","",4,[[["compat",3]],["bool",15]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"hash","","",4,[[]]],[11,"description","","",4,[[],["str",15]]],[11,"new","","Constructs a new backtrace. This will only create a real …",3,[[],["backtrace",3]]],[11,"is_empty","","Returns true if displaying this backtrace would be an …",3,[[],["bool",15]]],[11,"into_inner","","Unwraps this into the inner error.",4,[[]]],[11,"get_ref","","Gets a reference to the inner error.",4,[[]]],[11,"new","","Creates a new context without an underlying error message.",5,[[],["context",3]]],[11,"get_context","","Returns a reference to the context provided with this …",5,[[]]],[11,"map","","Maps <code>Context<D></code> to <code>Context<T></code> by applying a function to …",5,[[],["context",3]]],[11,"new","","Wraps a non-<code>Sync</code> <code>Error</code> in order to make it implement <code>Fail</code>.",6,[[]]],[11,"from_boxed_compat","","Creates an <code>Error</code> from <code>Box<std::error::Error></code>.",7,[[["box",3],["stderror",8]],["error",3]]],[11,"as_fail","","Return a reference to the underlying failure that this …",7,[[],["fail",8]]],[11,"name","","Returns the name of the underlying fail.",7,[[],[["str",15],["option",4]]]],[11,"cause","","Returns a reference to the underlying cause of this <code>Error</code>…",7,[[],["fail",8]]],[11,"backtrace","","Gets a reference to the <code>Backtrace</code> for this <code>Error</code>.",7,[[],["backtrace",3]]],[11,"context","","Provides context for this <code>Error</code>.",7,[[["display",8],["sync",8],["send",8]],[["send",8],["context",3],["sync",8],["display",8]]]],[11,"compat","","Wraps <code>Error</code> in a compatibility type.",7,[[],[["compat",3],["error",3]]]],[11,"downcast","","Attempts to downcast this <code>Error</code> to a particular <code>Fail</code> type.",7,[[],[["fail",8],["error",3],["result",4]]]],[11,"find_root_cause","","Returns the \\\"root cause\\\" of this error - the last value …",7,[[],["fail",8]]],[11,"iter_causes","","Returns a iterator over the causes of this error with the …",7,[[],["causes",3]]],[11,"iter_chain","","Returns a iterator over all fails up the chain from the …",7,[[],["causes",3]]],[11,"downcast_ref","","Attempts to downcast this <code>Error</code> to a particular <code>Fail</code> type …",7,[[],["option",4]]],[11,"downcast_mut","","Attempts to downcast this <code>Error</code> to a particular <code>Fail</code> type …",7,[[],["option",4]]],[11,"root_cause","","Deprecated alias to <code>find_root_cause</code>.",7,[[],["fail",8]]],[11,"causes","","Deprecated alias to <code>iter_causes</code>.",7,[[],["causes",3]]]],"p":[[8,"AsFail"],[8,"ResultExt"],[8,"Fail"],[3,"Backtrace"],[3,"Compat"],[3,"Context"],[3,"SyncFailure"],[3,"Error"],[3,"Causes"]]},\
"failure_derive":{"doc":"","i":[[24,"Fail","failure_derive","",null,null]],"p":[]},\
"float":{"doc":"Traits for generic floats in game programming","i":[[8,"Float","float","Convenience trait for floats.",null,null],[8,"Min","","Minimum value.",null,null],[10,"min","","Returns the minimum value of self or other.",0,[[]]],[8,"Max","","Maximum value.",null,null],[10,"max","","Returns the maximum value of self or other.",1,[[]]],[8,"Signum","","The sign of the number.",null,null],[10,"signum","","Returns number representing the sign of self",2,[[]]],[8,"Powf","","Floating number power.",null,null],[10,"powf","","Returns floating power of the number.",3,[[]]],[8,"Radians","","Useful constants for radians.",null,null],[10,"_90","","Returns radians corresponding to 90 degrees.",4,[[]]],[10,"_180","","Returns radians corresponding to 180 degrees.",4,[[]]],[10,"_360","","Returns radians corresponding to 360 degrees.",4,[[]]],[10,"deg_to_rad","","Convert a value to radians from degrees. Equivalent to …",4,[[]]],[10,"rad_to_deg","","Convert a value to degrees from radians. Equivalent to …",4,[[]]],[8,"One","","Number 1.",null,null],[10,"one","","Returns 1.",5,[[]]],[8,"Zero","","Number 0.",null,null],[10,"zero","","Returns 0.",6,[[]]],[8,"Sqrt","","Square root.",null,null],[10,"sqrt","","Returns square root.",7,[[]]],[8,"Trig","","Basic trigonometry functions",null,null],[10,"sin","","Returns sine of self.",8,[[]]],[10,"cos","","Returns cosine of self.",8,[[]]],[10,"tan","","Returns tangent of self.",8,[[]]],[10,"asin","","Returns inverse sine of self.",8,[[]]],[10,"acos","","Returns inverse cosine of self.",8,[[]]],[10,"atan","","Returns inverse tangent of self.",8,[[]]],[10,"atan2","","Returns the four quadrant arctangent of self (y) and …",8,[[]]],[10,"sinh","","Returns hyperbolic sine of self.",8,[[]]],[10,"cosh","","Returns hyperbolic cosine of self.",8,[[]]],[10,"tanh","","Returns hyperbolic tangent of self.",8,[[]]],[10,"asinh","","Returns inverse hyperbolic sine of self.",8,[[]]],[10,"acosh","","Returns inverse hyperbolic cosine of self.",8,[[]]],[10,"atanh","","Returns inverse hyperbolic tangent of self.",8,[[]]],[8,"Cast","","Casts into another type.",null,null],[10,"cast","","Casts into other type.",9,[[]]],[8,"FromPrimitive","","Trait for converting from different numeric types",null,null],[10,"from_f64","","from a f64",10,[[["f64",15]]]],[10,"from_f32","","from a f32",10,[[["f32",15]]]],[10,"from_isize","","from a isze",10,[[["isize",15]]]],[10,"from_u32","","from a u32",10,[[["u32",15]]]],[10,"from_i32","","from a i32",10,[[["i32",15]]]]],"p":[[8,"Min"],[8,"Max"],[8,"Signum"],[8,"Powf"],[8,"Radians"],[8,"One"],[8,"Zero"],[8,"Sqrt"],[8,"Trig"],[8,"Cast"],[8,"FromPrimitive"]]},\
"fnv":{"doc":"An implementation of the Fowler–Noll–Vo hash function.","i":[[3,"FnvHasher","fnv","An implementation of the Fowler–Noll–Vo hash function.",null,null],[11,"with_key","","Create an FNV hasher starting with a state corresponding …",0,[[["u64",15]],["fnvhasher",3]]],[6,"FnvBuildHasher","","A builder for default FNV hashers.",null,null],[6,"FnvHashMap","","A <code>HashMap</code> using a default FNV hasher.",null,null],[6,"FnvHashSet","","A <code>HashSet</code> using a default FNV hasher.",null,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"default","","",0,[[],["fnvhasher",3]]],[11,"finish","","",0,[[],["u64",15]]],[11,"write","","",0,[[]]]],"p":[[3,"FnvHasher"]]},\
"gif":{"doc":"GIF en- and decoding library Build StatusGIF en- and …","i":[[8,"SetParameter","gif","Implemented for objects that have parameters.",null,null],[11,"set","","Sets <code>value</code> as a parameter of <code>self</code>.",0,[[["parameter",8]]]],[8,"Parameter","","Configuration parameter trait.",null,null],[16,"Result","","Result type of <code>set_param</code>.",1,null],[10,"set_param","","Sets <code>self</code> as a parameter of <code>Object</code>.",1,[[]]],[4,"Block","","Known GIF block types",null,null],[13,"Image","","Image block.",2,null],[13,"Extension","","Extension block.",2,null],[13,"Trailer","","Image trailer.",2,null],[4,"Extension","","Known GIF extensions",null,null],[13,"Text","","Text extension.",3,null],[13,"Control","","Control extension.",3,null],[13,"Comment","","Comment extension.",3,null],[13,"Application","","Application extension.",3,null],[4,"DisposalMethod","","Disposal method",null,null],[13,"Any","","StreamingDecoder is not required to take any action.",4,null],[13,"Keep","","Do not dispose.",4,null],[13,"Background","","Restore to background color.",4,null],[13,"Previous","","Restore to previous.",4,null],[3,"Frame","","A GIF frame",null,null],[12,"delay","","Frame delay in units of 10 ms.",5,null],[12,"dispose","","Disposal method.",5,null],[12,"transparent","","Transparent index (if available).",5,null],[12,"needs_user_input","","True if the frame needs user input to be displayed.",5,null],[12,"top","","Offset from the top border of the canvas.",5,null],[12,"left","","Offset from the left border of the canvas.",5,null],[12,"width","","Width of the frame.",5,null],[12,"height","","Height of the frame.",5,null],[12,"interlaced","","True if the image is interlaced.",5,null],[12,"palette","","Frame local color palette if available.",5,null],[12,"buffer","","Buffer containing the image data. Only indices unless …",5,null],[3,"StreamingDecoder","","GIF decoder which supports streaming",null,null],[4,"Decoded","","Indicates whether a certain object has been decoded",null,null],[13,"Nothing","","Decoded nothing.",6,null],[13,"GlobalPalette","","Global palette.",6,null],[13,"BackgroundColor","","Index of the background color in the global palette.",6,null],[13,"Trailer","","Decoded the image trailer.",6,null],[13,"BlockStart","","The start of a block.",6,null],[13,"SubBlockFinished","","Decoded a sub-block. More sub-block are available.",6,null],[13,"BlockFinished","","Decoded the last (or only) sub-block of a block.",6,null],[13,"Frame","","Decoded all information of the next frame. The returned …",6,null],[13,"Data","","Decoded some data of the current frame.",6,null],[13,"DataEnd","","No more data available the current frame.",6,null],[4,"DecodingError","","Decoding error.",null,null],[13,"Format","","Returned if the image is found to be malformed.",7,null],[13,"Internal","","Internal (logic) error.",7,null],[13,"Io","","Wraps <code>std::io::Error</code>.",7,null],[4,"ColorOutput","","Output mode for the image data",null,null],[13,"RGBA","","The decoder expands the image data to 32bit RGBA. This …",8,null],[13,"Indexed","","The decoder returns the raw indexed data.",8,null],[3,"MemoryLimit","","Memory limit in bytes. <code>MemoryLimit::Some(0)</code> means that …",null,null],[12,"0","","",9,null],[4,"Extensions","","Configures how extensions should be handled",null,null],[13,"Save","","Saves all extention data",10,null],[13,"Skip","","Skips the data of unknown extensions and extracts the …",10,null],[3,"Reader","","GIF decoder",null,null],[3,"Decoder","","GIF decoder",null,null],[3,"Encoder","","GIF encoder.",null,null],[4,"ExtensionData","","Extension data.",null,null],[13,"Control","","Control extension. Use <code>ExtensionData::new_control_ext</code> to …",11,null],[12,"flags","gif::ExtensionData","Flags.",12,null],[12,"delay","","Frame delay.",12,null],[12,"trns","","Transparent index.",12,null],[13,"Repetitions","gif","Sets the number of repetitions",11,null],[4,"Repeat","","Number of repetitions",null,null],[13,"Finite","","Finite number of repetitions",13,null],[13,"Infinite","","Infinite number of repetitions",13,null],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_string","","",7,[[],["string",3]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"set_param","","",10,[[["streamingdecoder",3]]]],[11,"set_param","","",8,[[["decoder",3]]]],[11,"set_param","","",9,[[["decoder",3]]]],[11,"set_param","","",13,[[["encoder",3]]]],[11,"drop","","",17,[[]]],[11,"from","","",7,[[["error",3]]]],[11,"clone","","",4,[[],["disposalmethod",4]]],[11,"clone","","",2,[[],["block",4]]],[11,"clone","","",3,[[],["extension",4]]],[11,"clone","","",5,[[],["frame",3]]],[11,"default","","",5,[[],["frame",3]]],[11,"eq","","",4,[[["disposalmethod",4]],["bool",15]]],[11,"eq","","",2,[[["block",4]],["bool",15]]],[11,"eq","","",3,[[["extension",4]],["bool",15]]],[11,"eq","","",10,[[["extensions",4]],["bool",15]]],[11,"eq","","",8,[[["coloroutput",4]],["bool",15]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"description","","",7,[[],["str",15]]],[11,"cause","","",7,[[],[["option",4],["error",8]]]],[11,"set","","Sets <code>value</code> as a parameter of <code>self</code>.",0,[[["parameter",8]]]],[11,"from_u8","","Converts <code>u8</code> to <code>Option<Self></code>",4,[[["u8",15]],[["disposalmethod",4],["option",4]]]],[11,"from_u8","","Converts <code>u8</code> to <code>Option<Self></code>",2,[[["u8",15]],[["option",4],["block",4]]]],[11,"from_u8","","Converts <code>u8</code> to <code>Option<Self></code>",3,[[["u8",15]],[["option",4],["extension",4]]]],[11,"from_rgba","","Creates a frame from pixels in RGBA format. <em>Note: This …",5,[[["u16",15]],["frame",3]]],[11,"from_rgba_speed","","Creates a frame from pixels in RGBA format. <code>speed</code> is a …",5,[[["u16",15],["i32",15]],["frame",3]]],[11,"from_palette_pixels","","Creates a frame from a palette and indexed pixels.",5,[[["option",4],["u16",15],["u8",15]],["frame",3]]],[11,"from_indexed_pixels","","Creates a frame from indexed pixels in the global palette.",5,[[["option",4],["u16",15],["u8",15]],["frame",3]]],[11,"from_rgb","","Creates a frame from pixels in RGB format. <em>Note: This …",5,[[["u16",15]],["frame",3]]],[11,"from_rgb_speed","","Creates a frame from pixels in RGB format. <code>speed</code> is a …",5,[[["u16",15],["i32",15]],["frame",3]]],[11,"new","","Creates a new streaming decoder",14,[[],["streamingdecoder",3]]],[11,"update","","Updates the internal state of the decoder. ",14,[[],[["decodingerror",4],["result",4]]]],[11,"last_ext","","Returns the data of the last extension that has been …",14,[[]]],[11,"current_frame_mut","","Current frame info as a mutable ref.",14,[[],["frame",3]]],[11,"current_frame","","Current frame info as a ref.",14,[[],["frame",3]]],[11,"width","","Width of the image",14,[[],["u16",15]]],[11,"height","","Height of the image",14,[[],["u16",15]]],[11,"new","","Creates a new decoder builder",15,[[],["decoder",3]]],[11,"read_info","","Reads the logical screen descriptor including the global …",15,[[],[["result",4],["reader",3],["decodingerror",4]]]],[11,"next_frame_info","","Returns the next frame info",16,[[],[["decodingerror",4],["option",4],["result",4]]]],[11,"read_next_frame","","Reads the next frame from the image.",16,[[],[["decodingerror",4],["option",4],["result",4]]]],[11,"read_into_buffer","","Reads the data of the current frame into a pre-allocated …",16,[[],[["result",4],["decodingerror",4]]]],[11,"fill_buffer","","Reads data of the current frame into a pre-allocated …",16,[[],[["result",4],["bool",15],["decodingerror",4]]]],[11,"buffer_size","","Output buffer size",16,[[],["usize",15]]],[11,"line_length","","Line length of the current frame",16,[[],["usize",15]]],[11,"palette","","Returns the color palette relevant for the current (next) …",16,[[],[["decodingerror",4],["result",4]]]],[11,"global_palette","","The global color palette",16,[[],["option",4]]],[11,"width","","Width of the image",16,[[],["u16",15]]],[11,"height","","Height of the image",16,[[],["u16",15]]],[11,"bg_color","","Index of the background color in the global palette",16,[[],[["option",4],["usize",15]]]],[11,"new_control_ext","","Constructor for control extension data.",11,[[["disposalmethod",4],["option",4],["u16",15],["u8",15],["bool",15]],["extensiondata",4]]],[11,"new","","Creates a new encoder.",17,[[["u16",15]],["result",6]]],[11,"write_global_palette","","Writes the global color palette.",17,[[],["result",6]]],[11,"write_frame","","Writes a frame to the image.",17,[[["frame",3]],["result",6]]],[11,"write_extension","","Writes an extension to the image.",17,[[["extensiondata",4]],["result",6]]],[11,"write_raw_extension","","Writes a raw extension to the image.",17,[[["u8",15]],["result",6]]]],"p":[[8,"SetParameter"],[8,"Parameter"],[4,"Block"],[4,"Extension"],[4,"DisposalMethod"],[3,"Frame"],[4,"Decoded"],[4,"DecodingError"],[4,"ColorOutput"],[3,"MemoryLimit"],[4,"Extensions"],[4,"ExtensionData"],[13,"Control"],[4,"Repeat"],[3,"StreamingDecoder"],[3,"Decoder"],[3,"Reader"],[3,"Encoder"]]},\
"gl":{"doc":"UsageYou can import the pointer style loader and type …","i":[[0,"types","gl","",null,null],[6,"GLenum","gl::types","",null,null],[6,"GLboolean","","",null,null],[6,"GLbitfield","","",null,null],[6,"GLvoid","","",null,null],[6,"GLbyte","","",null,null],[6,"GLshort","","",null,null],[6,"GLint","","",null,null],[6,"GLclampx","","",null,null],[6,"GLubyte","","",null,null],[6,"GLushort","","",null,null],[6,"GLuint","","",null,null],[6,"GLsizei","","",null,null],[6,"GLfloat","","",null,null],[6,"GLclampf","","",null,null],[6,"GLdouble","","",null,null],[6,"GLclampd","","",null,null],[6,"GLeglImageOES","","",null,null],[6,"GLchar","","",null,null],[6,"GLcharARB","","",null,null],[6,"GLhandleARB","","",null,null],[6,"GLhalfARB","","",null,null],[6,"GLhalf","","",null,null],[6,"GLfixed","","",null,null],[6,"GLintptr","","",null,null],[6,"GLsizeiptr","","",null,null],[6,"GLint64","","",null,null],[6,"GLuint64","","",null,null],[6,"GLintptrARB","","",null,null],[6,"GLsizeiptrARB","","",null,null],[6,"GLint64EXT","","",null,null],[6,"GLuint64EXT","","",null,null],[4,"__GLsync","","",null,null],[6,"GLsync","","",null,null],[4,"_cl_context","","",null,null],[4,"_cl_event","","",null,null],[6,"GLDEBUGPROC","","",null,null],[6,"GLDEBUGPROCARB","","",null,null],[6,"GLDEBUGPROCKHR","","",null,null],[6,"GLDEBUGPROCAMD","","",null,null],[6,"GLhalfNV","","",null,null],[6,"GLvdpauSurfaceNV","","",null,null],[0,"ActiveShaderProgram","gl","",null,null],[5,"is_loaded","gl::ActiveShaderProgram","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ActiveTexture","gl","",null,null],[5,"is_loaded","gl::ActiveTexture","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"AttachShader","gl","",null,null],[5,"is_loaded","gl::AttachShader","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"BeginConditionalRender","gl","",null,null],[5,"is_loaded","gl::BeginConditionalRender","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"BeginQuery","gl","",null,null],[5,"is_loaded","gl::BeginQuery","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"BeginQueryIndexed","gl","",null,null],[5,"is_loaded","gl::BeginQueryIndexed","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"BeginTransformFeedback","gl","",null,null],[5,"is_loaded","gl::BeginTransformFeedback","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"BindAttribLocation","gl","",null,null],[5,"is_loaded","gl::BindAttribLocation","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"BindBuffer","gl","",null,null],[5,"is_loaded","gl::BindBuffer","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"BindBufferBase","gl","",null,null],[5,"is_loaded","gl::BindBufferBase","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"BindBufferRange","gl","",null,null],[5,"is_loaded","gl::BindBufferRange","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"BindBuffersBase","gl","",null,null],[5,"is_loaded","gl::BindBuffersBase","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"BindBuffersRange","gl","",null,null],[5,"is_loaded","gl::BindBuffersRange","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"BindFragDataLocation","gl","",null,null],[5,"is_loaded","gl::BindFragDataLocation","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"BindFragDataLocationIndexed","gl","",null,null],[5,"is_loaded","gl::BindFragDataLocationIndexed","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"BindFramebuffer","gl","",null,null],[5,"is_loaded","gl::BindFramebuffer","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"BindImageTexture","gl","",null,null],[5,"is_loaded","gl::BindImageTexture","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"BindImageTextures","gl","",null,null],[5,"is_loaded","gl::BindImageTextures","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"BindProgramPipeline","gl","",null,null],[5,"is_loaded","gl::BindProgramPipeline","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"BindRenderbuffer","gl","",null,null],[5,"is_loaded","gl::BindRenderbuffer","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"BindSampler","gl","",null,null],[5,"is_loaded","gl::BindSampler","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"BindSamplers","gl","",null,null],[5,"is_loaded","gl::BindSamplers","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"BindTexture","gl","",null,null],[5,"is_loaded","gl::BindTexture","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"BindTextureUnit","gl","",null,null],[5,"is_loaded","gl::BindTextureUnit","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"BindTextures","gl","",null,null],[5,"is_loaded","gl::BindTextures","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"BindTransformFeedback","gl","",null,null],[5,"is_loaded","gl::BindTransformFeedback","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"BindVertexArray","gl","",null,null],[5,"is_loaded","gl::BindVertexArray","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"BindVertexBuffer","gl","",null,null],[5,"is_loaded","gl::BindVertexBuffer","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"BindVertexBuffers","gl","",null,null],[5,"is_loaded","gl::BindVertexBuffers","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"BlendColor","gl","",null,null],[5,"is_loaded","gl::BlendColor","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"BlendEquation","gl","",null,null],[5,"is_loaded","gl::BlendEquation","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"BlendEquationSeparate","gl","",null,null],[5,"is_loaded","gl::BlendEquationSeparate","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"BlendEquationSeparatei","gl","",null,null],[5,"is_loaded","gl::BlendEquationSeparatei","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"BlendEquationi","gl","",null,null],[5,"is_loaded","gl::BlendEquationi","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"BlendFunc","gl","",null,null],[5,"is_loaded","gl::BlendFunc","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"BlendFuncSeparate","gl","",null,null],[5,"is_loaded","gl::BlendFuncSeparate","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"BlendFuncSeparatei","gl","",null,null],[5,"is_loaded","gl::BlendFuncSeparatei","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"BlendFunci","gl","",null,null],[5,"is_loaded","gl::BlendFunci","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"BlitFramebuffer","gl","",null,null],[5,"is_loaded","gl::BlitFramebuffer","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"BlitNamedFramebuffer","gl","",null,null],[5,"is_loaded","gl::BlitNamedFramebuffer","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"BufferData","gl","",null,null],[5,"is_loaded","gl::BufferData","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"BufferStorage","gl","",null,null],[5,"is_loaded","gl::BufferStorage","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"BufferSubData","gl","",null,null],[5,"is_loaded","gl::BufferSubData","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"CheckFramebufferStatus","gl","",null,null],[5,"is_loaded","gl::CheckFramebufferStatus","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"CheckNamedFramebufferStatus","gl","",null,null],[5,"is_loaded","gl::CheckNamedFramebufferStatus","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ClampColor","gl","",null,null],[5,"is_loaded","gl::ClampColor","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"Clear","gl","",null,null],[5,"is_loaded","gl::Clear","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ClearBufferData","gl","",null,null],[5,"is_loaded","gl::ClearBufferData","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ClearBufferSubData","gl","",null,null],[5,"is_loaded","gl::ClearBufferSubData","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ClearBufferfi","gl","",null,null],[5,"is_loaded","gl::ClearBufferfi","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ClearBufferfv","gl","",null,null],[5,"is_loaded","gl::ClearBufferfv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ClearBufferiv","gl","",null,null],[5,"is_loaded","gl::ClearBufferiv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ClearBufferuiv","gl","",null,null],[5,"is_loaded","gl::ClearBufferuiv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ClearColor","gl","",null,null],[5,"is_loaded","gl::ClearColor","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ClearDepth","gl","",null,null],[5,"is_loaded","gl::ClearDepth","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ClearDepthf","gl","",null,null],[5,"is_loaded","gl::ClearDepthf","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ClearNamedBufferData","gl","",null,null],[5,"is_loaded","gl::ClearNamedBufferData","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ClearNamedBufferSubData","gl","",null,null],[5,"is_loaded","gl::ClearNamedBufferSubData","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ClearNamedFramebufferfi","gl","",null,null],[5,"is_loaded","gl::ClearNamedFramebufferfi","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ClearNamedFramebufferfv","gl","",null,null],[5,"is_loaded","gl::ClearNamedFramebufferfv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ClearNamedFramebufferiv","gl","",null,null],[5,"is_loaded","gl::ClearNamedFramebufferiv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ClearNamedFramebufferuiv","gl","",null,null],[5,"is_loaded","gl::ClearNamedFramebufferuiv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ClearStencil","gl","",null,null],[5,"is_loaded","gl::ClearStencil","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ClearTexImage","gl","",null,null],[5,"is_loaded","gl::ClearTexImage","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ClearTexSubImage","gl","",null,null],[5,"is_loaded","gl::ClearTexSubImage","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ClientWaitSync","gl","",null,null],[5,"is_loaded","gl::ClientWaitSync","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ClipControl","gl","",null,null],[5,"is_loaded","gl::ClipControl","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ColorMask","gl","",null,null],[5,"is_loaded","gl::ColorMask","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ColorMaski","gl","",null,null],[5,"is_loaded","gl::ColorMaski","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ColorP3ui","gl","",null,null],[5,"is_loaded","gl::ColorP3ui","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ColorP3uiv","gl","",null,null],[5,"is_loaded","gl::ColorP3uiv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ColorP4ui","gl","",null,null],[5,"is_loaded","gl::ColorP4ui","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ColorP4uiv","gl","",null,null],[5,"is_loaded","gl::ColorP4uiv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"CompileShader","gl","",null,null],[5,"is_loaded","gl::CompileShader","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"CompressedTexImage1D","gl","",null,null],[5,"is_loaded","gl::CompressedTexImage1D","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"CompressedTexImage2D","gl","",null,null],[5,"is_loaded","gl::CompressedTexImage2D","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"CompressedTexImage3D","gl","",null,null],[5,"is_loaded","gl::CompressedTexImage3D","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"CompressedTexSubImage1D","gl","",null,null],[5,"is_loaded","gl::CompressedTexSubImage1D","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"CompressedTexSubImage2D","gl","",null,null],[5,"is_loaded","gl::CompressedTexSubImage2D","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"CompressedTexSubImage3D","gl","",null,null],[5,"is_loaded","gl::CompressedTexSubImage3D","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"CompressedTextureSubImage1D","gl","",null,null],[5,"is_loaded","gl::CompressedTextureSubImage1D","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"CompressedTextureSubImage2D","gl","",null,null],[5,"is_loaded","gl::CompressedTextureSubImage2D","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"CompressedTextureSubImage3D","gl","",null,null],[5,"is_loaded","gl::CompressedTextureSubImage3D","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"CopyBufferSubData","gl","",null,null],[5,"is_loaded","gl::CopyBufferSubData","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"CopyImageSubData","gl","",null,null],[5,"is_loaded","gl::CopyImageSubData","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"CopyNamedBufferSubData","gl","",null,null],[5,"is_loaded","gl::CopyNamedBufferSubData","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"CopyTexImage1D","gl","",null,null],[5,"is_loaded","gl::CopyTexImage1D","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"CopyTexImage2D","gl","",null,null],[5,"is_loaded","gl::CopyTexImage2D","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"CopyTexSubImage1D","gl","",null,null],[5,"is_loaded","gl::CopyTexSubImage1D","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"CopyTexSubImage2D","gl","",null,null],[5,"is_loaded","gl::CopyTexSubImage2D","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"CopyTexSubImage3D","gl","",null,null],[5,"is_loaded","gl::CopyTexSubImage3D","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"CopyTextureSubImage1D","gl","",null,null],[5,"is_loaded","gl::CopyTextureSubImage1D","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"CopyTextureSubImage2D","gl","",null,null],[5,"is_loaded","gl::CopyTextureSubImage2D","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"CopyTextureSubImage3D","gl","",null,null],[5,"is_loaded","gl::CopyTextureSubImage3D","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"CreateBuffers","gl","",null,null],[5,"is_loaded","gl::CreateBuffers","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"CreateFramebuffers","gl","",null,null],[5,"is_loaded","gl::CreateFramebuffers","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"CreateProgram","gl","",null,null],[5,"is_loaded","gl::CreateProgram","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"CreateProgramPipelines","gl","",null,null],[5,"is_loaded","gl::CreateProgramPipelines","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"CreateQueries","gl","",null,null],[5,"is_loaded","gl::CreateQueries","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"CreateRenderbuffers","gl","",null,null],[5,"is_loaded","gl::CreateRenderbuffers","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"CreateSamplers","gl","",null,null],[5,"is_loaded","gl::CreateSamplers","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"CreateShader","gl","",null,null],[5,"is_loaded","gl::CreateShader","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"CreateShaderProgramv","gl","",null,null],[5,"is_loaded","gl::CreateShaderProgramv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"CreateTextures","gl","",null,null],[5,"is_loaded","gl::CreateTextures","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"CreateTransformFeedbacks","gl","",null,null],[5,"is_loaded","gl::CreateTransformFeedbacks","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"CreateVertexArrays","gl","",null,null],[5,"is_loaded","gl::CreateVertexArrays","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"CullFace","gl","",null,null],[5,"is_loaded","gl::CullFace","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"DebugMessageCallback","gl","",null,null],[5,"is_loaded","gl::DebugMessageCallback","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"DebugMessageControl","gl","",null,null],[5,"is_loaded","gl::DebugMessageControl","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"DebugMessageInsert","gl","",null,null],[5,"is_loaded","gl::DebugMessageInsert","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"DeleteBuffers","gl","",null,null],[5,"is_loaded","gl::DeleteBuffers","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"DeleteFramebuffers","gl","",null,null],[5,"is_loaded","gl::DeleteFramebuffers","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"DeleteProgram","gl","",null,null],[5,"is_loaded","gl::DeleteProgram","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"DeleteProgramPipelines","gl","",null,null],[5,"is_loaded","gl::DeleteProgramPipelines","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"DeleteQueries","gl","",null,null],[5,"is_loaded","gl::DeleteQueries","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"DeleteRenderbuffers","gl","",null,null],[5,"is_loaded","gl::DeleteRenderbuffers","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"DeleteSamplers","gl","",null,null],[5,"is_loaded","gl::DeleteSamplers","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"DeleteShader","gl","",null,null],[5,"is_loaded","gl::DeleteShader","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"DeleteSync","gl","",null,null],[5,"is_loaded","gl::DeleteSync","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"DeleteTextures","gl","",null,null],[5,"is_loaded","gl::DeleteTextures","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"DeleteTransformFeedbacks","gl","",null,null],[5,"is_loaded","gl::DeleteTransformFeedbacks","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"DeleteVertexArrays","gl","",null,null],[5,"is_loaded","gl::DeleteVertexArrays","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"DepthFunc","gl","",null,null],[5,"is_loaded","gl::DepthFunc","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"DepthMask","gl","",null,null],[5,"is_loaded","gl::DepthMask","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"DepthRange","gl","",null,null],[5,"is_loaded","gl::DepthRange","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"DepthRangeArrayv","gl","",null,null],[5,"is_loaded","gl::DepthRangeArrayv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"DepthRangeIndexed","gl","",null,null],[5,"is_loaded","gl::DepthRangeIndexed","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"DepthRangef","gl","",null,null],[5,"is_loaded","gl::DepthRangef","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"DetachShader","gl","",null,null],[5,"is_loaded","gl::DetachShader","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"Disable","gl","",null,null],[5,"is_loaded","gl::Disable","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"DisableVertexArrayAttrib","gl","",null,null],[5,"is_loaded","gl::DisableVertexArrayAttrib","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"DisableVertexAttribArray","gl","",null,null],[5,"is_loaded","gl::DisableVertexAttribArray","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"Disablei","gl","",null,null],[5,"is_loaded","gl::Disablei","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"DispatchCompute","gl","",null,null],[5,"is_loaded","gl::DispatchCompute","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"DispatchComputeIndirect","gl","",null,null],[5,"is_loaded","gl::DispatchComputeIndirect","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"DrawArrays","gl","",null,null],[5,"is_loaded","gl::DrawArrays","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"DrawArraysIndirect","gl","",null,null],[5,"is_loaded","gl::DrawArraysIndirect","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"DrawArraysInstanced","gl","",null,null],[5,"is_loaded","gl::DrawArraysInstanced","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"DrawArraysInstancedBaseInstance","gl","",null,null],[5,"is_loaded","gl::DrawArraysInstancedBaseInstance","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"DrawBuffer","gl","",null,null],[5,"is_loaded","gl::DrawBuffer","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"DrawBuffers","gl","",null,null],[5,"is_loaded","gl::DrawBuffers","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"DrawElements","gl","",null,null],[5,"is_loaded","gl::DrawElements","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"DrawElementsBaseVertex","gl","",null,null],[5,"is_loaded","gl::DrawElementsBaseVertex","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"DrawElementsIndirect","gl","",null,null],[5,"is_loaded","gl::DrawElementsIndirect","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"DrawElementsInstanced","gl","",null,null],[5,"is_loaded","gl::DrawElementsInstanced","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"DrawElementsInstancedBaseInstance","gl","",null,null],[5,"is_loaded","gl::DrawElementsInstancedBaseInstance","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"DrawElementsInstancedBaseVertex","gl","",null,null],[5,"is_loaded","gl::DrawElementsInstancedBaseVertex","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"DrawElementsInstancedBaseVertexBaseInstance","gl","",null,null],[5,"is_loaded","gl::DrawElementsInstancedBaseVertexBaseInstance","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"DrawRangeElements","gl","",null,null],[5,"is_loaded","gl::DrawRangeElements","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"DrawRangeElementsBaseVertex","gl","",null,null],[5,"is_loaded","gl::DrawRangeElementsBaseVertex","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"DrawTransformFeedback","gl","",null,null],[5,"is_loaded","gl::DrawTransformFeedback","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"DrawTransformFeedbackInstanced","gl","",null,null],[5,"is_loaded","gl::DrawTransformFeedbackInstanced","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"DrawTransformFeedbackStream","gl","",null,null],[5,"is_loaded","gl::DrawTransformFeedbackStream","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"DrawTransformFeedbackStreamInstanced","gl","",null,null],[5,"is_loaded","gl::DrawTransformFeedbackStreamInstanced","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"Enable","gl","",null,null],[5,"is_loaded","gl::Enable","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"EnableVertexArrayAttrib","gl","",null,null],[5,"is_loaded","gl::EnableVertexArrayAttrib","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"EnableVertexAttribArray","gl","",null,null],[5,"is_loaded","gl::EnableVertexAttribArray","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"Enablei","gl","",null,null],[5,"is_loaded","gl::Enablei","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"EndConditionalRender","gl","",null,null],[5,"is_loaded","gl::EndConditionalRender","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"EndQuery","gl","",null,null],[5,"is_loaded","gl::EndQuery","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"EndQueryIndexed","gl","",null,null],[5,"is_loaded","gl::EndQueryIndexed","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"EndTransformFeedback","gl","",null,null],[5,"is_loaded","gl::EndTransformFeedback","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"FenceSync","gl","",null,null],[5,"is_loaded","gl::FenceSync","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"Finish","gl","",null,null],[5,"is_loaded","gl::Finish","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"Flush","gl","",null,null],[5,"is_loaded","gl::Flush","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"FlushMappedBufferRange","gl","",null,null],[5,"is_loaded","gl::FlushMappedBufferRange","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"FlushMappedNamedBufferRange","gl","",null,null],[5,"is_loaded","gl::FlushMappedNamedBufferRange","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"FramebufferParameteri","gl","",null,null],[5,"is_loaded","gl::FramebufferParameteri","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"FramebufferRenderbuffer","gl","",null,null],[5,"is_loaded","gl::FramebufferRenderbuffer","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"FramebufferTexture","gl","",null,null],[5,"is_loaded","gl::FramebufferTexture","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"FramebufferTexture1D","gl","",null,null],[5,"is_loaded","gl::FramebufferTexture1D","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"FramebufferTexture2D","gl","",null,null],[5,"is_loaded","gl::FramebufferTexture2D","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"FramebufferTexture3D","gl","",null,null],[5,"is_loaded","gl::FramebufferTexture3D","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"FramebufferTextureLayer","gl","",null,null],[5,"is_loaded","gl::FramebufferTextureLayer","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"FrontFace","gl","",null,null],[5,"is_loaded","gl::FrontFace","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GenBuffers","gl","",null,null],[5,"is_loaded","gl::GenBuffers","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GenFramebuffers","gl","",null,null],[5,"is_loaded","gl::GenFramebuffers","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GenProgramPipelines","gl","",null,null],[5,"is_loaded","gl::GenProgramPipelines","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GenQueries","gl","",null,null],[5,"is_loaded","gl::GenQueries","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GenRenderbuffers","gl","",null,null],[5,"is_loaded","gl::GenRenderbuffers","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GenSamplers","gl","",null,null],[5,"is_loaded","gl::GenSamplers","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GenTextures","gl","",null,null],[5,"is_loaded","gl::GenTextures","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GenTransformFeedbacks","gl","",null,null],[5,"is_loaded","gl::GenTransformFeedbacks","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GenVertexArrays","gl","",null,null],[5,"is_loaded","gl::GenVertexArrays","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GenerateMipmap","gl","",null,null],[5,"is_loaded","gl::GenerateMipmap","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GenerateTextureMipmap","gl","",null,null],[5,"is_loaded","gl::GenerateTextureMipmap","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetActiveAtomicCounterBufferiv","gl","",null,null],[5,"is_loaded","gl::GetActiveAtomicCounterBufferiv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetActiveAttrib","gl","",null,null],[5,"is_loaded","gl::GetActiveAttrib","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetActiveSubroutineName","gl","",null,null],[5,"is_loaded","gl::GetActiveSubroutineName","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetActiveSubroutineUniformName","gl","",null,null],[5,"is_loaded","gl::GetActiveSubroutineUniformName","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetActiveSubroutineUniformiv","gl","",null,null],[5,"is_loaded","gl::GetActiveSubroutineUniformiv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetActiveUniform","gl","",null,null],[5,"is_loaded","gl::GetActiveUniform","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetActiveUniformBlockName","gl","",null,null],[5,"is_loaded","gl::GetActiveUniformBlockName","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetActiveUniformBlockiv","gl","",null,null],[5,"is_loaded","gl::GetActiveUniformBlockiv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetActiveUniformName","gl","",null,null],[5,"is_loaded","gl::GetActiveUniformName","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetActiveUniformsiv","gl","",null,null],[5,"is_loaded","gl::GetActiveUniformsiv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetAttachedShaders","gl","",null,null],[5,"is_loaded","gl::GetAttachedShaders","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetAttribLocation","gl","",null,null],[5,"is_loaded","gl::GetAttribLocation","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetBooleani_v","gl","",null,null],[5,"is_loaded","gl::GetBooleani_v","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetBooleanv","gl","",null,null],[5,"is_loaded","gl::GetBooleanv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetBufferParameteri64v","gl","",null,null],[5,"is_loaded","gl::GetBufferParameteri64v","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetBufferParameteriv","gl","",null,null],[5,"is_loaded","gl::GetBufferParameteriv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetBufferPointerv","gl","",null,null],[5,"is_loaded","gl::GetBufferPointerv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetBufferSubData","gl","",null,null],[5,"is_loaded","gl::GetBufferSubData","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetCompressedTexImage","gl","",null,null],[5,"is_loaded","gl::GetCompressedTexImage","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetCompressedTextureImage","gl","",null,null],[5,"is_loaded","gl::GetCompressedTextureImage","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetCompressedTextureSubImage","gl","",null,null],[5,"is_loaded","gl::GetCompressedTextureSubImage","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetDebugMessageLog","gl","",null,null],[5,"is_loaded","gl::GetDebugMessageLog","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetDoublei_v","gl","",null,null],[5,"is_loaded","gl::GetDoublei_v","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetDoublev","gl","",null,null],[5,"is_loaded","gl::GetDoublev","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetError","gl","",null,null],[5,"is_loaded","gl::GetError","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetFloati_v","gl","",null,null],[5,"is_loaded","gl::GetFloati_v","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetFloatv","gl","",null,null],[5,"is_loaded","gl::GetFloatv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetFragDataIndex","gl","",null,null],[5,"is_loaded","gl::GetFragDataIndex","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetFragDataLocation","gl","",null,null],[5,"is_loaded","gl::GetFragDataLocation","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetFramebufferAttachmentParameteriv","gl","",null,null],[5,"is_loaded","gl::GetFramebufferAttachmentParameteriv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetFramebufferParameteriv","gl","",null,null],[5,"is_loaded","gl::GetFramebufferParameteriv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetGraphicsResetStatus","gl","",null,null],[5,"is_loaded","gl::GetGraphicsResetStatus","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetInteger64i_v","gl","",null,null],[5,"is_loaded","gl::GetInteger64i_v","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetInteger64v","gl","",null,null],[5,"is_loaded","gl::GetInteger64v","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetIntegeri_v","gl","",null,null],[5,"is_loaded","gl::GetIntegeri_v","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetIntegerv","gl","",null,null],[5,"is_loaded","gl::GetIntegerv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetInternalformati64v","gl","",null,null],[5,"is_loaded","gl::GetInternalformati64v","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetInternalformativ","gl","",null,null],[5,"is_loaded","gl::GetInternalformativ","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetMultisamplefv","gl","",null,null],[5,"is_loaded","gl::GetMultisamplefv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetNamedBufferParameteri64v","gl","",null,null],[5,"is_loaded","gl::GetNamedBufferParameteri64v","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetNamedBufferParameteriv","gl","",null,null],[5,"is_loaded","gl::GetNamedBufferParameteriv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetNamedBufferPointerv","gl","",null,null],[5,"is_loaded","gl::GetNamedBufferPointerv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetNamedBufferSubData","gl","",null,null],[5,"is_loaded","gl::GetNamedBufferSubData","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetNamedFramebufferAttachmentParameteriv","gl","",null,null],[5,"is_loaded","gl::GetNamedFramebufferAttachmentParameteriv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetNamedFramebufferParameteriv","gl","",null,null],[5,"is_loaded","gl::GetNamedFramebufferParameteriv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetNamedRenderbufferParameteriv","gl","",null,null],[5,"is_loaded","gl::GetNamedRenderbufferParameteriv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetObjectLabel","gl","",null,null],[5,"is_loaded","gl::GetObjectLabel","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetObjectPtrLabel","gl","",null,null],[5,"is_loaded","gl::GetObjectPtrLabel","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetPointerv","gl","",null,null],[5,"is_loaded","gl::GetPointerv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetProgramBinary","gl","",null,null],[5,"is_loaded","gl::GetProgramBinary","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetProgramInfoLog","gl","",null,null],[5,"is_loaded","gl::GetProgramInfoLog","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetProgramInterfaceiv","gl","",null,null],[5,"is_loaded","gl::GetProgramInterfaceiv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetProgramPipelineInfoLog","gl","",null,null],[5,"is_loaded","gl::GetProgramPipelineInfoLog","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetProgramPipelineiv","gl","",null,null],[5,"is_loaded","gl::GetProgramPipelineiv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetProgramResourceIndex","gl","",null,null],[5,"is_loaded","gl::GetProgramResourceIndex","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetProgramResourceLocation","gl","",null,null],[5,"is_loaded","gl::GetProgramResourceLocation","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetProgramResourceLocationIndex","gl","",null,null],[5,"is_loaded","gl::GetProgramResourceLocationIndex","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetProgramResourceName","gl","",null,null],[5,"is_loaded","gl::GetProgramResourceName","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetProgramResourceiv","gl","",null,null],[5,"is_loaded","gl::GetProgramResourceiv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetProgramStageiv","gl","",null,null],[5,"is_loaded","gl::GetProgramStageiv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetProgramiv","gl","",null,null],[5,"is_loaded","gl::GetProgramiv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetQueryBufferObjecti64v","gl","",null,null],[5,"is_loaded","gl::GetQueryBufferObjecti64v","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetQueryBufferObjectiv","gl","",null,null],[5,"is_loaded","gl::GetQueryBufferObjectiv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetQueryBufferObjectui64v","gl","",null,null],[5,"is_loaded","gl::GetQueryBufferObjectui64v","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetQueryBufferObjectuiv","gl","",null,null],[5,"is_loaded","gl::GetQueryBufferObjectuiv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetQueryIndexediv","gl","",null,null],[5,"is_loaded","gl::GetQueryIndexediv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetQueryObjecti64v","gl","",null,null],[5,"is_loaded","gl::GetQueryObjecti64v","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetQueryObjectiv","gl","",null,null],[5,"is_loaded","gl::GetQueryObjectiv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetQueryObjectui64v","gl","",null,null],[5,"is_loaded","gl::GetQueryObjectui64v","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetQueryObjectuiv","gl","",null,null],[5,"is_loaded","gl::GetQueryObjectuiv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetQueryiv","gl","",null,null],[5,"is_loaded","gl::GetQueryiv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetRenderbufferParameteriv","gl","",null,null],[5,"is_loaded","gl::GetRenderbufferParameteriv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetSamplerParameterIiv","gl","",null,null],[5,"is_loaded","gl::GetSamplerParameterIiv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetSamplerParameterIuiv","gl","",null,null],[5,"is_loaded","gl::GetSamplerParameterIuiv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetSamplerParameterfv","gl","",null,null],[5,"is_loaded","gl::GetSamplerParameterfv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetSamplerParameteriv","gl","",null,null],[5,"is_loaded","gl::GetSamplerParameteriv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetShaderInfoLog","gl","",null,null],[5,"is_loaded","gl::GetShaderInfoLog","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetShaderPrecisionFormat","gl","",null,null],[5,"is_loaded","gl::GetShaderPrecisionFormat","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetShaderSource","gl","",null,null],[5,"is_loaded","gl::GetShaderSource","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetShaderiv","gl","",null,null],[5,"is_loaded","gl::GetShaderiv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetString","gl","",null,null],[5,"is_loaded","gl::GetString","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetStringi","gl","",null,null],[5,"is_loaded","gl::GetStringi","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetSubroutineIndex","gl","",null,null],[5,"is_loaded","gl::GetSubroutineIndex","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetSubroutineUniformLocation","gl","",null,null],[5,"is_loaded","gl::GetSubroutineUniformLocation","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetSynciv","gl","",null,null],[5,"is_loaded","gl::GetSynciv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetTexImage","gl","",null,null],[5,"is_loaded","gl::GetTexImage","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetTexLevelParameterfv","gl","",null,null],[5,"is_loaded","gl::GetTexLevelParameterfv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetTexLevelParameteriv","gl","",null,null],[5,"is_loaded","gl::GetTexLevelParameteriv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetTexParameterIiv","gl","",null,null],[5,"is_loaded","gl::GetTexParameterIiv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetTexParameterIuiv","gl","",null,null],[5,"is_loaded","gl::GetTexParameterIuiv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetTexParameterfv","gl","",null,null],[5,"is_loaded","gl::GetTexParameterfv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetTexParameteriv","gl","",null,null],[5,"is_loaded","gl::GetTexParameteriv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetTextureImage","gl","",null,null],[5,"is_loaded","gl::GetTextureImage","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetTextureLevelParameterfv","gl","",null,null],[5,"is_loaded","gl::GetTextureLevelParameterfv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetTextureLevelParameteriv","gl","",null,null],[5,"is_loaded","gl::GetTextureLevelParameteriv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetTextureParameterIiv","gl","",null,null],[5,"is_loaded","gl::GetTextureParameterIiv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetTextureParameterIuiv","gl","",null,null],[5,"is_loaded","gl::GetTextureParameterIuiv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetTextureParameterfv","gl","",null,null],[5,"is_loaded","gl::GetTextureParameterfv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetTextureParameteriv","gl","",null,null],[5,"is_loaded","gl::GetTextureParameteriv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetTextureSubImage","gl","",null,null],[5,"is_loaded","gl::GetTextureSubImage","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetTransformFeedbackVarying","gl","",null,null],[5,"is_loaded","gl::GetTransformFeedbackVarying","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetTransformFeedbacki64_v","gl","",null,null],[5,"is_loaded","gl::GetTransformFeedbacki64_v","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetTransformFeedbacki_v","gl","",null,null],[5,"is_loaded","gl::GetTransformFeedbacki_v","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetTransformFeedbackiv","gl","",null,null],[5,"is_loaded","gl::GetTransformFeedbackiv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetUniformBlockIndex","gl","",null,null],[5,"is_loaded","gl::GetUniformBlockIndex","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetUniformIndices","gl","",null,null],[5,"is_loaded","gl::GetUniformIndices","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetUniformLocation","gl","",null,null],[5,"is_loaded","gl::GetUniformLocation","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetUniformSubroutineuiv","gl","",null,null],[5,"is_loaded","gl::GetUniformSubroutineuiv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetUniformdv","gl","",null,null],[5,"is_loaded","gl::GetUniformdv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetUniformfv","gl","",null,null],[5,"is_loaded","gl::GetUniformfv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetUniformiv","gl","",null,null],[5,"is_loaded","gl::GetUniformiv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetUniformuiv","gl","",null,null],[5,"is_loaded","gl::GetUniformuiv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetVertexArrayIndexed64iv","gl","",null,null],[5,"is_loaded","gl::GetVertexArrayIndexed64iv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetVertexArrayIndexediv","gl","",null,null],[5,"is_loaded","gl::GetVertexArrayIndexediv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetVertexArrayiv","gl","",null,null],[5,"is_loaded","gl::GetVertexArrayiv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetVertexAttribIiv","gl","",null,null],[5,"is_loaded","gl::GetVertexAttribIiv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetVertexAttribIuiv","gl","",null,null],[5,"is_loaded","gl::GetVertexAttribIuiv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetVertexAttribLdv","gl","",null,null],[5,"is_loaded","gl::GetVertexAttribLdv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetVertexAttribPointerv","gl","",null,null],[5,"is_loaded","gl::GetVertexAttribPointerv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetVertexAttribdv","gl","",null,null],[5,"is_loaded","gl::GetVertexAttribdv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetVertexAttribfv","gl","",null,null],[5,"is_loaded","gl::GetVertexAttribfv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetVertexAttribiv","gl","",null,null],[5,"is_loaded","gl::GetVertexAttribiv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetnColorTable","gl","",null,null],[5,"is_loaded","gl::GetnColorTable","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetnCompressedTexImage","gl","",null,null],[5,"is_loaded","gl::GetnCompressedTexImage","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetnConvolutionFilter","gl","",null,null],[5,"is_loaded","gl::GetnConvolutionFilter","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetnHistogram","gl","",null,null],[5,"is_loaded","gl::GetnHistogram","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetnMapdv","gl","",null,null],[5,"is_loaded","gl::GetnMapdv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetnMapfv","gl","",null,null],[5,"is_loaded","gl::GetnMapfv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetnMapiv","gl","",null,null],[5,"is_loaded","gl::GetnMapiv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetnMinmax","gl","",null,null],[5,"is_loaded","gl::GetnMinmax","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetnPixelMapfv","gl","",null,null],[5,"is_loaded","gl::GetnPixelMapfv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetnPixelMapuiv","gl","",null,null],[5,"is_loaded","gl::GetnPixelMapuiv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetnPixelMapusv","gl","",null,null],[5,"is_loaded","gl::GetnPixelMapusv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetnPolygonStipple","gl","",null,null],[5,"is_loaded","gl::GetnPolygonStipple","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetnSeparableFilter","gl","",null,null],[5,"is_loaded","gl::GetnSeparableFilter","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetnTexImage","gl","",null,null],[5,"is_loaded","gl::GetnTexImage","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetnUniformdv","gl","",null,null],[5,"is_loaded","gl::GetnUniformdv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetnUniformfv","gl","",null,null],[5,"is_loaded","gl::GetnUniformfv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetnUniformiv","gl","",null,null],[5,"is_loaded","gl::GetnUniformiv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetnUniformuiv","gl","",null,null],[5,"is_loaded","gl::GetnUniformuiv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"Hint","gl","",null,null],[5,"is_loaded","gl::Hint","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"InvalidateBufferData","gl","",null,null],[5,"is_loaded","gl::InvalidateBufferData","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"InvalidateBufferSubData","gl","",null,null],[5,"is_loaded","gl::InvalidateBufferSubData","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"InvalidateFramebuffer","gl","",null,null],[5,"is_loaded","gl::InvalidateFramebuffer","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"InvalidateNamedFramebufferData","gl","",null,null],[5,"is_loaded","gl::InvalidateNamedFramebufferData","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"InvalidateNamedFramebufferSubData","gl","",null,null],[5,"is_loaded","gl::InvalidateNamedFramebufferSubData","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"InvalidateSubFramebuffer","gl","",null,null],[5,"is_loaded","gl::InvalidateSubFramebuffer","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"InvalidateTexImage","gl","",null,null],[5,"is_loaded","gl::InvalidateTexImage","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"InvalidateTexSubImage","gl","",null,null],[5,"is_loaded","gl::InvalidateTexSubImage","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"IsBuffer","gl","",null,null],[5,"is_loaded","gl::IsBuffer","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"IsEnabled","gl","",null,null],[5,"is_loaded","gl::IsEnabled","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"IsEnabledi","gl","",null,null],[5,"is_loaded","gl::IsEnabledi","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"IsFramebuffer","gl","",null,null],[5,"is_loaded","gl::IsFramebuffer","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"IsProgram","gl","",null,null],[5,"is_loaded","gl::IsProgram","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"IsProgramPipeline","gl","",null,null],[5,"is_loaded","gl::IsProgramPipeline","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"IsQuery","gl","",null,null],[5,"is_loaded","gl::IsQuery","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"IsRenderbuffer","gl","",null,null],[5,"is_loaded","gl::IsRenderbuffer","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"IsSampler","gl","",null,null],[5,"is_loaded","gl::IsSampler","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"IsShader","gl","",null,null],[5,"is_loaded","gl::IsShader","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"IsSync","gl","",null,null],[5,"is_loaded","gl::IsSync","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"IsTexture","gl","",null,null],[5,"is_loaded","gl::IsTexture","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"IsTransformFeedback","gl","",null,null],[5,"is_loaded","gl::IsTransformFeedback","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"IsVertexArray","gl","",null,null],[5,"is_loaded","gl::IsVertexArray","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"LineWidth","gl","",null,null],[5,"is_loaded","gl::LineWidth","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"LinkProgram","gl","",null,null],[5,"is_loaded","gl::LinkProgram","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"LogicOp","gl","",null,null],[5,"is_loaded","gl::LogicOp","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"MapBuffer","gl","",null,null],[5,"is_loaded","gl::MapBuffer","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"MapBufferRange","gl","",null,null],[5,"is_loaded","gl::MapBufferRange","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"MapNamedBuffer","gl","",null,null],[5,"is_loaded","gl::MapNamedBuffer","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"MapNamedBufferRange","gl","",null,null],[5,"is_loaded","gl::MapNamedBufferRange","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"MemoryBarrier","gl","",null,null],[5,"is_loaded","gl::MemoryBarrier","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"MemoryBarrierByRegion","gl","",null,null],[5,"is_loaded","gl::MemoryBarrierByRegion","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"MinSampleShading","gl","",null,null],[5,"is_loaded","gl::MinSampleShading","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"MultiDrawArrays","gl","",null,null],[5,"is_loaded","gl::MultiDrawArrays","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"MultiDrawArraysIndirect","gl","",null,null],[5,"is_loaded","gl::MultiDrawArraysIndirect","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"MultiDrawElements","gl","",null,null],[5,"is_loaded","gl::MultiDrawElements","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"MultiDrawElementsBaseVertex","gl","",null,null],[5,"is_loaded","gl::MultiDrawElementsBaseVertex","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"MultiDrawElementsIndirect","gl","",null,null],[5,"is_loaded","gl::MultiDrawElementsIndirect","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"MultiTexCoordP1ui","gl","",null,null],[5,"is_loaded","gl::MultiTexCoordP1ui","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"MultiTexCoordP1uiv","gl","",null,null],[5,"is_loaded","gl::MultiTexCoordP1uiv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"MultiTexCoordP2ui","gl","",null,null],[5,"is_loaded","gl::MultiTexCoordP2ui","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"MultiTexCoordP2uiv","gl","",null,null],[5,"is_loaded","gl::MultiTexCoordP2uiv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"MultiTexCoordP3ui","gl","",null,null],[5,"is_loaded","gl::MultiTexCoordP3ui","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"MultiTexCoordP3uiv","gl","",null,null],[5,"is_loaded","gl::MultiTexCoordP3uiv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"MultiTexCoordP4ui","gl","",null,null],[5,"is_loaded","gl::MultiTexCoordP4ui","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"MultiTexCoordP4uiv","gl","",null,null],[5,"is_loaded","gl::MultiTexCoordP4uiv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"NamedBufferData","gl","",null,null],[5,"is_loaded","gl::NamedBufferData","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"NamedBufferStorage","gl","",null,null],[5,"is_loaded","gl::NamedBufferStorage","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"NamedBufferSubData","gl","",null,null],[5,"is_loaded","gl::NamedBufferSubData","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"NamedFramebufferDrawBuffer","gl","",null,null],[5,"is_loaded","gl::NamedFramebufferDrawBuffer","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"NamedFramebufferDrawBuffers","gl","",null,null],[5,"is_loaded","gl::NamedFramebufferDrawBuffers","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"NamedFramebufferParameteri","gl","",null,null],[5,"is_loaded","gl::NamedFramebufferParameteri","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"NamedFramebufferReadBuffer","gl","",null,null],[5,"is_loaded","gl::NamedFramebufferReadBuffer","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"NamedFramebufferRenderbuffer","gl","",null,null],[5,"is_loaded","gl::NamedFramebufferRenderbuffer","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"NamedFramebufferTexture","gl","",null,null],[5,"is_loaded","gl::NamedFramebufferTexture","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"NamedFramebufferTextureLayer","gl","",null,null],[5,"is_loaded","gl::NamedFramebufferTextureLayer","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"NamedRenderbufferStorage","gl","",null,null],[5,"is_loaded","gl::NamedRenderbufferStorage","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"NamedRenderbufferStorageMultisample","gl","",null,null],[5,"is_loaded","gl::NamedRenderbufferStorageMultisample","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"NormalP3ui","gl","",null,null],[5,"is_loaded","gl::NormalP3ui","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"NormalP3uiv","gl","",null,null],[5,"is_loaded","gl::NormalP3uiv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ObjectLabel","gl","",null,null],[5,"is_loaded","gl::ObjectLabel","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ObjectPtrLabel","gl","",null,null],[5,"is_loaded","gl::ObjectPtrLabel","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"PatchParameterfv","gl","",null,null],[5,"is_loaded","gl::PatchParameterfv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"PatchParameteri","gl","",null,null],[5,"is_loaded","gl::PatchParameteri","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"PauseTransformFeedback","gl","",null,null],[5,"is_loaded","gl::PauseTransformFeedback","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"PixelStoref","gl","",null,null],[5,"is_loaded","gl::PixelStoref","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"PixelStorei","gl","",null,null],[5,"is_loaded","gl::PixelStorei","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"PointParameterf","gl","",null,null],[5,"is_loaded","gl::PointParameterf","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"PointParameterfv","gl","",null,null],[5,"is_loaded","gl::PointParameterfv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"PointParameteri","gl","",null,null],[5,"is_loaded","gl::PointParameteri","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"PointParameteriv","gl","",null,null],[5,"is_loaded","gl::PointParameteriv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"PointSize","gl","",null,null],[5,"is_loaded","gl::PointSize","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"PolygonMode","gl","",null,null],[5,"is_loaded","gl::PolygonMode","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"PolygonOffset","gl","",null,null],[5,"is_loaded","gl::PolygonOffset","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"PopDebugGroup","gl","",null,null],[5,"is_loaded","gl::PopDebugGroup","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"PrimitiveRestartIndex","gl","",null,null],[5,"is_loaded","gl::PrimitiveRestartIndex","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ProgramBinary","gl","",null,null],[5,"is_loaded","gl::ProgramBinary","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ProgramParameteri","gl","",null,null],[5,"is_loaded","gl::ProgramParameteri","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ProgramUniform1d","gl","",null,null],[5,"is_loaded","gl::ProgramUniform1d","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ProgramUniform1dv","gl","",null,null],[5,"is_loaded","gl::ProgramUniform1dv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ProgramUniform1f","gl","",null,null],[5,"is_loaded","gl::ProgramUniform1f","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ProgramUniform1fv","gl","",null,null],[5,"is_loaded","gl::ProgramUniform1fv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ProgramUniform1i","gl","",null,null],[5,"is_loaded","gl::ProgramUniform1i","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ProgramUniform1iv","gl","",null,null],[5,"is_loaded","gl::ProgramUniform1iv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ProgramUniform1ui","gl","",null,null],[5,"is_loaded","gl::ProgramUniform1ui","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ProgramUniform1uiv","gl","",null,null],[5,"is_loaded","gl::ProgramUniform1uiv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ProgramUniform2d","gl","",null,null],[5,"is_loaded","gl::ProgramUniform2d","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ProgramUniform2dv","gl","",null,null],[5,"is_loaded","gl::ProgramUniform2dv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ProgramUniform2f","gl","",null,null],[5,"is_loaded","gl::ProgramUniform2f","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ProgramUniform2fv","gl","",null,null],[5,"is_loaded","gl::ProgramUniform2fv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ProgramUniform2i","gl","",null,null],[5,"is_loaded","gl::ProgramUniform2i","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ProgramUniform2iv","gl","",null,null],[5,"is_loaded","gl::ProgramUniform2iv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ProgramUniform2ui","gl","",null,null],[5,"is_loaded","gl::ProgramUniform2ui","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ProgramUniform2uiv","gl","",null,null],[5,"is_loaded","gl::ProgramUniform2uiv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ProgramUniform3d","gl","",null,null],[5,"is_loaded","gl::ProgramUniform3d","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ProgramUniform3dv","gl","",null,null],[5,"is_loaded","gl::ProgramUniform3dv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ProgramUniform3f","gl","",null,null],[5,"is_loaded","gl::ProgramUniform3f","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ProgramUniform3fv","gl","",null,null],[5,"is_loaded","gl::ProgramUniform3fv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ProgramUniform3i","gl","",null,null],[5,"is_loaded","gl::ProgramUniform3i","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ProgramUniform3iv","gl","",null,null],[5,"is_loaded","gl::ProgramUniform3iv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ProgramUniform3ui","gl","",null,null],[5,"is_loaded","gl::ProgramUniform3ui","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ProgramUniform3uiv","gl","",null,null],[5,"is_loaded","gl::ProgramUniform3uiv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ProgramUniform4d","gl","",null,null],[5,"is_loaded","gl::ProgramUniform4d","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ProgramUniform4dv","gl","",null,null],[5,"is_loaded","gl::ProgramUniform4dv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ProgramUniform4f","gl","",null,null],[5,"is_loaded","gl::ProgramUniform4f","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ProgramUniform4fv","gl","",null,null],[5,"is_loaded","gl::ProgramUniform4fv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ProgramUniform4i","gl","",null,null],[5,"is_loaded","gl::ProgramUniform4i","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ProgramUniform4iv","gl","",null,null],[5,"is_loaded","gl::ProgramUniform4iv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ProgramUniform4ui","gl","",null,null],[5,"is_loaded","gl::ProgramUniform4ui","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ProgramUniform4uiv","gl","",null,null],[5,"is_loaded","gl::ProgramUniform4uiv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ProgramUniformMatrix2dv","gl","",null,null],[5,"is_loaded","gl::ProgramUniformMatrix2dv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ProgramUniformMatrix2fv","gl","",null,null],[5,"is_loaded","gl::ProgramUniformMatrix2fv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ProgramUniformMatrix2x3dv","gl","",null,null],[5,"is_loaded","gl::ProgramUniformMatrix2x3dv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ProgramUniformMatrix2x3fv","gl","",null,null],[5,"is_loaded","gl::ProgramUniformMatrix2x3fv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ProgramUniformMatrix2x4dv","gl","",null,null],[5,"is_loaded","gl::ProgramUniformMatrix2x4dv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ProgramUniformMatrix2x4fv","gl","",null,null],[5,"is_loaded","gl::ProgramUniformMatrix2x4fv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ProgramUniformMatrix3dv","gl","",null,null],[5,"is_loaded","gl::ProgramUniformMatrix3dv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ProgramUniformMatrix3fv","gl","",null,null],[5,"is_loaded","gl::ProgramUniformMatrix3fv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ProgramUniformMatrix3x2dv","gl","",null,null],[5,"is_loaded","gl::ProgramUniformMatrix3x2dv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ProgramUniformMatrix3x2fv","gl","",null,null],[5,"is_loaded","gl::ProgramUniformMatrix3x2fv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ProgramUniformMatrix3x4dv","gl","",null,null],[5,"is_loaded","gl::ProgramUniformMatrix3x4dv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ProgramUniformMatrix3x4fv","gl","",null,null],[5,"is_loaded","gl::ProgramUniformMatrix3x4fv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ProgramUniformMatrix4dv","gl","",null,null],[5,"is_loaded","gl::ProgramUniformMatrix4dv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ProgramUniformMatrix4fv","gl","",null,null],[5,"is_loaded","gl::ProgramUniformMatrix4fv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ProgramUniformMatrix4x2dv","gl","",null,null],[5,"is_loaded","gl::ProgramUniformMatrix4x2dv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ProgramUniformMatrix4x2fv","gl","",null,null],[5,"is_loaded","gl::ProgramUniformMatrix4x2fv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ProgramUniformMatrix4x3dv","gl","",null,null],[5,"is_loaded","gl::ProgramUniformMatrix4x3dv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ProgramUniformMatrix4x3fv","gl","",null,null],[5,"is_loaded","gl::ProgramUniformMatrix4x3fv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ProvokingVertex","gl","",null,null],[5,"is_loaded","gl::ProvokingVertex","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"PushDebugGroup","gl","",null,null],[5,"is_loaded","gl::PushDebugGroup","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"QueryCounter","gl","",null,null],[5,"is_loaded","gl::QueryCounter","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ReadBuffer","gl","",null,null],[5,"is_loaded","gl::ReadBuffer","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ReadPixels","gl","",null,null],[5,"is_loaded","gl::ReadPixels","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ReadnPixels","gl","",null,null],[5,"is_loaded","gl::ReadnPixels","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ReleaseShaderCompiler","gl","",null,null],[5,"is_loaded","gl::ReleaseShaderCompiler","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"RenderbufferStorage","gl","",null,null],[5,"is_loaded","gl::RenderbufferStorage","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"RenderbufferStorageMultisample","gl","",null,null],[5,"is_loaded","gl::RenderbufferStorageMultisample","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ResumeTransformFeedback","gl","",null,null],[5,"is_loaded","gl::ResumeTransformFeedback","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"SampleCoverage","gl","",null,null],[5,"is_loaded","gl::SampleCoverage","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"SampleMaski","gl","",null,null],[5,"is_loaded","gl::SampleMaski","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"SamplerParameterIiv","gl","",null,null],[5,"is_loaded","gl::SamplerParameterIiv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"SamplerParameterIuiv","gl","",null,null],[5,"is_loaded","gl::SamplerParameterIuiv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"SamplerParameterf","gl","",null,null],[5,"is_loaded","gl::SamplerParameterf","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"SamplerParameterfv","gl","",null,null],[5,"is_loaded","gl::SamplerParameterfv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"SamplerParameteri","gl","",null,null],[5,"is_loaded","gl::SamplerParameteri","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"SamplerParameteriv","gl","",null,null],[5,"is_loaded","gl::SamplerParameteriv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"Scissor","gl","",null,null],[5,"is_loaded","gl::Scissor","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ScissorArrayv","gl","",null,null],[5,"is_loaded","gl::ScissorArrayv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ScissorIndexed","gl","",null,null],[5,"is_loaded","gl::ScissorIndexed","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ScissorIndexedv","gl","",null,null],[5,"is_loaded","gl::ScissorIndexedv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"SecondaryColorP3ui","gl","",null,null],[5,"is_loaded","gl::SecondaryColorP3ui","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"SecondaryColorP3uiv","gl","",null,null],[5,"is_loaded","gl::SecondaryColorP3uiv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ShaderBinary","gl","",null,null],[5,"is_loaded","gl::ShaderBinary","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ShaderSource","gl","",null,null],[5,"is_loaded","gl::ShaderSource","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ShaderStorageBlockBinding","gl","",null,null],[5,"is_loaded","gl::ShaderStorageBlockBinding","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"StencilFunc","gl","",null,null],[5,"is_loaded","gl::StencilFunc","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"StencilFuncSeparate","gl","",null,null],[5,"is_loaded","gl::StencilFuncSeparate","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"StencilMask","gl","",null,null],[5,"is_loaded","gl::StencilMask","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"StencilMaskSeparate","gl","",null,null],[5,"is_loaded","gl::StencilMaskSeparate","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"StencilOp","gl","",null,null],[5,"is_loaded","gl::StencilOp","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"StencilOpSeparate","gl","",null,null],[5,"is_loaded","gl::StencilOpSeparate","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"TexBuffer","gl","",null,null],[5,"is_loaded","gl::TexBuffer","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"TexBufferRange","gl","",null,null],[5,"is_loaded","gl::TexBufferRange","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"TexCoordP1ui","gl","",null,null],[5,"is_loaded","gl::TexCoordP1ui","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"TexCoordP1uiv","gl","",null,null],[5,"is_loaded","gl::TexCoordP1uiv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"TexCoordP2ui","gl","",null,null],[5,"is_loaded","gl::TexCoordP2ui","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"TexCoordP2uiv","gl","",null,null],[5,"is_loaded","gl::TexCoordP2uiv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"TexCoordP3ui","gl","",null,null],[5,"is_loaded","gl::TexCoordP3ui","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"TexCoordP3uiv","gl","",null,null],[5,"is_loaded","gl::TexCoordP3uiv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"TexCoordP4ui","gl","",null,null],[5,"is_loaded","gl::TexCoordP4ui","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"TexCoordP4uiv","gl","",null,null],[5,"is_loaded","gl::TexCoordP4uiv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"TexImage1D","gl","",null,null],[5,"is_loaded","gl::TexImage1D","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"TexImage2D","gl","",null,null],[5,"is_loaded","gl::TexImage2D","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"TexImage2DMultisample","gl","",null,null],[5,"is_loaded","gl::TexImage2DMultisample","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"TexImage3D","gl","",null,null],[5,"is_loaded","gl::TexImage3D","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"TexImage3DMultisample","gl","",null,null],[5,"is_loaded","gl::TexImage3DMultisample","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"TexParameterIiv","gl","",null,null],[5,"is_loaded","gl::TexParameterIiv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"TexParameterIuiv","gl","",null,null],[5,"is_loaded","gl::TexParameterIuiv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"TexParameterf","gl","",null,null],[5,"is_loaded","gl::TexParameterf","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"TexParameterfv","gl","",null,null],[5,"is_loaded","gl::TexParameterfv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"TexParameteri","gl","",null,null],[5,"is_loaded","gl::TexParameteri","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"TexParameteriv","gl","",null,null],[5,"is_loaded","gl::TexParameteriv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"TexStorage1D","gl","",null,null],[5,"is_loaded","gl::TexStorage1D","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"TexStorage2D","gl","",null,null],[5,"is_loaded","gl::TexStorage2D","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"TexStorage2DMultisample","gl","",null,null],[5,"is_loaded","gl::TexStorage2DMultisample","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"TexStorage3D","gl","",null,null],[5,"is_loaded","gl::TexStorage3D","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"TexStorage3DMultisample","gl","",null,null],[5,"is_loaded","gl::TexStorage3DMultisample","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"TexSubImage1D","gl","",null,null],[5,"is_loaded","gl::TexSubImage1D","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"TexSubImage2D","gl","",null,null],[5,"is_loaded","gl::TexSubImage2D","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"TexSubImage3D","gl","",null,null],[5,"is_loaded","gl::TexSubImage3D","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"TextureBarrier","gl","",null,null],[5,"is_loaded","gl::TextureBarrier","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"TextureBuffer","gl","",null,null],[5,"is_loaded","gl::TextureBuffer","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"TextureBufferRange","gl","",null,null],[5,"is_loaded","gl::TextureBufferRange","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"TextureParameterIiv","gl","",null,null],[5,"is_loaded","gl::TextureParameterIiv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"TextureParameterIuiv","gl","",null,null],[5,"is_loaded","gl::TextureParameterIuiv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"TextureParameterf","gl","",null,null],[5,"is_loaded","gl::TextureParameterf","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"TextureParameterfv","gl","",null,null],[5,"is_loaded","gl::TextureParameterfv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"TextureParameteri","gl","",null,null],[5,"is_loaded","gl::TextureParameteri","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"TextureParameteriv","gl","",null,null],[5,"is_loaded","gl::TextureParameteriv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"TextureStorage1D","gl","",null,null],[5,"is_loaded","gl::TextureStorage1D","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"TextureStorage2D","gl","",null,null],[5,"is_loaded","gl::TextureStorage2D","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"TextureStorage2DMultisample","gl","",null,null],[5,"is_loaded","gl::TextureStorage2DMultisample","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"TextureStorage3D","gl","",null,null],[5,"is_loaded","gl::TextureStorage3D","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"TextureStorage3DMultisample","gl","",null,null],[5,"is_loaded","gl::TextureStorage3DMultisample","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"TextureSubImage1D","gl","",null,null],[5,"is_loaded","gl::TextureSubImage1D","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"TextureSubImage2D","gl","",null,null],[5,"is_loaded","gl::TextureSubImage2D","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"TextureSubImage3D","gl","",null,null],[5,"is_loaded","gl::TextureSubImage3D","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"TextureView","gl","",null,null],[5,"is_loaded","gl::TextureView","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"TransformFeedbackBufferBase","gl","",null,null],[5,"is_loaded","gl::TransformFeedbackBufferBase","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"TransformFeedbackBufferRange","gl","",null,null],[5,"is_loaded","gl::TransformFeedbackBufferRange","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"TransformFeedbackVaryings","gl","",null,null],[5,"is_loaded","gl::TransformFeedbackVaryings","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"Uniform1d","gl","",null,null],[5,"is_loaded","gl::Uniform1d","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"Uniform1dv","gl","",null,null],[5,"is_loaded","gl::Uniform1dv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"Uniform1f","gl","",null,null],[5,"is_loaded","gl::Uniform1f","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"Uniform1fv","gl","",null,null],[5,"is_loaded","gl::Uniform1fv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"Uniform1i","gl","",null,null],[5,"is_loaded","gl::Uniform1i","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"Uniform1iv","gl","",null,null],[5,"is_loaded","gl::Uniform1iv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"Uniform1ui","gl","",null,null],[5,"is_loaded","gl::Uniform1ui","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"Uniform1uiv","gl","",null,null],[5,"is_loaded","gl::Uniform1uiv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"Uniform2d","gl","",null,null],[5,"is_loaded","gl::Uniform2d","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"Uniform2dv","gl","",null,null],[5,"is_loaded","gl::Uniform2dv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"Uniform2f","gl","",null,null],[5,"is_loaded","gl::Uniform2f","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"Uniform2fv","gl","",null,null],[5,"is_loaded","gl::Uniform2fv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"Uniform2i","gl","",null,null],[5,"is_loaded","gl::Uniform2i","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"Uniform2iv","gl","",null,null],[5,"is_loaded","gl::Uniform2iv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"Uniform2ui","gl","",null,null],[5,"is_loaded","gl::Uniform2ui","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"Uniform2uiv","gl","",null,null],[5,"is_loaded","gl::Uniform2uiv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"Uniform3d","gl","",null,null],[5,"is_loaded","gl::Uniform3d","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"Uniform3dv","gl","",null,null],[5,"is_loaded","gl::Uniform3dv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"Uniform3f","gl","",null,null],[5,"is_loaded","gl::Uniform3f","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"Uniform3fv","gl","",null,null],[5,"is_loaded","gl::Uniform3fv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"Uniform3i","gl","",null,null],[5,"is_loaded","gl::Uniform3i","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"Uniform3iv","gl","",null,null],[5,"is_loaded","gl::Uniform3iv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"Uniform3ui","gl","",null,null],[5,"is_loaded","gl::Uniform3ui","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"Uniform3uiv","gl","",null,null],[5,"is_loaded","gl::Uniform3uiv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"Uniform4d","gl","",null,null],[5,"is_loaded","gl::Uniform4d","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"Uniform4dv","gl","",null,null],[5,"is_loaded","gl::Uniform4dv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"Uniform4f","gl","",null,null],[5,"is_loaded","gl::Uniform4f","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"Uniform4fv","gl","",null,null],[5,"is_loaded","gl::Uniform4fv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"Uniform4i","gl","",null,null],[5,"is_loaded","gl::Uniform4i","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"Uniform4iv","gl","",null,null],[5,"is_loaded","gl::Uniform4iv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"Uniform4ui","gl","",null,null],[5,"is_loaded","gl::Uniform4ui","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"Uniform4uiv","gl","",null,null],[5,"is_loaded","gl::Uniform4uiv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"UniformBlockBinding","gl","",null,null],[5,"is_loaded","gl::UniformBlockBinding","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"UniformMatrix2dv","gl","",null,null],[5,"is_loaded","gl::UniformMatrix2dv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"UniformMatrix2fv","gl","",null,null],[5,"is_loaded","gl::UniformMatrix2fv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"UniformMatrix2x3dv","gl","",null,null],[5,"is_loaded","gl::UniformMatrix2x3dv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"UniformMatrix2x3fv","gl","",null,null],[5,"is_loaded","gl::UniformMatrix2x3fv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"UniformMatrix2x4dv","gl","",null,null],[5,"is_loaded","gl::UniformMatrix2x4dv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"UniformMatrix2x4fv","gl","",null,null],[5,"is_loaded","gl::UniformMatrix2x4fv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"UniformMatrix3dv","gl","",null,null],[5,"is_loaded","gl::UniformMatrix3dv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"UniformMatrix3fv","gl","",null,null],[5,"is_loaded","gl::UniformMatrix3fv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"UniformMatrix3x2dv","gl","",null,null],[5,"is_loaded","gl::UniformMatrix3x2dv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"UniformMatrix3x2fv","gl","",null,null],[5,"is_loaded","gl::UniformMatrix3x2fv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"UniformMatrix3x4dv","gl","",null,null],[5,"is_loaded","gl::UniformMatrix3x4dv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"UniformMatrix3x4fv","gl","",null,null],[5,"is_loaded","gl::UniformMatrix3x4fv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"UniformMatrix4dv","gl","",null,null],[5,"is_loaded","gl::UniformMatrix4dv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"UniformMatrix4fv","gl","",null,null],[5,"is_loaded","gl::UniformMatrix4fv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"UniformMatrix4x2dv","gl","",null,null],[5,"is_loaded","gl::UniformMatrix4x2dv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"UniformMatrix4x2fv","gl","",null,null],[5,"is_loaded","gl::UniformMatrix4x2fv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"UniformMatrix4x3dv","gl","",null,null],[5,"is_loaded","gl::UniformMatrix4x3dv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"UniformMatrix4x3fv","gl","",null,null],[5,"is_loaded","gl::UniformMatrix4x3fv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"UniformSubroutinesuiv","gl","",null,null],[5,"is_loaded","gl::UniformSubroutinesuiv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"UnmapBuffer","gl","",null,null],[5,"is_loaded","gl::UnmapBuffer","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"UnmapNamedBuffer","gl","",null,null],[5,"is_loaded","gl::UnmapNamedBuffer","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"UseProgram","gl","",null,null],[5,"is_loaded","gl::UseProgram","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"UseProgramStages","gl","",null,null],[5,"is_loaded","gl::UseProgramStages","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ValidateProgram","gl","",null,null],[5,"is_loaded","gl::ValidateProgram","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ValidateProgramPipeline","gl","",null,null],[5,"is_loaded","gl::ValidateProgramPipeline","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexArrayAttribBinding","gl","",null,null],[5,"is_loaded","gl::VertexArrayAttribBinding","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexArrayAttribFormat","gl","",null,null],[5,"is_loaded","gl::VertexArrayAttribFormat","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexArrayAttribIFormat","gl","",null,null],[5,"is_loaded","gl::VertexArrayAttribIFormat","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexArrayAttribLFormat","gl","",null,null],[5,"is_loaded","gl::VertexArrayAttribLFormat","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexArrayBindingDivisor","gl","",null,null],[5,"is_loaded","gl::VertexArrayBindingDivisor","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexArrayElementBuffer","gl","",null,null],[5,"is_loaded","gl::VertexArrayElementBuffer","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexArrayVertexBuffer","gl","",null,null],[5,"is_loaded","gl::VertexArrayVertexBuffer","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexArrayVertexBuffers","gl","",null,null],[5,"is_loaded","gl::VertexArrayVertexBuffers","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttrib1d","gl","",null,null],[5,"is_loaded","gl::VertexAttrib1d","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttrib1dv","gl","",null,null],[5,"is_loaded","gl::VertexAttrib1dv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttrib1f","gl","",null,null],[5,"is_loaded","gl::VertexAttrib1f","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttrib1fv","gl","",null,null],[5,"is_loaded","gl::VertexAttrib1fv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttrib1s","gl","",null,null],[5,"is_loaded","gl::VertexAttrib1s","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttrib1sv","gl","",null,null],[5,"is_loaded","gl::VertexAttrib1sv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttrib2d","gl","",null,null],[5,"is_loaded","gl::VertexAttrib2d","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttrib2dv","gl","",null,null],[5,"is_loaded","gl::VertexAttrib2dv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttrib2f","gl","",null,null],[5,"is_loaded","gl::VertexAttrib2f","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttrib2fv","gl","",null,null],[5,"is_loaded","gl::VertexAttrib2fv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttrib2s","gl","",null,null],[5,"is_loaded","gl::VertexAttrib2s","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttrib2sv","gl","",null,null],[5,"is_loaded","gl::VertexAttrib2sv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttrib3d","gl","",null,null],[5,"is_loaded","gl::VertexAttrib3d","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttrib3dv","gl","",null,null],[5,"is_loaded","gl::VertexAttrib3dv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttrib3f","gl","",null,null],[5,"is_loaded","gl::VertexAttrib3f","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttrib3fv","gl","",null,null],[5,"is_loaded","gl::VertexAttrib3fv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttrib3s","gl","",null,null],[5,"is_loaded","gl::VertexAttrib3s","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttrib3sv","gl","",null,null],[5,"is_loaded","gl::VertexAttrib3sv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttrib4Nbv","gl","",null,null],[5,"is_loaded","gl::VertexAttrib4Nbv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttrib4Niv","gl","",null,null],[5,"is_loaded","gl::VertexAttrib4Niv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttrib4Nsv","gl","",null,null],[5,"is_loaded","gl::VertexAttrib4Nsv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttrib4Nub","gl","",null,null],[5,"is_loaded","gl::VertexAttrib4Nub","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttrib4Nubv","gl","",null,null],[5,"is_loaded","gl::VertexAttrib4Nubv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttrib4Nuiv","gl","",null,null],[5,"is_loaded","gl::VertexAttrib4Nuiv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttrib4Nusv","gl","",null,null],[5,"is_loaded","gl::VertexAttrib4Nusv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttrib4bv","gl","",null,null],[5,"is_loaded","gl::VertexAttrib4bv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttrib4d","gl","",null,null],[5,"is_loaded","gl::VertexAttrib4d","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttrib4dv","gl","",null,null],[5,"is_loaded","gl::VertexAttrib4dv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttrib4f","gl","",null,null],[5,"is_loaded","gl::VertexAttrib4f","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttrib4fv","gl","",null,null],[5,"is_loaded","gl::VertexAttrib4fv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttrib4iv","gl","",null,null],[5,"is_loaded","gl::VertexAttrib4iv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttrib4s","gl","",null,null],[5,"is_loaded","gl::VertexAttrib4s","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttrib4sv","gl","",null,null],[5,"is_loaded","gl::VertexAttrib4sv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttrib4ubv","gl","",null,null],[5,"is_loaded","gl::VertexAttrib4ubv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttrib4uiv","gl","",null,null],[5,"is_loaded","gl::VertexAttrib4uiv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttrib4usv","gl","",null,null],[5,"is_loaded","gl::VertexAttrib4usv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttribBinding","gl","",null,null],[5,"is_loaded","gl::VertexAttribBinding","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttribDivisor","gl","",null,null],[5,"is_loaded","gl::VertexAttribDivisor","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttribFormat","gl","",null,null],[5,"is_loaded","gl::VertexAttribFormat","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttribI1i","gl","",null,null],[5,"is_loaded","gl::VertexAttribI1i","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttribI1iv","gl","",null,null],[5,"is_loaded","gl::VertexAttribI1iv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttribI1ui","gl","",null,null],[5,"is_loaded","gl::VertexAttribI1ui","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttribI1uiv","gl","",null,null],[5,"is_loaded","gl::VertexAttribI1uiv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttribI2i","gl","",null,null],[5,"is_loaded","gl::VertexAttribI2i","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttribI2iv","gl","",null,null],[5,"is_loaded","gl::VertexAttribI2iv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttribI2ui","gl","",null,null],[5,"is_loaded","gl::VertexAttribI2ui","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttribI2uiv","gl","",null,null],[5,"is_loaded","gl::VertexAttribI2uiv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttribI3i","gl","",null,null],[5,"is_loaded","gl::VertexAttribI3i","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttribI3iv","gl","",null,null],[5,"is_loaded","gl::VertexAttribI3iv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttribI3ui","gl","",null,null],[5,"is_loaded","gl::VertexAttribI3ui","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttribI3uiv","gl","",null,null],[5,"is_loaded","gl::VertexAttribI3uiv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttribI4bv","gl","",null,null],[5,"is_loaded","gl::VertexAttribI4bv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttribI4i","gl","",null,null],[5,"is_loaded","gl::VertexAttribI4i","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttribI4iv","gl","",null,null],[5,"is_loaded","gl::VertexAttribI4iv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttribI4sv","gl","",null,null],[5,"is_loaded","gl::VertexAttribI4sv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttribI4ubv","gl","",null,null],[5,"is_loaded","gl::VertexAttribI4ubv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttribI4ui","gl","",null,null],[5,"is_loaded","gl::VertexAttribI4ui","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttribI4uiv","gl","",null,null],[5,"is_loaded","gl::VertexAttribI4uiv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttribI4usv","gl","",null,null],[5,"is_loaded","gl::VertexAttribI4usv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttribIFormat","gl","",null,null],[5,"is_loaded","gl::VertexAttribIFormat","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttribIPointer","gl","",null,null],[5,"is_loaded","gl::VertexAttribIPointer","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttribL1d","gl","",null,null],[5,"is_loaded","gl::VertexAttribL1d","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttribL1dv","gl","",null,null],[5,"is_loaded","gl::VertexAttribL1dv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttribL2d","gl","",null,null],[5,"is_loaded","gl::VertexAttribL2d","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttribL2dv","gl","",null,null],[5,"is_loaded","gl::VertexAttribL2dv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttribL3d","gl","",null,null],[5,"is_loaded","gl::VertexAttribL3d","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttribL3dv","gl","",null,null],[5,"is_loaded","gl::VertexAttribL3dv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttribL4d","gl","",null,null],[5,"is_loaded","gl::VertexAttribL4d","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttribL4dv","gl","",null,null],[5,"is_loaded","gl::VertexAttribL4dv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttribLFormat","gl","",null,null],[5,"is_loaded","gl::VertexAttribLFormat","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttribLPointer","gl","",null,null],[5,"is_loaded","gl::VertexAttribLPointer","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttribP1ui","gl","",null,null],[5,"is_loaded","gl::VertexAttribP1ui","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttribP1uiv","gl","",null,null],[5,"is_loaded","gl::VertexAttribP1uiv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttribP2ui","gl","",null,null],[5,"is_loaded","gl::VertexAttribP2ui","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttribP2uiv","gl","",null,null],[5,"is_loaded","gl::VertexAttribP2uiv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttribP3ui","gl","",null,null],[5,"is_loaded","gl::VertexAttribP3ui","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttribP3uiv","gl","",null,null],[5,"is_loaded","gl::VertexAttribP3uiv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttribP4ui","gl","",null,null],[5,"is_loaded","gl::VertexAttribP4ui","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttribP4uiv","gl","",null,null],[5,"is_loaded","gl::VertexAttribP4uiv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttribPointer","gl","",null,null],[5,"is_loaded","gl::VertexAttribPointer","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexBindingDivisor","gl","",null,null],[5,"is_loaded","gl::VertexBindingDivisor","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexP2ui","gl","",null,null],[5,"is_loaded","gl::VertexP2ui","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexP2uiv","gl","",null,null],[5,"is_loaded","gl::VertexP2uiv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexP3ui","gl","",null,null],[5,"is_loaded","gl::VertexP3ui","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexP3uiv","gl","",null,null],[5,"is_loaded","gl::VertexP3uiv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexP4ui","gl","",null,null],[5,"is_loaded","gl::VertexP4ui","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexP4uiv","gl","",null,null],[5,"is_loaded","gl::VertexP4uiv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"Viewport","gl","",null,null],[5,"is_loaded","gl::Viewport","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ViewportArrayv","gl","",null,null],[5,"is_loaded","gl::ViewportArrayv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ViewportIndexedf","gl","",null,null],[5,"is_loaded","gl::ViewportIndexedf","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ViewportIndexedfv","gl","",null,null],[5,"is_loaded","gl::ViewportIndexedfv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"WaitSync","gl","",null,null],[5,"is_loaded","gl::WaitSync","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[17,"ACTIVE_ATOMIC_COUNTER_BUFFERS","gl","",null,null],[17,"ACTIVE_ATTRIBUTES","","",null,null],[17,"ACTIVE_ATTRIBUTE_MAX_LENGTH","","",null,null],[17,"ACTIVE_PROGRAM","","",null,null],[17,"ACTIVE_RESOURCES","","",null,null],[17,"ACTIVE_SUBROUTINES","","",null,null],[17,"ACTIVE_SUBROUTINE_MAX_LENGTH","","",null,null],[17,"ACTIVE_SUBROUTINE_UNIFORMS","","",null,null],[17,"ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS","","",null,null],[17,"ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH","","",null,null],[17,"ACTIVE_TEXTURE","","",null,null],[17,"ACTIVE_UNIFORMS","","",null,null],[17,"ACTIVE_UNIFORM_BLOCKS","","",null,null],[17,"ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH","","",null,null],[17,"ACTIVE_UNIFORM_MAX_LENGTH","","",null,null],[17,"ACTIVE_VARIABLES","","",null,null],[17,"ALIASED_LINE_WIDTH_RANGE","","",null,null],[17,"ALL_BARRIER_BITS","","",null,null],[17,"ALL_SHADER_BITS","","",null,null],[17,"ALPHA","","",null,null],[17,"ALREADY_SIGNALED","","",null,null],[17,"ALWAYS","","",null,null],[17,"AND","","",null,null],[17,"AND_INVERTED","","",null,null],[17,"AND_REVERSE","","",null,null],[17,"ANY_SAMPLES_PASSED","","",null,null],[17,"ANY_SAMPLES_PASSED_CONSERVATIVE","","",null,null],[17,"ARRAY_BUFFER","","",null,null],[17,"ARRAY_BUFFER_BINDING","","",null,null],[17,"ARRAY_SIZE","","",null,null],[17,"ARRAY_STRIDE","","",null,null],[17,"ATOMIC_COUNTER_BARRIER_BIT","","",null,null],[17,"ATOMIC_COUNTER_BUFFER","","",null,null],[17,"ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTERS","","",null,null],[17,"ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTER_INDICES","","",null,null],[17,"ATOMIC_COUNTER_BUFFER_BINDING","","",null,null],[17,"ATOMIC_COUNTER_BUFFER_DATA_SIZE","","",null,null],[17,"ATOMIC_COUNTER_BUFFER_INDEX","","",null,null],[17,"ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER","","",null,null],[17,"ATOMIC_COUNTER_BUFFER_REFERENCED_BY_FRAGMENT_SHADER","","",null,null],[17,"ATOMIC_COUNTER_BUFFER_REFERENCED_BY_GEOMETRY_SHADER","","",null,null],[17,"ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_CONTROL_SHADER","","",null,null],[17,"ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_EVALUATION_SHADER","","",null,null],[17,"ATOMIC_COUNTER_BUFFER_REFERENCED_BY_VERTEX_SHADER","","",null,null],[17,"ATOMIC_COUNTER_BUFFER_SIZE","","",null,null],[17,"ATOMIC_COUNTER_BUFFER_START","","",null,null],[17,"ATTACHED_SHADERS","","",null,null],[17,"AUTO_GENERATE_MIPMAP","","",null,null],[17,"BACK","","",null,null],[17,"BACK_LEFT","","",null,null],[17,"BACK_RIGHT","","",null,null],[17,"BGR","","",null,null],[17,"BGRA","","",null,null],[17,"BGRA_INTEGER","","",null,null],[17,"BGR_INTEGER","","",null,null],[17,"BLEND","","",null,null],[17,"BLEND_COLOR","","",null,null],[17,"BLEND_DST","","",null,null],[17,"BLEND_DST_ALPHA","","",null,null],[17,"BLEND_DST_RGB","","",null,null],[17,"BLEND_EQUATION","","",null,null],[17,"BLEND_EQUATION_ALPHA","","",null,null],[17,"BLEND_EQUATION_RGB","","",null,null],[17,"BLEND_SRC","","",null,null],[17,"BLEND_SRC_ALPHA","","",null,null],[17,"BLEND_SRC_RGB","","",null,null],[17,"BLOCK_INDEX","","",null,null],[17,"BLUE","","",null,null],[17,"BLUE_INTEGER","","",null,null],[17,"BOOL","","",null,null],[17,"BOOL_VEC2","","",null,null],[17,"BOOL_VEC3","","",null,null],[17,"BOOL_VEC4","","",null,null],[17,"BUFFER","","",null,null],[17,"BUFFER_ACCESS","","",null,null],[17,"BUFFER_ACCESS_FLAGS","","",null,null],[17,"BUFFER_BINDING","","",null,null],[17,"BUFFER_DATA_SIZE","","",null,null],[17,"BUFFER_IMMUTABLE_STORAGE","","",null,null],[17,"BUFFER_MAPPED","","",null,null],[17,"BUFFER_MAP_LENGTH","","",null,null],[17,"BUFFER_MAP_OFFSET","","",null,null],[17,"BUFFER_MAP_POINTER","","",null,null],[17,"BUFFER_SIZE","","",null,null],[17,"BUFFER_STORAGE_FLAGS","","",null,null],[17,"BUFFER_UPDATE_BARRIER_BIT","","",null,null],[17,"BUFFER_USAGE","","",null,null],[17,"BUFFER_VARIABLE","","",null,null],[17,"BYTE","","",null,null],[17,"CAVEAT_SUPPORT","","",null,null],[17,"CCW","","",null,null],[17,"CLAMP_READ_COLOR","","",null,null],[17,"CLAMP_TO_BORDER","","",null,null],[17,"CLAMP_TO_EDGE","","",null,null],[17,"CLEAR","","",null,null],[17,"CLEAR_BUFFER","","",null,null],[17,"CLEAR_TEXTURE","","",null,null],[17,"CLIENT_MAPPED_BUFFER_BARRIER_BIT","","",null,null],[17,"CLIENT_STORAGE_BIT","","",null,null],[17,"CLIP_DEPTH_MODE","","",null,null],[17,"CLIP_DISTANCE0","","",null,null],[17,"CLIP_DISTANCE1","","",null,null],[17,"CLIP_DISTANCE2","","",null,null],[17,"CLIP_DISTANCE3","","",null,null],[17,"CLIP_DISTANCE4","","",null,null],[17,"CLIP_DISTANCE5","","",null,null],[17,"CLIP_DISTANCE6","","",null,null],[17,"CLIP_DISTANCE7","","",null,null],[17,"CLIP_ORIGIN","","",null,null],[17,"COLOR","","",null,null],[17,"COLOR_ATTACHMENT0","","",null,null],[17,"COLOR_ATTACHMENT1","","",null,null],[17,"COLOR_ATTACHMENT10","","",null,null],[17,"COLOR_ATTACHMENT11","","",null,null],[17,"COLOR_ATTACHMENT12","","",null,null],[17,"COLOR_ATTACHMENT13","","",null,null],[17,"COLOR_ATTACHMENT14","","",null,null],[17,"COLOR_ATTACHMENT15","","",null,null],[17,"COLOR_ATTACHMENT16","","",null,null],[17,"COLOR_ATTACHMENT17","","",null,null],[17,"COLOR_ATTACHMENT18","","",null,null],[17,"COLOR_ATTACHMENT19","","",null,null],[17,"COLOR_ATTACHMENT2","","",null,null],[17,"COLOR_ATTACHMENT20","","",null,null],[17,"COLOR_ATTACHMENT21","","",null,null],[17,"COLOR_ATTACHMENT22","","",null,null],[17,"COLOR_ATTACHMENT23","","",null,null],[17,"COLOR_ATTACHMENT24","","",null,null],[17,"COLOR_ATTACHMENT25","","",null,null],[17,"COLOR_ATTACHMENT26","","",null,null],[17,"COLOR_ATTACHMENT27","","",null,null],[17,"COLOR_ATTACHMENT28","","",null,null],[17,"COLOR_ATTACHMENT29","","",null,null],[17,"COLOR_ATTACHMENT3","","",null,null],[17,"COLOR_ATTACHMENT30","","",null,null],[17,"COLOR_ATTACHMENT31","","",null,null],[17,"COLOR_ATTACHMENT4","","",null,null],[17,"COLOR_ATTACHMENT5","","",null,null],[17,"COLOR_ATTACHMENT6","","",null,null],[17,"COLOR_ATTACHMENT7","","",null,null],[17,"COLOR_ATTACHMENT8","","",null,null],[17,"COLOR_ATTACHMENT9","","",null,null],[17,"COLOR_BUFFER_BIT","","",null,null],[17,"COLOR_CLEAR_VALUE","","",null,null],[17,"COLOR_COMPONENTS","","",null,null],[17,"COLOR_ENCODING","","",null,null],[17,"COLOR_LOGIC_OP","","",null,null],[17,"COLOR_RENDERABLE","","",null,null],[17,"COLOR_WRITEMASK","","",null,null],[17,"COMMAND_BARRIER_BIT","","",null,null],[17,"COMPARE_REF_TO_TEXTURE","","",null,null],[17,"COMPATIBLE_SUBROUTINES","","",null,null],[17,"COMPILE_STATUS","","",null,null],[17,"COMPRESSED_R11_EAC","","",null,null],[17,"COMPRESSED_RED","","",null,null],[17,"COMPRESSED_RED_RGTC1","","",null,null],[17,"COMPRESSED_RG","","",null,null],[17,"COMPRESSED_RG11_EAC","","",null,null],[17,"COMPRESSED_RGB","","",null,null],[17,"COMPRESSED_RGB8_ETC2","","",null,null],[17,"COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2","","",null,null],[17,"COMPRESSED_RGBA","","",null,null],[17,"COMPRESSED_RGBA8_ETC2_EAC","","",null,null],[17,"COMPRESSED_RGBA_BPTC_UNORM","","",null,null],[17,"COMPRESSED_RGB_BPTC_SIGNED_FLOAT","","",null,null],[17,"COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT","","",null,null],[17,"COMPRESSED_RG_RGTC2","","",null,null],[17,"COMPRESSED_SIGNED_R11_EAC","","",null,null],[17,"COMPRESSED_SIGNED_RED_RGTC1","","",null,null],[17,"COMPRESSED_SIGNED_RG11_EAC","","",null,null],[17,"COMPRESSED_SIGNED_RG_RGTC2","","",null,null],[17,"COMPRESSED_SRGB","","",null,null],[17,"COMPRESSED_SRGB8_ALPHA8_ETC2_EAC","","",null,null],[17,"COMPRESSED_SRGB8_ETC2","","",null,null],[17,"COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2","","",null,null],[17,"COMPRESSED_SRGB_ALPHA","","",null,null],[17,"COMPRESSED_SRGB_ALPHA_BPTC_UNORM","","",null,null],[17,"COMPRESSED_TEXTURE_FORMATS","","",null,null],[17,"COMPUTE_SHADER","","",null,null],[17,"COMPUTE_SHADER_BIT","","",null,null],[17,"COMPUTE_SUBROUTINE","","",null,null],[17,"COMPUTE_SUBROUTINE_UNIFORM","","",null,null],[17,"COMPUTE_TEXTURE","","",null,null],[17,"COMPUTE_WORK_GROUP_SIZE","","",null,null],[17,"CONDITION_SATISFIED","","",null,null],[17,"CONSTANT_ALPHA","","",null,null],[17,"CONSTANT_COLOR","","",null,null],[17,"CONTEXT_COMPATIBILITY_PROFILE_BIT","","",null,null],[17,"CONTEXT_CORE_PROFILE_BIT","","",null,null],[17,"CONTEXT_FLAGS","","",null,null],[17,"CONTEXT_FLAG_DEBUG_BIT","","",null,null],[17,"CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT","","",null,null],[17,"CONTEXT_FLAG_ROBUST_ACCESS_BIT","","",null,null],[17,"CONTEXT_LOST","","",null,null],[17,"CONTEXT_PROFILE_MASK","","",null,null],[17,"CONTEXT_RELEASE_BEHAVIOR","","",null,null],[17,"CONTEXT_RELEASE_BEHAVIOR_FLUSH","","",null,null],[17,"COPY","","",null,null],[17,"COPY_INVERTED","","",null,null],[17,"COPY_READ_BUFFER","","",null,null],[17,"COPY_READ_BUFFER_BINDING","","",null,null],[17,"COPY_WRITE_BUFFER","","",null,null],[17,"COPY_WRITE_BUFFER_BINDING","","",null,null],[17,"CULL_FACE","","",null,null],[17,"CULL_FACE_MODE","","",null,null],[17,"CURRENT_PROGRAM","","",null,null],[17,"CURRENT_QUERY","","",null,null],[17,"CURRENT_VERTEX_ATTRIB","","",null,null],[17,"CW","","",null,null],[17,"DEBUG_CALLBACK_FUNCTION","","",null,null],[17,"DEBUG_CALLBACK_USER_PARAM","","",null,null],[17,"DEBUG_GROUP_STACK_DEPTH","","",null,null],[17,"DEBUG_LOGGED_MESSAGES","","",null,null],[17,"DEBUG_NEXT_LOGGED_MESSAGE_LENGTH","","",null,null],[17,"DEBUG_OUTPUT","","",null,null],[17,"DEBUG_OUTPUT_SYNCHRONOUS","","",null,null],[17,"DEBUG_SEVERITY_HIGH","","",null,null],[17,"DEBUG_SEVERITY_LOW","","",null,null],[17,"DEBUG_SEVERITY_MEDIUM","","",null,null],[17,"DEBUG_SEVERITY_NOTIFICATION","","",null,null],[17,"DEBUG_SOURCE_API","","",null,null],[17,"DEBUG_SOURCE_APPLICATION","","",null,null],[17,"DEBUG_SOURCE_OTHER","","",null,null],[17,"DEBUG_SOURCE_SHADER_COMPILER","","",null,null],[17,"DEBUG_SOURCE_THIRD_PARTY","","",null,null],[17,"DEBUG_SOURCE_WINDOW_SYSTEM","","",null,null],[17,"DEBUG_TYPE_DEPRECATED_BEHAVIOR","","",null,null],[17,"DEBUG_TYPE_ERROR","","",null,null],[17,"DEBUG_TYPE_MARKER","","",null,null],[17,"DEBUG_TYPE_OTHER","","",null,null],[17,"DEBUG_TYPE_PERFORMANCE","","",null,null],[17,"DEBUG_TYPE_POP_GROUP","","",null,null],[17,"DEBUG_TYPE_PORTABILITY","","",null,null],[17,"DEBUG_TYPE_PUSH_GROUP","","",null,null],[17,"DEBUG_TYPE_UNDEFINED_BEHAVIOR","","",null,null],[17,"DECR","","",null,null],[17,"DECR_WRAP","","",null,null],[17,"DELETE_STATUS","","",null,null],[17,"DEPTH","","",null,null],[17,"DEPTH24_STENCIL8","","",null,null],[17,"DEPTH32F_STENCIL8","","",null,null],[17,"DEPTH_ATTACHMENT","","",null,null],[17,"DEPTH_BUFFER_BIT","","",null,null],[17,"DEPTH_CLAMP","","",null,null],[17,"DEPTH_CLEAR_VALUE","","",null,null],[17,"DEPTH_COMPONENT","","",null,null],[17,"DEPTH_COMPONENT16","","",null,null],[17,"DEPTH_COMPONENT24","","",null,null],[17,"DEPTH_COMPONENT32","","",null,null],[17,"DEPTH_COMPONENT32F","","",null,null],[17,"DEPTH_COMPONENTS","","",null,null],[17,"DEPTH_FUNC","","",null,null],[17,"DEPTH_RANGE","","",null,null],[17,"DEPTH_RENDERABLE","","",null,null],[17,"DEPTH_STENCIL","","",null,null],[17,"DEPTH_STENCIL_ATTACHMENT","","",null,null],[17,"DEPTH_STENCIL_TEXTURE_MODE","","",null,null],[17,"DEPTH_TEST","","",null,null],[17,"DEPTH_WRITEMASK","","",null,null],[17,"DISPATCH_INDIRECT_BUFFER","","",null,null],[17,"DISPATCH_INDIRECT_BUFFER_BINDING","","",null,null],[17,"DISPLAY_LIST","","",null,null],[17,"DITHER","","",null,null],[17,"DONT_CARE","","",null,null],[17,"DOUBLE","","",null,null],[17,"DOUBLEBUFFER","","",null,null],[17,"DOUBLE_MAT2","","",null,null],[17,"DOUBLE_MAT2x3","","",null,null],[17,"DOUBLE_MAT2x4","","",null,null],[17,"DOUBLE_MAT3","","",null,null],[17,"DOUBLE_MAT3x2","","",null,null],[17,"DOUBLE_MAT3x4","","",null,null],[17,"DOUBLE_MAT4","","",null,null],[17,"DOUBLE_MAT4x2","","",null,null],[17,"DOUBLE_MAT4x3","","",null,null],[17,"DOUBLE_VEC2","","",null,null],[17,"DOUBLE_VEC3","","",null,null],[17,"DOUBLE_VEC4","","",null,null],[17,"DRAW_BUFFER","","",null,null],[17,"DRAW_BUFFER0","","",null,null],[17,"DRAW_BUFFER1","","",null,null],[17,"DRAW_BUFFER10","","",null,null],[17,"DRAW_BUFFER11","","",null,null],[17,"DRAW_BUFFER12","","",null,null],[17,"DRAW_BUFFER13","","",null,null],[17,"DRAW_BUFFER14","","",null,null],[17,"DRAW_BUFFER15","","",null,null],[17,"DRAW_BUFFER2","","",null,null],[17,"DRAW_BUFFER3","","",null,null],[17,"DRAW_BUFFER4","","",null,null],[17,"DRAW_BUFFER5","","",null,null],[17,"DRAW_BUFFER6","","",null,null],[17,"DRAW_BUFFER7","","",null,null],[17,"DRAW_BUFFER8","","",null,null],[17,"DRAW_BUFFER9","","",null,null],[17,"DRAW_FRAMEBUFFER","","",null,null],[17,"DRAW_FRAMEBUFFER_BINDING","","",null,null],[17,"DRAW_INDIRECT_BUFFER","","",null,null],[17,"DRAW_INDIRECT_BUFFER_BINDING","","",null,null],[17,"DST_ALPHA","","",null,null],[17,"DST_COLOR","","",null,null],[17,"DYNAMIC_COPY","","",null,null],[17,"DYNAMIC_DRAW","","",null,null],[17,"DYNAMIC_READ","","",null,null],[17,"DYNAMIC_STORAGE_BIT","","",null,null],[17,"ELEMENT_ARRAY_BARRIER_BIT","","",null,null],[17,"ELEMENT_ARRAY_BUFFER","","",null,null],[17,"ELEMENT_ARRAY_BUFFER_BINDING","","",null,null],[17,"EQUAL","","",null,null],[17,"EQUIV","","",null,null],[17,"EXTENSIONS","","",null,null],[17,"FALSE","","",null,null],[17,"FASTEST","","",null,null],[17,"FILL","","",null,null],[17,"FILTER","","",null,null],[17,"FIRST_VERTEX_CONVENTION","","",null,null],[17,"FIXED","","",null,null],[17,"FIXED_ONLY","","",null,null],[17,"FLOAT","","",null,null],[17,"FLOAT_32_UNSIGNED_INT_24_8_REV","","",null,null],[17,"FLOAT_MAT2","","",null,null],[17,"FLOAT_MAT2x3","","",null,null],[17,"FLOAT_MAT2x4","","",null,null],[17,"FLOAT_MAT3","","",null,null],[17,"FLOAT_MAT3x2","","",null,null],[17,"FLOAT_MAT3x4","","",null,null],[17,"FLOAT_MAT4","","",null,null],[17,"FLOAT_MAT4x2","","",null,null],[17,"FLOAT_MAT4x3","","",null,null],[17,"FLOAT_VEC2","","",null,null],[17,"FLOAT_VEC3","","",null,null],[17,"FLOAT_VEC4","","",null,null],[17,"FRACTIONAL_EVEN","","",null,null],[17,"FRACTIONAL_ODD","","",null,null],[17,"FRAGMENT_INTERPOLATION_OFFSET_BITS","","",null,null],[17,"FRAGMENT_SHADER","","",null,null],[17,"FRAGMENT_SHADER_BIT","","",null,null],[17,"FRAGMENT_SHADER_DERIVATIVE_HINT","","",null,null],[17,"FRAGMENT_SUBROUTINE","","",null,null],[17,"FRAGMENT_SUBROUTINE_UNIFORM","","",null,null],[17,"FRAGMENT_TEXTURE","","",null,null],[17,"FRAMEBUFFER","","",null,null],[17,"FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE","","",null,null],[17,"FRAMEBUFFER_ATTACHMENT_BLUE_SIZE","","",null,null],[17,"FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING","","",null,null],[17,"FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE","","",null,null],[17,"FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE","","",null,null],[17,"FRAMEBUFFER_ATTACHMENT_GREEN_SIZE","","",null,null],[17,"FRAMEBUFFER_ATTACHMENT_LAYERED","","",null,null],[17,"FRAMEBUFFER_ATTACHMENT_OBJECT_NAME","","",null,null],[17,"FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE","","",null,null],[17,"FRAMEBUFFER_ATTACHMENT_RED_SIZE","","",null,null],[17,"FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE","","",null,null],[17,"FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE","","",null,null],[17,"FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER","","",null,null],[17,"FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL","","",null,null],[17,"FRAMEBUFFER_BARRIER_BIT","","",null,null],[17,"FRAMEBUFFER_BINDING","","",null,null],[17,"FRAMEBUFFER_BLEND","","",null,null],[17,"FRAMEBUFFER_COMPLETE","","",null,null],[17,"FRAMEBUFFER_DEFAULT","","",null,null],[17,"FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS","","",null,null],[17,"FRAMEBUFFER_DEFAULT_HEIGHT","","",null,null],[17,"FRAMEBUFFER_DEFAULT_LAYERS","","",null,null],[17,"FRAMEBUFFER_DEFAULT_SAMPLES","","",null,null],[17,"FRAMEBUFFER_DEFAULT_WIDTH","","",null,null],[17,"FRAMEBUFFER_INCOMPLETE_ATTACHMENT","","",null,null],[17,"FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER","","",null,null],[17,"FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS","","",null,null],[17,"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT","","",null,null],[17,"FRAMEBUFFER_INCOMPLETE_MULTISAMPLE","","",null,null],[17,"FRAMEBUFFER_INCOMPLETE_READ_BUFFER","","",null,null],[17,"FRAMEBUFFER_RENDERABLE","","",null,null],[17,"FRAMEBUFFER_RENDERABLE_LAYERED","","",null,null],[17,"FRAMEBUFFER_SRGB","","",null,null],[17,"FRAMEBUFFER_UNDEFINED","","",null,null],[17,"FRAMEBUFFER_UNSUPPORTED","","",null,null],[17,"FRONT","","",null,null],[17,"FRONT_AND_BACK","","",null,null],[17,"FRONT_FACE","","",null,null],[17,"FRONT_LEFT","","",null,null],[17,"FRONT_RIGHT","","",null,null],[17,"FULL_SUPPORT","","",null,null],[17,"FUNC_ADD","","",null,null],[17,"FUNC_REVERSE_SUBTRACT","","",null,null],[17,"FUNC_SUBTRACT","","",null,null],[17,"GEOMETRY_INPUT_TYPE","","",null,null],[17,"GEOMETRY_OUTPUT_TYPE","","",null,null],[17,"GEOMETRY_SHADER","","",null,null],[17,"GEOMETRY_SHADER_BIT","","",null,null],[17,"GEOMETRY_SHADER_INVOCATIONS","","",null,null],[17,"GEOMETRY_SUBROUTINE","","",null,null],[17,"GEOMETRY_SUBROUTINE_UNIFORM","","",null,null],[17,"GEOMETRY_TEXTURE","","",null,null],[17,"GEOMETRY_VERTICES_OUT","","",null,null],[17,"GEQUAL","","",null,null],[17,"GET_TEXTURE_IMAGE_FORMAT","","",null,null],[17,"GET_TEXTURE_IMAGE_TYPE","","",null,null],[17,"GREATER","","",null,null],[17,"GREEN","","",null,null],[17,"GREEN_INTEGER","","",null,null],[17,"GUILTY_CONTEXT_RESET","","",null,null],[17,"HALF_FLOAT","","",null,null],[17,"HIGH_FLOAT","","",null,null],[17,"HIGH_INT","","",null,null],[17,"IMAGE_1D","","",null,null],[17,"IMAGE_1D_ARRAY","","",null,null],[17,"IMAGE_2D","","",null,null],[17,"IMAGE_2D_ARRAY","","",null,null],[17,"IMAGE_2D_MULTISAMPLE","","",null,null],[17,"IMAGE_2D_MULTISAMPLE_ARRAY","","",null,null],[17,"IMAGE_2D_RECT","","",null,null],[17,"IMAGE_3D","","",null,null],[17,"IMAGE_BINDING_ACCESS","","",null,null],[17,"IMAGE_BINDING_FORMAT","","",null,null],[17,"IMAGE_BINDING_LAYER","","",null,null],[17,"IMAGE_BINDING_LAYERED","","",null,null],[17,"IMAGE_BINDING_LEVEL","","",null,null],[17,"IMAGE_BINDING_NAME","","",null,null],[17,"IMAGE_BUFFER","","",null,null],[17,"IMAGE_CLASS_10_10_10_2","","",null,null],[17,"IMAGE_CLASS_11_11_10","","",null,null],[17,"IMAGE_CLASS_1_X_16","","",null,null],[17,"IMAGE_CLASS_1_X_32","","",null,null],[17,"IMAGE_CLASS_1_X_8","","",null,null],[17,"IMAGE_CLASS_2_X_16","","",null,null],[17,"IMAGE_CLASS_2_X_32","","",null,null],[17,"IMAGE_CLASS_2_X_8","","",null,null],[17,"IMAGE_CLASS_4_X_16","","",null,null],[17,"IMAGE_CLASS_4_X_32","","",null,null],[17,"IMAGE_CLASS_4_X_8","","",null,null],[17,"IMAGE_COMPATIBILITY_CLASS","","",null,null],[17,"IMAGE_CUBE","","",null,null],[17,"IMAGE_CUBE_MAP_ARRAY","","",null,null],[17,"IMAGE_FORMAT_COMPATIBILITY_BY_CLASS","","",null,null],[17,"IMAGE_FORMAT_COMPATIBILITY_BY_SIZE","","",null,null],[17,"IMAGE_FORMAT_COMPATIBILITY_TYPE","","",null,null],[17,"IMAGE_PIXEL_FORMAT","","",null,null],[17,"IMAGE_PIXEL_TYPE","","",null,null],[17,"IMAGE_TEXEL_SIZE","","",null,null],[17,"IMPLEMENTATION_COLOR_READ_FORMAT","","",null,null],[17,"IMPLEMENTATION_COLOR_READ_TYPE","","",null,null],[17,"INCR","","",null,null],[17,"INCR_WRAP","","",null,null],[17,"INFO_LOG_LENGTH","","",null,null],[17,"INNOCENT_CONTEXT_RESET","","",null,null],[17,"INT","","",null,null],[17,"INTERLEAVED_ATTRIBS","","",null,null],[17,"INTERNALFORMAT_ALPHA_SIZE","","",null,null],[17,"INTERNALFORMAT_ALPHA_TYPE","","",null,null],[17,"INTERNALFORMAT_BLUE_SIZE","","",null,null],[17,"INTERNALFORMAT_BLUE_TYPE","","",null,null],[17,"INTERNALFORMAT_DEPTH_SIZE","","",null,null],[17,"INTERNALFORMAT_DEPTH_TYPE","","",null,null],[17,"INTERNALFORMAT_GREEN_SIZE","","",null,null],[17,"INTERNALFORMAT_GREEN_TYPE","","",null,null],[17,"INTERNALFORMAT_PREFERRED","","",null,null],[17,"INTERNALFORMAT_RED_SIZE","","",null,null],[17,"INTERNALFORMAT_RED_TYPE","","",null,null],[17,"INTERNALFORMAT_SHARED_SIZE","","",null,null],[17,"INTERNALFORMAT_STENCIL_SIZE","","",null,null],[17,"INTERNALFORMAT_STENCIL_TYPE","","",null,null],[17,"INTERNALFORMAT_SUPPORTED","","",null,null],[17,"INT_2_10_10_10_REV","","",null,null],[17,"INT_IMAGE_1D","","",null,null],[17,"INT_IMAGE_1D_ARRAY","","",null,null],[17,"INT_IMAGE_2D","","",null,null],[17,"INT_IMAGE_2D_ARRAY","","",null,null],[17,"INT_IMAGE_2D_MULTISAMPLE","","",null,null],[17,"INT_IMAGE_2D_MULTISAMPLE_ARRAY","","",null,null],[17,"INT_IMAGE_2D_RECT","","",null,null],[17,"INT_IMAGE_3D","","",null,null],[17,"INT_IMAGE_BUFFER","","",null,null],[17,"INT_IMAGE_CUBE","","",null,null],[17,"INT_IMAGE_CUBE_MAP_ARRAY","","",null,null],[17,"INT_SAMPLER_1D","","",null,null],[17,"INT_SAMPLER_1D_ARRAY","","",null,null],[17,"INT_SAMPLER_2D","","",null,null],[17,"INT_SAMPLER_2D_ARRAY","","",null,null],[17,"INT_SAMPLER_2D_MULTISAMPLE","","",null,null],[17,"INT_SAMPLER_2D_MULTISAMPLE_ARRAY","","",null,null],[17,"INT_SAMPLER_2D_RECT","","",null,null],[17,"INT_SAMPLER_3D","","",null,null],[17,"INT_SAMPLER_BUFFER","","",null,null],[17,"INT_SAMPLER_CUBE","","",null,null],[17,"INT_SAMPLER_CUBE_MAP_ARRAY","","",null,null],[17,"INT_VEC2","","",null,null],[17,"INT_VEC3","","",null,null],[17,"INT_VEC4","","",null,null],[17,"INVALID_ENUM","","",null,null],[17,"INVALID_FRAMEBUFFER_OPERATION","","",null,null],[17,"INVALID_INDEX","","",null,null],[17,"INVALID_OPERATION","","",null,null],[17,"INVALID_VALUE","","",null,null],[17,"INVERT","","",null,null],[17,"ISOLINES","","",null,null],[17,"IS_PER_PATCH","","",null,null],[17,"IS_ROW_MAJOR","","",null,null],[17,"KEEP","","",null,null],[17,"LAST_VERTEX_CONVENTION","","",null,null],[17,"LAYER_PROVOKING_VERTEX","","",null,null],[17,"LEFT","","",null,null],[17,"LEQUAL","","",null,null],[17,"LESS","","",null,null],[17,"LINE","","",null,null],[17,"LINEAR","","",null,null],[17,"LINEAR_MIPMAP_LINEAR","","",null,null],[17,"LINEAR_MIPMAP_NEAREST","","",null,null],[17,"LINES","","",null,null],[17,"LINES_ADJACENCY","","",null,null],[17,"LINE_LOOP","","",null,null],[17,"LINE_SMOOTH","","",null,null],[17,"LINE_SMOOTH_HINT","","",null,null],[17,"LINE_STRIP","","",null,null],[17,"LINE_STRIP_ADJACENCY","","",null,null],[17,"LINE_WIDTH","","",null,null],[17,"LINE_WIDTH_GRANULARITY","","",null,null],[17,"LINE_WIDTH_RANGE","","",null,null],[17,"LINK_STATUS","","",null,null],[17,"LOCATION","","",null,null],[17,"LOCATION_COMPONENT","","",null,null],[17,"LOCATION_INDEX","","",null,null],[17,"LOGIC_OP_MODE","","",null,null],[17,"LOSE_CONTEXT_ON_RESET","","",null,null],[17,"LOWER_LEFT","","",null,null],[17,"LOW_FLOAT","","",null,null],[17,"LOW_INT","","",null,null],[17,"MAJOR_VERSION","","",null,null],[17,"MANUAL_GENERATE_MIPMAP","","",null,null],[17,"MAP_COHERENT_BIT","","",null,null],[17,"MAP_FLUSH_EXPLICIT_BIT","","",null,null],[17,"MAP_INVALIDATE_BUFFER_BIT","","",null,null],[17,"MAP_INVALIDATE_RANGE_BIT","","",null,null],[17,"MAP_PERSISTENT_BIT","","",null,null],[17,"MAP_READ_BIT","","",null,null],[17,"MAP_UNSYNCHRONIZED_BIT","","",null,null],[17,"MAP_WRITE_BIT","","",null,null],[17,"MATRIX_STRIDE","","",null,null],[17,"MAX","","",null,null],[17,"MAX_3D_TEXTURE_SIZE","","",null,null],[17,"MAX_ARRAY_TEXTURE_LAYERS","","",null,null],[17,"MAX_ATOMIC_COUNTER_BUFFER_BINDINGS","","",null,null],[17,"MAX_ATOMIC_COUNTER_BUFFER_SIZE","","",null,null],[17,"MAX_CLIP_DISTANCES","","",null,null],[17,"MAX_COLOR_ATTACHMENTS","","",null,null],[17,"MAX_COLOR_TEXTURE_SAMPLES","","",null,null],[17,"MAX_COMBINED_ATOMIC_COUNTERS","","",null,null],[17,"MAX_COMBINED_ATOMIC_COUNTER_BUFFERS","","",null,null],[17,"MAX_COMBINED_CLIP_AND_CULL_DISTANCES","","",null,null],[17,"MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS","","",null,null],[17,"MAX_COMBINED_DIMENSIONS","","",null,null],[17,"MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS","","",null,null],[17,"MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS","","",null,null],[17,"MAX_COMBINED_IMAGE_UNIFORMS","","",null,null],[17,"MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS","","",null,null],[17,"MAX_COMBINED_SHADER_OUTPUT_RESOURCES","","",null,null],[17,"MAX_COMBINED_SHADER_STORAGE_BLOCKS","","",null,null],[17,"MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS","","",null,null],[17,"MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS","","",null,null],[17,"MAX_COMBINED_TEXTURE_IMAGE_UNITS","","",null,null],[17,"MAX_COMBINED_UNIFORM_BLOCKS","","",null,null],[17,"MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS","","",null,null],[17,"MAX_COMPUTE_ATOMIC_COUNTERS","","",null,null],[17,"MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS","","",null,null],[17,"MAX_COMPUTE_IMAGE_UNIFORMS","","",null,null],[17,"MAX_COMPUTE_SHADER_STORAGE_BLOCKS","","",null,null],[17,"MAX_COMPUTE_SHARED_MEMORY_SIZE","","",null,null],[17,"MAX_COMPUTE_TEXTURE_IMAGE_UNITS","","",null,null],[17,"MAX_COMPUTE_UNIFORM_BLOCKS","","",null,null],[17,"MAX_COMPUTE_UNIFORM_COMPONENTS","","",null,null],[17,"MAX_COMPUTE_WORK_GROUP_COUNT","","",null,null],[17,"MAX_COMPUTE_WORK_GROUP_INVOCATIONS","","",null,null],[17,"MAX_COMPUTE_WORK_GROUP_SIZE","","",null,null],[17,"MAX_CUBE_MAP_TEXTURE_SIZE","","",null,null],[17,"MAX_CULL_DISTANCES","","",null,null],[17,"MAX_DEBUG_GROUP_STACK_DEPTH","","",null,null],[17,"MAX_DEBUG_LOGGED_MESSAGES","","",null,null],[17,"MAX_DEBUG_MESSAGE_LENGTH","","",null,null],[17,"MAX_DEPTH","","",null,null],[17,"MAX_DEPTH_TEXTURE_SAMPLES","","",null,null],[17,"MAX_DRAW_BUFFERS","","",null,null],[17,"MAX_DUAL_SOURCE_DRAW_BUFFERS","","",null,null],[17,"MAX_ELEMENTS_INDICES","","",null,null],[17,"MAX_ELEMENTS_VERTICES","","",null,null],[17,"MAX_ELEMENT_INDEX","","",null,null],[17,"MAX_FRAGMENT_ATOMIC_COUNTERS","","",null,null],[17,"MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS","","",null,null],[17,"MAX_FRAGMENT_IMAGE_UNIFORMS","","",null,null],[17,"MAX_FRAGMENT_INPUT_COMPONENTS","","",null,null],[17,"MAX_FRAGMENT_INTERPOLATION_OFFSET","","",null,null],[17,"MAX_FRAGMENT_SHADER_STORAGE_BLOCKS","","",null,null],[17,"MAX_FRAGMENT_UNIFORM_BLOCKS","","",null,null],[17,"MAX_FRAGMENT_UNIFORM_COMPONENTS","","",null,null],[17,"MAX_FRAGMENT_UNIFORM_VECTORS","","",null,null],[17,"MAX_FRAMEBUFFER_HEIGHT","","",null,null],[17,"MAX_FRAMEBUFFER_LAYERS","","",null,null],[17,"MAX_FRAMEBUFFER_SAMPLES","","",null,null],[17,"MAX_FRAMEBUFFER_WIDTH","","",null,null],[17,"MAX_GEOMETRY_ATOMIC_COUNTERS","","",null,null],[17,"MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS","","",null,null],[17,"MAX_GEOMETRY_IMAGE_UNIFORMS","","",null,null],[17,"MAX_GEOMETRY_INPUT_COMPONENTS","","",null,null],[17,"MAX_GEOMETRY_OUTPUT_COMPONENTS","","",null,null],[17,"MAX_GEOMETRY_OUTPUT_VERTICES","","",null,null],[17,"MAX_GEOMETRY_SHADER_INVOCATIONS","","",null,null],[17,"MAX_GEOMETRY_SHADER_STORAGE_BLOCKS","","",null,null],[17,"MAX_GEOMETRY_TEXTURE_IMAGE_UNITS","","",null,null],[17,"MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS","","",null,null],[17,"MAX_GEOMETRY_UNIFORM_BLOCKS","","",null,null],[17,"MAX_GEOMETRY_UNIFORM_COMPONENTS","","",null,null],[17,"MAX_HEIGHT","","",null,null],[17,"MAX_IMAGE_SAMPLES","","",null,null],[17,"MAX_IMAGE_UNITS","","",null,null],[17,"MAX_INTEGER_SAMPLES","","",null,null],[17,"MAX_LABEL_LENGTH","","",null,null],[17,"MAX_LAYERS","","",null,null],[17,"MAX_NAME_LENGTH","","",null,null],[17,"MAX_NUM_ACTIVE_VARIABLES","","",null,null],[17,"MAX_NUM_COMPATIBLE_SUBROUTINES","","",null,null],[17,"MAX_PATCH_VERTICES","","",null,null],[17,"MAX_PROGRAM_TEXEL_OFFSET","","",null,null],[17,"MAX_PROGRAM_TEXTURE_GATHER_OFFSET","","",null,null],[17,"MAX_RECTANGLE_TEXTURE_SIZE","","",null,null],[17,"MAX_RENDERBUFFER_SIZE","","",null,null],[17,"MAX_SAMPLES","","",null,null],[17,"MAX_SAMPLE_MASK_WORDS","","",null,null],[17,"MAX_SERVER_WAIT_TIMEOUT","","",null,null],[17,"MAX_SHADER_STORAGE_BLOCK_SIZE","","",null,null],[17,"MAX_SHADER_STORAGE_BUFFER_BINDINGS","","",null,null],[17,"MAX_SUBROUTINES","","",null,null],[17,"MAX_SUBROUTINE_UNIFORM_LOCATIONS","","",null,null],[17,"MAX_TESS_CONTROL_ATOMIC_COUNTERS","","",null,null],[17,"MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS","","",null,null],[17,"MAX_TESS_CONTROL_IMAGE_UNIFORMS","","",null,null],[17,"MAX_TESS_CONTROL_INPUT_COMPONENTS","","",null,null],[17,"MAX_TESS_CONTROL_OUTPUT_COMPONENTS","","",null,null],[17,"MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS","","",null,null],[17,"MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS","","",null,null],[17,"MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS","","",null,null],[17,"MAX_TESS_CONTROL_UNIFORM_BLOCKS","","",null,null],[17,"MAX_TESS_CONTROL_UNIFORM_COMPONENTS","","",null,null],[17,"MAX_TESS_EVALUATION_ATOMIC_COUNTERS","","",null,null],[17,"MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS","","",null,null],[17,"MAX_TESS_EVALUATION_IMAGE_UNIFORMS","","",null,null],[17,"MAX_TESS_EVALUATION_INPUT_COMPONENTS","","",null,null],[17,"MAX_TESS_EVALUATION_OUTPUT_COMPONENTS","","",null,null],[17,"MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS","","",null,null],[17,"MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS","","",null,null],[17,"MAX_TESS_EVALUATION_UNIFORM_BLOCKS","","",null,null],[17,"MAX_TESS_EVALUATION_UNIFORM_COMPONENTS","","",null,null],[17,"MAX_TESS_GEN_LEVEL","","",null,null],[17,"MAX_TESS_PATCH_COMPONENTS","","",null,null],[17,"MAX_TEXTURE_BUFFER_SIZE","","",null,null],[17,"MAX_TEXTURE_IMAGE_UNITS","","",null,null],[17,"MAX_TEXTURE_LOD_BIAS","","",null,null],[17,"MAX_TEXTURE_SIZE","","",null,null],[17,"MAX_TRANSFORM_FEEDBACK_BUFFERS","","",null,null],[17,"MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS","","",null,null],[17,"MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS","","",null,null],[17,"MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS","","",null,null],[17,"MAX_UNIFORM_BLOCK_SIZE","","",null,null],[17,"MAX_UNIFORM_BUFFER_BINDINGS","","",null,null],[17,"MAX_UNIFORM_LOCATIONS","","",null,null],[17,"MAX_VARYING_COMPONENTS","","",null,null],[17,"MAX_VARYING_FLOATS","","",null,null],[17,"MAX_VARYING_VECTORS","","",null,null],[17,"MAX_VERTEX_ATOMIC_COUNTERS","","",null,null],[17,"MAX_VERTEX_ATOMIC_COUNTER_BUFFERS","","",null,null],[17,"MAX_VERTEX_ATTRIBS","","",null,null],[17,"MAX_VERTEX_ATTRIB_BINDINGS","","",null,null],[17,"MAX_VERTEX_ATTRIB_RELATIVE_OFFSET","","",null,null],[17,"MAX_VERTEX_ATTRIB_STRIDE","","",null,null],[17,"MAX_VERTEX_IMAGE_UNIFORMS","","",null,null],[17,"MAX_VERTEX_OUTPUT_COMPONENTS","","",null,null],[17,"MAX_VERTEX_SHADER_STORAGE_BLOCKS","","",null,null],[17,"MAX_VERTEX_STREAMS","","",null,null],[17,"MAX_VERTEX_TEXTURE_IMAGE_UNITS","","",null,null],[17,"MAX_VERTEX_UNIFORM_BLOCKS","","",null,null],[17,"MAX_VERTEX_UNIFORM_COMPONENTS","","",null,null],[17,"MAX_VERTEX_UNIFORM_VECTORS","","",null,null],[17,"MAX_VIEWPORTS","","",null,null],[17,"MAX_VIEWPORT_DIMS","","",null,null],[17,"MAX_WIDTH","","",null,null],[17,"MEDIUM_FLOAT","","",null,null],[17,"MEDIUM_INT","","",null,null],[17,"MIN","","",null,null],[17,"MINOR_VERSION","","",null,null],[17,"MIN_FRAGMENT_INTERPOLATION_OFFSET","","",null,null],[17,"MIN_MAP_BUFFER_ALIGNMENT","","",null,null],[17,"MIN_PROGRAM_TEXEL_OFFSET","","",null,null],[17,"MIN_PROGRAM_TEXTURE_GATHER_OFFSET","","",null,null],[17,"MIN_SAMPLE_SHADING_VALUE","","",null,null],[17,"MIPMAP","","",null,null],[17,"MIRRORED_REPEAT","","",null,null],[17,"MIRROR_CLAMP_TO_EDGE","","",null,null],[17,"MULTISAMPLE","","",null,null],[17,"NAME_LENGTH","","",null,null],[17,"NAND","","",null,null],[17,"NEAREST","","",null,null],[17,"NEAREST_MIPMAP_LINEAR","","",null,null],[17,"NEAREST_MIPMAP_NEAREST","","",null,null],[17,"NEGATIVE_ONE_TO_ONE","","",null,null],[17,"NEVER","","",null,null],[17,"NICEST","","",null,null],[17,"NONE","","",null,null],[17,"NOOP","","",null,null],[17,"NOR","","",null,null],[17,"NOTEQUAL","","",null,null],[17,"NO_ERROR","","",null,null],[17,"NO_RESET_NOTIFICATION","","",null,null],[17,"NUM_ACTIVE_VARIABLES","","",null,null],[17,"NUM_COMPATIBLE_SUBROUTINES","","",null,null],[17,"NUM_COMPRESSED_TEXTURE_FORMATS","","",null,null],[17,"NUM_EXTENSIONS","","",null,null],[17,"NUM_PROGRAM_BINARY_FORMATS","","",null,null],[17,"NUM_SAMPLE_COUNTS","","",null,null],[17,"NUM_SHADER_BINARY_FORMATS","","",null,null],[17,"NUM_SHADING_LANGUAGE_VERSIONS","","",null,null],[17,"OBJECT_TYPE","","",null,null],[17,"OFFSET","","",null,null],[17,"ONE","","",null,null],[17,"ONE_MINUS_CONSTANT_ALPHA","","",null,null],[17,"ONE_MINUS_CONSTANT_COLOR","","",null,null],[17,"ONE_MINUS_DST_ALPHA","","",null,null],[17,"ONE_MINUS_DST_COLOR","","",null,null],[17,"ONE_MINUS_SRC1_ALPHA","","",null,null],[17,"ONE_MINUS_SRC1_COLOR","","",null,null],[17,"ONE_MINUS_SRC_ALPHA","","",null,null],[17,"ONE_MINUS_SRC_COLOR","","",null,null],[17,"OR","","",null,null],[17,"OR_INVERTED","","",null,null],[17,"OR_REVERSE","","",null,null],[17,"OUT_OF_MEMORY","","",null,null],[17,"PACK_ALIGNMENT","","",null,null],[17,"PACK_COMPRESSED_BLOCK_DEPTH","","",null,null],[17,"PACK_COMPRESSED_BLOCK_HEIGHT","","",null,null],[17,"PACK_COMPRESSED_BLOCK_SIZE","","",null,null],[17,"PACK_COMPRESSED_BLOCK_WIDTH","","",null,null],[17,"PACK_IMAGE_HEIGHT","","",null,null],[17,"PACK_LSB_FIRST","","",null,null],[17,"PACK_ROW_LENGTH","","",null,null],[17,"PACK_SKIP_IMAGES","","",null,null],[17,"PACK_SKIP_PIXELS","","",null,null],[17,"PACK_SKIP_ROWS","","",null,null],[17,"PACK_SWAP_BYTES","","",null,null],[17,"PATCHES","","",null,null],[17,"PATCH_DEFAULT_INNER_LEVEL","","",null,null],[17,"PATCH_DEFAULT_OUTER_LEVEL","","",null,null],[17,"PATCH_VERTICES","","",null,null],[17,"PIXEL_BUFFER_BARRIER_BIT","","",null,null],[17,"PIXEL_PACK_BUFFER","","",null,null],[17,"PIXEL_PACK_BUFFER_BINDING","","",null,null],[17,"PIXEL_UNPACK_BUFFER","","",null,null],[17,"PIXEL_UNPACK_BUFFER_BINDING","","",null,null],[17,"POINT","","",null,null],[17,"POINTS","","",null,null],[17,"POINT_FADE_THRESHOLD_SIZE","","",null,null],[17,"POINT_SIZE","","",null,null],[17,"POINT_SIZE_GRANULARITY","","",null,null],[17,"POINT_SIZE_RANGE","","",null,null],[17,"POINT_SPRITE_COORD_ORIGIN","","",null,null],[17,"POLYGON_MODE","","",null,null],[17,"POLYGON_OFFSET_FACTOR","","",null,null],[17,"POLYGON_OFFSET_FILL","","",null,null],[17,"POLYGON_OFFSET_LINE","","",null,null],[17,"POLYGON_OFFSET_POINT","","",null,null],[17,"POLYGON_OFFSET_UNITS","","",null,null],[17,"POLYGON_SMOOTH","","",null,null],[17,"POLYGON_SMOOTH_HINT","","",null,null],[17,"PRIMITIVES_GENERATED","","",null,null],[17,"PRIMITIVE_RESTART","","",null,null],[17,"PRIMITIVE_RESTART_FIXED_INDEX","","",null,null],[17,"PRIMITIVE_RESTART_FOR_PATCHES_SUPPORTED","","",null,null],[17,"PRIMITIVE_RESTART_INDEX","","",null,null],[17,"PROGRAM","","",null,null],[17,"PROGRAM_BINARY_FORMATS","","",null,null],[17,"PROGRAM_BINARY_LENGTH","","",null,null],[17,"PROGRAM_BINARY_RETRIEVABLE_HINT","","",null,null],[17,"PROGRAM_INPUT","","",null,null],[17,"PROGRAM_OUTPUT","","",null,null],[17,"PROGRAM_PIPELINE","","",null,null],[17,"PROGRAM_PIPELINE_BINDING","","",null,null],[17,"PROGRAM_POINT_SIZE","","",null,null],[17,"PROGRAM_SEPARABLE","","",null,null],[17,"PROVOKING_VERTEX","","",null,null],[17,"PROXY_TEXTURE_1D","","",null,null],[17,"PROXY_TEXTURE_1D_ARRAY","","",null,null],[17,"PROXY_TEXTURE_2D","","",null,null],[17,"PROXY_TEXTURE_2D_ARRAY","","",null,null],[17,"PROXY_TEXTURE_2D_MULTISAMPLE","","",null,null],[17,"PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY","","",null,null],[17,"PROXY_TEXTURE_3D","","",null,null],[17,"PROXY_TEXTURE_CUBE_MAP","","",null,null],[17,"PROXY_TEXTURE_CUBE_MAP_ARRAY","","",null,null],[17,"PROXY_TEXTURE_RECTANGLE","","",null,null],[17,"QUADS","","",null,null],[17,"QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION","","",null,null],[17,"QUERY","","",null,null],[17,"QUERY_BUFFER","","",null,null],[17,"QUERY_BUFFER_BARRIER_BIT","","",null,null],[17,"QUERY_BUFFER_BINDING","","",null,null],[17,"QUERY_BY_REGION_NO_WAIT","","",null,null],[17,"QUERY_BY_REGION_NO_WAIT_INVERTED","","",null,null],[17,"QUERY_BY_REGION_WAIT","","",null,null],[17,"QUERY_BY_REGION_WAIT_INVERTED","","",null,null],[17,"QUERY_COUNTER_BITS","","",null,null],[17,"QUERY_NO_WAIT","","",null,null],[17,"QUERY_NO_WAIT_INVERTED","","",null,null],[17,"QUERY_RESULT","","",null,null],[17,"QUERY_RESULT_AVAILABLE","","",null,null],[17,"QUERY_RESULT_NO_WAIT","","",null,null],[17,"QUERY_TARGET","","",null,null],[17,"QUERY_WAIT","","",null,null],[17,"QUERY_WAIT_INVERTED","","",null,null],[17,"R11F_G11F_B10F","","",null,null],[17,"R16","","",null,null],[17,"R16F","","",null,null],[17,"R16I","","",null,null],[17,"R16UI","","",null,null],[17,"R16_SNORM","","",null,null],[17,"R32F","","",null,null],[17,"R32I","","",null,null],[17,"R32UI","","",null,null],[17,"R3_G3_B2","","",null,null],[17,"R8","","",null,null],[17,"R8I","","",null,null],[17,"R8UI","","",null,null],[17,"R8_SNORM","","",null,null],[17,"RASTERIZER_DISCARD","","",null,null],[17,"READ_BUFFER","","",null,null],[17,"READ_FRAMEBUFFER","","",null,null],[17,"READ_FRAMEBUFFER_BINDING","","",null,null],[17,"READ_ONLY","","",null,null],[17,"READ_PIXELS","","",null,null],[17,"READ_PIXELS_FORMAT","","",null,null],[17,"READ_PIXELS_TYPE","","",null,null],[17,"READ_WRITE","","",null,null],[17,"RED","","",null,null],[17,"RED_INTEGER","","",null,null],[17,"REFERENCED_BY_COMPUTE_SHADER","","",null,null],[17,"REFERENCED_BY_FRAGMENT_SHADER","","",null,null],[17,"REFERENCED_BY_GEOMETRY_SHADER","","",null,null],[17,"REFERENCED_BY_TESS_CONTROL_SHADER","","",null,null],[17,"REFERENCED_BY_TESS_EVALUATION_SHADER","","",null,null],[17,"REFERENCED_BY_VERTEX_SHADER","","",null,null],[17,"RENDERBUFFER","","",null,null],[17,"RENDERBUFFER_ALPHA_SIZE","","",null,null],[17,"RENDERBUFFER_BINDING","","",null,null],[17,"RENDERBUFFER_BLUE_SIZE","","",null,null],[17,"RENDERBUFFER_DEPTH_SIZE","","",null,null],[17,"RENDERBUFFER_GREEN_SIZE","","",null,null],[17,"RENDERBUFFER_HEIGHT","","",null,null],[17,"RENDERBUFFER_INTERNAL_FORMAT","","",null,null],[17,"RENDERBUFFER_RED_SIZE","","",null,null],[17,"RENDERBUFFER_SAMPLES","","",null,null],[17,"RENDERBUFFER_STENCIL_SIZE","","",null,null],[17,"RENDERBUFFER_WIDTH","","",null,null],[17,"RENDERER","","",null,null],[17,"REPEAT","","",null,null],[17,"REPLACE","","",null,null],[17,"RESET_NOTIFICATION_STRATEGY","","",null,null],[17,"RG","","",null,null],[17,"RG16","","",null,null],[17,"RG16F","","",null,null],[17,"RG16I","","",null,null],[17,"RG16UI","","",null,null],[17,"RG16_SNORM","","",null,null],[17,"RG32F","","",null,null],[17,"RG32I","","",null,null],[17,"RG32UI","","",null,null],[17,"RG8","","",null,null],[17,"RG8I","","",null,null],[17,"RG8UI","","",null,null],[17,"RG8_SNORM","","",null,null],[17,"RGB","","",null,null],[17,"RGB10","","",null,null],[17,"RGB10_A2","","",null,null],[17,"RGB10_A2UI","","",null,null],[17,"RGB12","","",null,null],[17,"RGB16","","",null,null],[17,"RGB16F","","",null,null],[17,"RGB16I","","",null,null],[17,"RGB16UI","","",null,null],[17,"RGB16_SNORM","","",null,null],[17,"RGB32F","","",null,null],[17,"RGB32I","","",null,null],[17,"RGB32UI","","",null,null],[17,"RGB4","","",null,null],[17,"RGB5","","",null,null],[17,"RGB565","","",null,null],[17,"RGB5_A1","","",null,null],[17,"RGB8","","",null,null],[17,"RGB8I","","",null,null],[17,"RGB8UI","","",null,null],[17,"RGB8_SNORM","","",null,null],[17,"RGB9_E5","","",null,null],[17,"RGBA","","",null,null],[17,"RGBA12","","",null,null],[17,"RGBA16","","",null,null],[17,"RGBA16F","","",null,null],[17,"RGBA16I","","",null,null],[17,"RGBA16UI","","",null,null],[17,"RGBA16_SNORM","","",null,null],[17,"RGBA2","","",null,null],[17,"RGBA32F","","",null,null],[17,"RGBA32I","","",null,null],[17,"RGBA32UI","","",null,null],[17,"RGBA4","","",null,null],[17,"RGBA8","","",null,null],[17,"RGBA8I","","",null,null],[17,"RGBA8UI","","",null,null],[17,"RGBA8_SNORM","","",null,null],[17,"RGBA_INTEGER","","",null,null],[17,"RGB_INTEGER","","",null,null],[17,"RG_INTEGER","","",null,null],[17,"RIGHT","","",null,null],[17,"SAMPLER","","",null,null],[17,"SAMPLER_1D","","",null,null],[17,"SAMPLER_1D_ARRAY","","",null,null],[17,"SAMPLER_1D_ARRAY_SHADOW","","",null,null],[17,"SAMPLER_1D_SHADOW","","",null,null],[17,"SAMPLER_2D","","",null,null],[17,"SAMPLER_2D_ARRAY","","",null,null],[17,"SAMPLER_2D_ARRAY_SHADOW","","",null,null],[17,"SAMPLER_2D_MULTISAMPLE","","",null,null],[17,"SAMPLER_2D_MULTISAMPLE_ARRAY","","",null,null],[17,"SAMPLER_2D_RECT","","",null,null],[17,"SAMPLER_2D_RECT_SHADOW","","",null,null],[17,"SAMPLER_2D_SHADOW","","",null,null],[17,"SAMPLER_3D","","",null,null],[17,"SAMPLER_BINDING","","",null,null],[17,"SAMPLER_BUFFER","","",null,null],[17,"SAMPLER_CUBE","","",null,null],[17,"SAMPLER_CUBE_MAP_ARRAY","","",null,null],[17,"SAMPLER_CUBE_MAP_ARRAY_SHADOW","","",null,null],[17,"SAMPLER_CUBE_SHADOW","","",null,null],[17,"SAMPLES","","",null,null],[17,"SAMPLES_PASSED","","",null,null],[17,"SAMPLE_ALPHA_TO_COVERAGE","","",null,null],[17,"SAMPLE_ALPHA_TO_ONE","","",null,null],[17,"SAMPLE_BUFFERS","","",null,null],[17,"SAMPLE_COVERAGE","","",null,null],[17,"SAMPLE_COVERAGE_INVERT","","",null,null],[17,"SAMPLE_COVERAGE_VALUE","","",null,null],[17,"SAMPLE_MASK","","",null,null],[17,"SAMPLE_MASK_VALUE","","",null,null],[17,"SAMPLE_POSITION","","",null,null],[17,"SAMPLE_SHADING","","",null,null],[17,"SCISSOR_BOX","","",null,null],[17,"SCISSOR_TEST","","",null,null],[17,"SEPARATE_ATTRIBS","","",null,null],[17,"SET","","",null,null],[17,"SHADER","","",null,null],[17,"SHADER_BINARY_FORMATS","","",null,null],[17,"SHADER_COMPILER","","",null,null],[17,"SHADER_IMAGE_ACCESS_BARRIER_BIT","","",null,null],[17,"SHADER_IMAGE_ATOMIC","","",null,null],[17,"SHADER_IMAGE_LOAD","","",null,null],[17,"SHADER_IMAGE_STORE","","",null,null],[17,"SHADER_SOURCE_LENGTH","","",null,null],[17,"SHADER_STORAGE_BARRIER_BIT","","",null,null],[17,"SHADER_STORAGE_BLOCK","","",null,null],[17,"SHADER_STORAGE_BUFFER","","",null,null],[17,"SHADER_STORAGE_BUFFER_BINDING","","",null,null],[17,"SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT","","",null,null],[17,"SHADER_STORAGE_BUFFER_SIZE","","",null,null],[17,"SHADER_STORAGE_BUFFER_START","","",null,null],[17,"SHADER_TYPE","","",null,null],[17,"SHADING_LANGUAGE_VERSION","","",null,null],[17,"SHORT","","",null,null],[17,"SIGNALED","","",null,null],[17,"SIGNED_NORMALIZED","","",null,null],[17,"SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST","","",null,null],[17,"SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE","","",null,null],[17,"SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST","","",null,null],[17,"SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE","","",null,null],[17,"SMOOTH_LINE_WIDTH_GRANULARITY","","",null,null],[17,"SMOOTH_LINE_WIDTH_RANGE","","",null,null],[17,"SMOOTH_POINT_SIZE_GRANULARITY","","",null,null],[17,"SMOOTH_POINT_SIZE_RANGE","","",null,null],[17,"SRC1_ALPHA","","",null,null],[17,"SRC1_COLOR","","",null,null],[17,"SRC_ALPHA","","",null,null],[17,"SRC_ALPHA_SATURATE","","",null,null],[17,"SRC_COLOR","","",null,null],[17,"SRGB","","",null,null],[17,"SRGB8","","",null,null],[17,"SRGB8_ALPHA8","","",null,null],[17,"SRGB_ALPHA","","",null,null],[17,"SRGB_READ","","",null,null],[17,"SRGB_WRITE","","",null,null],[17,"STACK_OVERFLOW","","",null,null],[17,"STACK_UNDERFLOW","","",null,null],[17,"STATIC_COPY","","",null,null],[17,"STATIC_DRAW","","",null,null],[17,"STATIC_READ","","",null,null],[17,"STENCIL","","",null,null],[17,"STENCIL_ATTACHMENT","","",null,null],[17,"STENCIL_BACK_FAIL","","",null,null],[17,"STENCIL_BACK_FUNC","","",null,null],[17,"STENCIL_BACK_PASS_DEPTH_FAIL","","",null,null],[17,"STENCIL_BACK_PASS_DEPTH_PASS","","",null,null],[17,"STENCIL_BACK_REF","","",null,null],[17,"STENCIL_BACK_VALUE_MASK","","",null,null],[17,"STENCIL_BACK_WRITEMASK","","",null,null],[17,"STENCIL_BUFFER_BIT","","",null,null],[17,"STENCIL_CLEAR_VALUE","","",null,null],[17,"STENCIL_COMPONENTS","","",null,null],[17,"STENCIL_FAIL","","",null,null],[17,"STENCIL_FUNC","","",null,null],[17,"STENCIL_INDEX","","",null,null],[17,"STENCIL_INDEX1","","",null,null],[17,"STENCIL_INDEX16","","",null,null],[17,"STENCIL_INDEX4","","",null,null],[17,"STENCIL_INDEX8","","",null,null],[17,"STENCIL_PASS_DEPTH_FAIL","","",null,null],[17,"STENCIL_PASS_DEPTH_PASS","","",null,null],[17,"STENCIL_REF","","",null,null],[17,"STENCIL_RENDERABLE","","",null,null],[17,"STENCIL_TEST","","",null,null],[17,"STENCIL_VALUE_MASK","","",null,null],[17,"STENCIL_WRITEMASK","","",null,null],[17,"STEREO","","",null,null],[17,"STREAM_COPY","","",null,null],[17,"STREAM_DRAW","","",null,null],[17,"STREAM_READ","","",null,null],[17,"SUBPIXEL_BITS","","",null,null],[17,"SYNC_CONDITION","","",null,null],[17,"SYNC_FENCE","","",null,null],[17,"SYNC_FLAGS","","",null,null],[17,"SYNC_FLUSH_COMMANDS_BIT","","",null,null],[17,"SYNC_GPU_COMMANDS_COMPLETE","","",null,null],[17,"SYNC_STATUS","","",null,null],[17,"TESS_CONTROL_OUTPUT_VERTICES","","",null,null],[17,"TESS_CONTROL_SHADER","","",null,null],[17,"TESS_CONTROL_SHADER_BIT","","",null,null],[17,"TESS_CONTROL_SUBROUTINE","","",null,null],[17,"TESS_CONTROL_SUBROUTINE_UNIFORM","","",null,null],[17,"TESS_CONTROL_TEXTURE","","",null,null],[17,"TESS_EVALUATION_SHADER","","",null,null],[17,"TESS_EVALUATION_SHADER_BIT","","",null,null],[17,"TESS_EVALUATION_SUBROUTINE","","",null,null],[17,"TESS_EVALUATION_SUBROUTINE_UNIFORM","","",null,null],[17,"TESS_EVALUATION_TEXTURE","","",null,null],[17,"TESS_GEN_MODE","","",null,null],[17,"TESS_GEN_POINT_MODE","","",null,null],[17,"TESS_GEN_SPACING","","",null,null],[17,"TESS_GEN_VERTEX_ORDER","","",null,null],[17,"TEXTURE","","",null,null],[17,"TEXTURE0","","",null,null],[17,"TEXTURE1","","",null,null],[17,"TEXTURE10","","",null,null],[17,"TEXTURE11","","",null,null],[17,"TEXTURE12","","",null,null],[17,"TEXTURE13","","",null,null],[17,"TEXTURE14","","",null,null],[17,"TEXTURE15","","",null,null],[17,"TEXTURE16","","",null,null],[17,"TEXTURE17","","",null,null],[17,"TEXTURE18","","",null,null],[17,"TEXTURE19","","",null,null],[17,"TEXTURE2","","",null,null],[17,"TEXTURE20","","",null,null],[17,"TEXTURE21","","",null,null],[17,"TEXTURE22","","",null,null],[17,"TEXTURE23","","",null,null],[17,"TEXTURE24","","",null,null],[17,"TEXTURE25","","",null,null],[17,"TEXTURE26","","",null,null],[17,"TEXTURE27","","",null,null],[17,"TEXTURE28","","",null,null],[17,"TEXTURE29","","",null,null],[17,"TEXTURE3","","",null,null],[17,"TEXTURE30","","",null,null],[17,"TEXTURE31","","",null,null],[17,"TEXTURE4","","",null,null],[17,"TEXTURE5","","",null,null],[17,"TEXTURE6","","",null,null],[17,"TEXTURE7","","",null,null],[17,"TEXTURE8","","",null,null],[17,"TEXTURE9","","",null,null],[17,"TEXTURE_1D","","",null,null],[17,"TEXTURE_1D_ARRAY","","",null,null],[17,"TEXTURE_2D","","",null,null],[17,"TEXTURE_2D_ARRAY","","",null,null],[17,"TEXTURE_2D_MULTISAMPLE","","",null,null],[17,"TEXTURE_2D_MULTISAMPLE_ARRAY","","",null,null],[17,"TEXTURE_3D","","",null,null],[17,"TEXTURE_ALPHA_SIZE","","",null,null],[17,"TEXTURE_ALPHA_TYPE","","",null,null],[17,"TEXTURE_BASE_LEVEL","","",null,null],[17,"TEXTURE_BINDING_1D","","",null,null],[17,"TEXTURE_BINDING_1D_ARRAY","","",null,null],[17,"TEXTURE_BINDING_2D","","",null,null],[17,"TEXTURE_BINDING_2D_ARRAY","","",null,null],[17,"TEXTURE_BINDING_2D_MULTISAMPLE","","",null,null],[17,"TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY","","",null,null],[17,"TEXTURE_BINDING_3D","","",null,null],[17,"TEXTURE_BINDING_BUFFER","","",null,null],[17,"TEXTURE_BINDING_CUBE_MAP","","",null,null],[17,"TEXTURE_BINDING_CUBE_MAP_ARRAY","","",null,null],[17,"TEXTURE_BINDING_RECTANGLE","","",null,null],[17,"TEXTURE_BLUE_SIZE","","",null,null],[17,"TEXTURE_BLUE_TYPE","","",null,null],[17,"TEXTURE_BORDER_COLOR","","",null,null],[17,"TEXTURE_BUFFER","","",null,null],[17,"TEXTURE_BUFFER_BINDING","","",null,null],[17,"TEXTURE_BUFFER_DATA_STORE_BINDING","","",null,null],[17,"TEXTURE_BUFFER_OFFSET","","",null,null],[17,"TEXTURE_BUFFER_OFFSET_ALIGNMENT","","",null,null],[17,"TEXTURE_BUFFER_SIZE","","",null,null],[17,"TEXTURE_COMPARE_FUNC","","",null,null],[17,"TEXTURE_COMPARE_MODE","","",null,null],[17,"TEXTURE_COMPRESSED","","",null,null],[17,"TEXTURE_COMPRESSED_BLOCK_HEIGHT","","",null,null],[17,"TEXTURE_COMPRESSED_BLOCK_SIZE","","",null,null],[17,"TEXTURE_COMPRESSED_BLOCK_WIDTH","","",null,null],[17,"TEXTURE_COMPRESSED_IMAGE_SIZE","","",null,null],[17,"TEXTURE_COMPRESSION_HINT","","",null,null],[17,"TEXTURE_CUBE_MAP","","",null,null],[17,"TEXTURE_CUBE_MAP_ARRAY","","",null,null],[17,"TEXTURE_CUBE_MAP_NEGATIVE_X","","",null,null],[17,"TEXTURE_CUBE_MAP_NEGATIVE_Y","","",null,null],[17,"TEXTURE_CUBE_MAP_NEGATIVE_Z","","",null,null],[17,"TEXTURE_CUBE_MAP_POSITIVE_X","","",null,null],[17,"TEXTURE_CUBE_MAP_POSITIVE_Y","","",null,null],[17,"TEXTURE_CUBE_MAP_POSITIVE_Z","","",null,null],[17,"TEXTURE_CUBE_MAP_SEAMLESS","","",null,null],[17,"TEXTURE_DEPTH","","",null,null],[17,"TEXTURE_DEPTH_SIZE","","",null,null],[17,"TEXTURE_DEPTH_TYPE","","",null,null],[17,"TEXTURE_FETCH_BARRIER_BIT","","",null,null],[17,"TEXTURE_FIXED_SAMPLE_LOCATIONS","","",null,null],[17,"TEXTURE_GATHER","","",null,null],[17,"TEXTURE_GATHER_SHADOW","","",null,null],[17,"TEXTURE_GREEN_SIZE","","",null,null],[17,"TEXTURE_GREEN_TYPE","","",null,null],[17,"TEXTURE_HEIGHT","","",null,null],[17,"TEXTURE_IMAGE_FORMAT","","",null,null],[17,"TEXTURE_IMAGE_TYPE","","",null,null],[17,"TEXTURE_IMMUTABLE_FORMAT","","",null,null],[17,"TEXTURE_IMMUTABLE_LEVELS","","",null,null],[17,"TEXTURE_INTERNAL_FORMAT","","",null,null],[17,"TEXTURE_LOD_BIAS","","",null,null],[17,"TEXTURE_MAG_FILTER","","",null,null],[17,"TEXTURE_MAX_LEVEL","","",null,null],[17,"TEXTURE_MAX_LOD","","",null,null],[17,"TEXTURE_MIN_FILTER","","",null,null],[17,"TEXTURE_MIN_LOD","","",null,null],[17,"TEXTURE_RECTANGLE","","",null,null],[17,"TEXTURE_RED_SIZE","","",null,null],[17,"TEXTURE_RED_TYPE","","",null,null],[17,"TEXTURE_SAMPLES","","",null,null],[17,"TEXTURE_SHADOW","","",null,null],[17,"TEXTURE_SHARED_SIZE","","",null,null],[17,"TEXTURE_STENCIL_SIZE","","",null,null],[17,"TEXTURE_SWIZZLE_A","","",null,null],[17,"TEXTURE_SWIZZLE_B","","",null,null],[17,"TEXTURE_SWIZZLE_G","","",null,null],[17,"TEXTURE_SWIZZLE_R","","",null,null],[17,"TEXTURE_SWIZZLE_RGBA","","",null,null],[17,"TEXTURE_TARGET","","",null,null],[17,"TEXTURE_UPDATE_BARRIER_BIT","","",null,null],[17,"TEXTURE_VIEW","","",null,null],[17,"TEXTURE_VIEW_MIN_LAYER","","",null,null],[17,"TEXTURE_VIEW_MIN_LEVEL","","",null,null],[17,"TEXTURE_VIEW_NUM_LAYERS","","",null,null],[17,"TEXTURE_VIEW_NUM_LEVELS","","",null,null],[17,"TEXTURE_WIDTH","","",null,null],[17,"TEXTURE_WRAP_R","","",null,null],[17,"TEXTURE_WRAP_S","","",null,null],[17,"TEXTURE_WRAP_T","","",null,null],[17,"TIMEOUT_EXPIRED","","",null,null],[17,"TIMEOUT_IGNORED","","",null,null],[17,"TIMESTAMP","","",null,null],[17,"TIME_ELAPSED","","",null,null],[17,"TOP_LEVEL_ARRAY_SIZE","","",null,null],[17,"TOP_LEVEL_ARRAY_STRIDE","","",null,null],[17,"TRANSFORM_FEEDBACK","","",null,null],[17,"TRANSFORM_FEEDBACK_ACTIVE","","",null,null],[17,"TRANSFORM_FEEDBACK_BARRIER_BIT","","",null,null],[17,"TRANSFORM_FEEDBACK_BINDING","","",null,null],[17,"TRANSFORM_FEEDBACK_BUFFER","","",null,null],[17,"TRANSFORM_FEEDBACK_BUFFER_ACTIVE","","",null,null],[17,"TRANSFORM_FEEDBACK_BUFFER_BINDING","","",null,null],[17,"TRANSFORM_FEEDBACK_BUFFER_INDEX","","",null,null],[17,"TRANSFORM_FEEDBACK_BUFFER_MODE","","",null,null],[17,"TRANSFORM_FEEDBACK_BUFFER_PAUSED","","",null,null],[17,"TRANSFORM_FEEDBACK_BUFFER_SIZE","","",null,null],[17,"TRANSFORM_FEEDBACK_BUFFER_START","","",null,null],[17,"TRANSFORM_FEEDBACK_BUFFER_STRIDE","","",null,null],[17,"TRANSFORM_FEEDBACK_PAUSED","","",null,null],[17,"TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN","","",null,null],[17,"TRANSFORM_FEEDBACK_VARYING","","",null,null],[17,"TRANSFORM_FEEDBACK_VARYINGS","","",null,null],[17,"TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH","","",null,null],[17,"TRIANGLES","","",null,null],[17,"TRIANGLES_ADJACENCY","","",null,null],[17,"TRIANGLE_FAN","","",null,null],[17,"TRIANGLE_STRIP","","",null,null],[17,"TRIANGLE_STRIP_ADJACENCY","","",null,null],[17,"TRUE","","",null,null],[17,"TYPE","","",null,null],[17,"UNDEFINED_VERTEX","","",null,null],[17,"UNIFORM","","",null,null],[17,"UNIFORM_ARRAY_STRIDE","","",null,null],[17,"UNIFORM_ATOMIC_COUNTER_BUFFER_INDEX","","",null,null],[17,"UNIFORM_BARRIER_BIT","","",null,null],[17,"UNIFORM_BLOCK","","",null,null],[17,"UNIFORM_BLOCK_ACTIVE_UNIFORMS","","",null,null],[17,"UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES","","",null,null],[17,"UNIFORM_BLOCK_BINDING","","",null,null],[17,"UNIFORM_BLOCK_DATA_SIZE","","",null,null],[17,"UNIFORM_BLOCK_INDEX","","",null,null],[17,"UNIFORM_BLOCK_NAME_LENGTH","","",null,null],[17,"UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER","","",null,null],[17,"UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER","","",null,null],[17,"UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER","","",null,null],[17,"UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER","","",null,null],[17,"UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER","","",null,null],[17,"UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER","","",null,null],[17,"UNIFORM_BUFFER","","",null,null],[17,"UNIFORM_BUFFER_BINDING","","",null,null],[17,"UNIFORM_BUFFER_OFFSET_ALIGNMENT","","",null,null],[17,"UNIFORM_BUFFER_SIZE","","",null,null],[17,"UNIFORM_BUFFER_START","","",null,null],[17,"UNIFORM_IS_ROW_MAJOR","","",null,null],[17,"UNIFORM_MATRIX_STRIDE","","",null,null],[17,"UNIFORM_NAME_LENGTH","","",null,null],[17,"UNIFORM_OFFSET","","",null,null],[17,"UNIFORM_SIZE","","",null,null],[17,"UNIFORM_TYPE","","",null,null],[17,"UNKNOWN_CONTEXT_RESET","","",null,null],[17,"UNPACK_ALIGNMENT","","",null,null],[17,"UNPACK_COMPRESSED_BLOCK_DEPTH","","",null,null],[17,"UNPACK_COMPRESSED_BLOCK_HEIGHT","","",null,null],[17,"UNPACK_COMPRESSED_BLOCK_SIZE","","",null,null],[17,"UNPACK_COMPRESSED_BLOCK_WIDTH","","",null,null],[17,"UNPACK_IMAGE_HEIGHT","","",null,null],[17,"UNPACK_LSB_FIRST","","",null,null],[17,"UNPACK_ROW_LENGTH","","",null,null],[17,"UNPACK_SKIP_IMAGES","","",null,null],[17,"UNPACK_SKIP_PIXELS","","",null,null],[17,"UNPACK_SKIP_ROWS","","",null,null],[17,"UNPACK_SWAP_BYTES","","",null,null],[17,"UNSIGNALED","","",null,null],[17,"UNSIGNED_BYTE","","",null,null],[17,"UNSIGNED_BYTE_2_3_3_REV","","",null,null],[17,"UNSIGNED_BYTE_3_3_2","","",null,null],[17,"UNSIGNED_INT","","",null,null],[17,"UNSIGNED_INT_10F_11F_11F_REV","","",null,null],[17,"UNSIGNED_INT_10_10_10_2","","",null,null],[17,"UNSIGNED_INT_24_8","","",null,null],[17,"UNSIGNED_INT_2_10_10_10_REV","","",null,null],[17,"UNSIGNED_INT_5_9_9_9_REV","","",null,null],[17,"UNSIGNED_INT_8_8_8_8","","",null,null],[17,"UNSIGNED_INT_8_8_8_8_REV","","",null,null],[17,"UNSIGNED_INT_ATOMIC_COUNTER","","",null,null],[17,"UNSIGNED_INT_IMAGE_1D","","",null,null],[17,"UNSIGNED_INT_IMAGE_1D_ARRAY","","",null,null],[17,"UNSIGNED_INT_IMAGE_2D","","",null,null],[17,"UNSIGNED_INT_IMAGE_2D_ARRAY","","",null,null],[17,"UNSIGNED_INT_IMAGE_2D_MULTISAMPLE","","",null,null],[17,"UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY","","",null,null],[17,"UNSIGNED_INT_IMAGE_2D_RECT","","",null,null],[17,"UNSIGNED_INT_IMAGE_3D","","",null,null],[17,"UNSIGNED_INT_IMAGE_BUFFER","","",null,null],[17,"UNSIGNED_INT_IMAGE_CUBE","","",null,null],[17,"UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY","","",null,null],[17,"UNSIGNED_INT_SAMPLER_1D","","",null,null],[17,"UNSIGNED_INT_SAMPLER_1D_ARRAY","","",null,null],[17,"UNSIGNED_INT_SAMPLER_2D","","",null,null],[17,"UNSIGNED_INT_SAMPLER_2D_ARRAY","","",null,null],[17,"UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE","","",null,null],[17,"UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY","","",null,null],[17,"UNSIGNED_INT_SAMPLER_2D_RECT","","",null,null],[17,"UNSIGNED_INT_SAMPLER_3D","","",null,null],[17,"UNSIGNED_INT_SAMPLER_BUFFER","","",null,null],[17,"UNSIGNED_INT_SAMPLER_CUBE","","",null,null],[17,"UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY","","",null,null],[17,"UNSIGNED_INT_VEC2","","",null,null],[17,"UNSIGNED_INT_VEC3","","",null,null],[17,"UNSIGNED_INT_VEC4","","",null,null],[17,"UNSIGNED_NORMALIZED","","",null,null],[17,"UNSIGNED_SHORT","","",null,null],[17,"UNSIGNED_SHORT_1_5_5_5_REV","","",null,null],[17,"UNSIGNED_SHORT_4_4_4_4","","",null,null],[17,"UNSIGNED_SHORT_4_4_4_4_REV","","",null,null],[17,"UNSIGNED_SHORT_5_5_5_1","","",null,null],[17,"UNSIGNED_SHORT_5_6_5","","",null,null],[17,"UNSIGNED_SHORT_5_6_5_REV","","",null,null],[17,"UPPER_LEFT","","",null,null],[17,"VALIDATE_STATUS","","",null,null],[17,"VENDOR","","",null,null],[17,"VERSION","","",null,null],[17,"VERTEX_ARRAY","","",null,null],[17,"VERTEX_ARRAY_BINDING","","",null,null],[17,"VERTEX_ATTRIB_ARRAY_BARRIER_BIT","","",null,null],[17,"VERTEX_ATTRIB_ARRAY_BUFFER_BINDING","","",null,null],[17,"VERTEX_ATTRIB_ARRAY_DIVISOR","","",null,null],[17,"VERTEX_ATTRIB_ARRAY_ENABLED","","",null,null],[17,"VERTEX_ATTRIB_ARRAY_INTEGER","","",null,null],[17,"VERTEX_ATTRIB_ARRAY_LONG","","",null,null],[17,"VERTEX_ATTRIB_ARRAY_NORMALIZED","","",null,null],[17,"VERTEX_ATTRIB_ARRAY_POINTER","","",null,null],[17,"VERTEX_ATTRIB_ARRAY_SIZE","","",null,null],[17,"VERTEX_ATTRIB_ARRAY_STRIDE","","",null,null],[17,"VERTEX_ATTRIB_ARRAY_TYPE","","",null,null],[17,"VERTEX_ATTRIB_BINDING","","",null,null],[17,"VERTEX_ATTRIB_RELATIVE_OFFSET","","",null,null],[17,"VERTEX_BINDING_BUFFER","","",null,null],[17,"VERTEX_BINDING_DIVISOR","","",null,null],[17,"VERTEX_BINDING_OFFSET","","",null,null],[17,"VERTEX_BINDING_STRIDE","","",null,null],[17,"VERTEX_PROGRAM_POINT_SIZE","","",null,null],[17,"VERTEX_SHADER","","",null,null],[17,"VERTEX_SHADER_BIT","","",null,null],[17,"VERTEX_SUBROUTINE","","",null,null],[17,"VERTEX_SUBROUTINE_UNIFORM","","",null,null],[17,"VERTEX_TEXTURE","","",null,null],[17,"VIEWPORT","","",null,null],[17,"VIEWPORT_BOUNDS_RANGE","","",null,null],[17,"VIEWPORT_INDEX_PROVOKING_VERTEX","","",null,null],[17,"VIEWPORT_SUBPIXEL_BITS","","",null,null],[17,"VIEW_CLASS_128_BITS","","",null,null],[17,"VIEW_CLASS_16_BITS","","",null,null],[17,"VIEW_CLASS_24_BITS","","",null,null],[17,"VIEW_CLASS_32_BITS","","",null,null],[17,"VIEW_CLASS_48_BITS","","",null,null],[17,"VIEW_CLASS_64_BITS","","",null,null],[17,"VIEW_CLASS_8_BITS","","",null,null],[17,"VIEW_CLASS_96_BITS","","",null,null],[17,"VIEW_CLASS_BPTC_FLOAT","","",null,null],[17,"VIEW_CLASS_BPTC_UNORM","","",null,null],[17,"VIEW_CLASS_RGTC1_RED","","",null,null],[17,"VIEW_CLASS_RGTC2_RG","","",null,null],[17,"VIEW_CLASS_S3TC_DXT1_RGB","","",null,null],[17,"VIEW_CLASS_S3TC_DXT1_RGBA","","",null,null],[17,"VIEW_CLASS_S3TC_DXT3_RGBA","","",null,null],[17,"VIEW_CLASS_S3TC_DXT5_RGBA","","",null,null],[17,"VIEW_COMPATIBILITY_CLASS","","",null,null],[17,"WAIT_FAILED","","",null,null],[17,"WRITE_ONLY","","",null,null],[17,"XOR","","",null,null],[17,"ZERO","","",null,null],[17,"ZERO_TO_ONE","","",null,null],[5,"ActiveShaderProgram","","",null,[[["gluint",6]]]],[5,"ActiveTexture","","Fallbacks: ActiveTextureARB",null,[[["glenum",6]]]],[5,"AttachShader","","Fallbacks: AttachObjectARB",null,[[["gluint",6]]]],[5,"BeginConditionalRender","","Fallbacks: BeginConditionalRenderNV",null,[[["glenum",6],["gluint",6]]]],[5,"BeginQuery","","Fallbacks: BeginQueryARB",null,[[["glenum",6],["gluint",6]]]],[5,"BeginQueryIndexed","","",null,[[["glenum",6],["gluint",6]]]],[5,"BeginTransformFeedback","","Fallbacks: BeginTransformFeedbackEXT, …",null,[[["glenum",6]]]],[5,"BindAttribLocation","","Fallbacks: BindAttribLocationARB",null,[[["gluint",6]]]],[5,"BindBuffer","","Fallbacks: BindBufferARB",null,[[["glenum",6],["gluint",6]]]],[5,"BindBufferBase","","Fallbacks: BindBufferBaseEXT, BindBufferBaseNV",null,[[["glenum",6],["gluint",6]]]],[5,"BindBufferRange","","Fallbacks: BindBufferRangeEXT, BindBufferRangeNV",null,[[["glsizeiptr",6],["glintptr",6],["gluint",6],["glenum",6]]]],[5,"BindBuffersBase","","",null,[[["glsizei",6],["glenum",6],["gluint",6]]]],[5,"BindBuffersRange","","",null,[[["glsizei",6],["glenum",6],["gluint",6]]]],[5,"BindFragDataLocation","","Fallbacks: BindFragDataLocationEXT",null,[[["gluint",6]]]],[5,"BindFragDataLocationIndexed","","Fallbacks: BindFragDataLocationIndexedEXT",null,[[["gluint",6]]]],[5,"BindFramebuffer","","",null,[[["glenum",6],["gluint",6]]]],[5,"BindImageTexture","","",null,[[["glboolean",6],["glint",6],["gluint",6],["glenum",6]]]],[5,"BindImageTextures","","",null,[[["glsizei",6],["gluint",6]]]],[5,"BindProgramPipeline","","",null,[[["gluint",6]]]],[5,"BindRenderbuffer","","",null,[[["glenum",6],["gluint",6]]]],[5,"BindSampler","","",null,[[["gluint",6]]]],[5,"BindSamplers","","",null,[[["glsizei",6],["gluint",6]]]],[5,"BindTexture","","Fallbacks: BindTextureEXT",null,[[["glenum",6],["gluint",6]]]],[5,"BindTextureUnit","","",null,[[["gluint",6]]]],[5,"BindTextures","","",null,[[["glsizei",6],["gluint",6]]]],[5,"BindTransformFeedback","","",null,[[["glenum",6],["gluint",6]]]],[5,"BindVertexArray","","Fallbacks: BindVertexArrayOES",null,[[["gluint",6]]]],[5,"BindVertexBuffer","","",null,[[["glintptr",6],["glsizei",6],["gluint",6]]]],[5,"BindVertexBuffers","","",null,[[["glsizei",6],["gluint",6]]]],[5,"BlendColor","","Fallbacks: BlendColorEXT",null,[[["glfloat",6]]]],[5,"BlendEquation","","Fallbacks: BlendEquationEXT",null,[[["glenum",6]]]],[5,"BlendEquationSeparate","","Fallbacks: BlendEquationSeparateEXT",null,[[["glenum",6]]]],[5,"BlendEquationSeparatei","","Fallbacks: BlendEquationSeparateIndexedAMD, …",null,[[["glenum",6],["gluint",6]]]],[5,"BlendEquationi","","Fallbacks: BlendEquationIndexedAMD, BlendEquationiARB, …",null,[[["glenum",6],["gluint",6]]]],[5,"BlendFunc","","",null,[[["glenum",6]]]],[5,"BlendFuncSeparate","","Fallbacks: BlendFuncSeparateEXT, BlendFuncSeparateINGR",null,[[["glenum",6]]]],[5,"BlendFuncSeparatei","","Fallbacks: BlendFuncSeparateIndexedAMD, …",null,[[["glenum",6],["gluint",6]]]],[5,"BlendFunci","","Fallbacks: BlendFuncIndexedAMD, BlendFunciARB, …",null,[[["glenum",6],["gluint",6]]]],[5,"BlitFramebuffer","","Fallbacks: BlitFramebufferEXT, BlitFramebufferNV",null,[[["glbitfield",6],["glint",6],["glenum",6]]]],[5,"BlitNamedFramebuffer","","",null,[[["glint",6],["gluint",6],["glbitfield",6],["glenum",6]]]],[5,"BufferData","","Fallbacks: BufferDataARB",null,[[["glsizeiptr",6],["glenum",6]]]],[5,"BufferStorage","","Fallbacks: BufferStorageEXT",null,[[["glsizeiptr",6],["glenum",6],["glbitfield",6]]]],[5,"BufferSubData","","Fallbacks: BufferSubDataARB",null,[[["glsizeiptr",6],["glenum",6],["glintptr",6]]]],[5,"CheckFramebufferStatus","","Fallbacks: CheckFramebufferStatusEXT",null,[[["glenum",6]],["glenum",6]]],[5,"CheckNamedFramebufferStatus","","",null,[[["glenum",6],["gluint",6]],["glenum",6]]],[5,"ClampColor","","Fallbacks: ClampColorARB",null,[[["glenum",6]]]],[5,"Clear","","",null,[[["glbitfield",6]]]],[5,"ClearBufferData","","",null,[[["glenum",6]]]],[5,"ClearBufferSubData","","",null,[[["glsizeiptr",6],["glintptr",6],["glenum",6]]]],[5,"ClearBufferfi","","",null,[[["glint",6],["glenum",6],["glfloat",6]]]],[5,"ClearBufferfv","","",null,[[["glenum",6],["glint",6]]]],[5,"ClearBufferiv","","",null,[[["glenum",6],["glint",6]]]],[5,"ClearBufferuiv","","",null,[[["glenum",6],["glint",6]]]],[5,"ClearColor","","",null,[[["glfloat",6]]]],[5,"ClearDepth","","",null,[[["gldouble",6]]]],[5,"ClearDepthf","","Fallbacks: ClearDepthfOES",null,[[["glfloat",6]]]],[5,"ClearNamedBufferData","","",null,[[["glenum",6],["gluint",6]]]],[5,"ClearNamedBufferSubData","","",null,[[["glsizeiptr",6],["glintptr",6],["gluint",6],["glenum",6]]]],[5,"ClearNamedFramebufferfi","","",null,[[["glint",6],["gluint",6],["glenum",6],["glfloat",6]]]],[5,"ClearNamedFramebufferfv","","",null,[[["glenum",6],["glint",6],["gluint",6]]]],[5,"ClearNamedFramebufferiv","","",null,[[["glenum",6],["glint",6],["gluint",6]]]],[5,"ClearNamedFramebufferuiv","","",null,[[["glenum",6],["glint",6],["gluint",6]]]],[5,"ClearStencil","","",null,[[["glint",6]]]],[5,"ClearTexImage","","Fallbacks: ClearTexImageEXT",null,[[["glint",6],["gluint",6],["glenum",6]]]],[5,"ClearTexSubImage","","Fallbacks: ClearTexSubImageEXT",null,[[["glint",6],["gluint",6],["glsizei",6],["glenum",6]]]],[5,"ClientWaitSync","","Fallbacks: ClientWaitSyncAPPLE",null,[[["glbitfield",6],["glsync",6],["gluint64",6]],["glenum",6]]],[5,"ClipControl","","Fallbacks: ClipControlEXT",null,[[["glenum",6]]]],[5,"ColorMask","","",null,[[["glboolean",6]]]],[5,"ColorMaski","","Fallbacks: ColorMaskIndexedEXT, ColorMaskiEXT, …",null,[[["glboolean",6],["gluint",6]]]],[5,"ColorP3ui","","",null,[[["glenum",6],["gluint",6]]]],[5,"ColorP3uiv","","",null,[[["glenum",6]]]],[5,"ColorP4ui","","",null,[[["glenum",6],["gluint",6]]]],[5,"ColorP4uiv","","",null,[[["glenum",6]]]],[5,"CompileShader","","Fallbacks: CompileShaderARB",null,[[["gluint",6]]]],[5,"CompressedTexImage1D","","Fallbacks: CompressedTexImage1DARB",null,[[["glint",6],["glsizei",6],["glenum",6]]]],[5,"CompressedTexImage2D","","Fallbacks: CompressedTexImage2DARB",null,[[["glint",6],["glsizei",6],["glenum",6]]]],[5,"CompressedTexImage3D","","Fallbacks: CompressedTexImage3DARB",null,[[["glint",6],["glsizei",6],["glenum",6]]]],[5,"CompressedTexSubImage1D","","Fallbacks: CompressedTexSubImage1DARB",null,[[["glint",6],["glsizei",6],["glenum",6]]]],[5,"CompressedTexSubImage2D","","Fallbacks: CompressedTexSubImage2DARB",null,[[["glint",6],["glsizei",6],["glenum",6]]]],[5,"CompressedTexSubImage3D","","Fallbacks: CompressedTexSubImage3DARB",null,[[["glint",6],["glsizei",6],["glenum",6]]]],[5,"CompressedTextureSubImage1D","","",null,[[["glint",6],["gluint",6],["glsizei",6],["glenum",6]]]],[5,"CompressedTextureSubImage2D","","",null,[[["glint",6],["gluint",6],["glsizei",6],["glenum",6]]]],[5,"CompressedTextureSubImage3D","","",null,[[["glint",6],["gluint",6],["glsizei",6],["glenum",6]]]],[5,"CopyBufferSubData","","Fallbacks: CopyBufferSubDataNV",null,[[["glsizeiptr",6],["glenum",6],["glintptr",6]]]],[5,"CopyImageSubData","","Fallbacks: CopyImageSubDataEXT, CopyImageSubDataOES",null,[[["glint",6],["gluint",6],["glsizei",6],["glenum",6]]]],[5,"CopyNamedBufferSubData","","",null,[[["glintptr",6],["glsizeiptr",6],["gluint",6]]]],[5,"CopyTexImage1D","","Fallbacks: CopyTexImage1DEXT",null,[[["glint",6],["glsizei",6],["glenum",6]]]],[5,"CopyTexImage2D","","Fallbacks: CopyTexImage2DEXT",null,[[["glint",6],["glsizei",6],["glenum",6]]]],[5,"CopyTexSubImage1D","","Fallbacks: CopyTexSubImage1DEXT",null,[[["glsizei",6],["glenum",6],["glint",6]]]],[5,"CopyTexSubImage2D","","Fallbacks: CopyTexSubImage2DEXT",null,[[["glint",6],["glsizei",6],["glenum",6]]]],[5,"CopyTexSubImage3D","","Fallbacks: CopyTexSubImage3DEXT",null,[[["glint",6],["glsizei",6],["glenum",6]]]],[5,"CopyTextureSubImage1D","","",null,[[["glsizei",6],["glint",6],["gluint",6]]]],[5,"CopyTextureSubImage2D","","",null,[[["glint",6],["gluint",6],["glsizei",6]]]],[5,"CopyTextureSubImage3D","","",null,[[["glint",6],["gluint",6],["glsizei",6]]]],[5,"CreateBuffers","","",null,[[["glsizei",6]]]],[5,"CreateFramebuffers","","",null,[[["glsizei",6]]]],[5,"CreateProgram","","Fallbacks: CreateProgramObjectARB",null,[[],["gluint",6]]],[5,"CreateProgramPipelines","","",null,[[["glsizei",6]]]],[5,"CreateQueries","","",null,[[["glsizei",6],["glenum",6]]]],[5,"CreateRenderbuffers","","",null,[[["glsizei",6]]]],[5,"CreateSamplers","","",null,[[["glsizei",6]]]],[5,"CreateShader","","Fallbacks: CreateShaderObjectARB",null,[[["glenum",6]],["gluint",6]]],[5,"CreateShaderProgramv","","",null,[[["glsizei",6],["glenum",6]],["gluint",6]]],[5,"CreateTextures","","",null,[[["glsizei",6],["glenum",6]]]],[5,"CreateTransformFeedbacks","","",null,[[["glsizei",6]]]],[5,"CreateVertexArrays","","",null,[[["glsizei",6]]]],[5,"CullFace","","",null,[[["glenum",6]]]],[5,"DebugMessageCallback","","Fallbacks: DebugMessageCallbackARB, …",null,[[["gldebugproc",6]]]],[5,"DebugMessageControl","","Fallbacks: DebugMessageControlARB, DebugMessageControlKHR",null,[[["glsizei",6],["glenum",6],["glboolean",6]]]],[5,"DebugMessageInsert","","Fallbacks: DebugMessageInsertARB, DebugMessageInsertKHR",null,[[["glsizei",6],["glenum",6],["gluint",6]]]],[5,"DeleteBuffers","","Fallbacks: DeleteBuffersARB",null,[[["glsizei",6]]]],[5,"DeleteFramebuffers","","Fallbacks: DeleteFramebuffersEXT",null,[[["glsizei",6]]]],[5,"DeleteProgram","","",null,[[["gluint",6]]]],[5,"DeleteProgramPipelines","","",null,[[["glsizei",6]]]],[5,"DeleteQueries","","Fallbacks: DeleteQueriesARB",null,[[["glsizei",6]]]],[5,"DeleteRenderbuffers","","Fallbacks: DeleteRenderbuffersEXT",null,[[["glsizei",6]]]],[5,"DeleteSamplers","","",null,[[["glsizei",6]]]],[5,"DeleteShader","","",null,[[["gluint",6]]]],[5,"DeleteSync","","Fallbacks: DeleteSyncAPPLE",null,[[["glsync",6]]]],[5,"DeleteTextures","","",null,[[["glsizei",6]]]],[5,"DeleteTransformFeedbacks","","Fallbacks: DeleteTransformFeedbacksNV",null,[[["glsizei",6]]]],[5,"DeleteVertexArrays","","Fallbacks: DeleteVertexArraysAPPLE, DeleteVertexArraysOES",null,[[["glsizei",6]]]],[5,"DepthFunc","","",null,[[["glenum",6]]]],[5,"DepthMask","","",null,[[["glboolean",6]]]],[5,"DepthRange","","",null,[[["gldouble",6]]]],[5,"DepthRangeArrayv","","",null,[[["glsizei",6],["gluint",6]]]],[5,"DepthRangeIndexed","","",null,[[["gldouble",6],["gluint",6]]]],[5,"DepthRangef","","Fallbacks: DepthRangefOES",null,[[["glfloat",6]]]],[5,"DetachShader","","Fallbacks: DetachObjectARB",null,[[["gluint",6]]]],[5,"Disable","","",null,[[["glenum",6]]]],[5,"DisableVertexArrayAttrib","","",null,[[["gluint",6]]]],[5,"DisableVertexAttribArray","","Fallbacks: DisableVertexAttribArrayARB",null,[[["gluint",6]]]],[5,"Disablei","","Fallbacks: DisableIndexedEXT, DisableiEXT, DisableiNV, …",null,[[["glenum",6],["gluint",6]]]],[5,"DispatchCompute","","",null,[[["gluint",6]]]],[5,"DispatchComputeIndirect","","",null,[[["glintptr",6]]]],[5,"DrawArrays","","Fallbacks: DrawArraysEXT",null,[[["glsizei",6],["glenum",6],["glint",6]]]],[5,"DrawArraysIndirect","","",null,[[["glenum",6]]]],[5,"DrawArraysInstanced","","Fallbacks: DrawArraysInstancedANGLE, …",null,[[["glint",6],["glsizei",6],["glenum",6]]]],[5,"DrawArraysInstancedBaseInstance","","Fallbacks: DrawArraysInstancedBaseInstanceEXT",null,[[["glint",6],["gluint",6],["glsizei",6],["glenum",6]]]],[5,"DrawBuffer","","",null,[[["glenum",6]]]],[5,"DrawBuffers","","Fallbacks: DrawBuffersARB, DrawBuffersATI, DrawBuffersEXT",null,[[["glsizei",6]]]],[5,"DrawElements","","",null,[[["glsizei",6],["glenum",6]]]],[5,"DrawElementsBaseVertex","","Fallbacks: DrawElementsBaseVertexEXT, …",null,[[["glsizei",6],["glenum",6],["glint",6]]]],[5,"DrawElementsIndirect","","",null,[[["glenum",6]]]],[5,"DrawElementsInstanced","","Fallbacks: DrawElementsInstancedANGLE, …",null,[[["glsizei",6],["glenum",6]]]],[5,"DrawElementsInstancedBaseInstance","","Fallbacks: DrawElementsInstancedBaseInstanceEXT",null,[[["glsizei",6],["glenum",6],["gluint",6]]]],[5,"DrawElementsInstancedBaseVertex","","Fallbacks: DrawElementsInstancedBaseVertexEXT, …",null,[[["glsizei",6],["glenum",6],["glint",6]]]],[5,"DrawElementsInstancedBaseVertexBaseInstance","","Fallbacks: DrawElementsInstancedBaseVertexBaseInstanceEXT",null,[[["glint",6],["gluint",6],["glsizei",6],["glenum",6]]]],[5,"DrawRangeElements","","Fallbacks: DrawRangeElementsEXT",null,[[["gluint",6],["glsizei",6],["glenum",6]]]],[5,"DrawRangeElementsBaseVertex","","Fallbacks: DrawRangeElementsBaseVertexEXT, …",null,[[["glint",6],["gluint",6],["glsizei",6],["glenum",6]]]],[5,"DrawTransformFeedback","","Fallbacks: DrawTransformFeedbackEXT, …",null,[[["glenum",6],["gluint",6]]]],[5,"DrawTransformFeedbackInstanced","","Fallbacks: DrawTransformFeedbackInstancedEXT",null,[[["glsizei",6],["glenum",6],["gluint",6]]]],[5,"DrawTransformFeedbackStream","","",null,[[["glenum",6],["gluint",6]]]],[5,"DrawTransformFeedbackStreamInstanced","","",null,[[["glsizei",6],["glenum",6],["gluint",6]]]],[5,"Enable","","",null,[[["glenum",6]]]],[5,"EnableVertexArrayAttrib","","",null,[[["gluint",6]]]],[5,"EnableVertexAttribArray","","Fallbacks: EnableVertexAttribArrayARB",null,[[["gluint",6]]]],[5,"Enablei","","Fallbacks: EnableIndexedEXT, EnableiEXT, EnableiNV, …",null,[[["glenum",6],["gluint",6]]]],[5,"EndConditionalRender","","Fallbacks: EndConditionalRenderNV, EndConditionalRenderNVX",null,[[]]],[5,"EndQuery","","Fallbacks: EndQueryARB",null,[[["glenum",6]]]],[5,"EndQueryIndexed","","",null,[[["glenum",6],["gluint",6]]]],[5,"EndTransformFeedback","","Fallbacks: EndTransformFeedbackEXT, EndTransformFeedbackNV",null,[[]]],[5,"FenceSync","","Fallbacks: FenceSyncAPPLE",null,[[["glenum",6],["glbitfield",6]],["glsync",6]]],[5,"Finish","","",null,[[]]],[5,"Flush","","",null,[[]]],[5,"FlushMappedBufferRange","","Fallbacks: FlushMappedBufferRangeAPPLE, …",null,[[["glsizeiptr",6],["glenum",6],["glintptr",6]]]],[5,"FlushMappedNamedBufferRange","","",null,[[["glintptr",6],["glsizeiptr",6],["gluint",6]]]],[5,"FramebufferParameteri","","",null,[[["glenum",6],["glint",6]]]],[5,"FramebufferRenderbuffer","","Fallbacks: FramebufferRenderbufferEXT",null,[[["glenum",6],["gluint",6]]]],[5,"FramebufferTexture","","Fallbacks: FramebufferTextureARB, FramebufferTextureEXT, …",null,[[["glenum",6],["glint",6],["gluint",6]]]],[5,"FramebufferTexture1D","","Fallbacks: FramebufferTexture1DEXT",null,[[["glenum",6],["glint",6],["gluint",6]]]],[5,"FramebufferTexture2D","","Fallbacks: FramebufferTexture2DEXT",null,[[["glenum",6],["glint",6],["gluint",6]]]],[5,"FramebufferTexture3D","","Fallbacks: FramebufferTexture3DEXT",null,[[["glint",6],["gluint",6],["glenum",6]]]],[5,"FramebufferTextureLayer","","Fallbacks: FramebufferTextureLayerARB, …",null,[[["glint",6],["gluint",6],["glenum",6]]]],[5,"FrontFace","","",null,[[["glenum",6]]]],[5,"GenBuffers","","Fallbacks: GenBuffersARB",null,[[["glsizei",6]]]],[5,"GenFramebuffers","","Fallbacks: GenFramebuffersEXT",null,[[["glsizei",6]]]],[5,"GenProgramPipelines","","",null,[[["glsizei",6]]]],[5,"GenQueries","","Fallbacks: GenQueriesARB",null,[[["glsizei",6]]]],[5,"GenRenderbuffers","","Fallbacks: GenRenderbuffersEXT",null,[[["glsizei",6]]]],[5,"GenSamplers","","",null,[[["glsizei",6]]]],[5,"GenTextures","","",null,[[["glsizei",6]]]],[5,"GenTransformFeedbacks","","Fallbacks: GenTransformFeedbacksNV",null,[[["glsizei",6]]]],[5,"GenVertexArrays","","Fallbacks: GenVertexArraysAPPLE, GenVertexArraysOES",null,[[["glsizei",6]]]],[5,"GenerateMipmap","","Fallbacks: GenerateMipmapEXT",null,[[["glenum",6]]]],[5,"GenerateTextureMipmap","","",null,[[["gluint",6]]]],[5,"GetActiveAtomicCounterBufferiv","","",null,[[["glenum",6],["gluint",6]]]],[5,"GetActiveAttrib","","Fallbacks: GetActiveAttribARB",null,[[["glsizei",6],["gluint",6]]]],[5,"GetActiveSubroutineName","","",null,[[["glsizei",6],["glenum",6],["gluint",6]]]],[5,"GetActiveSubroutineUniformName","","",null,[[["glsizei",6],["glenum",6],["gluint",6]]]],[5,"GetActiveSubroutineUniformiv","","",null,[[["glenum",6],["gluint",6]]]],[5,"GetActiveUniform","","Fallbacks: GetActiveUniformARB",null,[[["glsizei",6],["gluint",6]]]],[5,"GetActiveUniformBlockName","","",null,[[["glsizei",6],["gluint",6]]]],[5,"GetActiveUniformBlockiv","","",null,[[["glenum",6],["gluint",6]]]],[5,"GetActiveUniformName","","",null,[[["glsizei",6],["gluint",6]]]],[5,"GetActiveUniformsiv","","",null,[[["glsizei",6],["glenum",6],["gluint",6]]]],[5,"GetAttachedShaders","","",null,[[["glsizei",6],["gluint",6]]]],[5,"GetAttribLocation","","Fallbacks: GetAttribLocationARB",null,[[["gluint",6]],["glint",6]]],[5,"GetBooleani_v","","Fallbacks: GetBooleanIndexedvEXT",null,[[["glenum",6],["gluint",6]]]],[5,"GetBooleanv","","",null,[[["glenum",6]]]],[5,"GetBufferParameteri64v","","",null,[[["glenum",6]]]],[5,"GetBufferParameteriv","","Fallbacks: GetBufferParameterivARB",null,[[["glenum",6]]]],[5,"GetBufferPointerv","","Fallbacks: GetBufferPointervARB, GetBufferPointervOES",null,[[["glenum",6]]]],[5,"GetBufferSubData","","Fallbacks: GetBufferSubDataARB",null,[[["glsizeiptr",6],["glenum",6],["glintptr",6]]]],[5,"GetCompressedTexImage","","Fallbacks: GetCompressedTexImageARB",null,[[["glenum",6],["glint",6]]]],[5,"GetCompressedTextureImage","","",null,[[["glsizei",6],["glint",6],["gluint",6]]]],[5,"GetCompressedTextureSubImage","","",null,[[["glint",6],["gluint",6],["glsizei",6]]]],[5,"GetDebugMessageLog","","Fallbacks: GetDebugMessageLogARB, GetDebugMessageLogKHR",null,[[["glsizei",6],["gluint",6]],["gluint",6]]],[5,"GetDoublei_v","","Fallbacks: GetDoubleIndexedvEXT, GetDoublei_vEXT",null,[[["glenum",6],["gluint",6]]]],[5,"GetDoublev","","",null,[[["glenum",6]]]],[5,"GetError","","",null,[[],["glenum",6]]],[5,"GetFloati_v","","Fallbacks: GetFloatIndexedvEXT, GetFloati_vEXT, …",null,[[["glenum",6],["gluint",6]]]],[5,"GetFloatv","","",null,[[["glenum",6]]]],[5,"GetFragDataIndex","","Fallbacks: GetFragDataIndexEXT",null,[[["gluint",6]],["glint",6]]],[5,"GetFragDataLocation","","Fallbacks: GetFragDataLocationEXT",null,[[["gluint",6]],["glint",6]]],[5,"GetFramebufferAttachmentParameteriv","","Fallbacks: GetFramebufferAttachmentParameterivEXT",null,[[["glenum",6]]]],[5,"GetFramebufferParameteriv","","",null,[[["glenum",6]]]],[5,"GetGraphicsResetStatus","","Fallbacks: GetGraphicsResetStatusEXT, …",null,[[],["glenum",6]]],[5,"GetInteger64i_v","","",null,[[["glenum",6],["gluint",6]]]],[5,"GetInteger64v","","Fallbacks: GetInteger64vAPPLE",null,[[["glenum",6]]]],[5,"GetIntegeri_v","","Fallbacks: GetIntegerIndexedvEXT",null,[[["glenum",6],["gluint",6]]]],[5,"GetIntegerv","","",null,[[["glenum",6]]]],[5,"GetInternalformati64v","","",null,[[["glsizei",6],["glenum",6]]]],[5,"GetInternalformativ","","",null,[[["glsizei",6],["glenum",6]]]],[5,"GetMultisamplefv","","Fallbacks: GetMultisamplefvNV",null,[[["glenum",6],["gluint",6]]]],[5,"GetNamedBufferParameteri64v","","",null,[[["glenum",6],["gluint",6]]]],[5,"GetNamedBufferParameteriv","","",null,[[["glenum",6],["gluint",6]]]],[5,"GetNamedBufferPointerv","","",null,[[["glenum",6],["gluint",6]]]],[5,"GetNamedBufferSubData","","",null,[[["glintptr",6],["glsizeiptr",6],["gluint",6]]]],[5,"GetNamedFramebufferAttachmentParameteriv","","",null,[[["glenum",6],["gluint",6]]]],[5,"GetNamedFramebufferParameteriv","","",null,[[["glenum",6],["gluint",6]]]],[5,"GetNamedRenderbufferParameteriv","","",null,[[["glenum",6],["gluint",6]]]],[5,"GetObjectLabel","","Fallbacks: GetObjectLabelKHR",null,[[["glsizei",6],["glenum",6],["gluint",6]]]],[5,"GetObjectPtrLabel","","Fallbacks: GetObjectPtrLabelKHR",null,[[["glsizei",6]]]],[5,"GetPointerv","","Fallbacks: GetPointervEXT, GetPointervKHR",null,[[["glenum",6]]]],[5,"GetProgramBinary","","Fallbacks: GetProgramBinaryOES",null,[[["glsizei",6],["gluint",6]]]],[5,"GetProgramInfoLog","","",null,[[["glsizei",6],["gluint",6]]]],[5,"GetProgramInterfaceiv","","",null,[[["glenum",6],["gluint",6]]]],[5,"GetProgramPipelineInfoLog","","",null,[[["glsizei",6],["gluint",6]]]],[5,"GetProgramPipelineiv","","",null,[[["glenum",6],["gluint",6]]]],[5,"GetProgramResourceIndex","","",null,[[["glenum",6],["gluint",6]],["gluint",6]]],[5,"GetProgramResourceLocation","","",null,[[["glenum",6],["gluint",6]],["glint",6]]],[5,"GetProgramResourceLocationIndex","","",null,[[["glenum",6],["gluint",6]],["glint",6]]],[5,"GetProgramResourceName","","",null,[[["glsizei",6],["glenum",6],["gluint",6]]]],[5,"GetProgramResourceiv","","",null,[[["gluint",6],["glsizei",6],["glenum",6]]]],[5,"GetProgramStageiv","","",null,[[["glenum",6],["gluint",6]]]],[5,"GetProgramiv","","",null,[[["glenum",6],["gluint",6]]]],[5,"GetQueryBufferObjecti64v","","",null,[[["glintptr",6],["glenum",6],["gluint",6]]]],[5,"GetQueryBufferObjectiv","","",null,[[["glintptr",6],["glenum",6],["gluint",6]]]],[5,"GetQueryBufferObjectui64v","","",null,[[["glintptr",6],["glenum",6],["gluint",6]]]],[5,"GetQueryBufferObjectuiv","","",null,[[["glintptr",6],["glenum",6],["gluint",6]]]],[5,"GetQueryIndexediv","","",null,[[["glenum",6],["gluint",6]]]],[5,"GetQueryObjecti64v","","Fallbacks: GetQueryObjecti64vEXT",null,[[["glenum",6],["gluint",6]]]],[5,"GetQueryObjectiv","","Fallbacks: GetQueryObjectivARB, GetQueryObjectivEXT",null,[[["glenum",6],["gluint",6]]]],[5,"GetQueryObjectui64v","","Fallbacks: GetQueryObjectui64vEXT",null,[[["glenum",6],["gluint",6]]]],[5,"GetQueryObjectuiv","","Fallbacks: GetQueryObjectuivARB",null,[[["glenum",6],["gluint",6]]]],[5,"GetQueryiv","","Fallbacks: GetQueryivARB",null,[[["glenum",6]]]],[5,"GetRenderbufferParameteriv","","Fallbacks: GetRenderbufferParameterivEXT",null,[[["glenum",6]]]],[5,"GetSamplerParameterIiv","","Fallbacks: GetSamplerParameterIivEXT, …",null,[[["glenum",6],["gluint",6]]]],[5,"GetSamplerParameterIuiv","","Fallbacks: GetSamplerParameterIuivEXT, …",null,[[["glenum",6],["gluint",6]]]],[5,"GetSamplerParameterfv","","",null,[[["glenum",6],["gluint",6]]]],[5,"GetSamplerParameteriv","","",null,[[["glenum",6],["gluint",6]]]],[5,"GetShaderInfoLog","","",null,[[["glsizei",6],["gluint",6]]]],[5,"GetShaderPrecisionFormat","","",null,[[["glenum",6]]]],[5,"GetShaderSource","","Fallbacks: GetShaderSourceARB",null,[[["glsizei",6],["gluint",6]]]],[5,"GetShaderiv","","",null,[[["glenum",6],["gluint",6]]]],[5,"GetString","","",null,[[["glenum",6]]]],[5,"GetStringi","","",null,[[["glenum",6],["gluint",6]]]],[5,"GetSubroutineIndex","","",null,[[["glenum",6],["gluint",6]],["gluint",6]]],[5,"GetSubroutineUniformLocation","","",null,[[["glenum",6],["gluint",6]],["glint",6]]],[5,"GetSynciv","","Fallbacks: GetSyncivAPPLE",null,[[["glsizei",6],["glenum",6],["glsync",6]]]],[5,"GetTexImage","","",null,[[["glenum",6],["glint",6]]]],[5,"GetTexLevelParameterfv","","",null,[[["glenum",6],["glint",6]]]],[5,"GetTexLevelParameteriv","","",null,[[["glenum",6],["glint",6]]]],[5,"GetTexParameterIiv","","Fallbacks: GetTexParameterIivEXT, GetTexParameterIivOES",null,[[["glenum",6]]]],[5,"GetTexParameterIuiv","","Fallbacks: GetTexParameterIuivEXT, GetTexParameterIuivOES",null,[[["glenum",6]]]],[5,"GetTexParameterfv","","",null,[[["glenum",6]]]],[5,"GetTexParameteriv","","",null,[[["glenum",6]]]],[5,"GetTextureImage","","",null,[[["glint",6],["gluint",6],["glsizei",6],["glenum",6]]]],[5,"GetTextureLevelParameterfv","","",null,[[["glenum",6],["glint",6],["gluint",6]]]],[5,"GetTextureLevelParameteriv","","",null,[[["glenum",6],["glint",6],["gluint",6]]]],[5,"GetTextureParameterIiv","","",null,[[["glenum",6],["gluint",6]]]],[5,"GetTextureParameterIuiv","","",null,[[["glenum",6],["gluint",6]]]],[5,"GetTextureParameterfv","","",null,[[["glenum",6],["gluint",6]]]],[5,"GetTextureParameteriv","","",null,[[["glenum",6],["gluint",6]]]],[5,"GetTextureSubImage","","",null,[[["glint",6],["gluint",6],["glsizei",6],["glenum",6]]]],[5,"GetTransformFeedbackVarying","","Fallbacks: GetTransformFeedbackVaryingEXT",null,[[["glsizei",6],["gluint",6]]]],[5,"GetTransformFeedbacki64_v","","",null,[[["glenum",6],["gluint",6]]]],[5,"GetTransformFeedbacki_v","","",null,[[["glenum",6],["gluint",6]]]],[5,"GetTransformFeedbackiv","","",null,[[["glenum",6],["gluint",6]]]],[5,"GetUniformBlockIndex","","",null,[[["gluint",6]],["gluint",6]]],[5,"GetUniformIndices","","",null,[[["glsizei",6],["gluint",6]]]],[5,"GetUniformLocation","","Fallbacks: GetUniformLocationARB",null,[[["gluint",6]],["glint",6]]],[5,"GetUniformSubroutineuiv","","",null,[[["glenum",6],["glint",6]]]],[5,"GetUniformdv","","",null,[[["glint",6],["gluint",6]]]],[5,"GetUniformfv","","Fallbacks: GetUniformfvARB",null,[[["glint",6],["gluint",6]]]],[5,"GetUniformiv","","Fallbacks: GetUniformivARB",null,[[["glint",6],["gluint",6]]]],[5,"GetUniformuiv","","Fallbacks: GetUniformuivEXT",null,[[["glint",6],["gluint",6]]]],[5,"GetVertexArrayIndexed64iv","","",null,[[["glenum",6],["gluint",6]]]],[5,"GetVertexArrayIndexediv","","",null,[[["glenum",6],["gluint",6]]]],[5,"GetVertexArrayiv","","",null,[[["glenum",6],["gluint",6]]]],[5,"GetVertexAttribIiv","","Fallbacks: GetVertexAttribIivEXT",null,[[["glenum",6],["gluint",6]]]],[5,"GetVertexAttribIuiv","","Fallbacks: GetVertexAttribIuivEXT",null,[[["glenum",6],["gluint",6]]]],[5,"GetVertexAttribLdv","","Fallbacks: GetVertexAttribLdvEXT",null,[[["glenum",6],["gluint",6]]]],[5,"GetVertexAttribPointerv","","Fallbacks: GetVertexAttribPointervARB, …",null,[[["glenum",6],["gluint",6]]]],[5,"GetVertexAttribdv","","Fallbacks: GetVertexAttribdvARB, GetVertexAttribdvNV",null,[[["glenum",6],["gluint",6]]]],[5,"GetVertexAttribfv","","Fallbacks: GetVertexAttribfvARB, GetVertexAttribfvNV",null,[[["glenum",6],["gluint",6]]]],[5,"GetVertexAttribiv","","Fallbacks: GetVertexAttribivARB, GetVertexAttribivNV",null,[[["glenum",6],["gluint",6]]]],[5,"GetnColorTable","","",null,[[["glsizei",6],["glenum",6]]]],[5,"GetnCompressedTexImage","","",null,[[["glsizei",6],["glenum",6],["glint",6]]]],[5,"GetnConvolutionFilter","","",null,[[["glsizei",6],["glenum",6]]]],[5,"GetnHistogram","","",null,[[["glboolean",6],["glenum",6],["glsizei",6]]]],[5,"GetnMapdv","","",null,[[["glsizei",6],["glenum",6]]]],[5,"GetnMapfv","","",null,[[["glsizei",6],["glenum",6]]]],[5,"GetnMapiv","","",null,[[["glsizei",6],["glenum",6]]]],[5,"GetnMinmax","","",null,[[["glboolean",6],["glenum",6],["glsizei",6]]]],[5,"GetnPixelMapfv","","",null,[[["glsizei",6],["glenum",6]]]],[5,"GetnPixelMapuiv","","",null,[[["glsizei",6],["glenum",6]]]],[5,"GetnPixelMapusv","","",null,[[["glsizei",6],["glenum",6]]]],[5,"GetnPolygonStipple","","",null,[[["glsizei",6]]]],[5,"GetnSeparableFilter","","",null,[[["glsizei",6],["glenum",6]]]],[5,"GetnTexImage","","",null,[[["glsizei",6],["glenum",6],["glint",6]]]],[5,"GetnUniformdv","","",null,[[["glsizei",6],["glint",6],["gluint",6]]]],[5,"GetnUniformfv","","Fallbacks: GetnUniformfvEXT, GetnUniformfvKHR",null,[[["glsizei",6],["glint",6],["gluint",6]]]],[5,"GetnUniformiv","","Fallbacks: GetnUniformivEXT, GetnUniformivKHR",null,[[["glsizei",6],["glint",6],["gluint",6]]]],[5,"GetnUniformuiv","","Fallbacks: GetnUniformuivKHR",null,[[["glsizei",6],["glint",6],["gluint",6]]]],[5,"Hint","","",null,[[["glenum",6]]]],[5,"InvalidateBufferData","","",null,[[["gluint",6]]]],[5,"InvalidateBufferSubData","","",null,[[["glintptr",6],["glsizeiptr",6],["gluint",6]]]],[5,"InvalidateFramebuffer","","",null,[[["glsizei",6],["glenum",6]]]],[5,"InvalidateNamedFramebufferData","","",null,[[["glsizei",6],["gluint",6]]]],[5,"InvalidateNamedFramebufferSubData","","",null,[[["glint",6],["gluint",6],["glsizei",6]]]],[5,"InvalidateSubFramebuffer","","",null,[[["glint",6],["glsizei",6],["glenum",6]]]],[5,"InvalidateTexImage","","",null,[[["glint",6],["gluint",6]]]],[5,"InvalidateTexSubImage","","",null,[[["glint",6],["gluint",6],["glsizei",6]]]],[5,"IsBuffer","","Fallbacks: IsBufferARB",null,[[["gluint",6]],["glboolean",6]]],[5,"IsEnabled","","",null,[[["glenum",6]],["glboolean",6]]],[5,"IsEnabledi","","Fallbacks: IsEnabledIndexedEXT, IsEnablediEXT, …",null,[[["glenum",6],["gluint",6]],["glboolean",6]]],[5,"IsFramebuffer","","Fallbacks: IsFramebufferEXT",null,[[["gluint",6]],["glboolean",6]]],[5,"IsProgram","","",null,[[["gluint",6]],["glboolean",6]]],[5,"IsProgramPipeline","","",null,[[["gluint",6]],["glboolean",6]]],[5,"IsQuery","","Fallbacks: IsQueryARB",null,[[["gluint",6]],["glboolean",6]]],[5,"IsRenderbuffer","","Fallbacks: IsRenderbufferEXT",null,[[["gluint",6]],["glboolean",6]]],[5,"IsSampler","","",null,[[["gluint",6]],["glboolean",6]]],[5,"IsShader","","",null,[[["gluint",6]],["glboolean",6]]],[5,"IsSync","","Fallbacks: IsSyncAPPLE",null,[[["glsync",6]],["glboolean",6]]],[5,"IsTexture","","",null,[[["gluint",6]],["glboolean",6]]],[5,"IsTransformFeedback","","Fallbacks: IsTransformFeedbackNV",null,[[["gluint",6]],["glboolean",6]]],[5,"IsVertexArray","","Fallbacks: IsVertexArrayAPPLE, IsVertexArrayOES",null,[[["gluint",6]],["glboolean",6]]],[5,"LineWidth","","",null,[[["glfloat",6]]]],[5,"LinkProgram","","Fallbacks: LinkProgramARB",null,[[["gluint",6]]]],[5,"LogicOp","","",null,[[["glenum",6]]]],[5,"MapBuffer","","Fallbacks: MapBufferARB, MapBufferOES",null,[[["glenum",6]]]],[5,"MapBufferRange","","Fallbacks: MapBufferRangeEXT",null,[[["glsizeiptr",6],["glintptr",6],["glenum",6],["glbitfield",6]]]],[5,"MapNamedBuffer","","",null,[[["glenum",6],["gluint",6]]]],[5,"MapNamedBufferRange","","",null,[[["glsizeiptr",6],["glintptr",6],["gluint",6],["glbitfield",6]]]],[5,"MemoryBarrier","","Fallbacks: MemoryBarrierEXT",null,[[["glbitfield",6]]]],[5,"MemoryBarrierByRegion","","",null,[[["glbitfield",6]]]],[5,"MinSampleShading","","Fallbacks: MinSampleShadingARB, MinSampleShadingOES",null,[[["glfloat",6]]]],[5,"MultiDrawArrays","","Fallbacks: MultiDrawArraysEXT",null,[[["glsizei",6],["glenum",6]]]],[5,"MultiDrawArraysIndirect","","Fallbacks: MultiDrawArraysIndirectAMD, …",null,[[["glsizei",6],["glenum",6]]]],[5,"MultiDrawElements","","Fallbacks: MultiDrawElementsEXT",null,[[["glsizei",6],["glenum",6]]]],[5,"MultiDrawElementsBaseVertex","","Fallbacks: MultiDrawElementsBaseVertexEXT",null,[[["glsizei",6],["glenum",6]]]],[5,"MultiDrawElementsIndirect","","Fallbacks: MultiDrawElementsIndirectAMD, …",null,[[["glsizei",6],["glenum",6]]]],[5,"MultiTexCoordP1ui","","",null,[[["glenum",6],["gluint",6]]]],[5,"MultiTexCoordP1uiv","","",null,[[["glenum",6]]]],[5,"MultiTexCoordP2ui","","",null,[[["glenum",6],["gluint",6]]]],[5,"MultiTexCoordP2uiv","","",null,[[["glenum",6]]]],[5,"MultiTexCoordP3ui","","",null,[[["glenum",6],["gluint",6]]]],[5,"MultiTexCoordP3uiv","","",null,[[["glenum",6]]]],[5,"MultiTexCoordP4ui","","",null,[[["glenum",6],["gluint",6]]]],[5,"MultiTexCoordP4uiv","","",null,[[["glenum",6]]]],[5,"NamedBufferData","","",null,[[["glsizeiptr",6],["glenum",6],["gluint",6]]]],[5,"NamedBufferStorage","","Fallbacks: NamedBufferStorageEXT",null,[[["glsizeiptr",6],["glbitfield",6],["gluint",6]]]],[5,"NamedBufferSubData","","Fallbacks: NamedBufferSubDataEXT",null,[[["glintptr",6],["glsizeiptr",6],["gluint",6]]]],[5,"NamedFramebufferDrawBuffer","","",null,[[["glenum",6],["gluint",6]]]],[5,"NamedFramebufferDrawBuffers","","",null,[[["glsizei",6],["gluint",6]]]],[5,"NamedFramebufferParameteri","","",null,[[["glenum",6],["glint",6],["gluint",6]]]],[5,"NamedFramebufferReadBuffer","","",null,[[["glenum",6],["gluint",6]]]],[5,"NamedFramebufferRenderbuffer","","",null,[[["glenum",6],["gluint",6]]]],[5,"NamedFramebufferTexture","","",null,[[["glenum",6],["glint",6],["gluint",6]]]],[5,"NamedFramebufferTextureLayer","","",null,[[["glint",6],["gluint",6],["glenum",6]]]],[5,"NamedRenderbufferStorage","","",null,[[["gluint",6],["glsizei",6],["glenum",6]]]],[5,"NamedRenderbufferStorageMultisample","","",null,[[["gluint",6],["glsizei",6],["glenum",6]]]],[5,"NormalP3ui","","",null,[[["glenum",6],["gluint",6]]]],[5,"NormalP3uiv","","",null,[[["glenum",6]]]],[5,"ObjectLabel","","Fallbacks: ObjectLabelKHR",null,[[["glsizei",6],["glenum",6],["gluint",6]]]],[5,"ObjectPtrLabel","","Fallbacks: ObjectPtrLabelKHR",null,[[["glsizei",6]]]],[5,"PatchParameterfv","","",null,[[["glenum",6]]]],[5,"PatchParameteri","","Fallbacks: PatchParameteriEXT, PatchParameteriOES",null,[[["glenum",6],["glint",6]]]],[5,"PauseTransformFeedback","","Fallbacks: PauseTransformFeedbackNV",null,[[]]],[5,"PixelStoref","","",null,[[["glenum",6],["glfloat",6]]]],[5,"PixelStorei","","",null,[[["glenum",6],["glint",6]]]],[5,"PointParameterf","","Fallbacks: PointParameterfARB, PointParameterfEXT, …",null,[[["glenum",6],["glfloat",6]]]],[5,"PointParameterfv","","Fallbacks: PointParameterfvARB, PointParameterfvEXT, …",null,[[["glenum",6]]]],[5,"PointParameteri","","Fallbacks: PointParameteriNV",null,[[["glenum",6],["glint",6]]]],[5,"PointParameteriv","","Fallbacks: PointParameterivNV",null,[[["glenum",6]]]],[5,"PointSize","","",null,[[["glfloat",6]]]],[5,"PolygonMode","","Fallbacks: PolygonModeNV",null,[[["glenum",6]]]],[5,"PolygonOffset","","",null,[[["glfloat",6]]]],[5,"PopDebugGroup","","Fallbacks: PopDebugGroupKHR",null,[[]]],[5,"PrimitiveRestartIndex","","",null,[[["gluint",6]]]],[5,"ProgramBinary","","Fallbacks: ProgramBinaryOES",null,[[["glsizei",6],["glenum",6],["gluint",6]]]],[5,"ProgramParameteri","","Fallbacks: ProgramParameteriARB, ProgramParameteriEXT",null,[[["glenum",6],["glint",6],["gluint",6]]]],[5,"ProgramUniform1d","","",null,[[["gldouble",6],["glint",6],["gluint",6]]]],[5,"ProgramUniform1dv","","",null,[[["glsizei",6],["glint",6],["gluint",6]]]],[5,"ProgramUniform1f","","Fallbacks: ProgramUniform1fEXT",null,[[["glfloat",6],["glint",6],["gluint",6]]]],[5,"ProgramUniform1fv","","Fallbacks: ProgramUniform1fvEXT",null,[[["glsizei",6],["glint",6],["gluint",6]]]],[5,"ProgramUniform1i","","Fallbacks: ProgramUniform1iEXT",null,[[["glint",6],["gluint",6]]]],[5,"ProgramUniform1iv","","Fallbacks: ProgramUniform1ivEXT",null,[[["glsizei",6],["glint",6],["gluint",6]]]],[5,"ProgramUniform1ui","","Fallbacks: ProgramUniform1uiEXT",null,[[["glint",6],["gluint",6]]]],[5,"ProgramUniform1uiv","","Fallbacks: ProgramUniform1uivEXT",null,[[["glsizei",6],["glint",6],["gluint",6]]]],[5,"ProgramUniform2d","","",null,[[["glint",6],["gluint",6],["gldouble",6]]]],[5,"ProgramUniform2dv","","",null,[[["glsizei",6],["glint",6],["gluint",6]]]],[5,"ProgramUniform2f","","Fallbacks: ProgramUniform2fEXT",null,[[["glint",6],["gluint",6],["glfloat",6]]]],[5,"ProgramUniform2fv","","Fallbacks: ProgramUniform2fvEXT",null,[[["glsizei",6],["glint",6],["gluint",6]]]],[5,"ProgramUniform2i","","Fallbacks: ProgramUniform2iEXT",null,[[["glint",6],["gluint",6]]]],[5,"ProgramUniform2iv","","Fallbacks: ProgramUniform2ivEXT",null,[[["glsizei",6],["glint",6],["gluint",6]]]],[5,"ProgramUniform2ui","","Fallbacks: ProgramUniform2uiEXT",null,[[["glint",6],["gluint",6]]]],[5,"ProgramUniform2uiv","","Fallbacks: ProgramUniform2uivEXT",null,[[["glsizei",6],["glint",6],["gluint",6]]]],[5,"ProgramUniform3d","","",null,[[["glint",6],["gluint",6],["gldouble",6]]]],[5,"ProgramUniform3dv","","",null,[[["glsizei",6],["glint",6],["gluint",6]]]],[5,"ProgramUniform3f","","Fallbacks: ProgramUniform3fEXT",null,[[["glint",6],["gluint",6],["glfloat",6]]]],[5,"ProgramUniform3fv","","Fallbacks: ProgramUniform3fvEXT",null,[[["glsizei",6],["glint",6],["gluint",6]]]],[5,"ProgramUniform3i","","Fallbacks: ProgramUniform3iEXT",null,[[["glint",6],["gluint",6]]]],[5,"ProgramUniform3iv","","Fallbacks: ProgramUniform3ivEXT",null,[[["glsizei",6],["glint",6],["gluint",6]]]],[5,"ProgramUniform3ui","","Fallbacks: ProgramUniform3uiEXT",null,[[["glint",6],["gluint",6]]]],[5,"ProgramUniform3uiv","","Fallbacks: ProgramUniform3uivEXT",null,[[["glsizei",6],["glint",6],["gluint",6]]]],[5,"ProgramUniform4d","","",null,[[["glint",6],["gluint",6],["gldouble",6]]]],[5,"ProgramUniform4dv","","",null,[[["glsizei",6],["glint",6],["gluint",6]]]],[5,"ProgramUniform4f","","Fallbacks: ProgramUniform4fEXT",null,[[["glint",6],["gluint",6],["glfloat",6]]]],[5,"ProgramUniform4fv","","Fallbacks: ProgramUniform4fvEXT",null,[[["glsizei",6],["glint",6],["gluint",6]]]],[5,"ProgramUniform4i","","Fallbacks: ProgramUniform4iEXT",null,[[["glint",6],["gluint",6]]]],[5,"ProgramUniform4iv","","Fallbacks: ProgramUniform4ivEXT",null,[[["glsizei",6],["glint",6],["gluint",6]]]],[5,"ProgramUniform4ui","","Fallbacks: ProgramUniform4uiEXT",null,[[["glint",6],["gluint",6]]]],[5,"ProgramUniform4uiv","","Fallbacks: ProgramUniform4uivEXT",null,[[["glsizei",6],["glint",6],["gluint",6]]]],[5,"ProgramUniformMatrix2dv","","",null,[[["glboolean",6],["glint",6],["gluint",6],["glsizei",6]]]],[5,"ProgramUniformMatrix2fv","","Fallbacks: ProgramUniformMatrix2fvEXT",null,[[["glboolean",6],["glint",6],["gluint",6],["glsizei",6]]]],[5,"ProgramUniformMatrix2x3dv","","",null,[[["glboolean",6],["glint",6],["gluint",6],["glsizei",6]]]],[5,"ProgramUniformMatrix2x3fv","","Fallbacks: ProgramUniformMatrix2x3fvEXT",null,[[["glboolean",6],["glint",6],["gluint",6],["glsizei",6]]]],[5,"ProgramUniformMatrix2x4dv","","",null,[[["glboolean",6],["glint",6],["gluint",6],["glsizei",6]]]],[5,"ProgramUniformMatrix2x4fv","","Fallbacks: ProgramUniformMatrix2x4fvEXT",null,[[["glboolean",6],["glint",6],["gluint",6],["glsizei",6]]]],[5,"ProgramUniformMatrix3dv","","",null,[[["glboolean",6],["glint",6],["gluint",6],["glsizei",6]]]],[5,"ProgramUniformMatrix3fv","","Fallbacks: ProgramUniformMatrix3fvEXT",null,[[["glboolean",6],["glint",6],["gluint",6],["glsizei",6]]]],[5,"ProgramUniformMatrix3x2dv","","",null,[[["glboolean",6],["glint",6],["gluint",6],["glsizei",6]]]],[5,"ProgramUniformMatrix3x2fv","","Fallbacks: ProgramUniformMatrix3x2fvEXT",null,[[["glboolean",6],["glint",6],["gluint",6],["glsizei",6]]]],[5,"ProgramUniformMatrix3x4dv","","",null,[[["glboolean",6],["glint",6],["gluint",6],["glsizei",6]]]],[5,"ProgramUniformMatrix3x4fv","","Fallbacks: ProgramUniformMatrix3x4fvEXT",null,[[["glboolean",6],["glint",6],["gluint",6],["glsizei",6]]]],[5,"ProgramUniformMatrix4dv","","",null,[[["glboolean",6],["glint",6],["gluint",6],["glsizei",6]]]],[5,"ProgramUniformMatrix4fv","","Fallbacks: ProgramUniformMatrix4fvEXT",null,[[["glboolean",6],["glint",6],["gluint",6],["glsizei",6]]]],[5,"ProgramUniformMatrix4x2dv","","",null,[[["glboolean",6],["glint",6],["gluint",6],["glsizei",6]]]],[5,"ProgramUniformMatrix4x2fv","","Fallbacks: ProgramUniformMatrix4x2fvEXT",null,[[["glboolean",6],["glint",6],["gluint",6],["glsizei",6]]]],[5,"ProgramUniformMatrix4x3dv","","",null,[[["glboolean",6],["glint",6],["gluint",6],["glsizei",6]]]],[5,"ProgramUniformMatrix4x3fv","","Fallbacks: ProgramUniformMatrix4x3fvEXT",null,[[["glboolean",6],["glint",6],["gluint",6],["glsizei",6]]]],[5,"ProvokingVertex","","Fallbacks: ProvokingVertexEXT",null,[[["glenum",6]]]],[5,"PushDebugGroup","","Fallbacks: PushDebugGroupKHR",null,[[["glsizei",6],["glenum",6],["gluint",6]]]],[5,"QueryCounter","","Fallbacks: QueryCounterEXT",null,[[["glenum",6],["gluint",6]]]],[5,"ReadBuffer","","",null,[[["glenum",6]]]],[5,"ReadPixels","","",null,[[["glint",6],["glsizei",6],["glenum",6]]]],[5,"ReadnPixels","","Fallbacks: ReadnPixelsARB, ReadnPixelsEXT, ReadnPixelsKHR",null,[[["glint",6],["glsizei",6],["glenum",6]]]],[5,"ReleaseShaderCompiler","","",null,[[]]],[5,"RenderbufferStorage","","Fallbacks: RenderbufferStorageEXT",null,[[["glsizei",6],["glenum",6]]]],[5,"RenderbufferStorageMultisample","","Fallbacks: RenderbufferStorageMultisampleEXT, …",null,[[["glsizei",6],["glenum",6]]]],[5,"ResumeTransformFeedback","","Fallbacks: ResumeTransformFeedbackNV",null,[[]]],[5,"SampleCoverage","","Fallbacks: SampleCoverageARB",null,[[["glboolean",6],["glfloat",6]]]],[5,"SampleMaski","","",null,[[["glbitfield",6],["gluint",6]]]],[5,"SamplerParameterIiv","","Fallbacks: SamplerParameterIivEXT, SamplerParameterIivOES",null,[[["glenum",6],["gluint",6]]]],[5,"SamplerParameterIuiv","","Fallbacks: SamplerParameterIuivEXT, …",null,[[["glenum",6],["gluint",6]]]],[5,"SamplerParameterf","","",null,[[["glfloat",6],["glenum",6],["gluint",6]]]],[5,"SamplerParameterfv","","",null,[[["glenum",6],["gluint",6]]]],[5,"SamplerParameteri","","",null,[[["glenum",6],["glint",6],["gluint",6]]]],[5,"SamplerParameteriv","","",null,[[["glenum",6],["gluint",6]]]],[5,"Scissor","","",null,[[["glsizei",6],["glint",6]]]],[5,"ScissorArrayv","","Fallbacks: ScissorArrayvNV, ScissorArrayvOES",null,[[["glsizei",6],["gluint",6]]]],[5,"ScissorIndexed","","Fallbacks: ScissorIndexedNV, ScissorIndexedOES",null,[[["glint",6],["gluint",6],["glsizei",6]]]],[5,"ScissorIndexedv","","Fallbacks: ScissorIndexedvNV, ScissorIndexedvOES",null,[[["gluint",6]]]],[5,"SecondaryColorP3ui","","",null,[[["glenum",6],["gluint",6]]]],[5,"SecondaryColorP3uiv","","",null,[[["glenum",6]]]],[5,"ShaderBinary","","",null,[[["glsizei",6],["glenum",6]]]],[5,"ShaderSource","","Fallbacks: ShaderSourceARB",null,[[["glsizei",6],["gluint",6]]]],[5,"ShaderStorageBlockBinding","","",null,[[["gluint",6]]]],[5,"StencilFunc","","",null,[[["glenum",6],["glint",6],["gluint",6]]]],[5,"StencilFuncSeparate","","",null,[[["glenum",6],["glint",6],["gluint",6]]]],[5,"StencilMask","","",null,[[["gluint",6]]]],[5,"StencilMaskSeparate","","",null,[[["glenum",6],["gluint",6]]]],[5,"StencilOp","","",null,[[["glenum",6]]]],[5,"StencilOpSeparate","","Fallbacks: StencilOpSeparateATI",null,[[["glenum",6]]]],[5,"TexBuffer","","Fallbacks: TexBufferARB, TexBufferEXT, TexBufferOES",null,[[["glenum",6],["gluint",6]]]],[5,"TexBufferRange","","Fallbacks: TexBufferRangeEXT, TexBufferRangeOES",null,[[["glsizeiptr",6],["glintptr",6],["gluint",6],["glenum",6]]]],[5,"TexCoordP1ui","","",null,[[["glenum",6],["gluint",6]]]],[5,"TexCoordP1uiv","","",null,[[["glenum",6]]]],[5,"TexCoordP2ui","","",null,[[["glenum",6],["gluint",6]]]],[5,"TexCoordP2uiv","","",null,[[["glenum",6]]]],[5,"TexCoordP3ui","","",null,[[["glenum",6],["gluint",6]]]],[5,"TexCoordP3uiv","","",null,[[["glenum",6]]]],[5,"TexCoordP4ui","","",null,[[["glenum",6],["gluint",6]]]],[5,"TexCoordP4uiv","","",null,[[["glenum",6]]]],[5,"TexImage1D","","",null,[[["glint",6],["glsizei",6],["glenum",6]]]],[5,"TexImage2D","","",null,[[["glint",6],["glsizei",6],["glenum",6]]]],[5,"TexImage2DMultisample","","",null,[[["glsizei",6],["glenum",6],["glboolean",6]]]],[5,"TexImage3D","","Fallbacks: TexImage3DEXT",null,[[["glint",6],["glsizei",6],["glenum",6]]]],[5,"TexImage3DMultisample","","",null,[[["glsizei",6],["glenum",6],["glboolean",6]]]],[5,"TexParameterIiv","","Fallbacks: TexParameterIivEXT, TexParameterIivOES",null,[[["glenum",6]]]],[5,"TexParameterIuiv","","Fallbacks: TexParameterIuivEXT, TexParameterIuivOES",null,[[["glenum",6]]]],[5,"TexParameterf","","",null,[[["glenum",6],["glfloat",6]]]],[5,"TexParameterfv","","",null,[[["glenum",6]]]],[5,"TexParameteri","","",null,[[["glenum",6],["glint",6]]]],[5,"TexParameteriv","","",null,[[["glenum",6]]]],[5,"TexStorage1D","","Fallbacks: TexStorage1DEXT",null,[[["glsizei",6],["glenum",6]]]],[5,"TexStorage2D","","Fallbacks: TexStorage2DEXT",null,[[["glsizei",6],["glenum",6]]]],[5,"TexStorage2DMultisample","","",null,[[["glsizei",6],["glenum",6],["glboolean",6]]]],[5,"TexStorage3D","","Fallbacks: TexStorage3DEXT",null,[[["glsizei",6],["glenum",6]]]],[5,"TexStorage3DMultisample","","Fallbacks: TexStorage3DMultisampleOES",null,[[["glsizei",6],["glenum",6],["glboolean",6]]]],[5,"TexSubImage1D","","Fallbacks: TexSubImage1DEXT",null,[[["glint",6],["glsizei",6],["glenum",6]]]],[5,"TexSubImage2D","","Fallbacks: TexSubImage2DEXT",null,[[["glint",6],["glsizei",6],["glenum",6]]]],[5,"TexSubImage3D","","Fallbacks: TexSubImage3DEXT",null,[[["glint",6],["glsizei",6],["glenum",6]]]],[5,"TextureBarrier","","",null,[[]]],[5,"TextureBuffer","","",null,[[["glenum",6],["gluint",6]]]],[5,"TextureBufferRange","","",null,[[["glsizeiptr",6],["glintptr",6],["gluint",6],["glenum",6]]]],[5,"TextureParameterIiv","","",null,[[["glenum",6],["gluint",6]]]],[5,"TextureParameterIuiv","","",null,[[["glenum",6],["gluint",6]]]],[5,"TextureParameterf","","",null,[[["glfloat",6],["glenum",6],["gluint",6]]]],[5,"TextureParameterfv","","",null,[[["glenum",6],["gluint",6]]]],[5,"TextureParameteri","","",null,[[["glenum",6],["glint",6],["gluint",6]]]],[5,"TextureParameteriv","","",null,[[["glenum",6],["gluint",6]]]],[5,"TextureStorage1D","","",null,[[["gluint",6],["glsizei",6],["glenum",6]]]],[5,"TextureStorage2D","","",null,[[["gluint",6],["glsizei",6],["glenum",6]]]],[5,"TextureStorage2DMultisample","","",null,[[["glboolean",6],["gluint",6],["glsizei",6],["glenum",6]]]],[5,"TextureStorage3D","","",null,[[["gluint",6],["glsizei",6],["glenum",6]]]],[5,"TextureStorage3DMultisample","","",null,[[["glboolean",6],["gluint",6],["glsizei",6],["glenum",6]]]],[5,"TextureSubImage1D","","",null,[[["glint",6],["gluint",6],["glsizei",6],["glenum",6]]]],[5,"TextureSubImage2D","","",null,[[["glint",6],["gluint",6],["glsizei",6],["glenum",6]]]],[5,"TextureSubImage3D","","",null,[[["glint",6],["gluint",6],["glsizei",6],["glenum",6]]]],[5,"TextureView","","Fallbacks: TextureViewEXT, TextureViewOES",null,[[["glenum",6],["gluint",6]]]],[5,"TransformFeedbackBufferBase","","",null,[[["gluint",6]]]],[5,"TransformFeedbackBufferRange","","",null,[[["glintptr",6],["glsizeiptr",6],["gluint",6]]]],[5,"TransformFeedbackVaryings","","Fallbacks: TransformFeedbackVaryingsEXT",null,[[["glsizei",6],["glenum",6],["gluint",6]]]],[5,"Uniform1d","","",null,[[["glint",6],["gldouble",6]]]],[5,"Uniform1dv","","",null,[[["glsizei",6],["glint",6]]]],[5,"Uniform1f","","Fallbacks: Uniform1fARB",null,[[["glint",6],["glfloat",6]]]],[5,"Uniform1fv","","Fallbacks: Uniform1fvARB",null,[[["glsizei",6],["glint",6]]]],[5,"Uniform1i","","Fallbacks: Uniform1iARB",null,[[["glint",6]]]],[5,"Uniform1iv","","Fallbacks: Uniform1ivARB",null,[[["glsizei",6],["glint",6]]]],[5,"Uniform1ui","","Fallbacks: Uniform1uiEXT",null,[[["glint",6],["gluint",6]]]],[5,"Uniform1uiv","","Fallbacks: Uniform1uivEXT",null,[[["glsizei",6],["glint",6]]]],[5,"Uniform2d","","",null,[[["glint",6],["gldouble",6]]]],[5,"Uniform2dv","","",null,[[["glsizei",6],["glint",6]]]],[5,"Uniform2f","","Fallbacks: Uniform2fARB",null,[[["glint",6],["glfloat",6]]]],[5,"Uniform2fv","","Fallbacks: Uniform2fvARB",null,[[["glsizei",6],["glint",6]]]],[5,"Uniform2i","","Fallbacks: Uniform2iARB",null,[[["glint",6]]]],[5,"Uniform2iv","","Fallbacks: Uniform2ivARB",null,[[["glsizei",6],["glint",6]]]],[5,"Uniform2ui","","Fallbacks: Uniform2uiEXT",null,[[["glint",6],["gluint",6]]]],[5,"Uniform2uiv","","Fallbacks: Uniform2uivEXT",null,[[["glsizei",6],["glint",6]]]],[5,"Uniform3d","","",null,[[["glint",6],["gldouble",6]]]],[5,"Uniform3dv","","",null,[[["glsizei",6],["glint",6]]]],[5,"Uniform3f","","Fallbacks: Uniform3fARB",null,[[["glint",6],["glfloat",6]]]],[5,"Uniform3fv","","Fallbacks: Uniform3fvARB",null,[[["glsizei",6],["glint",6]]]],[5,"Uniform3i","","Fallbacks: Uniform3iARB",null,[[["glint",6]]]],[5,"Uniform3iv","","Fallbacks: Uniform3ivARB",null,[[["glsizei",6],["glint",6]]]],[5,"Uniform3ui","","Fallbacks: Uniform3uiEXT",null,[[["glint",6],["gluint",6]]]],[5,"Uniform3uiv","","Fallbacks: Uniform3uivEXT",null,[[["glsizei",6],["glint",6]]]],[5,"Uniform4d","","",null,[[["glint",6],["gldouble",6]]]],[5,"Uniform4dv","","",null,[[["glsizei",6],["glint",6]]]],[5,"Uniform4f","","Fallbacks: Uniform4fARB",null,[[["glint",6],["glfloat",6]]]],[5,"Uniform4fv","","Fallbacks: Uniform4fvARB",null,[[["glsizei",6],["glint",6]]]],[5,"Uniform4i","","Fallbacks: Uniform4iARB",null,[[["glint",6]]]],[5,"Uniform4iv","","Fallbacks: Uniform4ivARB",null,[[["glsizei",6],["glint",6]]]],[5,"Uniform4ui","","Fallbacks: Uniform4uiEXT",null,[[["glint",6],["gluint",6]]]],[5,"Uniform4uiv","","Fallbacks: Uniform4uivEXT",null,[[["glsizei",6],["glint",6]]]],[5,"UniformBlockBinding","","",null,[[["gluint",6]]]],[5,"UniformMatrix2dv","","",null,[[["glsizei",6],["glboolean",6],["glint",6]]]],[5,"UniformMatrix2fv","","Fallbacks: UniformMatrix2fvARB",null,[[["glsizei",6],["glboolean",6],["glint",6]]]],[5,"UniformMatrix2x3dv","","",null,[[["glsizei",6],["glboolean",6],["glint",6]]]],[5,"UniformMatrix2x3fv","","Fallbacks: UniformMatrix2x3fvNV",null,[[["glsizei",6],["glboolean",6],["glint",6]]]],[5,"UniformMatrix2x4dv","","",null,[[["glsizei",6],["glboolean",6],["glint",6]]]],[5,"UniformMatrix2x4fv","","Fallbacks: UniformMatrix2x4fvNV",null,[[["glsizei",6],["glboolean",6],["glint",6]]]],[5,"UniformMatrix3dv","","",null,[[["glsizei",6],["glboolean",6],["glint",6]]]],[5,"UniformMatrix3fv","","Fallbacks: UniformMatrix3fvARB",null,[[["glsizei",6],["glboolean",6],["glint",6]]]],[5,"UniformMatrix3x2dv","","",null,[[["glsizei",6],["glboolean",6],["glint",6]]]],[5,"UniformMatrix3x2fv","","Fallbacks: UniformMatrix3x2fvNV",null,[[["glsizei",6],["glboolean",6],["glint",6]]]],[5,"UniformMatrix3x4dv","","",null,[[["glsizei",6],["glboolean",6],["glint",6]]]],[5,"UniformMatrix3x4fv","","Fallbacks: UniformMatrix3x4fvNV",null,[[["glsizei",6],["glboolean",6],["glint",6]]]],[5,"UniformMatrix4dv","","",null,[[["glsizei",6],["glboolean",6],["glint",6]]]],[5,"UniformMatrix4fv","","Fallbacks: UniformMatrix4fvARB",null,[[["glsizei",6],["glboolean",6],["glint",6]]]],[5,"UniformMatrix4x2dv","","",null,[[["glsizei",6],["glboolean",6],["glint",6]]]],[5,"UniformMatrix4x2fv","","Fallbacks: UniformMatrix4x2fvNV",null,[[["glsizei",6],["glboolean",6],["glint",6]]]],[5,"UniformMatrix4x3dv","","",null,[[["glsizei",6],["glboolean",6],["glint",6]]]],[5,"UniformMatrix4x3fv","","Fallbacks: UniformMatrix4x3fvNV",null,[[["glsizei",6],["glboolean",6],["glint",6]]]],[5,"UniformSubroutinesuiv","","",null,[[["glsizei",6],["glenum",6]]]],[5,"UnmapBuffer","","Fallbacks: UnmapBufferARB, UnmapBufferOES",null,[[["glenum",6]],["glboolean",6]]],[5,"UnmapNamedBuffer","","",null,[[["gluint",6]],["glboolean",6]]],[5,"UseProgram","","Fallbacks: UseProgramObjectARB",null,[[["gluint",6]]]],[5,"UseProgramStages","","",null,[[["glbitfield",6],["gluint",6]]]],[5,"ValidateProgram","","Fallbacks: ValidateProgramARB",null,[[["gluint",6]]]],[5,"ValidateProgramPipeline","","",null,[[["gluint",6]]]],[5,"VertexArrayAttribBinding","","",null,[[["gluint",6]]]],[5,"VertexArrayAttribFormat","","",null,[[["glboolean",6],["glint",6],["gluint",6],["glenum",6]]]],[5,"VertexArrayAttribIFormat","","",null,[[["glint",6],["gluint",6],["glenum",6]]]],[5,"VertexArrayAttribLFormat","","",null,[[["glint",6],["gluint",6],["glenum",6]]]],[5,"VertexArrayBindingDivisor","","",null,[[["gluint",6]]]],[5,"VertexArrayElementBuffer","","",null,[[["gluint",6]]]],[5,"VertexArrayVertexBuffer","","",null,[[["glintptr",6],["glsizei",6],["gluint",6]]]],[5,"VertexArrayVertexBuffers","","",null,[[["glsizei",6],["gluint",6]]]],[5,"VertexAttrib1d","","Fallbacks: VertexAttrib1dARB, VertexAttrib1dNV",null,[[["gldouble",6],["gluint",6]]]],[5,"VertexAttrib1dv","","Fallbacks: VertexAttrib1dvARB, VertexAttrib1dvNV",null,[[["gluint",6]]]],[5,"VertexAttrib1f","","Fallbacks: VertexAttrib1fARB, VertexAttrib1fNV",null,[[["glfloat",6],["gluint",6]]]],[5,"VertexAttrib1fv","","Fallbacks: VertexAttrib1fvARB, VertexAttrib1fvNV",null,[[["gluint",6]]]],[5,"VertexAttrib1s","","Fallbacks: VertexAttrib1sARB, VertexAttrib1sNV",null,[[["glshort",6],["gluint",6]]]],[5,"VertexAttrib1sv","","Fallbacks: VertexAttrib1svARB, VertexAttrib1svNV",null,[[["gluint",6]]]],[5,"VertexAttrib2d","","Fallbacks: VertexAttrib2dARB, VertexAttrib2dNV",null,[[["gldouble",6],["gluint",6]]]],[5,"VertexAttrib2dv","","Fallbacks: VertexAttrib2dvARB, VertexAttrib2dvNV",null,[[["gluint",6]]]],[5,"VertexAttrib2f","","Fallbacks: VertexAttrib2fARB, VertexAttrib2fNV",null,[[["glfloat",6],["gluint",6]]]],[5,"VertexAttrib2fv","","Fallbacks: VertexAttrib2fvARB, VertexAttrib2fvNV",null,[[["gluint",6]]]],[5,"VertexAttrib2s","","Fallbacks: VertexAttrib2sARB, VertexAttrib2sNV",null,[[["glshort",6],["gluint",6]]]],[5,"VertexAttrib2sv","","Fallbacks: VertexAttrib2svARB, VertexAttrib2svNV",null,[[["gluint",6]]]],[5,"VertexAttrib3d","","Fallbacks: VertexAttrib3dARB, VertexAttrib3dNV",null,[[["gldouble",6],["gluint",6]]]],[5,"VertexAttrib3dv","","Fallbacks: VertexAttrib3dvARB, VertexAttrib3dvNV",null,[[["gluint",6]]]],[5,"VertexAttrib3f","","Fallbacks: VertexAttrib3fARB, VertexAttrib3fNV",null,[[["glfloat",6],["gluint",6]]]],[5,"VertexAttrib3fv","","Fallbacks: VertexAttrib3fvARB, VertexAttrib3fvNV",null,[[["gluint",6]]]],[5,"VertexAttrib3s","","Fallbacks: VertexAttrib3sARB, VertexAttrib3sNV",null,[[["glshort",6],["gluint",6]]]],[5,"VertexAttrib3sv","","Fallbacks: VertexAttrib3svARB, VertexAttrib3svNV",null,[[["gluint",6]]]],[5,"VertexAttrib4Nbv","","Fallbacks: VertexAttrib4NbvARB",null,[[["gluint",6]]]],[5,"VertexAttrib4Niv","","Fallbacks: VertexAttrib4NivARB",null,[[["gluint",6]]]],[5,"VertexAttrib4Nsv","","Fallbacks: VertexAttrib4NsvARB",null,[[["gluint",6]]]],[5,"VertexAttrib4Nub","","Fallbacks: VertexAttrib4NubARB, VertexAttrib4ubNV",null,[[["glubyte",6],["gluint",6]]]],[5,"VertexAttrib4Nubv","","Fallbacks: VertexAttrib4NubvARB, VertexAttrib4ubvNV",null,[[["gluint",6]]]],[5,"VertexAttrib4Nuiv","","Fallbacks: VertexAttrib4NuivARB",null,[[["gluint",6]]]],[5,"VertexAttrib4Nusv","","Fallbacks: VertexAttrib4NusvARB",null,[[["gluint",6]]]],[5,"VertexAttrib4bv","","Fallbacks: VertexAttrib4bvARB",null,[[["gluint",6]]]],[5,"VertexAttrib4d","","Fallbacks: VertexAttrib4dARB, VertexAttrib4dNV",null,[[["gldouble",6],["gluint",6]]]],[5,"VertexAttrib4dv","","Fallbacks: VertexAttrib4dvARB, VertexAttrib4dvNV",null,[[["gluint",6]]]],[5,"VertexAttrib4f","","Fallbacks: VertexAttrib4fARB, VertexAttrib4fNV",null,[[["glfloat",6],["gluint",6]]]],[5,"VertexAttrib4fv","","Fallbacks: VertexAttrib4fvARB, VertexAttrib4fvNV",null,[[["gluint",6]]]],[5,"VertexAttrib4iv","","Fallbacks: VertexAttrib4ivARB",null,[[["gluint",6]]]],[5,"VertexAttrib4s","","Fallbacks: VertexAttrib4sARB, VertexAttrib4sNV",null,[[["glshort",6],["gluint",6]]]],[5,"VertexAttrib4sv","","Fallbacks: VertexAttrib4svARB, VertexAttrib4svNV",null,[[["gluint",6]]]],[5,"VertexAttrib4ubv","","Fallbacks: VertexAttrib4ubvARB",null,[[["gluint",6]]]],[5,"VertexAttrib4uiv","","Fallbacks: VertexAttrib4uivARB",null,[[["gluint",6]]]],[5,"VertexAttrib4usv","","Fallbacks: VertexAttrib4usvARB",null,[[["gluint",6]]]],[5,"VertexAttribBinding","","",null,[[["gluint",6]]]],[5,"VertexAttribDivisor","","Fallbacks: VertexAttribDivisorANGLE, …",null,[[["gluint",6]]]],[5,"VertexAttribFormat","","",null,[[["glboolean",6],["glint",6],["gluint",6],["glenum",6]]]],[5,"VertexAttribI1i","","Fallbacks: VertexAttribI1iEXT",null,[[["glint",6],["gluint",6]]]],[5,"VertexAttribI1iv","","Fallbacks: VertexAttribI1ivEXT",null,[[["gluint",6]]]],[5,"VertexAttribI1ui","","Fallbacks: VertexAttribI1uiEXT",null,[[["gluint",6]]]],[5,"VertexAttribI1uiv","","Fallbacks: VertexAttribI1uivEXT",null,[[["gluint",6]]]],[5,"VertexAttribI2i","","Fallbacks: VertexAttribI2iEXT",null,[[["glint",6],["gluint",6]]]],[5,"VertexAttribI2iv","","Fallbacks: VertexAttribI2ivEXT",null,[[["gluint",6]]]],[5,"VertexAttribI2ui","","Fallbacks: VertexAttribI2uiEXT",null,[[["gluint",6]]]],[5,"VertexAttribI2uiv","","Fallbacks: VertexAttribI2uivEXT",null,[[["gluint",6]]]],[5,"VertexAttribI3i","","Fallbacks: VertexAttribI3iEXT",null,[[["glint",6],["gluint",6]]]],[5,"VertexAttribI3iv","","Fallbacks: VertexAttribI3ivEXT",null,[[["gluint",6]]]],[5,"VertexAttribI3ui","","Fallbacks: VertexAttribI3uiEXT",null,[[["gluint",6]]]],[5,"VertexAttribI3uiv","","Fallbacks: VertexAttribI3uivEXT",null,[[["gluint",6]]]],[5,"VertexAttribI4bv","","Fallbacks: VertexAttribI4bvEXT",null,[[["gluint",6]]]],[5,"VertexAttribI4i","","Fallbacks: VertexAttribI4iEXT",null,[[["glint",6],["gluint",6]]]],[5,"VertexAttribI4iv","","Fallbacks: VertexAttribI4ivEXT",null,[[["gluint",6]]]],[5,"VertexAttribI4sv","","Fallbacks: VertexAttribI4svEXT",null,[[["gluint",6]]]],[5,"VertexAttribI4ubv","","Fallbacks: VertexAttribI4ubvEXT",null,[[["gluint",6]]]],[5,"VertexAttribI4ui","","Fallbacks: VertexAttribI4uiEXT",null,[[["gluint",6]]]],[5,"VertexAttribI4uiv","","Fallbacks: VertexAttribI4uivEXT",null,[[["gluint",6]]]],[5,"VertexAttribI4usv","","Fallbacks: VertexAttribI4usvEXT",null,[[["gluint",6]]]],[5,"VertexAttribIFormat","","",null,[[["glint",6],["gluint",6],["glenum",6]]]],[5,"VertexAttribIPointer","","Fallbacks: VertexAttribIPointerEXT",null,[[["glint",6],["gluint",6],["glsizei",6],["glenum",6]]]],[5,"VertexAttribL1d","","Fallbacks: VertexAttribL1dEXT",null,[[["gldouble",6],["gluint",6]]]],[5,"VertexAttribL1dv","","Fallbacks: VertexAttribL1dvEXT",null,[[["gluint",6]]]],[5,"VertexAttribL2d","","Fallbacks: VertexAttribL2dEXT",null,[[["gldouble",6],["gluint",6]]]],[5,"VertexAttribL2dv","","Fallbacks: VertexAttribL2dvEXT",null,[[["gluint",6]]]],[5,"VertexAttribL3d","","Fallbacks: VertexAttribL3dEXT",null,[[["gldouble",6],["gluint",6]]]],[5,"VertexAttribL3dv","","Fallbacks: VertexAttribL3dvEXT",null,[[["gluint",6]]]],[5,"VertexAttribL4d","","Fallbacks: VertexAttribL4dEXT",null,[[["gldouble",6],["gluint",6]]]],[5,"VertexAttribL4dv","","Fallbacks: VertexAttribL4dvEXT",null,[[["gluint",6]]]],[5,"VertexAttribLFormat","","",null,[[["glint",6],["gluint",6],["glenum",6]]]],[5,"VertexAttribLPointer","","Fallbacks: VertexAttribLPointerEXT",null,[[["glint",6],["gluint",6],["glsizei",6],["glenum",6]]]],[5,"VertexAttribP1ui","","",null,[[["glboolean",6],["gluint",6],["glenum",6]]]],[5,"VertexAttribP1uiv","","",null,[[["glboolean",6],["glenum",6],["gluint",6]]]],[5,"VertexAttribP2ui","","",null,[[["glboolean",6],["gluint",6],["glenum",6]]]],[5,"VertexAttribP2uiv","","",null,[[["glboolean",6],["glenum",6],["gluint",6]]]],[5,"VertexAttribP3ui","","",null,[[["glboolean",6],["gluint",6],["glenum",6]]]],[5,"VertexAttribP3uiv","","",null,[[["glboolean",6],["glenum",6],["gluint",6]]]],[5,"VertexAttribP4ui","","",null,[[["glboolean",6],["gluint",6],["glenum",6]]]],[5,"VertexAttribP4uiv","","",null,[[["glboolean",6],["glenum",6],["gluint",6]]]],[5,"VertexAttribPointer","","Fallbacks: VertexAttribPointerARB",null,[[["glboolean",6],["glint",6],["gluint",6],["glsizei",6],["glenum",6]]]],[5,"VertexBindingDivisor","","",null,[[["gluint",6]]]],[5,"VertexP2ui","","",null,[[["glenum",6],["gluint",6]]]],[5,"VertexP2uiv","","",null,[[["glenum",6]]]],[5,"VertexP3ui","","",null,[[["glenum",6],["gluint",6]]]],[5,"VertexP3uiv","","",null,[[["glenum",6]]]],[5,"VertexP4ui","","",null,[[["glenum",6],["gluint",6]]]],[5,"VertexP4uiv","","",null,[[["glenum",6]]]],[5,"Viewport","","",null,[[["glsizei",6],["glint",6]]]],[5,"ViewportArrayv","","Fallbacks: ViewportArrayvNV, ViewportArrayvOES",null,[[["glsizei",6],["gluint",6]]]],[5,"ViewportIndexedf","","Fallbacks: ViewportIndexedfOES, ViewportIndexedfNV",null,[[["glfloat",6],["gluint",6]]]],[5,"ViewportIndexedfv","","Fallbacks: ViewportIndexedfvOES, ViewportIndexedfvNV",null,[[["gluint",6]]]],[5,"WaitSync","","Fallbacks: WaitSyncAPPLE",null,[[["glbitfield",6],["glsync",6],["gluint64",6]]]],[3,"FnPtr","","",null,null],[11,"new","","Creates a <code>FnPtr</code> from a load attempt.",0,[[],["fnptr",3]]],[5,"load_with","","Load each OpenGL symbol using a custom load function. …",null,[[]]],[11,"from","gl::types","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","gl","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]]],"p":[[3,"FnPtr"],[4,"__GLsync"],[4,"_cl_context"],[4,"_cl_event"]]},\
"graphics":{"doc":"A library for 2D graphics that works with multiple …","i":[[0,"draw_state","graphics","Graphics draw state.",null,null],[3,"DrawState","graphics::draw_state","Graphics draw state used for blending, clipping and …",null,null],[12,"scissor","","Scissor mask to use. If set, no pixel outside of this …",0,null],[12,"stencil","","Stencil test to use. If None, no stencil testing is done.",0,null],[12,"blend","","Blend function to use. If None, blending is disabled.",0,null],[11,"new_alpha","","Uses alpha blending.",0,[[],["drawstate",3]]],[11,"new_clip","","Draws to stencil buffer with value 255. This can be used …",0,[[],["drawstate",3]]],[11,"new_inside","","Tests against stencil buffer with value 255. Draws inside …",0,[[],["drawstate",3]]],[11,"new_outside","","Tests against stencil buffer with value 255. Draws …",0,[[],["drawstate",3]]],[11,"blend","","Sets blending.",0,[[["blend",4]],["drawstate",3]]],[11,"scissor","","Sets scissor <code>[x, y, w, h]</code>.",0,[[],["drawstate",3]]],[4,"Blend","","The blend setting to use when drawing.",null,null],[13,"Alpha","","Alpha blending (allows semi-transparent pixels).",1,null],[13,"Add","","Additive blending.",1,null],[13,"Multiply","","Multiply color components.",1,null],[13,"Invert","","Invert colors when rendering a white shape.",1,null],[4,"Stencil","","Stencil buffer settings.",null,null],[13,"Clip","","Draw to stencil buffer.",2,null],[13,"Inside","","Draw pixels that have stencil value.",2,null],[13,"Outside","","Draw pixels that does not have stencil value.",2,null],[0,"character","graphics","A text character",null,null],[3,"Character","graphics::character","Holds rendered character data.",null,null],[12,"offset","","The offset of character.",3,null],[12,"size","","The size of character, including space.",3,null],[12,"texture","","The texture of the character.",3,null],[11,"left","","The left offset.",3,[[],["scalar",6]]],[11,"top","","The top offset.",3,[[],["scalar",6]]],[11,"width","","Gets width of character, including space to the next one.",3,[[],["scalar",6]]],[11,"height","","Sets height of character, including space to the next one.",3,[[],["scalar",6]]],[8,"CharacterCache","","Stores characters in a buffer and loads them by demand.",null,null],[16,"Texture","","The texture type associated with the character cache.",4,null],[16,"Error","","The error type associated with the character cache.",4,null],[10,"character","","Get reference to character.",4,[[["fontsize",6],["char",15]],[["result",4],["character",3]]]],[11,"width","","Return the width for some given text.",4,[[["fontsize",6],["str",15]],[["result",4],["scalar",6]]]],[0,"context","graphics","Transformation context",null,null],[3,"Context","graphics::context","Drawing 2d context.",null,null],[12,"viewport","","Viewport information.",5,null],[12,"view","","View transformation.",5,null],[12,"transform","","Current transformation.",5,null],[12,"draw_state","","Current draw state settings.",5,null],[11,"new","","Creates a new drawing context.",5,[[],["context",3]]],[11,"new_viewport","","Creates a new context with absolute transform in point …",5,[[["viewport",3]],["context",3]]],[11,"new_abs","","Creates a new drawing context in absolute coordinates.",5,[[["scalar",6]],["context",3]]],[11,"view","","Moves the current transform to the view coordinate system.",5,[[]]],[11,"reset","","Moves the current transform to the default coordinate …",5,[[]]],[11,"store_view","","Stores the current transform as new view.",5,[[]]],[11,"get_view_size","","Computes the current view size.",5,[[],["vec2d",6]]],[0,"color","graphics","Helper methods for colors",null,null],[17,"WHITE","graphics::color","White color.",null,null],[17,"BLACK","","Black color.",null,null],[17,"TRANSPARENT","","Transparent color.",null,null],[5,"grey","","Returns a grey color",null,[[["colorcomponent",6]],["color",6]]],[5,"alpha","","Returns a semi-transparent white color",null,[[["colorcomponent",6]],["color",6]]],[5,"hex","","Converts from hexadecimal color format",null,[[["str",15]],["color",6]]],[5,"gamma_srgb_to_linear","","Converts gamma (brightness) from sRGB to linear color …",null,[[["color",6]],["color",6]]],[5,"gamma_linear_to_srgb","","Converts gamma (brightness) of a color from linear color …",null,[[["color",6]],["color",6]]],[0,"polygon","graphics","Draw polygon",null,null],[3,"Polygon","graphics::polygon","A polygon",null,null],[12,"color","","The color of the polygon",6,null],[11,"new","","Creates new polygon",6,[[["color",6]],["polygon",3]]],[11,"color","","Sets color.",6,[[["color",6]]]],[11,"draw","","Draws polygon using the default method.",6,[[["matrix2d",6],["polygon",6],["drawstate",3]]]],[11,"draw_tri","","Draws polygon using triangulation.",6,[[["matrix2d",6],["polygon",6],["drawstate",3]]]],[11,"draw_tween_lerp","","Draws tweened polygon with linear interpolation, using …",6,[[["polygons",6],["matrix2d",6],["drawstate",3],["scalar",6]]]],[11,"draw_tween_lerp_tri","","Draws tweened polygon with linear interpolation, using …",6,[[["polygons",6],["matrix2d",6],["drawstate",3],["scalar",6]]]],[0,"line","graphics","Draw Line",null,null],[4,"Shape","graphics::line","The shape of the line",null,null],[13,"Square","","Square edges",7,null],[13,"Round","","Round edges",7,null],[13,"Bevel","","Bevel edges",7,null],[3,"Line","","A colored line with a default border radius",null,null],[12,"color","","The line color",8,null],[12,"radius","","The line radius",8,null],[12,"shape","","The line shape",8,null],[11,"new","","Creates a new line",8,[[["color",6],["radius",6]],["line",3]]],[11,"new_round","","Creates a new line",8,[[["color",6],["radius",6]],["line",3]]],[11,"color","","Sets color.",8,[[["color",6]]]],[11,"radius","","Sets radius.",8,[[["radius",6]]]],[11,"width","","Sets width.",8,[[["width",6]]]],[11,"shape","","Sets shape.",8,[[["shape",4]]]],[11,"draw","","Draws line using default method.",8,[[["matrix2d",6],["drawstate",3],["line",6],["into",8]]]],[11,"draw_tri","","Draws line using triangulation.",8,[[["matrix2d",6],["drawstate",3],["line",6],["into",8]]]],[11,"draw_arrow","","Draws an arrow",8,[[["matrix2d",6],["drawstate",3],["line",6],["into",8],["scalar",6]]]],[0,"circle_arc","graphics","Draw an arc",null,null],[3,"CircleArc","graphics::circle_arc","A curved line",null,null],[12,"color","","The arcs color",9,null],[12,"radius","","The radius of the arc (Thickness of the drawing, not the …",9,null],[12,"start","","The start of the arc in radians",9,null],[12,"end","","The end of the arc in radians",9,null],[12,"resolution","","The resolution for the arc.",9,null],[11,"new","","Creates a new arc",9,[[["radius",6],["color",6],["scalar",6]],["circlearc",3]]],[11,"color","","Sets the arcs color.",9,[[["color",6]]]],[11,"radius","","Sets the radius of the arc (Thickness of the arc, not the …",9,[[["radius",6]]]],[11,"start","","Sets the start of the arc (in radians).",9,[[["scalar",6]]]],[11,"end","","Sets the end of the arc (in radians).",9,[[["scalar",6]]]],[11,"resolution","","Sets the resolution of the arcs smoothness.",9,[[["resolution",6]]]],[11,"draw","","Draws circle arc using default method.",9,[[["matrix2d",6],["drawstate",3],["into",8],["rectangle",6]]]],[11,"draw_tri","","Draws circle arc using triangulation.",9,[[["matrix2d",6],["drawstate",3],["into",8],["rectangle",6]]]],[0,"ellipse","graphics","Draw ellipse",null,null],[3,"Border","graphics::ellipse","Ellipse border",null,null],[12,"color","","The border color",10,null],[12,"radius","","The border radius",10,null],[3,"Ellipse","","An ellipse with filled color",null,null],[12,"color","","The ellipse color",11,null],[12,"border","","The ellipse border",11,null],[12,"resolution","","The resolution for the shape, 360 degrees.",11,null],[11,"new","","Creates a new ellipse",11,[[["color",6]],["ellipse",3]]],[11,"new_border","","Creates a new ellipse border",11,[[["color",6],["radius",6]],["ellipse",3]]],[11,"color","","Sets ellipse color.",11,[[["color",6]]]],[11,"border","","Sets ellipse border.",11,[[["border",3]]]],[11,"maybe_border","","Sets optional ellipse border.",11,[[["option",4],["border",3]]]],[11,"resolution","","Sets resolution of the ellipse smoothness.",11,[[["resolution",6]]]],[11,"draw","","Draws ellipse using default method.",11,[[["matrix2d",6],["drawstate",3],["into",8],["rectangle",6]]]],[11,"draw_tri","","Draws ellipse using triangulation.",11,[[["matrix2d",6],["drawstate",3],["into",8],["rectangle",6]]]],[0,"rectangle","graphics","Draw rectangle",null,null],[5,"rectangle_by_corners","graphics::rectangle","Create <code>types::Rectangle</code> by the two opposite corners.",null,[[["scalar",6]],["rectangle",6]]],[5,"centered","","Use x, y, half-width, half-height",null,[[["rectangle",6]],["rectangle",6]]],[5,"centered_square","","Create <code>types::Rectangle</code> for a square with a center in (<code>x</code>, …",null,[[["scalar",6]],["rectangle",6]]],[5,"square","","Create <code>types::Rectangle</code> for a square with a top-left …",null,[[["scalar",6]],["rectangle",6]]],[4,"Shape","","The shape of the rectangle corners",null,null],[13,"Square","","Square corners",12,null],[13,"Round","","Round corners, with resolution per corner.",12,null],[13,"Bevel","","Bevel corners",12,null],[3,"Border","","The border of the rectangle",null,null],[12,"color","","The color of the border",13,null],[12,"radius","","The radius of the border. The half-width of the line by …",13,null],[3,"Rectangle","","A filled rectangle",null,null],[12,"color","","The rectangle color",14,null],[12,"shape","","The roundness of the rectangle",14,null],[12,"border","","The border",14,null],[11,"new","","Creates a new rectangle.",14,[[["color",6]],["rectangle",3]]],[11,"new_round","","Creates a new rectangle with rounded corners.",14,[[["color",6],["radius",6]],["rectangle",3]]],[11,"new_border","","Creates a new rectangle border.",14,[[["color",6],["radius",6]],["rectangle",3]]],[11,"new_round_border","","Creates a new rectangle border with rounded corners.",14,[[["color",6],["radius",6]],["rectangle",3]]],[11,"color","","Sets color.",14,[[["color",6]]]],[11,"shape","","Sets shape of the corners.",14,[[["shape",4]]]],[11,"border","","Sets border properties.",14,[[["border",3]]]],[11,"maybe_border","","Sets optional border.",14,[[["option",4],["border",3]]]],[11,"draw","","Draws the rectangle using the default method.",14,[[["into",8],["rectangle",6],["drawstate",3],["matrix2d",6]]]],[11,"draw_tri","","Draws the rectangle using triangulation.",14,[[["into",8],["rectangle",6],["drawstate",3],["matrix2d",6]]]],[0,"image","graphics","Draw an image",null,null],[3,"Image","graphics::image","An image",null,null],[12,"color","","The color",15,null],[12,"rectangle","","The rectangle to draw image inside",15,null],[12,"source_rectangle","","The image source rectangle",15,null],[11,"new","","Creates a new image",15,[[],["image",3]]],[11,"new_color","","Creates a new colored image",15,[[["color",6]],["image",3]]],[11,"color","","Sets color.",15,[[["color",6]]]],[11,"maybe_color","","Sets optional color.",15,[[["option",4],["color",6]]]],[11,"rect","","Sets rectangle.",15,[[["into",8],["rectangle",6]]]],[11,"maybe_rect","","Sets optional rectangle.",15,[[["into",8],["rectangle",6],["option",4]]]],[11,"src_rect","","Sets source rectangle.",15,[[["sourcerectangle",6]]]],[11,"maybe_src_rect","","Sets optional source rectangle.",15,[[["option",4],["sourcerectangle",6]]]],[11,"draw","","Draws image using default method.",15,[[["matrix2d",6],["drawstate",3]]]],[11,"draw_tri","","Draws image using triangulation.",15,[[["matrix2d",6],["drawstate",3]]]],[5,"draw_many","","Draws many images.",null,[[["color",6],["matrix2d",6],["drawstate",3]]]],[0,"types","graphics","Contains type aliases used in this library",null,null],[6,"Area","graphics::types","The type used for area.",null,null],[6,"Color","","[red, green, blue, alpha]",null,null],[6,"ColorComponent","","The type used for color component.",null,null],[6,"Line","","[x1, y1, x2, y2]",null,null],[6,"SourceRectangle","","[x, y, w, h]",null,null],[6,"Polygon","","[p0, p1, ...]",null,null],[6,"Polygons","","A slice of polygons.",null,null],[6,"Radius","","The type used for radius.",null,null],[6,"Resolution","","The type used for resolution.",null,null],[6,"Ray","","[x, y, dir_x, dir_y]",null,null],[6,"Rectangle","","Rectangle dimensions: [x, y, w, h]",null,null],[6,"Triangle","","[x1, y1, x2, y2, x3, y3]",null,null],[6,"Width","","The type used for width.",null,null],[6,"FontSize","","The type used for font size.",null,null],[0,"modular_index","graphics","Helper functions for computing modular index safely.",null,null],[5,"offset","graphics::modular_index","Computes modular offset safely for indices.",null,[[["usize",15],["isize",15]],["usize",15]]],[5,"previous","","Computes previous modular index safely.",null,[[["usize",15]],["usize",15]]],[5,"next","","Computes next modular index safely.",null,[[["usize",15]],["usize",15]]],[0,"text","graphics","Draw text",null,null],[3,"Text","graphics::text","Renders text",null,null],[12,"color","","The color",16,null],[12,"font_size","","The font size",16,null],[12,"round","","Whether or not the text\'s position should be rounded (to …",16,null],[11,"new","","Creates a new text with black color",16,[[["fontsize",6]],["text",3]]],[11,"new_color","","Creates a new colored text",16,[[["color",6],["fontsize",6]],["text",3]]],[11,"round","","A builder method indicating that the Text\'s position …",16,[[],["text",3]]],[11,"draw","","Draws text with a character cache",16,[[["drawstate",3],["matrix2d",6],["str",15]],["result",4]]],[0,"triangulation","graphics","Methods for converting shapes into triangles.",null,null],[5,"tx","graphics::triangulation","Transformed x coordinate as f32.",null,[[["scalar",6],["matrix2d",6]],["f32",15]]],[5,"ty","","Transformed y coordinate as f32.",null,[[["scalar",6],["matrix2d",6]],["f32",15]]],[5,"with_lerp_polygons_tri_list","","Streams tweened polygons using linear interpolation.",null,[[["scalar",6],["matrix2d",6],["polygons",6]]]],[5,"with_ellipse_tri_list","","Streams an ellipse specified by a resolution.",null,[[["resolution",6],["rectangle",6],["matrix2d",6]]]],[5,"with_round_border_line_tri_list","","Streams a round border line.",null,[[["resolution",6],["radius",6],["matrix2d",6],["line",6]]]],[5,"with_round_rectangle_tri_list","","Streams a round rectangle.",null,[[["resolution",6],["radius",6],["matrix2d",6],["rectangle",6]]]],[5,"stream_polygon_tri_list","","Streams a polygon into tri list. Uses buffers that fit …",null,[[["matrix2d",6]]]],[5,"with_ellipse_border_tri_list","","Streams an ellipse border specified by a resolution.",null,[[["resolution",6],["radius",6],["matrix2d",6],["rectangle",6]]]],[5,"with_arc_tri_list","","Streams an arc between the two radian boundaries.",null,[[["resolution",6],["radius",6],["matrix2d",6],["scalar",6],["rectangle",6]]]],[5,"with_round_rectangle_border_tri_list","","Streams a round rectangle border.",null,[[["resolution",6],["radius",6],["matrix2d",6],["rectangle",6]]]],[5,"stream_quad_tri_list","","Streams a quad into tri list.",null,[[["matrix2d",6]]]],[5,"with_polygon_tri_list","","Splits polygon into convex segments. Create a buffer that …",null,[[["matrix2d",6],["polygon",6]]]],[5,"rect_tri_list_xy","","Creates triangle list vertices from rectangle.",null,[[["rectangle",6],["matrix2d",6]]]],[5,"rect_border_tri_list_xy","","Creates triangle list vertices from rectangle.",null,[[["rectangle",6],["matrix2d",6],["radius",6]]]],[5,"rect_tri_list_uv","","Creates triangle list texture coords from image.",null,[[["sourcerectangle",6]]]],[0,"math","graphics","Various methods for computing with vectors.",null,null],[5,"multiply","graphics::math","Multiplies two matrices.",null,[[]]],[5,"dot","","Computes the dot product.",null,[[]]],[5,"cross","","Computes the cross product.",null,[[]]],[5,"add","","Adds two vectors.",null,[[]]],[5,"sub","","Subtracts \'b\' from \'a\'.",null,[[]]],[5,"cast","","Converts to another vector type.",null,[[]]],[5,"mul","","Multiplies two vectors component wise.",null,[[]]],[5,"mul_scalar","","Multiplies the vector with a scalar.",null,[[]]],[5,"square_len","","Computes the square length of a vector.",null,[[]]],[5,"transform_pos","","Transforms a 2D position through matrix.",null,[[]]],[5,"transform_vec","","Transforms a 2D vector through matrix.",null,[[]]],[6,"Scalar","","The type used for scalars.",null,null],[6,"Matrix2d","","The type used for matrices.",null,null],[6,"Vec2d","","The type used for 2D vectors.",null,null],[6,"Vec3d","","The type used for 3D vectors.",null,null],[5,"perp","","Creates a perpendicular vector.",null,[[]]],[5,"abs_transform","","Transforms from normalized to absolute coordinates.",null,[[],["matrix2d",6]]],[5,"translate","","Creates a translation matrix.",null,[[["vec2d",6]],["matrix2d",6]]],[5,"rotate_radians","","Creates a rotation matrix.",null,[[],["matrix2d",6]]],[5,"orient","","Orients x axis to look at point.",null,[[],["matrix2d",6]]],[5,"scale","","Create a scale matrix.",null,[[],["matrix2d",6]]],[5,"shear","","Create a shear matrix.",null,[[["vec2d",6]],["matrix2d",6]]],[5,"identity","","Create an identity matrix.",null,[[],["matrix2d",6]]],[5,"get_scale","","Extract scale information from matrix.",null,[[["matrix2d",6]],["vec2d",6]]],[5,"separation","","Compute the shortest vector from point to ray. A ray …",null,[[["vec2d",6],["ray",6]],["vec2d",6]]],[5,"least_separation_4","","Returns the least separation out of four. Each seperation …",null,[[["vec2d",6]],["vec2d",6]]],[5,"margin_rectangle","","Shrinks a rectangle by a factor on all sides.",null,[[["rectangle",6]],["rectangle",6]]],[5,"relative_rectangle","","Computes a relative rectangle using the rectangle as a …",null,[[["vec2d",6],["rectangle",6]],["rectangle",6]]],[5,"overlap_rectangle","","Computes overlap between two rectangles. The area of the …",null,[[["rectangle",6]],[["rectangle",6],["option",4]]]],[5,"relative_source_rectangle","","Computes a relative source rectangle using the source …",null,[[["sourcerectangle",6]],["sourcerectangle",6]]],[5,"modular_offset","","Computes modular offset safely for numbers.",null,[[],[["add",8],["copy",8],["rem",8]]]],[5,"area_centroid","","Computes the area and centroid of a simple polygon.",null,[[["polygon",6]]]],[5,"area","","Computes area of a simple polygon.",null,[[["polygon",6]]]],[5,"centroid","","Computes centroid of a simple polygon.",null,[[["polygon",6]],["vec2d",6]]],[5,"line_side","","Returns a number that tells which side it is relative to …",null,[[["vec2d",6],["line",6]]]],[5,"inside_triangle","","Returns true if point is inside triangle.",null,[[["triangle",6],["vec2d",6]],["bool",15]]],[5,"triangle_face","","Returns true if triangle is clockwise.",null,[[["triangle",6]],["bool",15]]],[5,"to_barycentric","","Transforms from cartesian coordinates to barycentric.",null,[[["triangle",6],["vec2d",6]],["vec3d",6]]],[5,"from_barycentric","","Transforms from barycentric coordinates to cartesian.",null,[[["triangle",6],["vec3d",6]],["vec2d",6]]],[5,"hsv","","Transform color with hue, saturation and value.",null,[[["color",6],["f32",15]],["color",6]]],[0,"deform","graphics","Least square deforming of a 2D grid.",null,null],[3,"DeformGrid","graphics::deform","Represents a deformed grid.",null,null],[12,"cols","","The number of columns in the grid.",17,null],[12,"rows","","The number of rows in the grid.",17,null],[12,"rect","","The grid undeformed, which is a plain rectangle.",17,null],[12,"vertices","","The vertices, deformed.",17,null],[12,"indices","","The triangle indices.",17,null],[12,"texture_coords","","The texture coordinates.",17,null],[12,"ps","","Initial position of control points.",17,null],[12,"qs","","The current position of control points.",17,null],[12,"wis","","A weight computation buffer, one for each control point.",17,null],[11,"new","","Creates a new DeformGrid.",17,[[["usize",15],["rectangle",6]],["deformgrid",3]]],[11,"set_current","","Sets current control position.",17,[[["usize",15],["vec2d",6]]]],[11,"set_original","","Sets original control position.",17,[[["usize",15],["vec2d",6]]]],[11,"reset_control_points","","Removes all control points.",17,[[]]],[11,"reset_vertices_and_texture_coords","","Sets vertices and texture coords back to default.",17,[[]]],[11,"hit","","Finds original coordinate. If the deformed grid is …",17,[[["vec2d",6]],[["vec2d",6],["option",4]]]],[11,"draw_image","","Draws deformed image using default method.",17,[[["matrix2d",6],["drawstate",3]]]],[11,"draw_image_tri","","Draws deformed image using triangulation.",17,[[["matrix2d",6],["drawstate",3]]]],[11,"add_control_point","","Adds a control point, in original coordinates.",17,[[["vec2d",6]]]],[11,"draw_vertical_lines","","Draw vertical grid lines.",17,[[["line",3],["matrix2d",6],["drawstate",3]]]],[11,"draw_horizontal_lines","","Draw horizontal grid lines.",17,[[["line",3],["matrix2d",6],["drawstate",3]]]],[11,"update","","Updates the grid, by deforming the vertices.",17,[[]]],[0,"grid","graphics","A flat grid with square cells.",null,null],[3,"Grid","graphics::grid","Represents a flat grid with square cells.",null,null],[12,"cols","","Number of columns.",18,null],[12,"rows","","Number of rows.",18,null],[12,"units","","The width and height of each grid cell.",18,null],[3,"GridCells","","Iterates through the cells of a grid as (u32, u32).",null,null],[11,"draw","","Draws the grid.",18,[[["line",3],["matrix2d",6],["drawstate",3]]]],[11,"cells","","Get a GridIterator for the grid",18,[[],["gridcells",3]]],[11,"cell_position","","Get on-screen position of a grid cell",18,[[],["vec2d",6]]],[11,"x_pos","","Get on-screen x position of a grid cell",18,[[],["scalar",6]]],[11,"y_pos","","Get on-screen y position of a grid cell",18,[[],["scalar",6]]],[0,"glyph_cache","graphics","Implementations of the <code>CharacterCache</code> trait.",null,null],[0,"rusttype","graphics::glyph_cache","Glyph caching using the RustType library.",null,null],[3,"GlyphCache","graphics::glyph_cache::rusttype","A struct used for caching rendered font.",null,null],[12,"font","","The font.",19,null],[12,"factory","","The factory used to create textures.",19,null],[11,"from_font","","Constructs a GlyphCache from a Font.",19,[[["texturesettings",3],["font",3]]]],[11,"new","","Constructor for a GlyphCache.",19,[[["texturesettings",3]],[["result",6],["glyphcache",3]]]],[11,"from_bytes","","Creates a GlyphCache for a font stored in memory.",19,[[["texturesettings",3]],[["glyphcache",3],["result",4]]]],[11,"preload_chars","","Load all characters in the <code>chars</code> iterator for <code>size</code>",19,[[["fontsize",6]],["result",4]]],[11,"preload_printable_ascii","","Load all the printable ASCII characters for <code>size</code>. …",19,[[["fontsize",6]],["result",4]]],[11,"opt_character","","Return <code>ch</code> for <code>size</code> if it\'s already cached. Don\'t load. …",19,[[["fontsize",6],["char",15]],[["option",4],["character",3]]]],[0,"radians","graphics","Reexport radians helper trait from vecmath",null,null],[8,"Radians","graphics::radians","Useful constants for radians.",null,null],[10,"_90","","Returns radians corresponding to 90 degrees.",20,[[]]],[10,"_180","","Returns radians corresponding to 180 degrees.",20,[[]]],[10,"_360","","Returns radians corresponding to 360 degrees.",20,[[]]],[10,"deg_to_rad","","Convert a value to radians from degrees. Equivalent to …",20,[[]]],[10,"rad_to_deg","","Convert a value to degrees from radians. Equivalent to …",20,[[]]],[8,"ImageSize","graphics","Implemented by all images to be used with generic …",null,null],[10,"get_size","","Get the image size.",21,[[]]],[11,"get_width","","Gets the image width.",21,[[],["u32",15]]],[11,"get_height","","Gets the image height.",21,[[],["u32",15]]],[3,"Viewport","","Stores viewport information.",null,null],[12,"rect","","Viewport in pixels. <code>[x, y, width height]</code> where <code>(x, y)</code> is …",22,null],[12,"draw_size","","The size of frame buffer in pixels.",22,null],[12,"window_size","","The size of window in points.",22,null],[8,"Graphics","","Implemented by all graphics back-ends.",null,null],[16,"Texture","","The texture type associated with the back-end.",23,null],[10,"clear_color","","Clears background with a color.",23,[[["color",6]]]],[10,"clear_stencil","","Clears stencil buffer with a value, usually 0.",23,[[["u8",15]]]],[10,"tri_list","","Renders list of 2d triangles using a solid color.",23,[[["drawstate",3]]]],[10,"tri_list_uv","","Renders list of 2d triangles using a color and a texture.",23,[[["drawstate",3]]]],[11,"rectangle","","Draws a rectangle.",23,[[["into",8],["rectangle",6],["rectangle",3],["drawstate",3],["matrix2d",6]]]],[11,"polygon","","Draws a polygon.",23,[[["polygon",3],["drawstate",3],["matrix2d",6],["polygon",6]]]],[11,"polygon_tween_lerp","","Draws a tweened polygon using linear interpolation.",23,[[["polygons",6],["polygon",3],["drawstate",3],["matrix2d",6],["scalar",6]]]],[11,"image","","Draws image.",23,[[["image",3],["matrix2d",6],["drawstate",3]]]],[11,"ellipse","","Draws ellipse.",23,[[["into",8],["rectangle",6],["ellipse",3],["drawstate",3],["matrix2d",6]]]],[11,"line","","Draws line.",23,[[["matrix2d",6],["drawstate",3],["line",3],["line",6],["into",8]]]],[11,"circle_arc","","Draws circle arc.",23,[[["into",8],["rectangle",6],["drawstate",3],["circlearc",3],["matrix2d",6]]]],[11,"deform_image","","Draws deformed image.",23,[[["matrix2d",6],["deformgrid",3],["drawstate",3]]]],[8,"SourceRectangled","","Should be implemented by contexts that have source …",null,null],[10,"src_rect","","Adds a source rectangle.",24,[[["scalar",6]]]],[10,"src_rel","","Moves to a relative source rectangle using the current …",24,[[["scalar",6]]]],[10,"src_flip_h","","Flips the source rectangle horizontally.",24,[[]]],[10,"src_flip_v","","Flips the source rectangle vertically.",24,[[]]],[10,"src_flip_hv","","Flips the source rectangle horizontally and vertically.",24,[[]]],[8,"Rectangled","","Should be implemented by contexts that have rectangle …",null,null],[10,"margin","","Shrinks the current rectangle equally by all sides.",25,[[["scalar",6]]]],[11,"expand","","Expands the current rectangle equally by all sides.",25,[[["scalar",6]]]],[10,"rel","","Moves to a relative rectangle using the current rectangle …",25,[[["scalar",6]]]],[8,"Transformed","","Implemented by contexts that can transform.",null,null],[10,"append_transform","","Appends transform to the current one.",26,[[["matrix2d",6]]]],[10,"prepend_transform","","Prepends transform to the current one.",26,[[["matrix2d",6]]]],[10,"trans","","Translate x and y in local coordinates.",26,[[["scalar",6]]]],[11,"rot_deg","","Rotates degrees in local coordinates.",26,[[["scalar",6]]]],[10,"rot_rad","","Rotate radians in local coordinates.",26,[[["scalar",6]]]],[10,"orient","","Orients x axis to look at point locally.",26,[[["scalar",6]]]],[10,"scale","","Scales in local coordinates.",26,[[["scalar",6]]]],[11,"zoom","","Scales in both directions in local coordinates.",26,[[["scalar",6]]]],[11,"flip_v","","Flips vertically in local coordinates.",26,[[]]],[11,"flip_h","","Flips horizontally in local coordinates.",26,[[]]],[11,"flip_hv","","Flips horizontally and vertically in local coordinates.",26,[[]]],[10,"shear","","Shears in local coordinates.",26,[[["vec2d",6]]]],[8,"Colored","","Implemented by contexts that contains color.",null,null],[10,"mul_rgba","","Multiplies with red, green, blue and alpha values.",27,[[["colorcomponent",6]]]],[11,"tint","","Mixes the current color with white.",27,[[["colorcomponent",6]]]],[11,"shade","","Mixes the current color with black.",27,[[["colorcomponent",6]]]],[11,"hue_deg","","Rotates hue by degrees.",27,[[["colorcomponent",6]]]],[10,"hue_rad","","Rotates hue by radians.",27,[[["colorcomponent",6]]]],[17,"BACK_END_MAX_VERTEX_COUNT","","Any triangulation method called on the back-end never …",null,null],[5,"clear","","Clears the screen.",null,[[["color",6]]]],[5,"image","","Draws image.",null,[[["matrix2d",6]]]],[5,"ellipse","","Draws ellipse.",null,[[["into",8],["rectangle",6],["color",6],["matrix2d",6]]]],[5,"circle_arc","","Draws arc",null,[[["into",8],["radius",6],["color",6],["rectangle",6],["matrix2d",6],["scalar",6]]]],[5,"rectangle","","Draws rectangle.",null,[[["into",8],["rectangle",6],["color",6],["matrix2d",6]]]],[5,"polygon","","Draws polygon.",null,[[["matrix2d",6],["polygon",6],["color",6]]]],[5,"line","","Draws line.",null,[[["radius",6],["color",6],["matrix2d",6],["line",6],["into",8]]]],[5,"text","","Draws text.",null,[[["str",15],["matrix2d",6],["color",6],["fontsize",6]],["result",4]]],[11,"from","graphics::draw_state","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","graphics::character","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","graphics::context","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","graphics::polygon","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","graphics::line","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","graphics::circle_arc","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","graphics::ellipse","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","graphics::rectangle","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","graphics::image","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","graphics::text","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","graphics::deform","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","graphics::grid","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"into_iter","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","graphics::glyph_cache::rusttype","",19,[[]]],[11,"into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","graphics","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"clone","","",22,[[],["viewport",3]]],[11,"fmt","","",22,[[["formatter",3]],[["error",3],["result",4]]]],[11,"eq","","",22,[[["viewport",3]],["bool",15]]],[11,"ne","","",22,[[["viewport",3]],["bool",15]]],[11,"src_rect","","",29,[[["scalar",6]]]],[11,"src_rel","","",29,[[["scalar",6]]]],[11,"src_flip_h","","",29,[[]]],[11,"src_flip_v","","",29,[[]]],[11,"src_flip_hv","","",29,[[]]],[11,"margin","","",30,[[["scalar",6]]]],[11,"rel","","",30,[[["scalar",6]]]],[11,"append_transform","","",31,[[["matrix2d",6]]]],[11,"prepend_transform","","",31,[[["matrix2d",6]]]],[11,"trans","","",31,[[["scalar",6]]]],[11,"rot_rad","","",31,[[["scalar",6]]]],[11,"orient","","",31,[[["scalar",6]]]],[11,"scale","","",31,[[["scalar",6]]]],[11,"shear","","",31,[[["vec2d",6]]]],[11,"append_transform","graphics::context","",5,[[["matrix2d",6]]]],[11,"prepend_transform","","",5,[[["matrix2d",6]]]],[11,"trans","","",5,[[["scalar",6]]]],[11,"rot_rad","","",5,[[["scalar",6]]]],[11,"orient","","",5,[[["scalar",6]]]],[11,"scale","","",5,[[["scalar",6]]]],[11,"shear","","",5,[[["vec2d",6]]]],[11,"mul_rgba","graphics","",32,[[["colorcomponent",6]]]],[11,"hue_rad","","",32,[[["colorcomponent",6]]]],[11,"mul_rgba","graphics::line","",8,[[["colorcomponent",6]]]],[11,"hue_rad","","",8,[[["colorcomponent",6]]]],[11,"mul_rgba","graphics::ellipse","",11,[[["colorcomponent",6]]]],[11,"hue_rad","","",11,[[["colorcomponent",6]]]],[11,"mul_rgba","graphics::rectangle","",14,[[["colorcomponent",6]]]],[11,"hue_rad","","",14,[[["colorcomponent",6]]]],[11,"character","graphics::glyph_cache::rusttype","",19,[[["fontsize",6],["char",15]],[["result",4],["character",3]]]],[11,"next","graphics::grid","",28,[[],["option",4]]],[11,"clone","graphics::draw_state","",0,[[],["drawstate",3]]],[11,"clone","","",1,[[],["blend",4]]],[11,"clone","","",2,[[],["stencil",4]]],[11,"clone","graphics::character","",3,[[],["character",3]]],[11,"clone","graphics::context","",5,[[],["context",3]]],[11,"clone","graphics::polygon","",6,[[],["polygon",3]]],[11,"clone","graphics::line","",7,[[],["shape",4]]],[11,"clone","","",8,[[],["line",3]]],[11,"clone","graphics::circle_arc","",9,[[],["circlearc",3]]],[11,"clone","graphics::ellipse","",10,[[],["border",3]]],[11,"clone","","",11,[[],["ellipse",3]]],[11,"clone","graphics::rectangle","",12,[[],["shape",4]]],[11,"clone","","",13,[[],["border",3]]],[11,"clone","","",14,[[],["rectangle",3]]],[11,"clone","graphics::image","",15,[[],["image",3]]],[11,"clone","graphics::text","",16,[[],["text",3]]],[11,"clone","graphics::deform","",17,[[],["deformgrid",3]]],[11,"clone","graphics::grid","",18,[[],["grid",3]]],[11,"clone","","",28,[[],["gridcells",3]]],[11,"default","graphics::draw_state","",0,[[]]],[11,"eq","","",0,[[["drawstate",3]],["bool",15]]],[11,"ne","","",0,[[["drawstate",3]],["bool",15]]],[11,"eq","","",1,[[["blend",4]],["bool",15]]],[11,"eq","","",2,[[["stencil",4]],["bool",15]]],[11,"ne","","",2,[[["stencil",4]],["bool",15]]],[11,"partial_cmp","","",0,[[["drawstate",3]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",1,[[["blend",4]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",2,[[["stencil",4]],[["ordering",4],["option",4]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","graphics::grid","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"rectangle","graphics","Draws a rectangle.",23,[[["into",8],["rectangle",6],["rectangle",3],["drawstate",3],["matrix2d",6]]]],[11,"polygon","","Draws a polygon.",23,[[["polygon",3],["drawstate",3],["matrix2d",6],["polygon",6]]]],[11,"polygon_tween_lerp","","Draws a tweened polygon using linear interpolation.",23,[[["polygons",6],["polygon",3],["drawstate",3],["matrix2d",6],["scalar",6]]]],[11,"image","","Draws image.",23,[[["image",3],["matrix2d",6],["drawstate",3]]]],[11,"ellipse","","Draws ellipse.",23,[[["into",8],["rectangle",6],["ellipse",3],["drawstate",3],["matrix2d",6]]]],[11,"line","","Draws line.",23,[[["matrix2d",6],["drawstate",3],["line",3],["line",6],["into",8]]]],[11,"circle_arc","","Draws circle arc.",23,[[["into",8],["rectangle",6],["drawstate",3],["circlearc",3],["matrix2d",6]]]],[11,"deform_image","","Draws deformed image.",23,[[["matrix2d",6],["deformgrid",3],["drawstate",3]]]],[11,"expand","","Expands the current rectangle equally by all sides.",25,[[["scalar",6]]]],[11,"rot_deg","","Rotates degrees in local coordinates.",26,[[["scalar",6]]]],[11,"zoom","","Scales in both directions in local coordinates.",26,[[["scalar",6]]]],[11,"flip_v","","Flips vertically in local coordinates.",26,[[]]],[11,"flip_h","","Flips horizontally in local coordinates.",26,[[]]],[11,"flip_hv","","Flips horizontally and vertically in local coordinates.",26,[[]]],[11,"tint","","Mixes the current color with white.",27,[[["colorcomponent",6]]]],[11,"shade","","Mixes the current color with black.",27,[[["colorcomponent",6]]]],[11,"hue_deg","","Rotates hue by degrees.",27,[[["colorcomponent",6]]]],[11,"abs_transform","","Computes absolute transform for 2D graphics, which uses a …",22,[[]]]],"p":[[3,"DrawState"],[4,"Blend"],[4,"Stencil"],[3,"Character"],[8,"CharacterCache"],[3,"Context"],[3,"Polygon"],[4,"Shape"],[3,"Line"],[3,"CircleArc"],[3,"Border"],[3,"Ellipse"],[4,"Shape"],[3,"Border"],[3,"Rectangle"],[3,"Image"],[3,"Text"],[3,"DeformGrid"],[3,"Grid"],[3,"GlyphCache"],[8,"Radians"],[8,"ImageSize"],[3,"Viewport"],[8,"Graphics"],[8,"SourceRectangled"],[8,"Rectangled"],[8,"Transformed"],[8,"Colored"],[3,"GridCells"],[6,"SourceRectangle"],[6,"Rectangle"],[6,"Matrix2d"],[6,"Color"]]},\
"image":{"doc":"This crate provides native rust implementations of image …","i":[[0,"math","image","Mathematical helper functions and types.",null,null],[0,"nq","image::math","NEUQUANT Neural-Net quantization algorithm by Anthony …",null,null],[3,"NeuQuant","image::math::nq","Neural network color quantizer",null,null],[11,"new","","Creates a new neural network and trains it with the …",0,[[["usize",15],["i32",15]]]],[11,"init","","Initializes the neural network and trains it with the …",0,[[]]],[11,"map_pixel","","Maps the pixel in-place to the best-matching color in the …",0,[[]]],[11,"index_of","","Finds the best-matching index in the color map for <code>pixel</code>",0,[[],["usize",15]]],[0,"utils","image::math","Shared mathematical utility functions.",null,null],[5,"clamp","image::math::utils","Cut value to be inside given range",null,[[]]],[0,"imageops","image","Image Processing Functions",null,null],[0,"colorops","image::imageops","Functions for altering and converting the color of …",null,null],[5,"grayscale","image::imageops::colorops","Convert the supplied image to grayscale",null,[[],[["vec",3],["imagebuffer",3],["luma",3]]]],[5,"invert","","Invert each pixel within the supplied image. This …",null,[[]]],[5,"contrast","","Adjust the contrast of the supplied image. <code>contrast</code> is …",null,[[["f32",15]],[["imagebuffer",3],["vec",3]]]],[5,"brighten","","Brighten the supplied image. <code>value</code> is the amount to …",null,[[["i32",15]],[["imagebuffer",3],["vec",3]]]],[5,"huerotate","","Hue rotate the supplied image. <code>value</code> is the degrees to …",null,[[["i32",15]],[["imagebuffer",3],["vec",3]]]],[8,"ColorMap","","A color map",null,null],[16,"Color","","The color type on which the map operates on",1,null],[10,"index_of","","Returns the index of the closed match of <code>color</code> in the …",1,[[],["usize",15]]],[10,"map_color","","Maps <code>color</code> to the closest color in the color map.",1,[[]]],[3,"BiLevel","","A bi-level color map",null,null],[5,"dither","","Reduces the colors of the image using the supplied …",null,[[["imagebuffer",3]]]],[5,"index_colors","","Reduces the colors using the supplied <code>color_map</code> and …",null,[[["imagebuffer",3]],[["luma",3],["vec",3],["imagebuffer",3]]]],[4,"FilterType","image::imageops","Available Sampling Filters",null,null],[13,"Nearest","","Nearest Neighbor",2,null],[13,"Triangle","","Linear Filter",2,null],[13,"CatmullRom","","Cubic Filter",2,null],[13,"Gaussian","","Gaussian Filter",2,null],[13,"Lanczos3","","Lanczos with window 3",2,null],[5,"flip_horizontal","","Flip an image horizontally",null,[[],[["vec",3],["imagebuffer",3]]]],[5,"flip_vertical","","Flip an image vertically",null,[[],[["vec",3],["imagebuffer",3]]]],[5,"rotate180","","Rotate an image 180 degrees clockwise.",null,[[],[["vec",3],["imagebuffer",3]]]],[5,"rotate270","","Rotate an image 270 degrees clockwise.",null,[[],[["vec",3],["imagebuffer",3]]]],[5,"rotate90","","Rotate an image 90 degrees clockwise.",null,[[],[["vec",3],["imagebuffer",3]]]],[5,"blur","","Performs a Gaussian blur on the supplied image. <code>sigma</code> is …",null,[[["f32",15]],[["vec",3],["imagebuffer",3]]]],[5,"filter3x3","","Perform a 3x3 box filter on the supplied image. <code>kernel</code> is …",null,[[],[["imagebuffer",3],["vec",3]]]],[5,"resize","","Resize the supplied image to the specified dimensions. …",null,[[["u32",15],["filtertype",4]],[["vec",3],["imagebuffer",3]]]],[5,"thumbnail","","Resize the supplied image to the specific dimensions.",null,[[["u32",15]],[["imagebuffer",3],["vec",3]]]],[5,"unsharpen","","Performs an unsharpen mask on the supplied image. <code>sigma</code> …",null,[[["f32",15],["i32",15]],[["imagebuffer",3],["vec",3]]]],[5,"crop","","Return a mutable view into an image",null,[[["u32",15]],["subimage",3]]],[5,"overlay","","Overlay an image at a given coordinate (x, y)",null,[[["u32",15]]]],[5,"replace","","Replace the contents of an image at a given coordinate …",null,[[["u32",15]]]],[0,"bmp","image","Decoding and Encoding of BMP Images",null,null],[3,"BMPDecoder","image::bmp","A bmp decoder",null,null],[3,"BMPEncoder","","The representation of a BMP encoder.",null,null],[0,"dxt","image","Decoding of DXT (S3TC) compression",null,null],[4,"DXTVariant","image::dxt","What version of DXT compression are we using? Note that …",null,null],[13,"DXT1","","The DXT1 format. 48 bytes of RGB data in a 4x4 pixel …",3,null],[13,"DXT3","","The DXT3 format. 64 bytes of RGBA data in a 4x4 pixel …",3,null],[13,"DXT5","","The DXT5 format. 64 bytes of RGBA data in a 4x4 pixel …",3,null],[11,"colortype","","Returns the colortype that is stored in this DXT variant",3,[[],["colortype",4]]],[3,"DXTDecoder","","DXT decoder",null,null],[11,"new","","Create a new DXT decoder that decodes from the stream <code>r</code>. …",4,[[["u32",15],["dxtvariant",4]],[["result",4],["imageerror",4],["dxtdecoder",3]]]],[3,"DXTEncoder","","DXT encoder",null,null],[11,"new","","Create a new encoder that writes its output to <code>w</code>",5,[[],["dxtencoder",3]]],[11,"encode","","Encodes the image data <code>data</code> that has dimensions <code>width</code> and …",5,[[["u32",15],["dxtvariant",4]],["imageresult",6]]],[0,"gif","image","Decoding of GIF Images",null,null],[4,"DisposalMethod","image::gif","Disposal method",null,null],[13,"Any","","StreamingDecoder is not required to take any action.",6,null],[13,"Keep","","Do not dispose.",6,null],[13,"Background","","Restore to background color.",6,null],[13,"Previous","","Restore to previous.",6,null],[3,"Frame","","A GIF frame",null,null],[12,"delay","","Frame delay in units of 10 ms.",7,null],[12,"dispose","","Disposal method.",7,null],[12,"transparent","","Transparent index (if available).",7,null],[12,"needs_user_input","","True if the frame needs user input to be displayed.",7,null],[12,"top","","Offset from the top border of the canvas.",7,null],[12,"left","","Offset from the left border of the canvas.",7,null],[12,"width","","Width of the frame.",7,null],[12,"height","","Height of the frame.",7,null],[12,"interlaced","","True if the image is interlaced.",7,null],[12,"palette","","Frame local color palette if available.",7,null],[12,"buffer","","Buffer containing the image data. Only indices unless …",7,null],[3,"Decoder","","GIF decoder",null,null],[11,"new","","Creates a new decoder that decodes the input steam <code>r</code>",8,[[],["decoder",3]]],[3,"Encoder","","GIF encoder.",null,null],[11,"new","","Creates a new GIF encoder.",9,[[],["encoder",3]]],[11,"encode","","Encodes a frame.",9,[[["frame",3]],["imageresult",6]]],[11,"encode_frames","","Encodes Frames.",9,[[["frames",3]],["imageresult",6]]],[0,"hdr","image","Decoding of Radiance HDR Images",null,null],[3,"HDRAdapter","image::hdr","Adapter to conform to <code>ImageDecoder</code> trait",null,null],[17,"SIGNATURE","","Radiance HDR file signature",null,null],[3,"HDRDecoder","","An Radiance HDR decoder",null,null],[3,"RGBE8Pixel","","Refer to wikipedia",null,null],[12,"c","","Color components",10,null],[12,"e","","Exponent",10,null],[5,"rgbe8","","Creates <code>RGBE8Pixel</code> from components",null,[[["u8",15]],["rgbe8pixel",3]]],[3,"HDRImageDecoderIterator","","Scanline buffered pixel by pixel iterator",null,null],[3,"HDRMetadata","","Metadata for Radiance HDR image",null,null],[12,"width","","Width of decoded image. It could be either scanline …",11,null],[12,"height","","Height of decoded image. It depends on orientation too.",11,null],[12,"orientation","","Orientation matrix. For standard orientation it is …",11,null],[12,"exposure","","Divide color values by exposure to get to get physical …",11,null],[12,"color_correction","","Divide color values by corresponding tuple member (r, g, …",11,null],[12,"pixel_aspect_ratio","","Pixel height divided by pixel width",11,null],[12,"custom_attributes","","All lines contained in image header are put here. …",11,null],[5,"read_raw_file","","Helper function for reading raw 3-channel f32 images",null,[[["path",3],["asref",8]],[["result",6],["vec",3]]]],[3,"HDREncoder","","Radiance HDR encoder",null,null],[5,"to_rgbe8","","Converts <code>Rgb<f32></code> into <code>RGBE8Pixel</code>",null,[[["rgb",3],["f32",15]],["rgbe8pixel",3]]],[0,"ico","image","Decoding and Encoding of ICO files",null,null],[3,"ICODecoder","image::ico","An ico decoder",null,null],[3,"ICOEncoder","","ICO encoder",null,null],[0,"jpeg","image","Decoding and Encoding of JPEG Images",null,null],[3,"JPEGDecoder","image::jpeg","JPEG decoder",null,null],[3,"JPEGEncoder","","The representation of a JPEG encoder",null,null],[0,"png","image","Decoding and Encoding of PNG Images",null,null],[3,"PNGDecoder","image::png","PNG decoder",null,null],[11,"new","","Creates a new decoder that decodes from the stream <code>r</code>",12,[[],["pngdecoder",3]]],[3,"PNGEncoder","","PNG encoder",null,null],[11,"new","","Create a new encoder that writes its output to <code>w</code>",13,[[],["pngencoder",3]]],[11,"encode","","Encodes the image <code>image</code> that has dimensions <code>width</code> and …",13,[[["u32",15],["colortype",4]],["result",6]]],[0,"pnm","image","Decoding of netpbm image formats (pbm, pgm, ppm and pam).",null,null],[3,"PNMDecoder","image::pnm","PNM decoder",null,null],[3,"PNMEncoder","","Encodes images to any of the <code>pnm</code> image formats.",null,null],[3,"ArbitraryHeader","","Header produced by a <code>pam</code> file (\\\"Portable Arbitrary Map\\\")",null,null],[12,"height","","Height of the image file",14,null],[12,"width","","Width of the image file",14,null],[12,"depth","","Number of color channels",14,null],[12,"maxval","","Maximum sample value within the image",14,null],[12,"tupltype","","Color interpretation of image pixels",14,null],[4,"ArbitraryTuplType","","Standardized tuple type specifiers in the header of a <code>pam</code>.",null,null],[13,"BlackAndWhite","","Pixels are either black (0) or white (1)",15,null],[13,"BlackAndWhiteAlpha","","Pixels are either black (0) or white (1) and a second …",15,null],[13,"Grayscale","","Pixels represent the amount of white",15,null],[13,"GrayscaleAlpha","","Grayscale with an additional alpha channel",15,null],[13,"RGB","","Three channels: Red, Green, Blue",15,null],[13,"RGBAlpha","","Four channels: Red, Green, Blue, Alpha",15,null],[13,"Custom","","An image format which is not standardized",15,null],[3,"BitmapHeader","","Header produced by a <code>pbm</code> file (\\\"Portable Bit Map\\\")",null,null],[12,"encoding","","Binary or Ascii encoded file",16,null],[12,"height","","Height of the image file",16,null],[12,"width","","Width of the image file",16,null],[3,"GraymapHeader","","Header produced by a <code>pgm</code> file (\\\"Portable Gray Map\\\")",null,null],[12,"encoding","","Binary or Ascii encoded file",17,null],[12,"height","","Height of the image file",17,null],[12,"width","","Width of the image file",17,null],[12,"maxwhite","","Maximum sample value within the image",17,null],[3,"PixmapHeader","","Header produced by a <code>ppm</code> file (\\\"Portable Pixel Map\\\")",null,null],[12,"encoding","","Binary or Ascii encoded file",18,null],[12,"height","","Height of the image file",18,null],[12,"width","","Width of the image file",18,null],[12,"maxval","","Maximum sample value within the image",18,null],[3,"PNMHeader","","Stores the complete header data of a file.",null,null],[4,"PNMSubtype","","Denotes the category of the magic number",null,null],[13,"Bitmap","","Magic numbers P1 and P4",19,null],[13,"Graymap","","Magic numbers P2 and P5",19,null],[13,"Pixmap","","Magic numbers P3 and P6",19,null],[13,"ArbitraryMap","","Magic number P7",19,null],[4,"SampleEncoding","","The kind of encoding used to store sample values",null,null],[13,"Binary","","Samples are unsigned binary integers in big endian",20,null],[13,"Ascii","","Samples are encoded as decimal ascii strings separated by …",20,null],[0,"tga","image","Decoding of TGA Images",null,null],[3,"TGADecoder","image::tga","The representation of a TGA decoder",null,null],[0,"tiff","image","Decoding and Encoding of TIFF Images",null,null],[3,"TIFFDecoder","image::tiff","Decoder for TIFF images.",null,null],[11,"new","","Create a new TIFFDecoder.",21,[[],[["imageerror",4],["result",4],["tiffdecoder",3]]]],[0,"webp","image","Decoding of Webp Images",null,null],[0,"vp8","image::webp","An implementation of the VP8 Video Codec",null,null],[3,"Frame","image::webp::vp8","A Representation of the last decoded video frame",null,null],[12,"width","","The width of the luma plane",22,null],[12,"height","","The height of the luma plane",22,null],[12,"ybuf","","The luma plane of the frame",22,null],[12,"keyframe","","Indicates whether this frame is a keyframe",22,null],[12,"for_display","","Indicates whether this frame is intended for display",22,null],[12,"pixel_type","","The pixel type of the frame as defined by Section 9.2 of …",22,null],[3,"VP8Decoder","","VP8 Decoder",null,null],[11,"new","","Create a new decoder. The reader must present a raw vp8 …",23,[[],["vp8decoder",3]]],[11,"decode_frame","","Decodes the current frame and returns a reference to it",23,[[],[["result",6],["frame",3]]]],[3,"WebpDecoder","image::webp","A Representation of a Webp Image format decoder.",null,null],[4,"ColorType","image","An enumeration over supported color types and their bit …",null,null],[13,"Gray","","Pixel is grayscale",24,null],[13,"RGB","","Pixel contains R, G and B channels",24,null],[13,"Palette","","Pixel is an index into a color palette",24,null],[13,"GrayA","","Pixel is grayscale with an alpha channel",24,null],[13,"RGBA","","Pixel is RGB with an alpha channel",24,null],[13,"BGR","","Pixel contains B, G and R channels",24,null],[13,"BGRA","","Pixel is BGR with an alpha channel",24,null],[3,"Luma","","Grayscale colors",null,null],[12,"data","","",25,null],[5,"Luma","","",null,[[],[["primitive",8],["luma",3]]]],[3,"LumaA","","Grayscale colors + alpha channel",null,null],[12,"data","","",26,null],[5,"LumaA","","",null,[[],[["primitive",8],["lumaa",3]]]],[3,"Rgb","","RGB colors",null,null],[12,"data","","",27,null],[5,"Rgb","","",null,[[],[["rgb",3],["primitive",8]]]],[3,"Rgba","","RGB colors + alpha channel",null,null],[12,"data","","",28,null],[5,"Rgba","","",null,[[],[["primitive",8],["rgba",3]]]],[3,"Bgr","","BGR colors",null,null],[12,"data","","",29,null],[5,"Bgr","","",null,[[],[["primitive",8],["bgr",3]]]],[3,"Bgra","","BGR colors + alpha channel",null,null],[12,"data","","",30,null],[5,"Bgra","","",null,[[],[["primitive",8],["bgra",3]]]],[4,"DecodingResult","","Result of a decoding process",null,null],[13,"U8","","A vector of unsigned bytes",31,null],[13,"U16","","A vector of unsigned words",31,null],[8,"GenericImage","","A trait for manipulating images.",null,null],[16,"InnerImage","","Underlying image type. This is mainly used by SubImages …",32,null],[10,"get_pixel_mut","","Gets a reference to the mutable pixel at location <code>(x, y)</code>",32,[[["u32",15]]]],[10,"put_pixel","","Put a pixel at location (x, y)",32,[[["u32",15]]]],[11,"unsafe_put_pixel","","Puts a pixel at location (x, y)",32,[[["u32",15]]]],[10,"blend_pixel","","Put a pixel at location (x, y), taking into account alpha …",32,[[["u32",15]]]],[11,"pixels_mut","","Returns an Iterator over mutable pixels of this image. …",32,[[],["mutpixels",3]]],[11,"copy_from","","Copies all of the pixels from another image into this …",32,[[["u32",15]],["bool",15]]],[10,"inner_mut","","Returns a mutable reference to the underlying image.",32,[[]]],[11,"sub_image","","Returns a subimage that is a view into this image.",32,[[["u32",15]],["subimage",3]]],[8,"GenericImageView","","Trait to inspect an image.",null,null],[16,"Pixel","","The type of pixel.",33,null],[16,"InnerImageView","","Underlying image type. This is mainly used by SubImages …",33,null],[10,"dimensions","","The width and height of this image.",33,[[]]],[11,"width","","The width of this image.",33,[[],["u32",15]]],[11,"height","","The height of this image.",33,[[],["u32",15]]],[10,"bounds","","The bounding rectangle of this image.",33,[[]]],[11,"in_bounds","","Returns true if this x, y coordinate is contained inside …",33,[[["u32",15]],["bool",15]]],[10,"get_pixel","","Returns the pixel located at (x, y)",33,[[["u32",15]]]],[11,"unsafe_get_pixel","","Returns the pixel located at (x, y)",33,[[["u32",15]]]],[11,"pixels","","Returns an Iterator over the pixels of this image. The …",33,[[],["pixels",3]]],[10,"inner","","Returns a reference to the underlying image.",33,[[]]],[11,"view","","Returns an subimage that is an immutable view into this …",33,[[["u32",15]],["subimage",3]]],[8,"ImageDecoder","","The trait that all decoders implement",null,null],[10,"dimensions","","Returns a tuple containing the width and height of the …",34,[[],["imageresult",6]]],[10,"colortype","","Returns the color type of the image e.g. RGB(8) (8bit RGB)",34,[[],[["colortype",4],["imageresult",6]]]],[10,"row_len","","Returns the length in bytes of one decoded row of the …",34,[[],[["usize",15],["imageresult",6]]]],[10,"read_scanline","","Reads one row from the image into <code>buf</code> and returns the row …",34,[[],[["u32",15],["imageresult",6]]]],[10,"read_image","","Decodes the entire image and return it as a Vector",34,[[],[["imageresult",6],["decodingresult",4]]]],[11,"is_animated","","Returns true if the image is animated",34,[[],[["bool",15],["imageresult",6]]]],[11,"into_frames","","Returns the frames of the image",34,[[],[["frames",3],["imageresult",6]]]],[11,"load_rect","","Decodes a specific region of the image, represented by …",34,[[["u32",15]],[["imageresult",6],["vec",3]]]],[4,"ImageError","","An enumeration of Image errors",null,null],[13,"FormatError","","The Image is not formatted properly",35,null],[13,"DimensionError","","The Image\'s dimensions are either too small or too large",35,null],[13,"UnsupportedError","","The Decoder does not support this image format",35,null],[13,"UnsupportedColor","","The Decoder does not support this color type",35,null],[13,"NotEnoughData","","Not enough data was provided to the Decoder to decode the …",35,null],[13,"IoError","","An I/O Error occurred while decoding the image",35,null],[13,"ImageEnd","","The end of the image has been reached",35,null],[6,"ImageResult","","Result of an image decoding/encoding process",null,null],[3,"MutPixels","","Mutable pixel iterator",null,null],[3,"Pixels","","Immutable pixel iterator",null,null],[3,"SubImage","","A View into another image",null,null],[4,"FilterType","","Available Sampling Filters",null,null],[13,"Nearest","","Nearest Neighbor",2,null],[13,"Triangle","","Linear Filter",2,null],[13,"CatmullRom","","Cubic Filter",2,null],[13,"Gaussian","","Gaussian Filter",2,null],[13,"Lanczos3","","Lanczos with window 3",2,null],[4,"ImageFormat","","An enumeration of supported image formats. Not all …",null,null],[13,"PNG","","An Image in PNG Format",36,null],[13,"JPEG","","An Image in JPEG Format",36,null],[13,"GIF","","An Image in GIF Format",36,null],[13,"WEBP","","An Image in WEBP Format",36,null],[13,"PNM","","An Image in general PNM Format",36,null],[13,"TIFF","","An Image in TIFF Format",36,null],[13,"TGA","","An Image in TGA Format",36,null],[13,"BMP","","An Image in BMP Format",36,null],[13,"ICO","","An Image in ICO Format",36,null],[13,"HDR","","An Image in Radiance HDR Format",36,null],[4,"ImageOutputFormat","","An enumeration of supported image formats for encoding.",null,null],[13,"PNG","","An Image in PNG Format",37,null],[13,"JPEG","","An Image in JPEG Format with specified quality",37,null],[13,"PNM","","An Image in one of the PNM Formats",37,null],[13,"GIF","","An Image in GIF Format",37,null],[13,"ICO","","An Image in ICO Format",37,null],[13,"BMP","","An Image in BMP Format",37,null],[13,"Unsupported","","A value for signalling an error: An unsupported format …",37,null],[8,"ConvertBuffer","","Provides color conversions for whole image buffers.",null,null],[10,"convert","","Converts <code>self</code> to a buffer of type T",38,[[]]],[6,"GrayAlphaImage","","Sendable grayscale + alpha channel image buffer",null,null],[6,"GrayImage","","Sendable grayscale image buffer",null,null],[3,"ImageBuffer","","Generic image buffer",null,null],[8,"Pixel","","A generalized pixel.",null,null],[16,"Subpixel","","The underlying subpixel type.",39,null],[10,"channel_count","","Returns the number of channels of this pixel type.",39,[[],["u8",15]]],[10,"channels","","Returns the components as a slice.",39,[[]]],[10,"channels_mut","","Returns the components as a mutable slice",39,[[]]],[10,"color_model","","Returns a string that can help to interpret the meaning …",39,[[],["str",15]]],[10,"color_type","","Returns the ColorType for this pixel format",39,[[],["colortype",4]]],[10,"channels4","","Returns the channels of this pixel as a 4 tuple. If the …",39,[[]]],[10,"from_channels","","Construct a pixel from the 4 channels a, b, c and d. If …",39,[[]]],[10,"from_slice","","Returns a view into a slice.",39,[[]]],[10,"from_slice_mut","","Returns mutable view into a mutable slice.",39,[[]]],[10,"to_rgb","","Convert this pixel to RGB",39,[[],["rgb",3]]],[10,"to_rgba","","Convert this pixel to RGB with an alpha channel",39,[[],["rgba",3]]],[10,"to_luma","","Convert this pixel to luma",39,[[],["luma",3]]],[10,"to_luma_alpha","","Convert this pixel to luma with an alpha channel",39,[[],["lumaa",3]]],[10,"to_bgr","","Convert this pixel to BGR",39,[[],["bgr",3]]],[10,"to_bgra","","Convert this pixel to BGR with an alpha channel",39,[[],["bgra",3]]],[10,"map","","Apply the function <code>f</code> to each channel of this pixel.",39,[[]]],[10,"apply","","Apply the function <code>f</code> to each channel of this pixel.",39,[[]]],[10,"map_with_alpha","","Apply the function <code>f</code> to each channel except the alpha …",39,[[]]],[10,"apply_with_alpha","","Apply the function <code>f</code> to each channel except the alpha …",39,[[]]],[10,"map2","","Apply the function <code>f</code> to each channel of this pixel and …",39,[[]]],[10,"apply2","","Apply the function <code>f</code> to each channel of this pixel and …",39,[[]]],[10,"invert","","Invert this pixel",39,[[]]],[10,"blend","","Blend the color of a given pixel into ourself, taking …",39,[[]]],[6,"RgbImage","","Sendable Rgb image buffer",null,null],[6,"RgbaImage","","Sendable Rgb + alpha channel image buffer",null,null],[8,"Primitive","","Primitive trait from old stdlib",null,null],[5,"guess_format","","Guess image format from memory block",null,[[],[["imageresult",6],["imageformat",4]]]],[5,"load","","Create a new image from a Reader",null,[[["imageformat",4],["bufread",8],["seek",8]],[["imageresult",6],["dynamicimage",4]]]],[5,"load_from_memory","","Create a new image from a byte slice",null,[[],[["imageresult",6],["dynamicimage",4]]]],[5,"load_from_memory_with_format","","Create a new image from a byte slice",null,[[["imageformat",4]],[["imageresult",6],["dynamicimage",4]]]],[5,"open","","Open the image located at the path specified. The image\'s …",null,[[],[["imageresult",6],["dynamicimage",4]]]],[5,"save_buffer","","Saves the supplied buffer to a file at the path specified.",null,[[["u32",15],["colortype",4]],["result",6]]],[4,"DynamicImage","","A Dynamic Image",null,null],[13,"ImageLuma8","","Each pixel in this image is 8-bit Luma",40,null],[13,"ImageLumaA8","","Each pixel in this image is 8-bit Luma with alpha",40,null],[13,"ImageRgb8","","Each pixel in this image is 8-bit Rgb",40,null],[13,"ImageRgba8","","Each pixel in this image is 8-bit Rgb with alpha",40,null],[13,"ImageBgr8","","Each pixel in this image is 8-bit Bgr",40,null],[13,"ImageBgra8","","Each pixel in this image is 8-bit Bgr with alpha",40,null],[3,"Frame","","A single animation frame",null,null],[3,"Frames","","Holds the frames of the animated image",null,null],[11,"from","image::math::nq","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","image::imageops::colorops","",41,[[]]],[11,"into","","",41,[[]]],[11,"to_owned","","",41,[[]]],[11,"clone_into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"from","image::imageops","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","image::bmp","",42,[[]]],[11,"into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"from","image::dxt","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","image::gif","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","image::hdr","",44,[[]]],[11,"into","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"into_iter","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"from","image::ico","",48,[[]]],[11,"into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"from","image::jpeg","",50,[[]]],[11,"into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"from","image::png","",12,[[]]],[11,"into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","image::pnm","",52,[[]]],[11,"into","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","image::tga","",55,[[]]],[11,"into","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"from","image::tiff","",21,[[]]],[11,"into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","image::webp","",56,[[]]],[11,"into","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"from","image::webp::vp8","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","image","",57,[[]]],[11,"into","","",57,[[]]],[11,"into_iter","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"to_owned","","",58,[[]]],[11,"clone_into","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"from","","",59,[[]]],[11,"into","","",59,[[]]],[11,"to_owned","","",59,[[]]],[11,"clone_into","","",59,[[]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_string","","",35,[[],["string",3]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"from","","",60,[[]]],[11,"into","","",60,[[]]],[11,"into_iter","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"from","","",61,[[]]],[11,"into","","",61,[[]]],[11,"into_iter","","",61,[[]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"from","","",62,[[]]],[11,"into","","",62,[[]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"fmt","image::gif","",6,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",7,[[["formatter",3]],[["error",3],["result",4]]]],[11,"eq","","",6,[[["disposalmethod",4]],["bool",15]]],[11,"clone","","",7,[[],["frame",3]]],[11,"clone","","",6,[[],["disposalmethod",4]]],[11,"default","","",7,[[],["frame",3]]],[11,"index_of","image::imageops::colorops","",41,[[["luma",3]],["usize",15]]],[11,"map_color","","",41,[[["luma",3]]]],[11,"index_of","image::math::nq","",0,[[["rgba",3]],["usize",15]]],[11,"map_color","","",0,[[["rgba",3]]]],[11,"channel_count","image","",27,[[],["u8",15]]],[11,"color_model","","",27,[[],["str",15]]],[11,"color_type","","",27,[[],["colortype",4]]],[11,"channels","","",27,[[]]],[11,"channels_mut","","",27,[[]]],[11,"channels4","","",27,[[]]],[11,"from_channels","","",27,[[],["rgb",3]]],[11,"from_slice","","",27,[[],["rgb",3]]],[11,"from_slice_mut","","",27,[[],["rgb",3]]],[11,"to_rgb","","",27,[[],["rgb",3]]],[11,"to_bgr","","",27,[[],["bgr",3]]],[11,"to_rgba","","",27,[[],["rgba",3]]],[11,"to_bgra","","",27,[[],["bgra",3]]],[11,"to_luma","","",27,[[],["luma",3]]],[11,"to_luma_alpha","","",27,[[],["lumaa",3]]],[11,"map","","",27,[[],["rgb",3]]],[11,"apply","","",27,[[]]],[11,"map_with_alpha","","",27,[[],["rgb",3]]],[11,"apply_with_alpha","","",27,[[]]],[11,"map2","","",27,[[],["rgb",3]]],[11,"apply2","","",27,[[["rgb",3]]]],[11,"invert","","",27,[[]]],[11,"blend","","",27,[[["rgb",3]]]],[11,"channel_count","","",29,[[],["u8",15]]],[11,"color_model","","",29,[[],["str",15]]],[11,"color_type","","",29,[[],["colortype",4]]],[11,"channels","","",29,[[]]],[11,"channels_mut","","",29,[[]]],[11,"channels4","","",29,[[]]],[11,"from_channels","","",29,[[],["bgr",3]]],[11,"from_slice","","",29,[[],["bgr",3]]],[11,"from_slice_mut","","",29,[[],["bgr",3]]],[11,"to_rgb","","",29,[[],["rgb",3]]],[11,"to_bgr","","",29,[[],["bgr",3]]],[11,"to_rgba","","",29,[[],["rgba",3]]],[11,"to_bgra","","",29,[[],["bgra",3]]],[11,"to_luma","","",29,[[],["luma",3]]],[11,"to_luma_alpha","","",29,[[],["lumaa",3]]],[11,"map","","",29,[[],["bgr",3]]],[11,"apply","","",29,[[]]],[11,"map_with_alpha","","",29,[[],["bgr",3]]],[11,"apply_with_alpha","","",29,[[]]],[11,"map2","","",29,[[],["bgr",3]]],[11,"apply2","","",29,[[["bgr",3]]]],[11,"invert","","",29,[[]]],[11,"blend","","",29,[[["bgr",3]]]],[11,"channel_count","","",25,[[],["u8",15]]],[11,"color_model","","",25,[[],["str",15]]],[11,"color_type","","",25,[[],["colortype",4]]],[11,"channels","","",25,[[]]],[11,"channels_mut","","",25,[[]]],[11,"channels4","","",25,[[]]],[11,"from_channels","","",25,[[],["luma",3]]],[11,"from_slice","","",25,[[],["luma",3]]],[11,"from_slice_mut","","",25,[[],["luma",3]]],[11,"to_rgb","","",25,[[],["rgb",3]]],[11,"to_bgr","","",25,[[],["bgr",3]]],[11,"to_rgba","","",25,[[],["rgba",3]]],[11,"to_bgra","","",25,[[],["bgra",3]]],[11,"to_luma","","",25,[[],["luma",3]]],[11,"to_luma_alpha","","",25,[[],["lumaa",3]]],[11,"map","","",25,[[],["luma",3]]],[11,"apply","","",25,[[]]],[11,"map_with_alpha","","",25,[[],["luma",3]]],[11,"apply_with_alpha","","",25,[[]]],[11,"map2","","",25,[[],["luma",3]]],[11,"apply2","","",25,[[["luma",3]]]],[11,"invert","","",25,[[]]],[11,"blend","","",25,[[["luma",3]]]],[11,"channel_count","","",28,[[],["u8",15]]],[11,"color_model","","",28,[[],["str",15]]],[11,"color_type","","",28,[[],["colortype",4]]],[11,"channels","","",28,[[]]],[11,"channels_mut","","",28,[[]]],[11,"channels4","","",28,[[]]],[11,"from_channels","","",28,[[],["rgba",3]]],[11,"from_slice","","",28,[[],["rgba",3]]],[11,"from_slice_mut","","",28,[[],["rgba",3]]],[11,"to_rgb","","",28,[[],["rgb",3]]],[11,"to_bgr","","",28,[[],["bgr",3]]],[11,"to_rgba","","",28,[[],["rgba",3]]],[11,"to_bgra","","",28,[[],["bgra",3]]],[11,"to_luma","","",28,[[],["luma",3]]],[11,"to_luma_alpha","","",28,[[],["lumaa",3]]],[11,"map","","",28,[[],["rgba",3]]],[11,"apply","","",28,[[]]],[11,"map_with_alpha","","",28,[[],["rgba",3]]],[11,"apply_with_alpha","","",28,[[]]],[11,"map2","","",28,[[],["rgba",3]]],[11,"apply2","","",28,[[["rgba",3]]]],[11,"invert","","",28,[[]]],[11,"blend","","",28,[[["rgba",3]]]],[11,"channel_count","","",30,[[],["u8",15]]],[11,"color_model","","",30,[[],["str",15]]],[11,"color_type","","",30,[[],["colortype",4]]],[11,"channels","","",30,[[]]],[11,"channels_mut","","",30,[[]]],[11,"channels4","","",30,[[]]],[11,"from_channels","","",30,[[],["bgra",3]]],[11,"from_slice","","",30,[[],["bgra",3]]],[11,"from_slice_mut","","",30,[[],["bgra",3]]],[11,"to_rgb","","",30,[[],["rgb",3]]],[11,"to_bgr","","",30,[[],["bgr",3]]],[11,"to_rgba","","",30,[[],["rgba",3]]],[11,"to_bgra","","",30,[[],["bgra",3]]],[11,"to_luma","","",30,[[],["luma",3]]],[11,"to_luma_alpha","","",30,[[],["lumaa",3]]],[11,"map","","",30,[[],["bgra",3]]],[11,"apply","","",30,[[]]],[11,"map_with_alpha","","",30,[[],["bgra",3]]],[11,"apply_with_alpha","","",30,[[]]],[11,"map2","","",30,[[],["bgra",3]]],[11,"apply2","","",30,[[["bgra",3]]]],[11,"invert","","",30,[[]]],[11,"blend","","",30,[[["bgra",3]]]],[11,"channel_count","","",26,[[],["u8",15]]],[11,"color_model","","",26,[[],["str",15]]],[11,"color_type","","",26,[[],["colortype",4]]],[11,"channels","","",26,[[]]],[11,"channels_mut","","",26,[[]]],[11,"channels4","","",26,[[]]],[11,"from_channels","","",26,[[],["lumaa",3]]],[11,"from_slice","","",26,[[],["lumaa",3]]],[11,"from_slice_mut","","",26,[[],["lumaa",3]]],[11,"to_rgb","","",26,[[],["rgb",3]]],[11,"to_bgr","","",26,[[],["bgr",3]]],[11,"to_rgba","","",26,[[],["rgba",3]]],[11,"to_bgra","","",26,[[],["bgra",3]]],[11,"to_luma","","",26,[[],["luma",3]]],[11,"to_luma_alpha","","",26,[[],["lumaa",3]]],[11,"map","","",26,[[],["lumaa",3]]],[11,"apply","","",26,[[]]],[11,"map_with_alpha","","",26,[[],["lumaa",3]]],[11,"apply_with_alpha","","",26,[[]]],[11,"map2","","",26,[[],["lumaa",3]]],[11,"apply2","","",26,[[["lumaa",3]]]],[11,"invert","","",26,[[]]],[11,"blend","","",26,[[["lumaa",3]]]],[11,"convert","","",59,[[],[["imagebuffer",3],["vec",3]]]],[11,"dimensions","image::bmp","",42,[[],["imageresult",6]]],[11,"colortype","","",42,[[],[["colortype",4],["imageresult",6]]]],[11,"row_len","","",42,[[],[["usize",15],["imageresult",6]]]],[11,"read_scanline","","",42,[[],[["u32",15],["imageresult",6]]]],[11,"read_image","","",42,[[],[["imageresult",6],["decodingresult",4]]]],[11,"dimensions","image::dxt","",4,[[],["imageresult",6]]],[11,"colortype","","",4,[[],[["colortype",4],["imageresult",6]]]],[11,"row_len","","",4,[[],[["usize",15],["imageresult",6]]]],[11,"read_scanline","","",4,[[],[["u32",15],["imageresult",6]]]],[11,"read_image","","",4,[[],[["imageresult",6],["decodingresult",4]]]],[11,"dimensions","image::gif","",8,[[],["imageresult",6]]],[11,"colortype","","",8,[[],[["imageresult",6],["colortype",4]]]],[11,"row_len","","",8,[[],[["usize",15],["imageresult",6]]]],[11,"read_scanline","","",8,[[],[["u32",15],["imageresult",6]]]],[11,"read_image","","",8,[[],[["imageresult",6],["decodingresult",4]]]],[11,"is_animated","","",8,[[],[["bool",15],["imageresult",6]]]],[11,"into_frames","","",8,[[],[["frames",3],["imageresult",6]]]],[11,"dimensions","image::hdr","",44,[[],["imageresult",6]]],[11,"colortype","","",44,[[],[["colortype",4],["imageresult",6]]]],[11,"row_len","","",44,[[],[["usize",15],["imageresult",6]]]],[11,"read_scanline","","",44,[[],[["u32",15],["imageresult",6]]]],[11,"read_image","","",44,[[],[["imageresult",6],["decodingresult",4]]]],[11,"dimensions","image::ico","",48,[[],["imageresult",6]]],[11,"colortype","","",48,[[],[["colortype",4],["imageresult",6]]]],[11,"row_len","","",48,[[],[["usize",15],["imageresult",6]]]],[11,"read_scanline","","",48,[[],[["u32",15],["imageresult",6]]]],[11,"read_image","","",48,[[],[["imageresult",6],["decodingresult",4]]]],[11,"dimensions","image::jpeg","",50,[[],["imageresult",6]]],[11,"colortype","","",50,[[],[["colortype",4],["imageresult",6]]]],[11,"row_len","","",50,[[],[["usize",15],["imageresult",6]]]],[11,"read_scanline","","",50,[[],[["u32",15],["imageresult",6]]]],[11,"read_image","","",50,[[],[["imageresult",6],["decodingresult",4]]]],[11,"dimensions","image::png","",12,[[],["imageresult",6]]],[11,"colortype","","",12,[[],[["colortype",4],["imageresult",6]]]],[11,"row_len","","",12,[[],[["usize",15],["imageresult",6]]]],[11,"read_scanline","","",12,[[],[["u32",15],["imageresult",6]]]],[11,"read_image","","",12,[[],[["imageresult",6],["decodingresult",4]]]],[11,"dimensions","image::pnm","",52,[[],["imageresult",6]]],[11,"colortype","","",52,[[],[["colortype",4],["imageresult",6]]]],[11,"row_len","","",52,[[],[["usize",15],["imageresult",6]]]],[11,"read_scanline","","",52,[[],[["u32",15],["imageresult",6]]]],[11,"read_image","","",52,[[],[["imageresult",6],["decodingresult",4]]]],[11,"dimensions","image::tga","",55,[[],["imageresult",6]]],[11,"colortype","","",55,[[],[["colortype",4],["imageresult",6]]]],[11,"row_len","","",55,[[],[["usize",15],["imageresult",6]]]],[11,"read_scanline","","",55,[[],[["u32",15],["imageresult",6]]]],[11,"read_image","","",55,[[],[["imageresult",6],["decodingresult",4]]]],[11,"dimensions","image::tiff","",21,[[],["imageresult",6]]],[11,"colortype","","",21,[[],[["colortype",4],["imageresult",6]]]],[11,"row_len","","",21,[[],[["usize",15],["imageresult",6]]]],[11,"read_scanline","","",21,[[],[["u32",15],["imageresult",6]]]],[11,"read_image","","",21,[[],[["imageresult",6],["decodingresult",4]]]],[11,"dimensions","image::webp","",56,[[],["imageresult",6]]],[11,"colortype","","",56,[[],[["imageresult",6],["colortype",4]]]],[11,"row_len","","",56,[[],[["usize",15],["imageresult",6]]]],[11,"read_scanline","","",56,[[],[["u32",15],["imageresult",6]]]],[11,"read_image","","",56,[[],[["decodingresult",4],["imageresult",6]]]],[11,"dimensions","image","",59,[[]]],[11,"bounds","","",59,[[]]],[11,"get_pixel","","",59,[[["u32",15]]]],[11,"unsafe_get_pixel","","Returns the pixel located at (x, y), ignoring bounds …",59,[[["u32",15]]]],[11,"inner","","",59,[[]]],[11,"dimensions","","",40,[[]]],[11,"bounds","","",40,[[]]],[11,"get_pixel","","",40,[[["u32",15]],[["u8",15],["rgba",3]]]],[11,"inner","","",40,[[]]],[11,"dimensions","","",62,[[]]],[11,"bounds","","",62,[[]]],[11,"get_pixel","","",62,[[["u32",15]]]],[11,"view","","",62,[[["u32",15]],["subimage",3]]],[11,"inner","","",62,[[]]],[11,"get_pixel_mut","","",59,[[["u32",15]]]],[11,"put_pixel","","",59,[[["u32",15]]]],[11,"unsafe_put_pixel","","Puts a pixel at location (x, y), ignoring bounds checking.",59,[[["u32",15]]]],[11,"blend_pixel","","Put a pixel at location (x, y), taking into account alpha …",59,[[["u32",15]]]],[11,"inner_mut","","",59,[[]]],[11,"put_pixel","","",40,[[["u32",15],["rgba",3],["u8",15]]]],[11,"blend_pixel","","DEPRECATED: Use iterator <code>pixels_mut</code> to blend the pixels …",40,[[["u32",15],["rgba",3],["u8",15]]]],[11,"get_pixel_mut","","DEPRECATED: Do not use is function: It is unimplemented!",40,[[["u32",15]],["rgba",3]]],[11,"inner_mut","","",40,[[]]],[11,"get_pixel_mut","","",62,[[["u32",15]]]],[11,"put_pixel","","",62,[[["u32",15]]]],[11,"blend_pixel","","DEPRECATED: This method will be removed. Blend the pixel …",62,[[["u32",15]]]],[11,"sub_image","","",62,[[["u32",15]],["subimage",3]]],[11,"inner_mut","","",62,[[]]],[11,"from","","",35,[[["decodingerror",4]],["imageerror",4]]],[11,"from","","",24,[[["pixelformat",4]],["colortype",4]]],[11,"from","","",35,[[["error",4]],["imageerror",4]]],[11,"from","","",24,[[],["colortype",4]]],[11,"from","","",35,[[["decodingerror",4]],["imageerror",4]]],[11,"from","image::pnm","",54,[[["bitmapheader",3]]]],[11,"from","","",54,[[["graymapheader",3]]]],[11,"from","","",54,[[["pixmapheader",3]]]],[11,"from","","",54,[[["arbitraryheader",3]]]],[11,"from","image","",35,[[["tifferror",4]],["imageerror",4]]],[11,"from","","",24,[[["colortype",4]],["colortype",4]]],[11,"from","","",31,[[["decodingresult",4]],["decodingresult",4]]],[11,"from","","",35,[[["error",3]],["imageerror",4]]],[11,"from","","",37,[[["imageformat",4]]]],[11,"into_iter","image::hdr","",45,[[]]],[11,"next","","",46,[[],["option",4]]],[11,"size_hint","","",46,[[]]],[11,"next","image","",57,[[],[["option",4],["frame",3]]]],[11,"next","","",60,[[],["option",4]]],[11,"next","","",61,[[],["option",4]]],[11,"clone","image::imageops::colorops","",41,[[],["bilevel",3]]],[11,"clone","image::imageops","",2,[[],["filtertype",4]]],[11,"clone","image::dxt","",3,[[],["dxtvariant",4]]],[11,"clone","image::hdr","",10,[[],["rgbe8pixel",3]]],[11,"clone","","",11,[[],["hdrmetadata",3]]],[11,"clone","image::pnm","",20,[[],["sampleencoding",4]]],[11,"clone","","",19,[[],["pnmsubtype",4]]],[11,"clone","","",16,[[],["bitmapheader",3]]],[11,"clone","","",17,[[],["graymapheader",3]]],[11,"clone","","",18,[[],["pixmapheader",3]]],[11,"clone","","",14,[[],["arbitraryheader",3]]],[11,"clone","","",15,[[],["arbitrarytupltype",4]]],[11,"clone","image::webp::vp8","",22,[[],["frame",3]]],[11,"clone","image","",58,[[],["frame",3]]],[11,"clone","","",59,[[],["imagebuffer",3]]],[11,"clone","","",24,[[],["colortype",4]]],[11,"clone","","",27,[[],["rgb",3]]],[11,"clone","","",29,[[],["bgr",3]]],[11,"clone","","",25,[[],["luma",3]]],[11,"clone","","",28,[[],["rgba",3]]],[11,"clone","","",30,[[],["bgra",3]]],[11,"clone","","",26,[[],["lumaa",3]]],[11,"clone","","",40,[[],["dynamicimage",4]]],[11,"clone","","",36,[[],["imageformat",4]]],[11,"clone","","",37,[[],["imageoutputformat",4]]],[11,"default","image::webp::vp8","",22,[[],["frame",3]]],[11,"eq","image::dxt","",3,[[["dxtvariant",4]],["bool",15]]],[11,"eq","image::hdr","",10,[[["rgbe8pixel",3]],["bool",15]]],[11,"ne","","",10,[[["rgbe8pixel",3]],["bool",15]]],[11,"eq","image::pnm","",20,[[["sampleencoding",4]],["bool",15]]],[11,"eq","","",19,[[["pnmsubtype",4]],["bool",15]]],[11,"ne","","",19,[[["pnmsubtype",4]],["bool",15]]],[11,"eq","image","",24,[[["colortype",4]],["bool",15]]],[11,"ne","","",24,[[["colortype",4]],["bool",15]]],[11,"eq","","",27,[[["rgb",3]],["bool",15]]],[11,"ne","","",27,[[["rgb",3]],["bool",15]]],[11,"eq","","",29,[[["bgr",3]],["bool",15]]],[11,"ne","","",29,[[["bgr",3]],["bool",15]]],[11,"eq","","",25,[[["luma",3]],["bool",15]]],[11,"ne","","",25,[[["luma",3]],["bool",15]]],[11,"eq","","",28,[[["rgba",3]],["bool",15]]],[11,"ne","","",28,[[["rgba",3]],["bool",15]]],[11,"eq","","",30,[[["bgra",3]],["bool",15]]],[11,"ne","","",30,[[["bgra",3]],["bool",15]]],[11,"eq","","",26,[[["lumaa",3]],["bool",15]]],[11,"ne","","",26,[[["lumaa",3]],["bool",15]]],[11,"eq","","",36,[[["imageformat",4]],["bool",15]]],[11,"eq","","",37,[[["imageoutputformat",4]],["bool",15]]],[11,"ne","","",37,[[["imageoutputformat",4]],["bool",15]]],[11,"deref","","",59,[[]]],[11,"deref_mut","","",59,[[]]],[11,"fmt","image::dxt","",3,[[["formatter",3]],["result",6]]],[11,"fmt","image::hdr","",44,[[["formatter",3]],["result",6]]],[11,"fmt","","",45,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","image::pnm","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","image::webp::vp8","",22,[[["formatter",3]],["result",6]]],[11,"fmt","image","",59,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],[["result",4],["error",3]]]],[11,"index","","",59,[[]]],[11,"index","","",27,[[["usize",15]]]],[11,"index","","",29,[[["usize",15]]]],[11,"index","","",25,[[["usize",15]]]],[11,"index","","",28,[[["usize",15]]]],[11,"index","","",30,[[["usize",15]]]],[11,"index","","",26,[[["usize",15]]]],[11,"index_mut","","",59,[[]]],[11,"index_mut","","",27,[[["usize",15]]]],[11,"index_mut","","",29,[[["usize",15]]]],[11,"index_mut","","",25,[[["usize",15]]]],[11,"index_mut","","",28,[[["usize",15]]]],[11,"index_mut","","",30,[[["usize",15]]]],[11,"index_mut","","",26,[[["usize",15]]]],[11,"hash","","",24,[[]]],[11,"hash","","",27,[[]]],[11,"hash","","",29,[[]]],[11,"hash","","",25,[[]]],[11,"hash","","",28,[[]]],[11,"hash","","",30,[[]]],[11,"hash","","",26,[[]]],[11,"description","","",35,[[],["str",15]]],[11,"cause","","",35,[[],[["option",4],["error",8]]]],[11,"new","image::bmp","Create a new decoder that decodes from the stream <code>r</code>",42,[[],["bmpdecoder",3]]],[11,"new","","Create a new encoder that writes its output to <code>w</code>.",43,[[]]],[11,"encode","","Encodes the image <code>image</code> that has dimensions <code>width</code> and …",43,[[["u32",15],["colortype",4]],["result",6]]],[11,"from_u8","image::gif","Converts <code>u8</code> to <code>Option<Self></code>",6,[[["u8",15]],[["disposalmethod",4],["option",4]]]],[11,"from_rgba","","Creates a frame from pixels in RGBA format. <em>Note: This …",7,[[["u16",15]],["frame",3]]],[11,"from_rgba_speed","","Creates a frame from pixels in RGBA format. <code>speed</code> is a …",7,[[["u16",15],["i32",15]],["frame",3]]],[11,"from_palette_pixels","","Creates a frame from a palette and indexed pixels.",7,[[["option",4],["u16",15],["u8",15]],["frame",3]]],[11,"from_indexed_pixels","","Creates a frame from indexed pixels in the global palette.",7,[[["option",4],["u16",15],["u8",15]],["frame",3]]],[11,"from_rgb","","Creates a frame from pixels in RGB format. <em>Note: This …",7,[[["u16",15]],["frame",3]]],[11,"from_rgb_speed","","Creates a frame from pixels in RGB format. <code>speed</code> is a …",7,[[["u16",15],["i32",15]],["frame",3]]],[11,"new","image::hdr","Creates adapter",44,[[],[["imageresult",6],["hdradapter",3]]]],[11,"new_nonstrict","","Allows reading old Radiance HDR images",44,[[],[["imageresult",6],["hdradapter",3]]]],[11,"to_hdr","","Converts <code>RGBE8Pixel</code> into <code>Rgb<f32></code> linearly",10,[[],[["rgb",3],["f32",15]]]],[11,"to_ldr","","Converts <code>RGBE8Pixel</code> into <code>Rgb<T></code> with scale=1 and gamma=2.2",10,[[],[["rgb",3],["primitive",8],["zero",8]]]],[11,"to_ldr_scale_gamma","","Converts RGBE8Pixel into Rgb using provided scale and …",10,[[["f32",15]],[["rgb",3],["primitive",8],["zero",8]]]],[11,"new","","Reads Radiance HDR image header from stream <code>r</code> if the …",45,[[],[["hdrdecoder",3],["imageresult",6]]]],[11,"with_strictness","","Reads Radiance HDR image header from stream <code>reader</code>, if …",45,[[["bool",15]],[["hdrdecoder",3],["imageresult",6]]]],[11,"metadata","","Returns file metadata. Refer to <code>HDRMetadata</code> for details.",45,[[],["hdrmetadata",3]]],[11,"read_image_native","","Consumes decoder and returns a vector of RGBE8 pixels",45,[[],[["imageresult",6],["vec",3]]]],[11,"read_image_transform","","Consumes decoder and returns a vector of transformed …",45,[[["send",8],["sync",8],["fn",8]],[["vec",3],["imageresult",6]]]],[11,"read_image_ldr","","Consumes decoder and returns a vector of Rgb pixels. …",45,[[],[["imageresult",6],["vec",3]]]],[11,"read_image_hdr","","Consumes decoder and returns a vector of Rgb pixels.",45,[[],[["imageresult",6],["vec",3]]]],[11,"new","","Creates encoder",47,[[],["hdrencoder",3]]],[11,"encode","","Encodes the image <code>data</code> that has dimensions <code>width</code> and …",47,[[["usize",15]],["result",6]]],[11,"new","image::ico","Create a new decoder that decodes from the stream <code>r</code>",48,[[],[["imageresult",6],["icodecoder",3]]]],[11,"new","","Create a new encoder that writes its output to <code>w</code>.",49,[[],["icoencoder",3]]],[11,"encode","","Encodes the image <code>image</code> that has dimensions <code>width</code> and …",49,[[["u32",15],["colortype",4]],["result",6]]],[11,"new","image::jpeg","Create a new decoder that decodes from the stream <code>r</code>",50,[[],["jpegdecoder",3]]],[11,"new","","Create a new encoder that writes its output to <code>w</code>",51,[[],["jpegencoder",3]]],[11,"new_with_quality","","Create a new encoder that writes its output to <code>w</code>, and has …",51,[[["u8",15]],["jpegencoder",3]]],[11,"encode","","Encodes the image <code>image</code> that has dimensions <code>width</code> and …",51,[[["u32",15],["colortype",4]],["result",6]]],[11,"new","image::pnm","Create a new decoder that decodes from the stream <code>read</code>",52,[[],[["imageresult",6],["pnmdecoder",3]]]],[11,"into_inner","","Extract the reader and header after an image has been …",52,[[]]],[11,"subtype","","Get the pnm subtype, depending on the magic constant …",52,[[],["pnmsubtype",4]]],[11,"new","","Create new PNMEncoder from the <code>writer</code>.",53,[[]]],[11,"with_subtype","","Encode a specific pnm subtype image.",53,[[["pnmsubtype",4]]]],[11,"with_header","","Enforce the use of a chosen header.",53,[[["pnmheader",3]]]],[11,"with_dynamic_header","","Create the header dynamically for each image.",53,[[]]],[11,"encode","","Encode an image whose samples are represented as <code>u8</code>.",53,[[["u32",15],["colortype",4]],["result",6]]],[11,"magic_constant","","Get the two magic constant bytes corresponding to this …",19,[[]]],[11,"sample_encoding","","Whether samples are stored as binary or as decimal ascii",19,[[],["sampleencoding",4]]],[11,"subtype","","Retrieve the format subtype from which the header was …",54,[[],["pnmsubtype",4]]],[11,"width","","The width of the image this header is for.",54,[[],["u32",15]]],[11,"height","","The height of the image this header is for.",54,[[],["u32",15]]],[11,"maximal_sample","","The biggest value a sample can have. In other words, the …",54,[[],["u32",15]]],[11,"as_bitmap","","Retrieve the underlying bitmap header if any",54,[[],[["bitmapheader",3],["option",4]]]],[11,"as_graymap","","Retrieve the underlying graymap header if any",54,[[],[["graymapheader",3],["option",4]]]],[11,"as_pixmap","","Retrieve the underlying pixmap header if any",54,[[],[["pixmapheader",3],["option",4]]]],[11,"as_arbitrary","","Retrieve the underlying arbitrary header if any",54,[[],[["arbitraryheader",3],["option",4]]]],[11,"write","","Write the header back into a binary stream",54,[[["write",8]],["result",6]]],[11,"new","image::tga","Create a new decoder that decodes from the stream <code>r</code>",55,[[],["tgadecoder",3]]],[11,"new","image::webp","Create a new WebpDecoder from the Reader <code>r</code>. This function …",56,[[],["webpdecoder",3]]],[11,"new","image","Contructs a new frame iterator",57,[[["vec",3],["frame",3]],["frames",3]]],[11,"new","","Contructs a new frame",58,[[["rgbaimage",6]],["frame",3]]],[11,"from_parts","","Contructs a new frame",58,[[["rgbaimage",6],["u32",15],["u16",15],["ratio",3]],["frame",3]]],[11,"delay","","Delay of this frame",58,[[],[["ratio",3],["u16",15]]]],[11,"buffer","","Returns the image buffer",58,[[],["rgbaimage",6]]],[11,"into_buffer","","Returns the image buffer",58,[[],["rgbaimage",6]]],[11,"left","","Returns the x offset",58,[[],["u32",15]]],[11,"top","","Returns the y offset",58,[[],["u32",15]]],[11,"from_raw","","Contructs a buffer from a generic container (for example …",59,[[["u32",15]],[["imagebuffer",3],["option",4]]]],[11,"into_raw","","Returns the underlying raw buffer",59,[[]]],[11,"dimensions","","The width and height of this image.",59,[[]]],[11,"width","","The width of this image.",59,[[],["u32",15]]],[11,"height","","The height of this image.",59,[[],["u32",15]]],[11,"pixels","","Returns an iterator over the pixels of this image.",59,[[],["pixels",3]]],[11,"enumerate_pixels","","Enumerates over the pixels of the image. The iterator …",59,[[],["enumeratepixels",3]]],[11,"get_pixel","","Gets a reference to the pixel at location <code>(x, y)</code>",59,[[["u32",15]]]],[11,"pixels_mut","","Returns an iterator over the mutable pixels of this image.",59,[[],["pixelsmut",3]]],[11,"enumerate_pixels_mut","","Enumerates over the pixels of the image. The iterator …",59,[[],["enumeratepixelsmut",3]]],[11,"get_pixel_mut","","Gets a reference to the mutable pixel at location <code>(x, y)</code>",59,[[["u32",15]]]],[11,"put_pixel","","Puts a pixel at location <code>(x, y)</code>",59,[[["u32",15]]]],[11,"save","","Saves the buffer to a file at the path specified.",59,[[],["result",6]]],[11,"new","","Creates a new image buffer based on a <code>Vec<P::Subpixel></code>.",59,[[["u32",15]],[["imagebuffer",3],["vec",3]]]],[11,"from_pixel","","Constructs a new ImageBuffer by copying a pixel",59,[[["u32",15]],[["imagebuffer",3],["vec",3]]]],[11,"from_fn","","Constructs a new ImageBuffer by repeated application of …",59,[[["u32",15]],[["imagebuffer",3],["vec",3]]]],[11,"from_vec","","Creates an image buffer out of an existing buffer. …",59,[[["u32",15],["vec",3]],[["imagebuffer",3],["option",4]]]],[11,"into_vec","","Consumes the image buffer and returns the underlying data …",59,[[],["vec",3]]],[11,"expand_palette","","Expands a color palette by re-using the existing buffer. …",59,[[["option",4],["u8",15]],["rgbaimage",6]]],[11,"expand_palette","","Expands a color palette by re-using the existing buffer. …",63,[[["option",4],["u8",15]],["rgbaimage",6]]],[11,"new_luma8","","Creates a dynamic image backed by a buffer of grey pixels.",40,[[["u32",15]],["dynamicimage",4]]],[11,"new_luma_a8","","Creates a dynamic image backed by a buffer of grey pixels …",40,[[["u32",15]],["dynamicimage",4]]],[11,"new_rgb8","","Creates a dynamic image backed by a buffer of RGB pixels.",40,[[["u32",15]],["dynamicimage",4]]],[11,"new_rgba8","","Creates a dynamic image backed by a buffer of RGBA pixels.",40,[[["u32",15]],["dynamicimage",4]]],[11,"new_bgra8","","Creates a dynamic image backed by a buffer of BGRA pixels.",40,[[["u32",15]],["dynamicimage",4]]],[11,"new_bgr8","","Creates a dynamic image backed by a buffer of BGR pixels.",40,[[["u32",15]],["dynamicimage",4]]],[11,"to_rgb","","Returns a copy of this image as an RGB image.",40,[[],["rgbimage",6]]],[11,"to_rgba","","Returns a copy of this image as an RGBA image.",40,[[],["rgbaimage",6]]],[11,"to_bgr","","Returns a copy of this image as an BGR image.",40,[[],[["bgr",3],["vec",3],["imagebuffer",3]]]],[11,"to_bgra","","Returns a copy of this image as an RGBA image.",40,[[],[["vec",3],["imagebuffer",3],["bgra",3]]]],[11,"to_luma","","Returns a copy of this image as a Luma image.",40,[[],["grayimage",6]]],[11,"to_luma_alpha","","Returns a copy of this image as a LumaA image.",40,[[],["grayalphaimage",6]]],[11,"crop","","Return a cut out of this image delimited by the bounding …",40,[[["u32",15]],["dynamicimage",4]]],[11,"as_rgb8","","Return a reference to an 8bit RGB image",40,[[],[["option",4],["rgbimage",6]]]],[11,"as_mut_rgb8","","Return a mutable reference to an 8bit RGB image",40,[[],[["option",4],["rgbimage",6]]]],[11,"as_bgr8","","Return a reference to an 8bit BGR image",40,[[],[["imagebuffer",3],["option",4]]]],[11,"as_mut_bgr8","","Return a mutable reference to an 8bit BGR image",40,[[],[["imagebuffer",3],["option",4]]]],[11,"as_rgba8","","Return a reference to an 8bit RGBA image",40,[[],[["option",4],["rgbaimage",6]]]],[11,"as_mut_rgba8","","Return a mutable reference to an 8bit RGBA image",40,[[],[["rgbaimage",6],["option",4]]]],[11,"as_bgra8","","Return a reference to an 8bit BGRA image",40,[[],[["option",4],["imagebuffer",3]]]],[11,"as_mut_bgra8","","Return a mutable reference to an 8bit RGBA image",40,[[],[["option",4],["imagebuffer",3]]]],[11,"as_luma8","","Return a reference to an 8bit Grayscale image",40,[[],[["grayimage",6],["option",4]]]],[11,"as_mut_luma8","","Return a mutable reference to an 8bit Grayscale image",40,[[],[["grayimage",6],["option",4]]]],[11,"as_luma_alpha8","","Return a reference to an 8bit Grayscale image with an …",40,[[],[["option",4],["grayalphaimage",6]]]],[11,"as_mut_luma_alpha8","","Return a mutable reference to an 8bit Grayscale image …",40,[[],[["grayalphaimage",6],["option",4]]]],[11,"raw_pixels","","Return this image\'s pixels as a byte vector.",40,[[],[["vec",3],["u8",15]]]],[11,"color","","Return this image\'s color type.",40,[[],["colortype",4]]],[11,"grayscale","","Return a grayscale version of this image.",40,[[],["dynamicimage",4]]],[11,"invert","","Invert the colors of this image. This method operates …",40,[[]]],[11,"resize","","Resize this image using the specified filter algorithm. …",40,[[["u32",15],["filtertype",4]],["dynamicimage",4]]],[11,"resize_exact","","Resize this image using the specified filter algorithm. …",40,[[["u32",15],["filtertype",4]],["dynamicimage",4]]],[11,"thumbnail","","Scale this image down to fit within a specific size. …",40,[[["u32",15]],["dynamicimage",4]]],[11,"thumbnail_exact","","Scale this image down to a specific size. Returns a new …",40,[[["u32",15]],["dynamicimage",4]]],[11,"resize_to_fill","","Resize this image using the specified filter algorithm. …",40,[[["u32",15],["filtertype",4]],["dynamicimage",4]]],[11,"blur","","Performs a Gaussian blur on this image. <code>sigma</code> is a …",40,[[["f32",15]],["dynamicimage",4]]],[11,"unsharpen","","Performs an unsharpen mask on this image. <code>sigma</code> is the …",40,[[["f32",15],["i32",15]],["dynamicimage",4]]],[11,"filter3x3","","Filters this image with the specified 3x3 kernel.",40,[[],["dynamicimage",4]]],[11,"adjust_contrast","","Adjust the contrast of this image. <code>contrast</code> is the amount …",40,[[["f32",15]],["dynamicimage",4]]],[11,"brighten","","Brighten the pixels of this image. <code>value</code> is the amount to …",40,[[["i32",15]],["dynamicimage",4]]],[11,"huerotate","","Hue rotate the supplied image. <code>value</code> is the degrees to …",40,[[["i32",15]],["dynamicimage",4]]],[11,"flipv","","Flip this image vertically",40,[[],["dynamicimage",4]]],[11,"fliph","","Flip this image horizontally",40,[[],["dynamicimage",4]]],[11,"rotate90","","Rotate this image 90 degrees clockwise.",40,[[],["dynamicimage",4]]],[11,"rotate180","","Rotate this image 180 degrees clockwise.",40,[[],["dynamicimage",4]]],[11,"rotate270","","Rotate this image 270 degrees clockwise.",40,[[],["dynamicimage",4]]],[11,"write_to","","Encode this image and write it to <code>w</code>",40,[[["imageoutputformat",4],["into",8]],["imageresult",6]]],[11,"save","","Saves the buffer to a file at the path specified.",40,[[],["result",6]]],[11,"is_animated","","Returns true if the image is animated",34,[[],[["bool",15],["imageresult",6]]]],[11,"into_frames","","Returns the frames of the image",34,[[],[["frames",3],["imageresult",6]]]],[11,"load_rect","","Decodes a specific region of the image, represented by …",34,[[["u32",15]],[["imageresult",6],["vec",3]]]],[11,"width","","The width of this image.",33,[[],["u32",15]]],[11,"height","","The height of this image.",33,[[],["u32",15]]],[11,"in_bounds","","Returns true if this x, y coordinate is contained inside …",33,[[["u32",15]],["bool",15]]],[11,"unsafe_get_pixel","","Returns the pixel located at (x, y)",33,[[["u32",15]]]],[11,"pixels","","Returns an Iterator over the pixels of this image. The …",33,[[],["pixels",3]]],[11,"view","","Returns an subimage that is an immutable view into this …",33,[[["u32",15]],["subimage",3]]],[11,"unsafe_put_pixel","","Puts a pixel at location (x, y)",32,[[["u32",15]]]],[11,"pixels_mut","","Returns an Iterator over mutable pixels of this image. …",32,[[],["mutpixels",3]]],[11,"copy_from","","Copies all of the pixels from another image into this …",32,[[["u32",15]],["bool",15]]],[11,"sub_image","","Returns a subimage that is a view into this image.",32,[[["u32",15]],["subimage",3]]],[11,"new","","Construct a new subimage",62,[[["u32",15]],["subimage",3]]],[11,"change_bounds","","Change the coordinates of this subimage.",62,[[["u32",15]]]],[11,"to_image","","Convert this subimage to an ImageBuffer",62,[[],[["vec",3],["imagebuffer",3]]]]],"p":[[3,"NeuQuant"],[8,"ColorMap"],[4,"FilterType"],[4,"DXTVariant"],[3,"DXTDecoder"],[3,"DXTEncoder"],[4,"DisposalMethod"],[3,"Frame"],[3,"Decoder"],[3,"Encoder"],[3,"RGBE8Pixel"],[3,"HDRMetadata"],[3,"PNGDecoder"],[3,"PNGEncoder"],[3,"ArbitraryHeader"],[4,"ArbitraryTuplType"],[3,"BitmapHeader"],[3,"GraymapHeader"],[3,"PixmapHeader"],[4,"PNMSubtype"],[4,"SampleEncoding"],[3,"TIFFDecoder"],[3,"Frame"],[3,"VP8Decoder"],[4,"ColorType"],[3,"Luma"],[3,"LumaA"],[3,"Rgb"],[3,"Rgba"],[3,"Bgr"],[3,"Bgra"],[4,"DecodingResult"],[8,"GenericImage"],[8,"GenericImageView"],[8,"ImageDecoder"],[4,"ImageError"],[4,"ImageFormat"],[4,"ImageOutputFormat"],[8,"ConvertBuffer"],[8,"Pixel"],[4,"DynamicImage"],[3,"BiLevel"],[3,"BMPDecoder"],[3,"BMPEncoder"],[3,"HDRAdapter"],[3,"HDRDecoder"],[3,"HDRImageDecoderIterator"],[3,"HDREncoder"],[3,"ICODecoder"],[3,"ICOEncoder"],[3,"JPEGDecoder"],[3,"JPEGEncoder"],[3,"PNMDecoder"],[3,"PNMEncoder"],[3,"PNMHeader"],[3,"TGADecoder"],[3,"WebpDecoder"],[3,"Frames"],[3,"Frame"],[3,"ImageBuffer"],[3,"Pixels"],[3,"MutPixels"],[3,"SubImage"],[6,"GrayImage"]]},\
"inflate":{"doc":"A DEFLATE decoder written in rust.","i":[[3,"InflateWriter","inflate","A DEFLATE decoder.",null,null],[5,"inflate_bytes","","Decompress the given slice of DEFLATE compressed data.",null,[[],[["vec",3],["string",3],["result",4]]]],[5,"inflate_bytes_zlib","","Decompress the given slice of DEFLATE compressed (with …",null,[[],[["vec",3],["string",3],["result",4]]]],[5,"inflate_bytes_zlib_no_checksum","","Decompress the given slice of DEFLATE compressed (with …",null,[[],[["vec",3],["string",3],["result",4]]]],[3,"DeflateDecoder","","A DEFLATE decoder/decompressor.",null,null],[3,"DeflateDecoderBuf","","A DEFLATE decoder/decompressor.",null,null],[3,"InflateStream","","",null,null],[11,"new","","Create a new stream for decoding raw deflate encoded data.",0,[[],["inflatestream",3]]],[11,"from_zlib","","Create a new stream for decoding deflate encoded data …",0,[[],["inflatestream",3]]],[11,"from_zlib_no_checksum","","Create a new stream for decoding deflate encoded data …",0,[[],["inflatestream",3]]],[11,"reset","","",0,[[]]],[11,"reset_to_zlib","","",0,[[]]],[11,"update","","Try to uncompress/decode the data in <code>data</code>.",0,[[],[["string",3],["result",4]]]],[11,"current_checksum","","Returns the calculated checksum value of the currently …",0,[[],["u32",15]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"read","","",2,[[],[["usize",15],["result",6]]]],[11,"read","","",3,[[],[["usize",15],["result",6]]]],[11,"write","","",1,[[],[["usize",15],["result",6]]]],[11,"flush","","",1,[[],["result",6]]],[11,"new","","",1,[[],["inflatewriter",3]]],[11,"from_zlib","","",1,[[],["inflatewriter",3]]],[11,"finish","","",1,[[],["result",6]]],[11,"new","","Create a new <code>Deflatedecoderbuf</code> to read from a raw deflate …",2,[[],["deflatedecoderbuf",3]]],[11,"from_zlib","","Create a new <code>DeflateDecoderbuf</code> that reads from a zlib …",2,[[],["deflatedecoderbuf",3]]],[11,"from_zlib_no_checksum","","Create a new <code>DeflateDecoderbuf</code> that reads from a zlib …",2,[[],["deflatedecoderbuf",3]]],[11,"reset","","Resets the decompressor, and replaces the current inner …",2,[[]]],[11,"reset_data","","Resets the decoder, but continue to read from the same …",2,[[]]],[11,"get_ref","","Returns a reference to the underlying <code>BufRead</code> instance.",2,[[]]],[11,"get_mut","","Returns a mutable reference to the underlying <code>BufRead</code> …",2,[[]]],[11,"into_inner","","Drops the decoder and return the inner <code>BufRead</code> instance.",2,[[]]],[11,"total_in","","Returns the total bytes read from the underlying <code>BufRead</code> …",2,[[],["u64",15]]],[11,"total_out","","Returns the total number of bytes output from this …",2,[[],["u64",15]]],[11,"current_checksum","","Returns the calculated checksum value of the currently …",2,[[],["u32",15]]],[11,"new","","Create a new <code>Deflatedecoderbuf</code> to read from a raw deflate …",3,[[],["deflatedecoder",3]]],[11,"from_zlib","","Create a new <code>DeflateDecoderbuf</code> that reads from a zlib …",3,[[],["deflatedecoder",3]]],[11,"from_zlib_no_checksum","","Create a new <code>DeflateDecoderbuf</code> that reads from a zlib …",3,[[],["deflatedecoder",3]]],[11,"reset","","Resets the decompressor, and replaces the current inner …",3,[[]]],[11,"get_ref","","Returns a reference to the underlying reader.",3,[[]]],[11,"get_mut","","Returns a mutable reference to the underlying reader.",3,[[]]],[11,"into_inner","","Returns the total number of bytes output from this …",3,[[]]],[11,"reset_data","","Resets the decoder, but continue to read from the same …",3,[[]]],[11,"total_in","","Returns the total bytes read from the underlying reader.",3,[[],["u64",15]]],[11,"total_out","","Returns the total number of bytes output from this …",3,[[],["u64",15]]],[11,"current_checksum","","Returns the calculated checksum value of the currently …",3,[[],["u32",15]]]],"p":[[3,"InflateStream"],[3,"InflateWriter"],[3,"DeflateDecoderBuf"],[3,"DeflateDecoder"]]},\
"input":{"doc":"A flexible structure for user interactions to be used in …","i":[[0,"controller","input","Back-end agnostic controller events.",null,null],[3,"ControllerButton","input::controller","Components of a controller button event. Not guaranteed …",null,null],[12,"id","","Which controller was the button on.",0,null],[12,"button","","Which button was pressed.",0,null],[11,"new","","Create a new ControllerButton object. Intended for use by …",0,[[["u8",15],["i32",15]]]],[3,"ControllerHat","","Components of a controller hat move event (d-Pad).",null,null],[12,"id","","Which Controller was the button on.",1,null],[12,"state","","Which button was pressed.",1,null],[12,"which","","Which hat on the controller was changed",1,null],[11,"new","","Create a new ControllerButton object. Intended for use by …",1,[[["u8",15],["hatstate",4],["i32",15]]]],[3,"ControllerAxisArgs","","Components of a controller axis move event. Not …",null,null],[12,"id","","Which controller moved.",2,null],[12,"axis","","The axis that moved.",2,null],[12,"position","","Position of the controller. Usually [-1.0, 1.0], though …",2,null],[11,"new","","Create a new ControllerAxisArgs object. Intended for use …",2,[[["u8",15],["f64",15],["i32",15]]]],[8,"ControllerAxisEvent","","The position of a controller axis changed.",null,null],[10,"from_controller_axis_args","","Creates a controller axis event.",3,[[["controlleraxisargs",3]],["option",4]]],[10,"controller_axis","","Calls closure if this is a controller axis event.",3,[[],["option",4]]],[11,"controller_axis_args","","Returns controller axis arguments.",3,[[],[["option",4],["controlleraxisargs",3]]]],[0,"keyboard","input","Back-end agnostic keyboard keys.",null,null],[3,"ModifierKey","input::keyboard","",null,null],[18,"NO_MODIFIER","","No modifier.",4,null],[18,"CTRL","","Ctrl.",4,null],[18,"SHIFT","","Shift.",4,null],[18,"ALT","","Alt.",4,null],[18,"GUI","","Gui.",4,null],[18,"CTRL_SHIFT","","Ctrl + Shift.",4,null],[18,"CTRL_ALT","","Ctrl + Alt.",4,null],[18,"CTRL_GUI","","Ctrl + Gui.",4,null],[18,"CTRL_SHIFT_ALT","","Ctrl + Shift + Alt.",4,null],[18,"CTRL_SHIFT_GUI","","Ctrl + Shift + Gui.",4,null],[18,"CTRL_SHIFT_ALT_GUI","","Ctrl + Shift + Alt + Gui.",4,null],[18,"SHIFT_ALT","","Shift + Alt.",4,null],[18,"SHIFT_GUI","","Shift + Gui.",4,null],[18,"SHIFT_ALT_GUI","","Shift + Alt + Gui.",4,null],[18,"ALT_GUI","","Alt + Gui.",4,null],[11,"empty","","Returns an empty set of flags",4,[[],["modifierkey",3]]],[11,"all","","Returns the set containing all flags.",4,[[],["modifierkey",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",4,[[],["u8",15]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",4,[[["u8",15]],[["modifierkey",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",4,[[["u8",15]],["modifierkey",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",4,[[["u8",15]],["modifierkey",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",4,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",4,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",4,[[["modifierkey",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",4,[[["modifierkey",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",4,[[["modifierkey",3]]]],[11,"remove","","Removes the specified flags in-place.",4,[[["modifierkey",3]]]],[11,"toggle","","Toggles the specified flags in-place.",4,[[["modifierkey",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",4,[[["bool",15],["modifierkey",3]]]],[11,"event","","Change modifier key state depending on input.",4,[[]]],[4,"Key","","Represent a keyboard key. Keycodes follows SDL …",null,null],[13,"Unknown","","",5,null],[13,"Backspace","","",5,null],[13,"Tab","","",5,null],[13,"Return","","",5,null],[13,"Escape","","",5,null],[13,"Space","","",5,null],[13,"Exclaim","","",5,null],[13,"Quotedbl","","",5,null],[13,"Hash","","",5,null],[13,"Dollar","","",5,null],[13,"Percent","","",5,null],[13,"Ampersand","","",5,null],[13,"Quote","","",5,null],[13,"LeftParen","","",5,null],[13,"RightParen","","",5,null],[13,"Asterisk","","",5,null],[13,"Plus","","",5,null],[13,"Comma","","",5,null],[13,"Minus","","",5,null],[13,"Period","","",5,null],[13,"Slash","","",5,null],[13,"D0","","",5,null],[13,"D1","","",5,null],[13,"D2","","",5,null],[13,"D3","","",5,null],[13,"D4","","",5,null],[13,"D5","","",5,null],[13,"D6","","",5,null],[13,"D7","","",5,null],[13,"D8","","",5,null],[13,"D9","","",5,null],[13,"Colon","","",5,null],[13,"Semicolon","","",5,null],[13,"Less","","",5,null],[13,"Equals","","",5,null],[13,"Greater","","",5,null],[13,"Question","","",5,null],[13,"At","","",5,null],[13,"LeftBracket","","",5,null],[13,"Backslash","","",5,null],[13,"RightBracket","","",5,null],[13,"Caret","","",5,null],[13,"Underscore","","",5,null],[13,"Backquote","","",5,null],[13,"A","","",5,null],[13,"B","","",5,null],[13,"C","","",5,null],[13,"D","","",5,null],[13,"E","","",5,null],[13,"F","","",5,null],[13,"G","","",5,null],[13,"H","","",5,null],[13,"I","","",5,null],[13,"J","","",5,null],[13,"K","","",5,null],[13,"L","","",5,null],[13,"M","","",5,null],[13,"N","","",5,null],[13,"O","","",5,null],[13,"P","","",5,null],[13,"Q","","",5,null],[13,"R","","",5,null],[13,"S","","",5,null],[13,"T","","",5,null],[13,"U","","",5,null],[13,"V","","",5,null],[13,"W","","",5,null],[13,"X","","",5,null],[13,"Y","","",5,null],[13,"Z","","",5,null],[13,"Delete","","",5,null],[13,"CapsLock","","",5,null],[13,"F1","","",5,null],[13,"F2","","",5,null],[13,"F3","","",5,null],[13,"F4","","",5,null],[13,"F5","","",5,null],[13,"F6","","",5,null],[13,"F7","","",5,null],[13,"F8","","",5,null],[13,"F9","","",5,null],[13,"F10","","",5,null],[13,"F11","","",5,null],[13,"F12","","",5,null],[13,"PrintScreen","","",5,null],[13,"ScrollLock","","",5,null],[13,"Pause","","",5,null],[13,"Insert","","",5,null],[13,"Home","","",5,null],[13,"PageUp","","",5,null],[13,"End","","",5,null],[13,"PageDown","","",5,null],[13,"Right","","",5,null],[13,"Left","","",5,null],[13,"Down","","",5,null],[13,"Up","","",5,null],[13,"NumLockClear","","",5,null],[13,"NumPadDivide","","",5,null],[13,"NumPadMultiply","","",5,null],[13,"NumPadMinus","","",5,null],[13,"NumPadPlus","","",5,null],[13,"NumPadEnter","","",5,null],[13,"NumPad1","","",5,null],[13,"NumPad2","","",5,null],[13,"NumPad3","","",5,null],[13,"NumPad4","","",5,null],[13,"NumPad5","","",5,null],[13,"NumPad6","","",5,null],[13,"NumPad7","","",5,null],[13,"NumPad8","","",5,null],[13,"NumPad9","","",5,null],[13,"NumPad0","","",5,null],[13,"NumPadPeriod","","",5,null],[13,"Application","","",5,null],[13,"Power","","",5,null],[13,"NumPadEquals","","",5,null],[13,"F13","","",5,null],[13,"F14","","",5,null],[13,"F15","","",5,null],[13,"F16","","",5,null],[13,"F17","","",5,null],[13,"F18","","",5,null],[13,"F19","","",5,null],[13,"F20","","",5,null],[13,"F21","","",5,null],[13,"F22","","",5,null],[13,"F23","","",5,null],[13,"F24","","",5,null],[13,"Execute","","",5,null],[13,"Help","","",5,null],[13,"Menu","","",5,null],[13,"Select","","",5,null],[13,"Stop","","",5,null],[13,"Again","","",5,null],[13,"Undo","","",5,null],[13,"Cut","","",5,null],[13,"Copy","","",5,null],[13,"Paste","","",5,null],[13,"Find","","",5,null],[13,"Mute","","",5,null],[13,"VolumeUp","","",5,null],[13,"VolumeDown","","",5,null],[13,"NumPadComma","","",5,null],[13,"NumPadEqualsAS400","","",5,null],[13,"AltErase","","",5,null],[13,"Sysreq","","",5,null],[13,"Cancel","","",5,null],[13,"Clear","","",5,null],[13,"Prior","","",5,null],[13,"Return2","","",5,null],[13,"Separator","","",5,null],[13,"Out","","",5,null],[13,"Oper","","",5,null],[13,"ClearAgain","","",5,null],[13,"CrSel","","",5,null],[13,"ExSel","","",5,null],[13,"NumPad00","","",5,null],[13,"NumPad000","","",5,null],[13,"ThousandsSeparator","","",5,null],[13,"DecimalSeparator","","",5,null],[13,"CurrencyUnit","","",5,null],[13,"CurrencySubUnit","","",5,null],[13,"NumPadLeftParen","","",5,null],[13,"NumPadRightParen","","",5,null],[13,"NumPadLeftBrace","","",5,null],[13,"NumPadRightBrace","","",5,null],[13,"NumPadTab","","",5,null],[13,"NumPadBackspace","","",5,null],[13,"NumPadA","","",5,null],[13,"NumPadB","","",5,null],[13,"NumPadC","","",5,null],[13,"NumPadD","","",5,null],[13,"NumPadE","","",5,null],[13,"NumPadF","","",5,null],[13,"NumPadXor","","",5,null],[13,"NumPadPower","","",5,null],[13,"NumPadPercent","","",5,null],[13,"NumPadLess","","",5,null],[13,"NumPadGreater","","",5,null],[13,"NumPadAmpersand","","",5,null],[13,"NumPadDblAmpersand","","",5,null],[13,"NumPadVerticalBar","","",5,null],[13,"NumPadDblVerticalBar","","",5,null],[13,"NumPadColon","","",5,null],[13,"NumPadHash","","",5,null],[13,"NumPadSpace","","",5,null],[13,"NumPadAt","","",5,null],[13,"NumPadExclam","","",5,null],[13,"NumPadMemStore","","",5,null],[13,"NumPadMemRecall","","",5,null],[13,"NumPadMemClear","","",5,null],[13,"NumPadMemAdd","","",5,null],[13,"NumPadMemSubtract","","",5,null],[13,"NumPadMemMultiply","","",5,null],[13,"NumPadMemDivide","","",5,null],[13,"NumPadPlusMinus","","",5,null],[13,"NumPadClear","","",5,null],[13,"NumPadClearEntry","","",5,null],[13,"NumPadBinary","","",5,null],[13,"NumPadOctal","","",5,null],[13,"NumPadDecimal","","",5,null],[13,"NumPadHexadecimal","","",5,null],[13,"LCtrl","","",5,null],[13,"LShift","","",5,null],[13,"LAlt","","",5,null],[13,"LGui","","",5,null],[13,"RCtrl","","",5,null],[13,"RShift","","",5,null],[13,"RAlt","","",5,null],[13,"RGui","","",5,null],[13,"Mode","","",5,null],[13,"AudioNext","","",5,null],[13,"AudioPrev","","",5,null],[13,"AudioStop","","",5,null],[13,"AudioPlay","","",5,null],[13,"AudioMute","","",5,null],[13,"MediaSelect","","",5,null],[13,"Www","","",5,null],[13,"Mail","","",5,null],[13,"Calculator","","",5,null],[13,"Computer","","",5,null],[13,"AcSearch","","",5,null],[13,"AcHome","","",5,null],[13,"AcBack","","",5,null],[13,"AcForward","","",5,null],[13,"AcStop","","",5,null],[13,"AcRefresh","","",5,null],[13,"AcBookmarks","","",5,null],[13,"BrightnessDown","","",5,null],[13,"BrightnessUp","","",5,null],[13,"DisplaySwitch","","",5,null],[13,"KbdIllumToggle","","",5,null],[13,"KbdIllumDown","","",5,null],[13,"KbdIllumUp","","",5,null],[13,"Eject","","",5,null],[13,"Sleep","","",5,null],[11,"code","","Returns an id of the key",5,[[],["i32",15]]],[0,"mouse","input","Back-end agnostic mouse buttons.",null,null],[4,"MouseButton","input::mouse","Represent a mouse button.",null,null],[13,"Unknown","","Unknown mouse button.",6,null],[13,"Left","","Left mouse button.",6,null],[13,"Right","","Right mouse button.",6,null],[13,"Middle","","Middle mouse button.",6,null],[13,"X1","","Extra mouse button number 1.",6,null],[13,"X2","","Extra mouse button number 2.",6,null],[13,"Button6","","Mouse button number 6.",6,null],[13,"Button7","","Mouse button number 7.",6,null],[13,"Button8","","Mouse button number 8.",6,null],[8,"MouseCursorEvent","","The position of the mouse cursor",null,null],[10,"from_xy","","Creates a mouse cursor event.",7,[[["f64",15]],["option",4]]],[10,"mouse_cursor","","Calls closure if this is a mouse cursor event.",7,[[],["option",4]]],[11,"mouse_cursor_args","","Returns mouse cursor arguments.",7,[[],["option",4]]],[8,"MouseRelativeEvent","","The relative movement of mouse cursor",null,null],[10,"from_xy","","Creates a mouse relative event.",8,[[["f64",15]],["option",4]]],[10,"mouse_relative","","Calls closure if this is a mouse relative event.",8,[[],["option",4]]],[11,"mouse_relative_args","","Returns mouse relative arguments.",8,[[],["option",4]]],[8,"MouseScrollEvent","","The scroll of the mouse wheel",null,null],[10,"from_xy","","Creates a mouse scroll event.",9,[[["f64",15]],["option",4]]],[10,"mouse_scroll","","Calls a closure if this is a mouse scroll event.",9,[[],["option",4]]],[11,"mouse_scroll_args","","Returns mouse scroll arguments.",9,[[],["option",4]]],[0,"generic_event","input","Trait for generic events",null,null],[8,"GenericEvent","input::generic_event","Implemented by all events",null,null],[10,"event_id","","The id of this event.",10,[[],["eventid",3]]],[10,"with_args","","Calls closure with arguments",10,[[]]],[3,"AfterRenderArgs","input","After render arguments.",null,null],[8,"AfterRenderEvent","","After rendering and buffers are swapped.",null,null],[10,"from_after_render_args","","Creates an after render event.",11,[[["afterrenderargs",3]],["option",4]]],[10,"after_render","","Calls closure if this is an after render event.",11,[[],["option",4]]],[11,"after_render_args","","Returns after render arguments.",11,[[],[["option",4],["afterrenderargs",3]]]],[3,"CloseArgs","","Close arguments.",null,null],[8,"CloseEvent","","Window is closing.",null,null],[10,"from_close_args","","Creates a close event from arguments.",12,[[["closeargs",3]],["option",4]]],[10,"close","","Calls closure if this is a close event.",12,[[],["option",4]]],[11,"close_args","","Returns close arguments.",12,[[],[["option",4],["closeargs",3]]]],[8,"CursorEvent","","When window gets or loses cursor",null,null],[10,"from_cursor","","Creates a cursor event.",13,[[["bool",15]],["option",4]]],[10,"cursor","","Calls closure if this is a cursor event.",13,[[],["option",4]]],[11,"cursor_args","","Returns cursor arguments.",13,[[],[["bool",15],["option",4]]]],[8,"FocusEvent","","When window gets or loses focus",null,null],[10,"from_focused","","Creates a focus event.",14,[[["bool",15]],["option",4]]],[10,"focus","","Calls closure if this is a focus event.",14,[[],["option",4]]],[11,"focus_args","","Returns focus arguments.",14,[[],[["bool",15],["option",4]]]],[3,"IdleArgs","","Idle arguments, such as expected idle time in seconds.",null,null],[12,"dt","","Expected idle time in seconds.",15,null],[8,"IdleEvent","","When background tasks should be performed",null,null],[10,"from_idle_args","","Creates an idle event.",16,[[["idleargs",3]],["option",4]]],[11,"from_dt","","Creates an update event with delta time.",16,[[["f64",15]],["option",4]]],[10,"idle","","Calls closure if this is an idle event.",16,[[],["option",4]]],[11,"idle_args","","Returns idle arguments.",16,[[],[["option",4],["idleargs",3]]]],[4,"ButtonState","","Stores button state.",null,null],[13,"Press","","Button was pressed.",17,null],[13,"Release","","Button was released.",17,null],[3,"ButtonArgs","","Button arguments",null,null],[12,"state","","New state of the button.",18,null],[12,"button","","The button that changed state.",18,null],[12,"scancode","","An optional scancode that tells the physical layout of a …",18,null],[8,"ButtonEvent","","Changed button state.",null,null],[10,"from_button_args","","Creates a button event.",19,[[["buttonargs",3]],["option",4]]],[10,"button","","Calls closure if this is a button event.",19,[[],["option",4]]],[11,"button_args","","Returns button arguments.",19,[[],[["option",4],["buttonargs",3]]]],[8,"PressEvent","","The press of a button",null,null],[10,"from_button","","Creates a press event.",20,[[["button",4]],["option",4]]],[10,"press","","Calls closure if this is a press event.",20,[[],["option",4]]],[11,"press_args","","Returns press arguments.",20,[[],[["button",4],["option",4]]]],[8,"ReleaseEvent","","The release of a button",null,null],[10,"from_button","","Creates a release event.",21,[[["button",4]],["option",4]]],[10,"release","","Calls closure if this is a release event.",21,[[],["option",4]]],[11,"release_args","","Returns release arguments.",21,[[],[["button",4],["option",4]]]],[8,"ResizeEvent","","When the window is resized",null,null],[10,"from_width_height","","Creates a resize event.",22,[[["f64",15]],["option",4]]],[10,"resize","","Calls closure if this is a resize event.",22,[[],["option",4]]],[11,"resize_args","","Returns resize arguments.",22,[[],["option",4]]],[3,"RenderArgs","","Render arguments",null,null],[12,"ext_dt","","Extrapolated time in seconds, used to do smooth animation.",23,null],[12,"width","","The width of rendered area in points.",23,null],[12,"height","","The height of rendered area in points.",23,null],[12,"draw_width","","The width of rendered area in pixels.",23,null],[12,"draw_height","","The height of rendered area in pixels.",23,null],[8,"RenderEvent","","When the next frame should be rendered",null,null],[10,"from_render_args","","Creates a render event.",24,[[["renderargs",3]],["option",4]]],[10,"render","","Calls closure if this is a render event.",24,[[],["option",4]]],[11,"render_args","","Returns render arguments.",24,[[],[["option",4],["renderargs",3]]]],[8,"TextEvent","","When receiving text from user, such as typing a character",null,null],[10,"from_text","","Creates a text event.",25,[[["str",15]],["option",4]]],[10,"text","","Calls closure if this is a text event.",25,[[],["option",4]]],[11,"text_args","","Returns text arguments.",25,[[],[["option",4],["string",3]]]],[4,"Touch","","Stores the touch state.",null,null],[13,"Start","","The start of touch, for example a finger pressed down on …",26,null],[13,"Move","","The move of touch, for example a finger moving while …",26,null],[13,"End","","The end of touch, for example taking a finger away from a …",26,null],[13,"Cancel","","The cancel of touch, for example the window loses focus.",26,null],[3,"TouchArgs","","Touch arguments",null,null],[12,"device","","A unique identifier for touch device.",27,null],[12,"id","","A unique identifier for touch event.",27,null],[12,"x","","The x coordinate of the touch position, normalized 0..1.",27,null],[12,"y","","The y coordinate of the touch position, normalized 0..1.",27,null],[12,"z","","The z coordinate of the touch position, normalized 0..1.",27,null],[12,"px","","The x coordinate of the touch pressure direction.",27,null],[12,"py","","The y coordinate of the touch pressure direction.",27,null],[12,"pz","","The z coordinate of the touch pressure direction.",27,null],[12,"is_3d","","Whether the touch is in 3D.",27,null],[12,"touch","","The touch state.",27,null],[8,"TouchEvent","","When a touch is started, moved, ended or cancelled.",null,null],[10,"from_touch_args","","Creates a touch event.",28,[[["touchargs",3]],["option",4]]],[10,"touch","","Calls closure if this is a touch event.",28,[[],["option",4]]],[11,"touch_args","","Returns touch arguments.",28,[[],[["option",4],["touchargs",3]]]],[3,"UpdateArgs","","Update arguments, such as delta time in seconds",null,null],[12,"dt","","Delta time in seconds.",29,null],[8,"UpdateEvent","","When the application state should be updated",null,null],[10,"from_update_args","","Creates an update event.",30,[[["updateargs",3]],["option",4]]],[11,"from_dt","","Creates an update event with delta time.",30,[[["f64",15]],["option",4]]],[10,"update","","Calls closure if this is an update event.",30,[[],["option",4]]],[11,"update_args","","Returns update arguments.",30,[[],[["updateargs",3],["option",4]]]],[3,"EventId","","Used to identify events arguments provided by traits.",null,null],[12,"0","","",31,null],[4,"Button","","Models different kinds of buttons.",null,null],[13,"Keyboard","","A keyboard button.",32,null],[13,"Mouse","","A mouse button.",32,null],[13,"Controller","","A controller button.",32,null],[13,"Hat","","A controller hat (d-Pad)",32,null],[4,"Motion","","Models different kinds of motion.",null,null],[13,"MouseCursor","","x and y in window coordinates.",33,null],[13,"MouseRelative","","x and y in relative coordinates.",33,null],[13,"MouseScroll","","x and y in scroll ticks.",33,null],[13,"ControllerAxis","","controller axis move event.",33,null],[13,"Touch","","touch event.",33,null],[4,"HatState","","",null,null],[13,"Centered","","",34,null],[13,"Up","","",34,null],[13,"Right","","",34,null],[13,"Down","","",34,null],[13,"Left","","",34,null],[13,"RightUp","","",34,null],[13,"RightDown","","",34,null],[13,"LeftUp","","",34,null],[13,"LeftDown","","",34,null],[4,"Input","","Models input events.",null,null],[13,"Button","","Changed button state.",35,null],[13,"Move","","Moved mouse cursor.",35,null],[13,"Text","","Text (usually from keyboard).",35,null],[13,"Resize","","Window got resized.",35,null],[13,"Focus","","Window gained or lost focus.",35,null],[13,"Cursor","","Window gained or lost cursor.",35,null],[13,"Close","","Window closed.",35,null],[4,"Loop","","Models loop events.",null,null],[13,"Render","","Render graphics.",36,null],[13,"AfterRender","","After rendering and swapping buffers.",36,null],[13,"Update","","Update the state of the application.",36,null],[13,"Idle","","Do background tasks that can be done incrementally.",36,null],[4,"Event","","Models all events.",null,null],[13,"Input","","Input events.",37,null],[13,"Loop","","Events that commonly used by event loops.",37,null],[13,"Custom","","Custom event.",37,null],[11,"from","input::controller","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","input::keyboard","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","input::mouse","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","input","",38,[[]]],[11,"into","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"from_controller_axis_args","","",37,[[["controlleraxisargs",3]],["option",4]]],[11,"controller_axis","","",37,[[],["option",4]]],[11,"from_xy","","",37,[[["f64",15]],["option",4]]],[11,"mouse_cursor","","",37,[[],["option",4]]],[11,"from_xy","","",37,[[["f64",15]],["option",4]]],[11,"mouse_relative","","",37,[[],["option",4]]],[11,"from_xy","","",37,[[["f64",15]],["option",4]]],[11,"mouse_scroll","","",37,[[],["option",4]]],[11,"event_id","","",37,[[],["eventid",3]]],[11,"with_args","","",37,[[]]],[11,"from_after_render_args","","",37,[[["afterrenderargs",3]],["option",4]]],[11,"after_render","","",37,[[],["option",4]]],[11,"from_button_args","","",37,[[["buttonargs",3]],["option",4]]],[11,"button","","",37,[[],["option",4]]],[11,"from_close_args","","",37,[[["closeargs",3]],["option",4]]],[11,"close","","",37,[[],["option",4]]],[11,"from_cursor","","",37,[[["bool",15]],["option",4]]],[11,"cursor","","",37,[[],["option",4]]],[11,"from_focused","","",37,[[["bool",15]],["option",4]]],[11,"focus","","",37,[[],["option",4]]],[11,"from_idle_args","","",37,[[["idleargs",3]],["option",4]]],[11,"idle","","",37,[[],["option",4]]],[11,"from_render_args","","",37,[[["renderargs",3]],["option",4]]],[11,"render","","",37,[[],["option",4]]],[11,"from_width_height","","",37,[[["f64",15]],["option",4]]],[11,"resize","","",37,[[],["option",4]]],[11,"from_text","","",37,[[["str",15]],["option",4]]],[11,"text","","",37,[[],["option",4]]],[11,"from_touch_args","","",37,[[["touchargs",3]],["option",4]]],[11,"touch","","",37,[[],["option",4]]],[11,"from_update_args","","",37,[[["updateargs",3]],["option",4]]],[11,"update","","",37,[[],["option",4]]],[11,"from","input::keyboard","",5,[[["u32",15]],["key",4]]],[11,"from","input::mouse","",6,[[["u32",15]],["mousebutton",4]]],[11,"from","input","",32,[[["key",4]]]],[11,"from","","",32,[[["mousebutton",4]]]],[11,"from","","",32,[[["controllerbutton",3]]]],[11,"from","","",35,[[["buttonargs",3]]]],[11,"from","","",33,[[["controlleraxisargs",3]]]],[11,"from","","",35,[[["controlleraxisargs",3]]]],[11,"from","","",33,[[["touchargs",3]]]],[11,"from","","",35,[[["touchargs",3]]]],[11,"from","","",35,[[["motion",4]]]],[11,"from","","",36,[[["renderargs",3]]]],[11,"from","","",37,[[["renderargs",3]]]],[11,"from","","",36,[[["afterrenderargs",3]]]],[11,"from","","",37,[[["afterrenderargs",3]]]],[11,"from","","",36,[[["updateargs",3]]]],[11,"from","","",37,[[["updateargs",3]]]],[11,"from","","",36,[[["idleargs",3]]]],[11,"from","","",37,[[["idleargs",3]]]],[11,"from","","",35,[[["closeargs",3]]]],[11,"from","","",37,[[]]],[11,"from","","",37,[[["loop",4]]]],[11,"into","","",37,[[],[["option",4],["input",4]]]],[11,"into","","",37,[[],[["option",4],["loop",4]]]],[11,"extend","input::keyboard","",4,[[["intoiterator",8]]]],[11,"clone","input::controller","",0,[[],["controllerbutton",3]]],[11,"clone","","",1,[[],["controllerhat",3]]],[11,"clone","","",2,[[],["controlleraxisargs",3]]],[11,"clone","input::keyboard","",4,[[],["modifierkey",3]]],[11,"clone","","",5,[[],["key",4]]],[11,"clone","input::mouse","",6,[[],["mousebutton",4]]],[11,"clone","input","",38,[[],["afterrenderargs",3]]],[11,"clone","","",17,[[],["buttonstate",4]]],[11,"clone","","",18,[[],["buttonargs",3]]],[11,"clone","","",39,[[],["closeargs",3]]],[11,"clone","","",15,[[],["idleargs",3]]],[11,"clone","","",23,[[],["renderargs",3]]],[11,"clone","","",26,[[],["touch",4]]],[11,"clone","","",27,[[],["touchargs",3]]],[11,"clone","","",29,[[],["updateargs",3]]],[11,"clone","","",31,[[],["eventid",3]]],[11,"clone","","",32,[[],["button",4]]],[11,"clone","","",33,[[],["motion",4]]],[11,"clone","","",34,[[],["hatstate",4]]],[11,"clone","","",35,[[],["input",4]]],[11,"clone","","",36,[[],["loop",4]]],[11,"clone","","",37,[[],["event",4]]],[11,"default","input::keyboard","",4,[[],["modifierkey",3]]],[11,"cmp","","",4,[[["modifierkey",3]],["ordering",4]]],[11,"cmp","","",5,[[["key",4]],["ordering",4]]],[11,"cmp","input::mouse","",6,[[["mousebutton",4]],["ordering",4]]],[11,"eq","input::controller","",0,[[["controllerbutton",3]],["bool",15]]],[11,"ne","","",0,[[["controllerbutton",3]],["bool",15]]],[11,"eq","","",1,[[["controllerhat",3]],["bool",15]]],[11,"ne","","",1,[[["controllerhat",3]],["bool",15]]],[11,"eq","","",2,[[["controlleraxisargs",3]],["bool",15]]],[11,"ne","","",2,[[["controlleraxisargs",3]],["bool",15]]],[11,"eq","input::keyboard","",4,[[["modifierkey",3]],["bool",15]]],[11,"ne","","",4,[[["modifierkey",3]],["bool",15]]],[11,"eq","","",5,[[["key",4]],["bool",15]]],[11,"eq","input::mouse","",6,[[["mousebutton",4]],["bool",15]]],[11,"eq","input","",38,[[["afterrenderargs",3]],["bool",15]]],[11,"eq","","",17,[[["buttonstate",4]],["bool",15]]],[11,"eq","","",18,[[["buttonargs",3]],["bool",15]]],[11,"ne","","",18,[[["buttonargs",3]],["bool",15]]],[11,"eq","","",39,[[["closeargs",3]],["bool",15]]],[11,"eq","","",15,[[["idleargs",3]],["bool",15]]],[11,"ne","","",15,[[["idleargs",3]],["bool",15]]],[11,"eq","","",23,[[["renderargs",3]],["bool",15]]],[11,"ne","","",23,[[["renderargs",3]],["bool",15]]],[11,"eq","","",26,[[["touch",4]],["bool",15]]],[11,"eq","","",27,[[["touchargs",3]],["bool",15]]],[11,"ne","","",27,[[["touchargs",3]],["bool",15]]],[11,"eq","","",29,[[["updateargs",3]],["bool",15]]],[11,"ne","","",29,[[["updateargs",3]],["bool",15]]],[11,"eq","","",31,[[["eventid",3]],["bool",15]]],[11,"ne","","",31,[[["eventid",3]],["bool",15]]],[11,"eq","","",32,[[["button",4]],["bool",15]]],[11,"ne","","",32,[[["button",4]],["bool",15]]],[11,"eq","","",33,[[["motion",4]],["bool",15]]],[11,"ne","","",33,[[["motion",4]],["bool",15]]],[11,"eq","","",34,[[["hatstate",4]],["bool",15]]],[11,"eq","","",35,[[["input",4]],["bool",15]]],[11,"ne","","",35,[[["input",4]],["bool",15]]],[11,"eq","","",36,[[["loop",4]],["bool",15]]],[11,"ne","","",36,[[["loop",4]],["bool",15]]],[11,"eq","","",37,[[["event",4]],["bool",15]]],[11,"partial_cmp","input::keyboard","",4,[[["modifierkey",3]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",5,[[["key",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","input::mouse","",6,[[["mousebutton",4]],[["ordering",4],["option",4]]]],[11,"fmt","input::controller","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","input::keyboard","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","input::mouse","",6,[[["formatter",3]],["result",6]]],[11,"fmt","input","",38,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",39,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"sub","input::keyboard","Returns the set difference of the two sets of flags.",4,[[["modifierkey",3]],["modifierkey",3]]],[11,"sub_assign","","Disables all flags enabled in the set.",4,[[["modifierkey",3]]]],[11,"not","","Returns the complement of this set of flags.",4,[[],["modifierkey",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",4,[[["modifierkey",3]],["modifierkey",3]]],[11,"bitor","","Returns the union of the two sets of flags.",4,[[["modifierkey",3]],["modifierkey",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags …",4,[[["modifierkey",3]],["modifierkey",3]]],[11,"bitand_assign","","Disables all flags disabled in the set.",4,[[["modifierkey",3]]]],[11,"bitor_assign","","Adds the set of flags.",4,[[["modifierkey",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",4,[[["modifierkey",3]]]],[11,"hash","input::controller","",0,[[]]],[11,"hash","","",1,[[]]],[11,"hash","input::keyboard","",4,[[]]],[11,"hash","","",5,[[]]],[11,"hash","input::mouse","",6,[[]]],[11,"hash","input","",17,[[]]],[11,"hash","","",18,[[]]],[11,"hash","","",32,[[]]],[11,"hash","","",34,[[]]],[11,"from_iter","input::keyboard","",4,[[["intoiterator",8]],["modifierkey",3]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"serialize","input::controller","",0,[[],["result",4]]],[11,"serialize","","",1,[[],["result",4]]],[11,"serialize","","",2,[[],["result",4]]],[11,"serialize","input::keyboard","",4,[[],["result",4]]],[11,"serialize","","",5,[[],["result",4]]],[11,"serialize","input::mouse","",6,[[],["result",4]]],[11,"serialize","input","",38,[[],["result",4]]],[11,"serialize","","",17,[[],["result",4]]],[11,"serialize","","",18,[[],["result",4]]],[11,"serialize","","",39,[[],["result",4]]],[11,"serialize","","",15,[[],["result",4]]],[11,"serialize","","",23,[[],["result",4]]],[11,"serialize","","",26,[[],["result",4]]],[11,"serialize","","",27,[[],["result",4]]],[11,"serialize","","",29,[[],["result",4]]],[11,"serialize","","",32,[[],["result",4]]],[11,"serialize","","",33,[[],["result",4]]],[11,"serialize","","",34,[[],["result",4]]],[11,"serialize","","",35,[[],["result",4]]],[11,"serialize","","",36,[[],["result",4]]],[11,"deserialize","input::controller","",0,[[],["result",4]]],[11,"deserialize","","",1,[[],["result",4]]],[11,"deserialize","","",2,[[],["result",4]]],[11,"deserialize","input::keyboard","",4,[[],["result",4]]],[11,"deserialize","","",5,[[],["result",4]]],[11,"deserialize","input::mouse","",6,[[],["result",4]]],[11,"deserialize","input","",38,[[],["result",4]]],[11,"deserialize","","",17,[[],["result",4]]],[11,"deserialize","","",18,[[],["result",4]]],[11,"deserialize","","",39,[[],["result",4]]],[11,"deserialize","","",15,[[],["result",4]]],[11,"deserialize","","",23,[[],["result",4]]],[11,"deserialize","","",26,[[],["result",4]]],[11,"deserialize","","",27,[[],["result",4]]],[11,"deserialize","","",29,[[],["result",4]]],[11,"deserialize","","",32,[[],["result",4]]],[11,"deserialize","","",33,[[],["result",4]]],[11,"deserialize","","",34,[[],["result",4]]],[11,"deserialize","","",35,[[],["result",4]]],[11,"deserialize","","",36,[[],["result",4]]],[11,"after_render_args","","Returns after render arguments.",11,[[],[["option",4],["afterrenderargs",3]]]],[11,"button_args","","Returns button arguments.",19,[[],[["option",4],["buttonargs",3]]]],[11,"press_args","","Returns press arguments.",20,[[],[["button",4],["option",4]]]],[11,"release_args","","Returns release arguments.",21,[[],[["button",4],["option",4]]]],[11,"close_args","","Returns close arguments.",12,[[],[["option",4],["closeargs",3]]]],[11,"cursor_args","","Returns cursor arguments.",13,[[],[["bool",15],["option",4]]]],[11,"focus_args","","Returns focus arguments.",14,[[],[["bool",15],["option",4]]]],[11,"from_dt","","Creates an update event with delta time.",16,[[["f64",15]],["option",4]]],[11,"idle_args","","Returns idle arguments.",16,[[],[["option",4],["idleargs",3]]]],[11,"viewport","","Returns viewport information filling entire render area.",23,[[],["viewport",3]]],[11,"render_args","","Returns render arguments.",24,[[],[["option",4],["renderargs",3]]]],[11,"resize_args","","Returns resize arguments.",22,[[],["option",4]]],[11,"text_args","","Returns text arguments.",25,[[],[["option",4],["string",3]]]],[11,"new","","Creates arguments for 2D touch.",27,[[["i64",15],["f64",15],["touch",4]],["touchargs",3]]],[11,"new_3d","","Creates arguments for 3D touch.",27,[[["i64",15],["touch",4]],["touchargs",3]]],[11,"position","","The position of the touch in 2D.",27,[[]]],[11,"position_3d","","The position of the touch in 3D.",27,[[]]],[11,"pressure","","The pressure magnitude, normalized 0..1.",27,[[],["f64",15]]],[11,"pressure_3d","","The pressure vector in 3D.",27,[[]]],[11,"touch_args","","Returns touch arguments.",28,[[],[["option",4],["touchargs",3]]]],[11,"from_dt","","Creates an update event with delta time.",30,[[["f64",15]],["option",4]]],[11,"update_args","","Returns update arguments.",30,[[],[["updateargs",3],["option",4]]]]],"p":[[3,"ControllerButton"],[3,"ControllerHat"],[3,"ControllerAxisArgs"],[8,"ControllerAxisEvent"],[3,"ModifierKey"],[4,"Key"],[4,"MouseButton"],[8,"MouseCursorEvent"],[8,"MouseRelativeEvent"],[8,"MouseScrollEvent"],[8,"GenericEvent"],[8,"AfterRenderEvent"],[8,"CloseEvent"],[8,"CursorEvent"],[8,"FocusEvent"],[3,"IdleArgs"],[8,"IdleEvent"],[4,"ButtonState"],[3,"ButtonArgs"],[8,"ButtonEvent"],[8,"PressEvent"],[8,"ReleaseEvent"],[8,"ResizeEvent"],[3,"RenderArgs"],[8,"RenderEvent"],[8,"TextEvent"],[4,"Touch"],[3,"TouchArgs"],[8,"TouchEvent"],[3,"UpdateArgs"],[8,"UpdateEvent"],[3,"EventId"],[4,"Button"],[4,"Motion"],[4,"HatState"],[4,"Input"],[4,"Loop"],[4,"Event"],[3,"AfterRenderArgs"],[3,"CloseArgs"]]},\
"interpolation":{"doc":"Interpolation algorithms.","i":[[8,"Ease","interpolation","",null,null],[10,"calc","","Calculate the eased value, normalized",0,[[["easefunction",4]]]],[10,"quadratic_in","","",0,[[]]],[10,"quadratic_out","","",0,[[]]],[10,"quadratic_in_out","","",0,[[]]],[10,"cubic_in","","",0,[[]]],[10,"cubic_out","","",0,[[]]],[10,"cubic_in_out","","",0,[[]]],[10,"quartic_in","","",0,[[]]],[10,"quartic_out","","",0,[[]]],[10,"quartic_in_out","","",0,[[]]],[10,"quintic_in","","",0,[[]]],[10,"quintic_out","","",0,[[]]],[10,"quintic_in_out","","",0,[[]]],[10,"sine_in","","",0,[[]]],[10,"sine_out","","",0,[[]]],[10,"sine_in_out","","",0,[[]]],[10,"circular_in","","",0,[[]]],[10,"circular_out","","",0,[[]]],[10,"circular_in_out","","",0,[[]]],[10,"exponential_in","","",0,[[]]],[10,"exponential_out","","",0,[[]]],[10,"exponential_in_out","","",0,[[]]],[10,"elastic_in","","",0,[[]]],[10,"elastic_out","","",0,[[]]],[10,"elastic_in_out","","",0,[[]]],[10,"back_in","","",0,[[]]],[10,"back_out","","",0,[[]]],[10,"back_in_out","","",0,[[]]],[10,"bounce_in","","",0,[[]]],[10,"bounce_out","","",0,[[]]],[10,"bounce_in_out","","",0,[[]]],[4,"EaseFunction","","",null,null],[13,"QuadraticIn","","",1,null],[13,"QuadraticOut","","",1,null],[13,"QuadraticInOut","","",1,null],[13,"CubicIn","","",1,null],[13,"CubicOut","","",1,null],[13,"CubicInOut","","",1,null],[13,"QuarticIn","","",1,null],[13,"QuarticOut","","",1,null],[13,"QuarticInOut","","",1,null],[13,"QuinticIn","","",1,null],[13,"QuinticOut","","",1,null],[13,"QuinticInOut","","",1,null],[13,"SineIn","","",1,null],[13,"SineOut","","",1,null],[13,"SineInOut","","",1,null],[13,"CircularIn","","",1,null],[13,"CircularOut","","",1,null],[13,"CircularInOut","","",1,null],[13,"ExponentialIn","","",1,null],[13,"ExponentialOut","","",1,null],[13,"ExponentialInOut","","",1,null],[13,"ElasticIn","","",1,null],[13,"ElasticOut","","",1,null],[13,"ElasticInOut","","",1,null],[13,"BackIn","","",1,null],[13,"BackOut","","",1,null],[13,"BackInOut","","",1,null],[13,"BounceIn","","",1,null],[13,"BounceOut","","",1,null],[13,"BounceInOut","","",1,null],[8,"Spatial","","Used for interpolation over spatial structures.",null,null],[16,"Scalar","","The scalar type.",2,null],[10,"add","","Add",2,[[]]],[10,"sub","","Subtract",2,[[]]],[10,"scale","","Scales with a scalar.",2,[[]]],[5,"lerp","","Performs linear interpolation. A linear interpolation …",null,[[],["spatial",8]]],[5,"quad_bez","","Performs quadratic beziér interpolation. This is done by …",null,[[],["spatial",8]]],[5,"cub_bez","","Performs cubic beziér interpolation. This is done by …",null,[[],["spatial",8]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"clone","","",1,[[],["easefunction",4]]],[11,"eq","","",1,[[["easefunction",4]],["bool",15]]]],"p":[[8,"Ease"],[4,"EaseFunction"],[8,"Spatial"]]},\
"jpeg_decoder":{"doc":"This crate contains a JPEG decoder.","i":[[3,"Decoder","jpeg_decoder","JPEG decoder",null,null],[3,"ImageInfo","","Represents metadata of an image.",null,null],[12,"width","","The width of the image, in pixels.",0,null],[12,"height","","The height of the image, in pixels.",0,null],[12,"pixel_format","","The pixel format of the image.",0,null],[4,"PixelFormat","","An enumeration over combinations of color spaces and bit …",null,null],[13,"L8","","Luminance (grayscale), 8 bits",1,null],[13,"RGB24","","RGB, 8 bits per channel",1,null],[13,"CMYK32","","CMYK, 8 bits per channel",1,null],[4,"Error","","Errors that can occur while decoding a JPEG image.",null,null],[13,"Format","","The image is not formatted properly. The string contains …",2,null],[13,"Unsupported","","The image makes use of a JPEG feature not (currently) …",2,null],[13,"Io","","An I/O error occurred while decoding the image.",2,null],[13,"Internal","","An internal error occurred while decoding the image.",2,null],[4,"UnsupportedFeature","","An enumeration over JPEG features (currently) unsupported …",null,null],[13,"Hierarchical","","Hierarchical JPEG.",3,null],[13,"Lossless","","Lossless JPEG.",3,null],[13,"ArithmeticEntropyCoding","","JPEG using arithmetic entropy coding instead of Huffman …",3,null],[13,"SamplePrecision","","Sample precision in bits. 8 bit sample precision is what …",3,null],[13,"ComponentCount","","Number of components in an image. 1, 3 and 4 components …",3,null],[13,"DNL","","An image can specify a zero height in the frame header …",3,null],[13,"SubsamplingRatio","","Subsampling ratio.",3,null],[13,"NonIntegerSubsamplingRatio","","A subsampling ratio not representable as an integer.",3,null],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",2,[[["ioerror",3]],["error",4]]],[11,"clone","","",1,[[],["pixelformat",4]]],[11,"clone","","",0,[[],["imageinfo",3]]],[11,"eq","","",1,[[["pixelformat",4]],["bool",15]]],[11,"eq","","",0,[[["imageinfo",3]],["bool",15]]],[11,"ne","","",0,[[["imageinfo",3]],["bool",15]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"description","","",2,[[],["str",15]]],[11,"cause","","",2,[[],[["option",4],["stderror",8]]]],[11,"new","","Creates a new <code>Decoder</code> using the reader <code>reader</code>.",4,[[],["decoder",3]]],[11,"info","","Returns metadata about the image.",4,[[],[["imageinfo",3],["option",4]]]],[11,"read_info","","Tries to read metadata from the image without decoding it.",4,[[],[["result",4],["error",4]]]],[11,"scale","","Configure the decoder to scale the image during decoding.",4,[[["u16",15]],[["result",4],["error",4]]]],[11,"decode","","Decodes the image and returns the decoded pixels if …",4,[[],[["vec",3],["error",4],["result",4]]]]],"p":[[3,"ImageInfo"],[4,"PixelFormat"],[4,"Error"],[4,"UnsupportedFeature"],[3,"Decoder"]]},\
"lazy_static":{"doc":"A macro for declaring lazily evaluated statics.","i":[[8,"LazyStatic","lazy_static","Support trait for enabling a few common operation on lazy …",null,null],[5,"initialize","","Takes a shared reference to a lazy static and initializes …",null,[[]]],[14,"lazy_static","","",null,null]],"p":[]},\
"libc":{"doc":"libc - Raw FFI bindings to platforms\' system libraries","i":[[5,"isalnum","libc","",null,null],[5,"isalpha","","",null,null],[5,"iscntrl","","",null,null],[5,"isdigit","","",null,null],[5,"isgraph","","",null,null],[5,"islower","","",null,null],[5,"isprint","","",null,null],[5,"ispunct","","",null,null],[5,"isspace","","",null,null],[5,"isupper","","",null,null],[5,"isxdigit","","",null,null],[5,"isblank","","",null,null],[5,"tolower","","",null,null],[5,"toupper","","",null,null],[5,"fopen","","",null,null],[5,"freopen","","",null,null],[5,"fflush","","",null,null],[5,"fclose","","",null,null],[5,"remove","","",null,null],[5,"rename","","",null,null],[5,"tmpfile","","",null,null],[5,"setvbuf","","",null,null],[5,"setbuf","","",null,null],[5,"getchar","","",null,null],[5,"putchar","","",null,null],[5,"fgetc","","",null,null],[5,"fgets","","",null,null],[5,"fputc","","",null,null],[5,"fputs","","",null,null],[5,"puts","","",null,null],[5,"ungetc","","",null,null],[5,"fread","","",null,null],[5,"fwrite","","",null,null],[5,"fseek","","",null,null],[5,"ftell","","",null,null],[5,"rewind","","",null,null],[5,"fgetpos","","",null,null],[5,"fsetpos","","",null,null],[5,"feof","","",null,null],[5,"ferror","","",null,null],[5,"perror","","",null,null],[5,"atoi","","",null,null],[5,"strtod","","",null,null],[5,"strtol","","",null,null],[5,"strtoul","","",null,null],[5,"calloc","","",null,null],[5,"malloc","","",null,null],[5,"realloc","","",null,null],[5,"free","","",null,null],[5,"abort","","",null,null],[5,"exit","","",null,null],[5,"_exit","","",null,null],[5,"atexit","","",null,null],[5,"system","","",null,null],[5,"getenv","","",null,null],[5,"strcpy","","",null,null],[5,"strncpy","","",null,null],[5,"strcat","","",null,null],[5,"strncat","","",null,null],[5,"strcmp","","",null,null],[5,"strncmp","","",null,null],[5,"strcoll","","",null,null],[5,"strchr","","",null,null],[5,"strrchr","","",null,null],[5,"strspn","","",null,null],[5,"strcspn","","",null,null],[5,"strdup","","",null,null],[5,"strpbrk","","",null,null],[5,"strstr","","",null,null],[5,"strcasecmp","","",null,null],[5,"strncasecmp","","",null,null],[5,"strlen","","",null,null],[5,"strnlen","","",null,null],[5,"strerror","","",null,null],[5,"strtok","","",null,null],[5,"strxfrm","","",null,null],[5,"wcslen","","",null,null],[5,"wcstombs","","",null,null],[5,"memchr","","",null,null],[5,"memcmp","","",null,null],[5,"memcpy","","",null,null],[5,"memmove","","",null,null],[5,"memset","","",null,null],[5,"getpwnam","","",null,null],[5,"getpwuid","","",null,null],[5,"fprintf","","",null,null],[5,"printf","","",null,null],[5,"snprintf","","",null,null],[5,"sprintf","","",null,null],[5,"fscanf","","",null,null],[5,"scanf","","",null,null],[5,"sscanf","","",null,null],[5,"getchar_unlocked","","",null,null],[5,"putchar_unlocked","","",null,null],[5,"socket","","",null,null],[5,"connect","","",null,null],[5,"listen","","",null,null],[5,"accept","","",null,null],[5,"getpeername","","",null,null],[5,"getsockname","","",null,null],[5,"setsockopt","","",null,null],[5,"socketpair","","",null,null],[5,"sendto","","",null,null],[5,"shutdown","","",null,null],[5,"chmod","","",null,null],[5,"fchmod","","",null,null],[5,"fstat","","",null,null],[5,"mkdir","","",null,null],[5,"stat","","",null,null],[5,"pclose","","",null,null],[5,"fdopen","","",null,null],[5,"fileno","","",null,null],[5,"open","","",null,null],[5,"creat","","",null,null],[5,"fcntl","","",null,null],[5,"opendir","","",null,null],[5,"readdir","","",null,null],[5,"closedir","","",null,null],[5,"rewinddir","","",null,null],[5,"fchmodat","","",null,null],[5,"fchown","","",null,null],[5,"fchownat","","",null,null],[5,"fstatat","","",null,null],[5,"linkat","","",null,null],[5,"renameat","","",null,null],[5,"symlinkat","","",null,null],[5,"unlinkat","","",null,null],[5,"access","","",null,null],[5,"alarm","","",null,null],[5,"chdir","","",null,null],[5,"fchdir","","",null,null],[5,"chown","","",null,null],[5,"lchown","","",null,null],[5,"close","","",null,null],[5,"dup","","",null,null],[5,"dup2","","",null,null],[5,"execl","","",null,null],[5,"execle","","",null,null],[5,"execlp","","",null,null],[5,"execv","","",null,null],[5,"execve","","",null,null],[5,"execvp","","",null,null],[5,"fork","","",null,null],[5,"fpathconf","","",null,null],[5,"getcwd","","",null,null],[5,"getegid","","",null,null],[5,"geteuid","","",null,null],[5,"getgid","","",null,null],[5,"getgroups","","",null,null],[5,"getlogin","","",null,null],[5,"getopt","","",null,null],[5,"getpgid","","",null,null],[5,"getpgrp","","",null,null],[5,"getpid","","",null,null],[5,"getppid","","",null,null],[5,"getuid","","",null,null],[5,"isatty","","",null,null],[5,"link","","",null,null],[5,"lseek","","",null,null],[5,"pathconf","","",null,null],[5,"pipe","","",null,null],[5,"posix_memalign","","",null,null],[5,"read","","",null,null],[5,"rmdir","","",null,null],[5,"seteuid","","",null,null],[5,"setegid","","",null,null],[5,"setgid","","",null,null],[5,"setpgid","","",null,null],[5,"setsid","","",null,null],[5,"setuid","","",null,null],[5,"sleep","","",null,null],[5,"nanosleep","","",null,null],[5,"tcgetpgrp","","",null,null],[5,"tcsetpgrp","","",null,null],[5,"ttyname","","",null,null],[5,"ttyname_r","","",null,null],[5,"unlink","","",null,null],[5,"wait","","",null,null],[5,"waitpid","","",null,null],[5,"write","","",null,null],[5,"pread","","",null,null],[5,"pwrite","","",null,null],[5,"umask","","",null,null],[5,"utime","","",null,null],[5,"kill","","",null,null],[5,"killpg","","",null,null],[5,"mlock","","",null,null],[5,"munlock","","",null,null],[5,"mlockall","","",null,null],[5,"munlockall","","",null,null],[5,"mmap","","",null,null],[5,"munmap","","",null,null],[5,"if_nametoindex","","",null,null],[5,"if_indextoname","","",null,null],[5,"lstat","","",null,null],[5,"fsync","","",null,null],[5,"setenv","","",null,null],[5,"unsetenv","","",null,null],[5,"symlink","","",null,null],[5,"ftruncate","","",null,null],[5,"signal","","",null,null],[5,"getrusage","","",null,null],[5,"realpath","","",null,null],[5,"flock","","",null,null],[5,"times","","",null,null],[5,"pthread_self","","",null,null],[5,"pthread_join","","",null,null],[5,"pthread_exit","","",null,null],[5,"pthread_attr_init","","",null,null],[5,"pthread_attr_destroy","","",null,null],[5,"pthread_attr_setstacksize","","",null,null],[5,"pthread_attr_setdetachstate","","",null,null],[5,"pthread_detach","","",null,null],[5,"sched_yield","","",null,null],[5,"pthread_key_create","","",null,null],[5,"pthread_key_delete","","",null,null],[5,"pthread_getspecific","","",null,null],[5,"pthread_setspecific","","",null,null],[5,"pthread_mutex_init","","",null,null],[5,"pthread_mutex_destroy","","",null,null],[5,"pthread_mutex_lock","","",null,null],[5,"pthread_mutex_trylock","","",null,null],[5,"pthread_mutex_unlock","","",null,null],[5,"pthread_mutexattr_init","","",null,null],[5,"pthread_mutexattr_destroy","","",null,null],[5,"pthread_mutexattr_settype","","",null,null],[5,"pthread_cond_init","","",null,null],[5,"pthread_cond_wait","","",null,null],[5,"pthread_cond_timedwait","","",null,null],[5,"pthread_cond_signal","","",null,null],[5,"pthread_cond_broadcast","","",null,null],[5,"pthread_cond_destroy","","",null,null],[5,"pthread_condattr_init","","",null,null],[5,"pthread_condattr_destroy","","",null,null],[5,"pthread_rwlock_init","","",null,null],[5,"pthread_rwlock_destroy","","",null,null],[5,"pthread_rwlock_rdlock","","",null,null],[5,"pthread_rwlock_tryrdlock","","",null,null],[5,"pthread_rwlock_wrlock","","",null,null],[5,"pthread_rwlock_trywrlock","","",null,null],[5,"pthread_rwlock_unlock","","",null,null],[5,"pthread_rwlockattr_init","","",null,null],[5,"pthread_rwlockattr_destroy","","",null,null],[5,"getsockopt","","",null,null],[5,"raise","","",null,null],[5,"sigaction","","",null,null],[5,"utimes","","",null,null],[5,"dlopen","","",null,null],[5,"dlerror","","",null,null],[5,"dlsym","","",null,null],[5,"dlclose","","",null,null],[5,"dladdr","","",null,null],[5,"getaddrinfo","","",null,null],[5,"freeaddrinfo","","",null,null],[5,"gai_strerror","","",null,null],[5,"res_init","","",null,null],[5,"gmtime_r","","",null,null],[5,"localtime_r","","",null,null],[5,"mktime","","",null,null],[5,"time","","",null,null],[5,"gmtime","","",null,null],[5,"localtime","","",null,null],[5,"difftime","","",null,null],[5,"mknod","","",null,null],[5,"gethostname","","",null,null],[5,"getservbyname","","",null,null],[5,"getprotobyname","","",null,null],[5,"getprotobynumber","","",null,null],[5,"chroot","","",null,null],[5,"usleep","","",null,null],[5,"send","","",null,null],[5,"recv","","",null,null],[5,"putenv","","",null,null],[5,"poll","","",null,null],[5,"select","","",null,null],[5,"setlocale","","",null,null],[5,"localeconv","","",null,null],[5,"sem_wait","","",null,null],[5,"sem_trywait","","",null,null],[5,"sem_post","","",null,null],[5,"statvfs","","",null,null],[5,"fstatvfs","","",null,null],[5,"readlink","","",null,null],[5,"sigemptyset","","",null,null],[5,"sigaddset","","",null,null],[5,"sigfillset","","",null,null],[5,"sigdelset","","",null,null],[5,"sigismember","","",null,null],[5,"sigprocmask","","",null,null],[5,"sigpending","","",null,null],[5,"timegm","","",null,null],[5,"sysconf","","",null,null],[5,"mkfifo","","",null,null],[5,"pselect","","",null,null],[5,"fseeko","","",null,null],[5,"ftello","","",null,null],[5,"tcdrain","","",null,null],[5,"cfgetispeed","","",null,null],[5,"cfgetospeed","","",null,null],[5,"cfsetispeed","","",null,null],[5,"cfsetospeed","","",null,null],[5,"tcgetattr","","",null,null],[5,"tcsetattr","","",null,null],[5,"tcflow","","",null,null],[5,"tcflush","","",null,null],[5,"tcgetsid","","",null,null],[5,"tcsendbreak","","",null,null],[5,"mkstemp","","",null,null],[5,"mkdtemp","","",null,null],[5,"tmpnam","","",null,null],[5,"openlog","","",null,null],[5,"closelog","","",null,null],[5,"setlogmask","","",null,null],[5,"syslog","","",null,null],[5,"nice","","",null,null],[5,"grantpt","","",null,null],[5,"posix_openpt","","",null,null],[5,"ptsname","","",null,null],[5,"unlockpt","","",null,null],[5,"strcasestr","","",null,null],[5,"getline","","",null,null],[5,"getsid","","",null,null],[5,"truncate","","",null,null],[5,"pause","","",null,null],[5,"readlinkat","","",null,null],[5,"mkdirat","","",null,null],[5,"openat","","",null,null],[5,"fdopendir","","",null,null],[5,"readdir_r","","The 64-bit libc on Solaris and illumos only has …",null,null],[5,"cfmakeraw","","",null,null],[5,"cfsetspeed","","",null,null],[5,"sem_destroy","","",null,null],[5,"sem_init","","",null,null],[5,"fdatasync","","",null,null],[5,"mincore","","",null,null],[5,"clock_getres","","",null,null],[5,"clock_gettime","","",null,null],[5,"clock_settime","","",null,null],[5,"dirfd","","",null,null],[5,"pthread_getattr_np","","",null,null],[5,"pthread_attr_getstack","","",null,null],[5,"memalign","","",null,null],[5,"setgroups","","",null,null],[5,"pipe2","","",null,null],[5,"statfs","","",null,null],[5,"statfs64","","",null,null],[5,"fstatfs","","",null,null],[5,"fstatfs64","","",null,null],[5,"statvfs64","","",null,null],[5,"fstatvfs64","","",null,null],[5,"memrchr","","",null,null],[5,"posix_fadvise","","",null,null],[5,"futimens","","",null,null],[5,"utimensat","","",null,null],[5,"duplocale","","",null,null],[5,"freelocale","","",null,null],[5,"newlocale","","",null,null],[5,"uselocale","","",null,null],[5,"creat64","","",null,null],[5,"fstat64","","",null,null],[5,"fstatat64","","",null,null],[5,"ftruncate64","","",null,null],[5,"lseek64","","",null,null],[5,"lstat64","","",null,null],[5,"mmap64","","",null,null],[5,"open64","","",null,null],[5,"openat64","","",null,null],[5,"pread64","","",null,null],[5,"preadv64","","",null,null],[5,"pwrite64","","",null,null],[5,"pwritev64","","",null,null],[5,"readdir64","","",null,null],[5,"readdir64_r","","",null,null],[5,"stat64","","",null,null],[5,"truncate64","","",null,null],[5,"mknodat","","",null,null],[5,"pthread_condattr_getclock","","",null,null],[5,"pthread_condattr_setclock","","",null,null],[5,"pthread_condattr_setpshared","","",null,null],[5,"accept4","","",null,null],[5,"pthread_mutexattr_setpshared","","",null,null],[5,"pthread_rwlockattr_getpshared","","",null,null],[5,"pthread_rwlockattr_setpshared","","",null,null],[5,"ptsname_r","","",null,null],[5,"clearenv","","",null,null],[5,"waitid","","",null,null],[5,"setreuid","","",null,null],[5,"setregid","","",null,null],[5,"getresuid","","",null,null],[5,"getresgid","","",null,null],[5,"acct","","",null,null],[5,"brk","","",null,null],[5,"sbrk","","",null,null],[5,"vfork","","",null,null],[5,"setresgid","","",null,null],[5,"setresuid","","",null,null],[5,"wait4","","",null,null],[5,"openpty","","",null,null],[5,"forkpty","","",null,null],[5,"login_tty","","",null,null],[5,"execvpe","","",null,null],[5,"fexecve","","",null,null],[5,"getifaddrs","","",null,null],[5,"freeifaddrs","","",null,null],[5,"bind","","",null,null],[5,"writev","","",null,null],[5,"readv","","",null,null],[5,"sendmsg","","",null,null],[5,"recvmsg","","",null,null],[5,"uname","","",null,null],[5,"strerror_r","","",null,null],[5,"abs","","",null,null],[5,"atof","","",null,null],[5,"labs","","",null,null],[5,"rand","","",null,null],[5,"srand","","",null,null],[5,"aio_read","","",null,null],[5,"aio_write","","",null,null],[5,"aio_fsync","","",null,null],[5,"aio_error","","",null,null],[5,"aio_return","","",null,null],[5,"aio_suspend","","",null,null],[5,"aio_cancel","","",null,null],[5,"lio_listio","","",null,null],[5,"lutimes","","",null,null],[5,"setpwent","","",null,null],[5,"endpwent","","",null,null],[5,"getpwent","","",null,null],[5,"setgrent","","",null,null],[5,"endgrent","","",null,null],[5,"getgrent","","",null,null],[5,"setspent","","",null,null],[5,"endspent","","",null,null],[5,"getspent","","",null,null],[5,"getspnam","","",null,null],[5,"shm_open","","",null,null],[5,"shmget","","",null,null],[5,"shmat","","",null,null],[5,"shmdt","","",null,null],[5,"shmctl","","",null,null],[5,"ftok","","",null,null],[5,"semget","","",null,null],[5,"semop","","",null,null],[5,"semctl","","",null,null],[5,"msgctl","","",null,null],[5,"msgget","","",null,null],[5,"msgrcv","","",null,null],[5,"msgsnd","","",null,null],[5,"mprotect","","",null,null],[5,"__errno_location","","",null,null],[5,"fopen64","","",null,null],[5,"freopen64","","",null,null],[5,"tmpfile64","","",null,null],[5,"fgetpos64","","",null,null],[5,"fsetpos64","","",null,null],[5,"fseeko64","","",null,null],[5,"ftello64","","",null,null],[5,"fallocate","","",null,null],[5,"fallocate64","","",null,null],[5,"posix_fallocate","","",null,null],[5,"posix_fallocate64","","",null,null],[5,"readahead","","",null,null],[5,"getxattr","","",null,null],[5,"lgetxattr","","",null,null],[5,"fgetxattr","","",null,null],[5,"setxattr","","",null,null],[5,"lsetxattr","","",null,null],[5,"fsetxattr","","",null,null],[5,"listxattr","","",null,null],[5,"llistxattr","","",null,null],[5,"flistxattr","","",null,null],[5,"removexattr","","",null,null],[5,"lremovexattr","","",null,null],[5,"fremovexattr","","",null,null],[5,"signalfd","","",null,null],[5,"timerfd_create","","",null,null],[5,"timerfd_gettime","","",null,null],[5,"timerfd_settime","","",null,null],[5,"pwritev","","",null,null],[5,"preadv","","",null,null],[5,"quotactl","","",null,null],[5,"mq_open","","",null,null],[5,"mq_close","","",null,null],[5,"mq_unlink","","",null,null],[5,"mq_receive","","",null,null],[5,"mq_timedreceive","","",null,null],[5,"mq_send","","",null,null],[5,"mq_timedsend","","",null,null],[5,"mq_getattr","","",null,null],[5,"mq_setattr","","",null,null],[5,"epoll_pwait","","",null,null],[5,"dup3","","",null,null],[5,"mkostemp","","",null,null],[5,"mkostemps","","",null,null],[5,"sigtimedwait","","",null,null],[5,"sigwaitinfo","","",null,null],[5,"nl_langinfo_l","","",null,null],[5,"getnameinfo","","",null,null],[5,"pthread_setschedprio","","",null,null],[5,"getloadavg","","",null,null],[5,"process_vm_readv","","",null,null],[5,"process_vm_writev","","",null,null],[5,"reboot","","",null,null],[5,"setfsgid","","",null,null],[5,"setfsuid","","",null,null],[5,"mkfifoat","","",null,null],[5,"if_nameindex","","",null,null],[5,"if_freenameindex","","",null,null],[5,"sync_file_range","","",null,null],[5,"mremap","","",null,null],[5,"glob","","",null,null],[5,"globfree","","",null,null],[5,"posix_madvise","","",null,null],[5,"shm_unlink","","",null,null],[5,"seekdir","","",null,null],[5,"telldir","","",null,null],[5,"madvise","","",null,null],[5,"msync","","",null,null],[5,"remap_file_pages","","",null,null],[5,"recvfrom","","",null,null],[5,"mkstemps","","",null,null],[5,"futimes","","",null,null],[5,"nl_langinfo","","",null,null],[5,"getdomainname","","",null,null],[5,"setdomainname","","",null,null],[5,"vhangup","","",null,null],[5,"sync","","",null,null],[5,"syscall","","",null,null],[5,"sched_getaffinity","","",null,null],[5,"sched_setaffinity","","",null,null],[5,"epoll_create","","",null,null],[5,"epoll_create1","","",null,null],[5,"epoll_wait","","",null,null],[5,"epoll_ctl","","",null,null],[5,"pthread_getschedparam","","",null,null],[5,"unshare","","",null,null],[5,"umount","","",null,null],[5,"sched_get_priority_max","","",null,null],[5,"tee","","",null,null],[5,"settimeofday","","",null,null],[5,"splice","","",null,null],[5,"eventfd","","",null,null],[5,"sched_rr_get_interval","","",null,null],[5,"sem_timedwait","","",null,null],[5,"sem_getvalue","","",null,null],[5,"sched_setparam","","",null,null],[5,"setns","","",null,null],[5,"swapoff","","",null,null],[5,"vmsplice","","",null,null],[5,"mount","","",null,null],[5,"personality","","",null,null],[5,"prctl","","",null,null],[5,"sched_getparam","","",null,null],[5,"ppoll","","",null,null],[5,"pthread_mutex_timedlock","","",null,null],[5,"clone","","",null,null],[5,"sched_getscheduler","","",null,null],[5,"clock_nanosleep","","",null,null],[5,"pthread_attr_getguardsize","","",null,null],[5,"sethostname","","",null,null],[5,"sched_get_priority_min","","",null,null],[5,"pthread_condattr_getpshared","","",null,null],[5,"sysinfo","","",null,null],[5,"umount2","","",null,null],[5,"pthread_setschedparam","","",null,null],[5,"swapon","","",null,null],[5,"sched_setscheduler","","",null,null],[5,"sendfile","","",null,null],[5,"sigsuspend","","",null,null],[5,"getgrgid_r","","",null,null],[5,"sigaltstack","","",null,null],[5,"sem_close","","",null,null],[5,"getdtablesize","","",null,null],[5,"getgrnam_r","","",null,null],[5,"initgroups","","",null,null],[5,"pthread_sigmask","","",null,null],[5,"sem_open","","",null,null],[5,"getgrnam","","",null,null],[5,"pthread_cancel","","",null,null],[5,"pthread_kill","","",null,null],[5,"sem_unlink","","",null,null],[5,"daemon","","",null,null],[5,"getpwnam_r","","",null,null],[5,"getpwuid_r","","",null,null],[5,"sigwait","","",null,null],[5,"pthread_atfork","","",null,null],[5,"getgrgid","","",null,null],[5,"getgrouplist","","",null,null],[5,"pthread_mutexattr_getpshared","","",null,null],[5,"popen","","",null,null],[5,"faccessat","","",null,null],[5,"pthread_create","","",null,null],[5,"dl_iterate_phdr","","",null,null],[5,"setmntent","","",null,null],[5,"getmntent","","",null,null],[5,"addmntent","","",null,null],[5,"endmntent","","",null,null],[5,"hasmntopt","","",null,null],[5,"posix_spawn","","",null,null],[5,"posix_spawnp","","",null,null],[5,"posix_spawnattr_init","","",null,null],[5,"posix_spawnattr_destroy","","",null,null],[5,"posix_spawnattr_getsigdefault","","",null,null],[5,"posix_spawnattr_setsigdefault","","",null,null],[5,"posix_spawnattr_getsigmask","","",null,null],[5,"posix_spawnattr_setsigmask","","",null,null],[5,"posix_spawnattr_getflags","","",null,null],[5,"posix_spawnattr_setflags","","",null,null],[5,"posix_spawnattr_getpgroup","","",null,null],[5,"posix_spawnattr_setpgroup","","",null,null],[5,"posix_spawnattr_getschedpolicy","","",null,null],[5,"posix_spawnattr_setschedpolicy","","",null,null],[5,"posix_spawnattr_getschedparam","","",null,null],[5,"posix_spawnattr_setschedparam","","",null,null],[5,"posix_spawn_file_actions_init","","",null,null],[5,"posix_spawn_file_actions_destroy","","",null,null],[5,"posix_spawn_file_actions_addopen","","",null,null],[5,"posix_spawn_file_actions_addclose","","",null,null],[5,"posix_spawn_file_actions_adddup2","","",null,null],[5,"fread_unlocked","","",null,null],[5,"inotify_rm_watch","","",null,null],[5,"inotify_init","","",null,null],[5,"inotify_init1","","",null,null],[5,"inotify_add_watch","","",null,null],[5,"sendmmsg","","",null,null],[5,"recvmmsg","","",null,null],[5,"getrlimit64","","",null,null],[5,"setrlimit64","","",null,null],[5,"getrlimit","","",null,null],[5,"setrlimit","","",null,null],[5,"prlimit","","",null,null],[5,"prlimit64","","",null,null],[5,"utmpname","","",null,null],[5,"utmpxname","","",null,null],[5,"getutxent","","",null,null],[5,"getutxid","","",null,null],[5,"getutxline","","",null,null],[5,"pututxline","","",null,null],[5,"setutxent","","",null,null],[5,"endutxent","","",null,null],[5,"getpt","","",null,null],[5,"mallopt","","",null,null],[5,"gettimeofday","","",null,null],[5,"statx","","",null,null],[5,"getrandom","","",null,null],[5,"ioctl","","",null,null],[5,"backtrace","","",null,null],[5,"glob64","","",null,null],[5,"globfree64","","",null,null],[5,"ptrace","","",null,null],[5,"pthread_attr_getaffinity_np","","",null,null],[5,"pthread_attr_setaffinity_np","","",null,null],[5,"getpriority","","",null,null],[5,"setpriority","","",null,null],[5,"pthread_getaffinity_np","","",null,null],[5,"pthread_setaffinity_np","","",null,null],[5,"pthread_rwlockattr_getkind_np","","",null,null],[5,"pthread_rwlockattr_setkind_np","","",null,null],[5,"sched_getcpu","","",null,null],[5,"mallinfo","","",null,null],[5,"malloc_usable_size","","",null,null],[5,"getauxval","","",null,null],[5,"getpwent_r","","",null,null],[5,"getgrent_r","","",null,null],[5,"pthread_getname_np","","",null,null],[5,"pthread_setname_np","","",null,null],[5,"getcontext","","",null,null],[5,"setcontext","","",null,null],[5,"makecontext","","",null,null],[5,"swapcontext","","",null,null],[5,"iopl","","",null,null],[5,"ioperm","","",null,null],[5,"sysctl","","",null,null],[6,"int8_t","","",null,null],[6,"int16_t","","",null,null],[6,"int32_t","","",null,null],[6,"int64_t","","",null,null],[6,"uint8_t","","",null,null],[6,"uint16_t","","",null,null],[6,"uint32_t","","",null,null],[6,"uint64_t","","",null,null],[6,"c_schar","","",null,null],[6,"c_uchar","","",null,null],[6,"c_short","","",null,null],[6,"c_ushort","","",null,null],[6,"c_int","","",null,null],[6,"c_uint","","",null,null],[6,"c_float","","",null,null],[6,"c_double","","",null,null],[6,"c_longlong","","",null,null],[6,"c_ulonglong","","",null,null],[6,"intmax_t","","",null,null],[6,"uintmax_t","","",null,null],[6,"size_t","","",null,null],[6,"ptrdiff_t","","",null,null],[6,"intptr_t","","",null,null],[6,"uintptr_t","","",null,null],[6,"ssize_t","","",null,null],[6,"pid_t","","",null,null],[6,"uid_t","","",null,null],[6,"gid_t","","",null,null],[6,"in_addr_t","","",null,null],[6,"in_port_t","","",null,null],[6,"sighandler_t","","",null,null],[6,"cc_t","","",null,null],[4,"DIR","","",null,null],[6,"locale_t","","",null,null],[3,"group","","",null,null],[12,"gr_name","","",0,null],[12,"gr_passwd","","",0,null],[12,"gr_gid","","",0,null],[12,"gr_mem","","",0,null],[3,"utimbuf","","",null,null],[12,"actime","","",1,null],[12,"modtime","","",1,null],[3,"timeval","","",null,null],[12,"tv_sec","","",2,null],[12,"tv_usec","","",2,null],[3,"timespec","","",null,null],[12,"tv_sec","","",3,null],[12,"tv_nsec","","",3,null],[3,"rlimit","","",null,null],[12,"rlim_cur","","",4,null],[12,"rlim_max","","",4,null],[3,"rusage","","",null,null],[12,"ru_utime","","",5,null],[12,"ru_stime","","",5,null],[12,"ru_maxrss","","",5,null],[12,"ru_ixrss","","",5,null],[12,"ru_idrss","","",5,null],[12,"ru_isrss","","",5,null],[12,"ru_minflt","","",5,null],[12,"ru_majflt","","",5,null],[12,"ru_nswap","","",5,null],[12,"ru_inblock","","",5,null],[12,"ru_oublock","","",5,null],[12,"ru_msgsnd","","",5,null],[12,"ru_msgrcv","","",5,null],[12,"ru_nsignals","","",5,null],[12,"ru_nvcsw","","",5,null],[12,"ru_nivcsw","","",5,null],[3,"ipv6_mreq","","",null,null],[12,"ipv6mr_multiaddr","","",6,null],[12,"ipv6mr_interface","","",6,null],[3,"hostent","","",null,null],[12,"h_name","","",7,null],[12,"h_aliases","","",7,null],[12,"h_addrtype","","",7,null],[12,"h_length","","",7,null],[12,"h_addr_list","","",7,null],[3,"iovec","","",null,null],[12,"iov_base","","",8,null],[12,"iov_len","","",8,null],[3,"pollfd","","",null,null],[12,"fd","","",9,null],[12,"events","","",9,null],[12,"revents","","",9,null],[3,"winsize","","",null,null],[12,"ws_row","","",10,null],[12,"ws_col","","",10,null],[12,"ws_xpixel","","",10,null],[12,"ws_ypixel","","",10,null],[3,"linger","","",null,null],[12,"l_onoff","","",11,null],[12,"l_linger","","",11,null],[3,"sigval","","",null,null],[12,"sival_ptr","","",12,null],[3,"itimerval","","",null,null],[12,"it_interval","","",13,null],[12,"it_value","","",13,null],[3,"tms","","",null,null],[12,"tms_utime","","",14,null],[12,"tms_stime","","",14,null],[12,"tms_cutime","","",14,null],[12,"tms_cstime","","",14,null],[3,"servent","","",null,null],[12,"s_name","","",15,null],[12,"s_aliases","","",15,null],[12,"s_port","","",15,null],[12,"s_proto","","",15,null],[3,"protoent","","",null,null],[12,"p_name","","",16,null],[12,"p_aliases","","",16,null],[12,"p_proto","","",16,null],[17,"INT_MIN","","",null,null],[17,"INT_MAX","","",null,null],[17,"SIG_DFL","","",null,null],[17,"SIG_IGN","","",null,null],[17,"SIG_ERR","","",null,null],[17,"DT_UNKNOWN","","",null,null],[17,"DT_FIFO","","",null,null],[17,"DT_CHR","","",null,null],[17,"DT_DIR","","",null,null],[17,"DT_BLK","","",null,null],[17,"DT_REG","","",null,null],[17,"DT_LNK","","",null,null],[17,"DT_SOCK","","",null,null],[17,"FD_CLOEXEC","","",null,null],[17,"USRQUOTA","","",null,null],[17,"GRPQUOTA","","",null,null],[17,"SIGIOT","","",null,null],[17,"S_ISUID","","",null,null],[17,"S_ISGID","","",null,null],[17,"S_ISVTX","","",null,null],[17,"IF_NAMESIZE","","",null,null],[17,"IFNAMSIZ","","",null,null],[17,"LOG_EMERG","","",null,null],[17,"LOG_ALERT","","",null,null],[17,"LOG_CRIT","","",null,null],[17,"LOG_ERR","","",null,null],[17,"LOG_WARNING","","",null,null],[17,"LOG_NOTICE","","",null,null],[17,"LOG_INFO","","",null,null],[17,"LOG_DEBUG","","",null,null],[17,"LOG_KERN","","",null,null],[17,"LOG_USER","","",null,null],[17,"LOG_MAIL","","",null,null],[17,"LOG_DAEMON","","",null,null],[17,"LOG_AUTH","","",null,null],[17,"LOG_SYSLOG","","",null,null],[17,"LOG_LPR","","",null,null],[17,"LOG_NEWS","","",null,null],[17,"LOG_UUCP","","",null,null],[17,"LOG_LOCAL0","","",null,null],[17,"LOG_LOCAL1","","",null,null],[17,"LOG_LOCAL2","","",null,null],[17,"LOG_LOCAL3","","",null,null],[17,"LOG_LOCAL4","","",null,null],[17,"LOG_LOCAL5","","",null,null],[17,"LOG_LOCAL6","","",null,null],[17,"LOG_LOCAL7","","",null,null],[17,"LOG_PID","","",null,null],[17,"LOG_CONS","","",null,null],[17,"LOG_ODELAY","","",null,null],[17,"LOG_NDELAY","","",null,null],[17,"LOG_NOWAIT","","",null,null],[17,"LOG_PRIMASK","","",null,null],[17,"LOG_FACMASK","","",null,null],[17,"PRIO_PROCESS","","",null,null],[17,"PRIO_PGRP","","",null,null],[17,"PRIO_USER","","",null,null],[17,"PRIO_MIN","","",null,null],[17,"PRIO_MAX","","",null,null],[17,"IPPROTO_ICMP","","",null,null],[17,"IPPROTO_ICMPV6","","",null,null],[17,"IPPROTO_TCP","","",null,null],[17,"IPPROTO_UDP","","",null,null],[17,"IPPROTO_IP","","",null,null],[17,"IPPROTO_IPV6","","",null,null],[17,"INADDR_LOOPBACK","","",null,null],[17,"INADDR_ANY","","",null,null],[17,"INADDR_BROADCAST","","",null,null],[17,"INADDR_NONE","","",null,null],[17,"ARPOP_REQUEST","","",null,null],[17,"ARPOP_REPLY","","",null,null],[17,"ATF_COM","","",null,null],[17,"ATF_PERM","","",null,null],[17,"ATF_PUBL","","",null,null],[17,"ATF_USETRAILERS","","",null,null],[4,"FILE","","",null,null],[4,"fpos_t","","",null,null],[6,"sa_family_t","","",null,null],[6,"speed_t","","",null,null],[6,"tcflag_t","","",null,null],[6,"clockid_t","","",null,null],[6,"key_t","","",null,null],[6,"id_t","","",null,null],[4,"timezone","","",null,null],[3,"in_addr","","",null,null],[12,"s_addr","","",17,null],[3,"ip_mreq","","",null,null],[12,"imr_multiaddr","","",18,null],[12,"imr_interface","","",18,null],[3,"ip_mreq_source","","",null,null],[12,"imr_multiaddr","","",19,null],[12,"imr_interface","","",19,null],[12,"imr_sourceaddr","","",19,null],[3,"sockaddr","","",null,null],[12,"sa_family","","",20,null],[12,"sa_data","","",20,null],[3,"sockaddr_in","","",null,null],[12,"sin_family","","",21,null],[12,"sin_port","","",21,null],[12,"sin_addr","","",21,null],[12,"sin_zero","","",21,null],[3,"sockaddr_in6","","",null,null],[12,"sin6_family","","",22,null],[12,"sin6_port","","",22,null],[12,"sin6_flowinfo","","",22,null],[12,"sin6_addr","","",22,null],[12,"sin6_scope_id","","",22,null],[3,"addrinfo","","",null,null],[12,"ai_flags","","",23,null],[12,"ai_family","","",23,null],[12,"ai_socktype","","",23,null],[12,"ai_protocol","","",23,null],[12,"ai_addrlen","","",23,null],[12,"ai_addr","","",23,null],[12,"ai_canonname","","",23,null],[12,"ai_next","","",23,null],[3,"sockaddr_ll","","",null,null],[12,"sll_family","","",24,null],[12,"sll_protocol","","",24,null],[12,"sll_ifindex","","",24,null],[12,"sll_hatype","","",24,null],[12,"sll_pkttype","","",24,null],[12,"sll_halen","","",24,null],[12,"sll_addr","","",24,null],[3,"fd_set","","",null,null],[3,"tm","","",null,null],[12,"tm_sec","","",25,null],[12,"tm_min","","",25,null],[12,"tm_hour","","",25,null],[12,"tm_mday","","",25,null],[12,"tm_mon","","",25,null],[12,"tm_year","","",25,null],[12,"tm_wday","","",25,null],[12,"tm_yday","","",25,null],[12,"tm_isdst","","",25,null],[12,"tm_gmtoff","","",25,null],[12,"tm_zone","","",25,null],[3,"sched_param","","",null,null],[12,"sched_priority","","",26,null],[3,"Dl_info","","",null,null],[12,"dli_fname","","",27,null],[12,"dli_fbase","","",27,null],[12,"dli_sname","","",27,null],[12,"dli_saddr","","",27,null],[3,"lconv","","",null,null],[12,"decimal_point","","",28,null],[12,"thousands_sep","","",28,null],[12,"grouping","","",28,null],[12,"int_curr_symbol","","",28,null],[12,"currency_symbol","","",28,null],[12,"mon_decimal_point","","",28,null],[12,"mon_thousands_sep","","",28,null],[12,"mon_grouping","","",28,null],[12,"positive_sign","","",28,null],[12,"negative_sign","","",28,null],[12,"int_frac_digits","","",28,null],[12,"frac_digits","","",28,null],[12,"p_cs_precedes","","",28,null],[12,"p_sep_by_space","","",28,null],[12,"n_cs_precedes","","",28,null],[12,"n_sep_by_space","","",28,null],[12,"p_sign_posn","","",28,null],[12,"n_sign_posn","","",28,null],[12,"int_p_cs_precedes","","",28,null],[12,"int_p_sep_by_space","","",28,null],[12,"int_n_cs_precedes","","",28,null],[12,"int_n_sep_by_space","","",28,null],[12,"int_p_sign_posn","","",28,null],[12,"int_n_sign_posn","","",28,null],[3,"in_pktinfo","","",null,null],[12,"ipi_ifindex","","",29,null],[12,"ipi_spec_dst","","",29,null],[12,"ipi_addr","","",29,null],[3,"ifaddrs","","",null,null],[12,"ifa_next","","",30,null],[12,"ifa_name","","",30,null],[12,"ifa_flags","","",30,null],[12,"ifa_addr","","",30,null],[12,"ifa_netmask","","",30,null],[12,"ifa_ifu","","",30,null],[12,"ifa_data","","",30,null],[3,"in6_rtmsg","","",null,null],[3,"arpreq","","",null,null],[12,"arp_pa","","",31,null],[12,"arp_ha","","",31,null],[12,"arp_flags","","",31,null],[12,"arp_netmask","","",31,null],[12,"arp_dev","","",31,null],[3,"arpreq_old","","",null,null],[12,"arp_pa","","",32,null],[12,"arp_ha","","",32,null],[12,"arp_flags","","",32,null],[12,"arp_netmask","","",32,null],[3,"arphdr","","",null,null],[12,"ar_hrd","","",33,null],[12,"ar_pro","","",33,null],[12,"ar_hln","","",33,null],[12,"ar_pln","","",33,null],[12,"ar_op","","",33,null],[3,"mmsghdr","","",null,null],[12,"msg_hdr","","",34,null],[12,"msg_len","","",34,null],[3,"epoll_event","","",null,null],[12,"events","","",35,null],[12,"u64","","",35,null],[3,"sockaddr_un","","",null,null],[12,"sun_family","","",36,null],[12,"sun_path","","",36,null],[3,"sockaddr_storage","","",null,null],[12,"ss_family","","",37,null],[3,"utsname","","",null,null],[12,"sysname","","",38,null],[12,"nodename","","",38,null],[12,"release","","",38,null],[12,"version","","",38,null],[12,"machine","","",38,null],[12,"domainname","","",38,null],[3,"sigevent","","",null,null],[12,"sigev_value","","",39,null],[12,"sigev_signo","","",39,null],[12,"sigev_notify","","",39,null],[12,"sigev_notify_thread_id","","",39,null],[17,"EXIT_FAILURE","","",null,null],[17,"EXIT_SUCCESS","","",null,null],[17,"RAND_MAX","","",null,null],[17,"EOF","","",null,null],[17,"SEEK_SET","","",null,null],[17,"SEEK_CUR","","",null,null],[17,"SEEK_END","","",null,null],[17,"_IOFBF","","",null,null],[17,"_IONBF","","",null,null],[17,"_IOLBF","","",null,null],[17,"F_DUPFD","","",null,null],[17,"F_GETFD","","",null,null],[17,"F_SETFD","","",null,null],[17,"F_GETFL","","",null,null],[17,"F_SETFL","","",null,null],[17,"F_SETLEASE","","",null,null],[17,"F_GETLEASE","","",null,null],[17,"F_NOTIFY","","",null,null],[17,"F_CANCELLK","","",null,null],[17,"F_DUPFD_CLOEXEC","","",null,null],[17,"F_SETPIPE_SZ","","",null,null],[17,"F_GETPIPE_SZ","","",null,null],[17,"F_ADD_SEALS","","",null,null],[17,"F_GET_SEALS","","",null,null],[17,"F_SEAL_SEAL","","",null,null],[17,"F_SEAL_SHRINK","","",null,null],[17,"F_SEAL_GROW","","",null,null],[17,"F_SEAL_WRITE","","",null,null],[17,"SIGTRAP","","",null,null],[17,"PTHREAD_CREATE_JOINABLE","","",null,null],[17,"PTHREAD_CREATE_DETACHED","","",null,null],[17,"CLOCK_REALTIME","","",null,null],[17,"CLOCK_MONOTONIC","","",null,null],[17,"CLOCK_PROCESS_CPUTIME_ID","","",null,null],[17,"CLOCK_THREAD_CPUTIME_ID","","",null,null],[17,"CLOCK_MONOTONIC_RAW","","",null,null],[17,"CLOCK_REALTIME_COARSE","","",null,null],[17,"CLOCK_MONOTONIC_COARSE","","",null,null],[17,"CLOCK_BOOTTIME","","",null,null],[17,"CLOCK_REALTIME_ALARM","","",null,null],[17,"CLOCK_BOOTTIME_ALARM","","",null,null],[17,"TIMER_ABSTIME","","",null,null],[17,"RUSAGE_SELF","","",null,null],[17,"O_RDONLY","","",null,null],[17,"O_WRONLY","","",null,null],[17,"O_RDWR","","",null,null],[17,"SOCK_CLOEXEC","","",null,null],[17,"S_IFIFO","","",null,null],[17,"S_IFCHR","","",null,null],[17,"S_IFBLK","","",null,null],[17,"S_IFDIR","","",null,null],[17,"S_IFREG","","",null,null],[17,"S_IFLNK","","",null,null],[17,"S_IFSOCK","","",null,null],[17,"S_IFMT","","",null,null],[17,"S_IRWXU","","",null,null],[17,"S_IXUSR","","",null,null],[17,"S_IWUSR","","",null,null],[17,"S_IRUSR","","",null,null],[17,"S_IRWXG","","",null,null],[17,"S_IXGRP","","",null,null],[17,"S_IWGRP","","",null,null],[17,"S_IRGRP","","",null,null],[17,"S_IRWXO","","",null,null],[17,"S_IXOTH","","",null,null],[17,"S_IWOTH","","",null,null],[17,"S_IROTH","","",null,null],[17,"F_OK","","",null,null],[17,"R_OK","","",null,null],[17,"W_OK","","",null,null],[17,"X_OK","","",null,null],[17,"STDIN_FILENO","","",null,null],[17,"STDOUT_FILENO","","",null,null],[17,"STDERR_FILENO","","",null,null],[17,"SIGHUP","","",null,null],[17,"SIGINT","","",null,null],[17,"SIGQUIT","","",null,null],[17,"SIGILL","","",null,null],[17,"SIGABRT","","",null,null],[17,"SIGFPE","","",null,null],[17,"SIGKILL","","",null,null],[17,"SIGSEGV","","",null,null],[17,"SIGPIPE","","",null,null],[17,"SIGALRM","","",null,null],[17,"SIGTERM","","",null,null],[17,"PROT_NONE","","",null,null],[17,"PROT_READ","","",null,null],[17,"PROT_WRITE","","",null,null],[17,"PROT_EXEC","","",null,null],[17,"LC_CTYPE","","",null,null],[17,"LC_NUMERIC","","",null,null],[17,"LC_TIME","","",null,null],[17,"LC_COLLATE","","",null,null],[17,"LC_MONETARY","","",null,null],[17,"LC_MESSAGES","","",null,null],[17,"LC_ALL","","",null,null],[17,"LC_CTYPE_MASK","","",null,null],[17,"LC_NUMERIC_MASK","","",null,null],[17,"LC_TIME_MASK","","",null,null],[17,"LC_COLLATE_MASK","","",null,null],[17,"LC_MONETARY_MASK","","",null,null],[17,"LC_MESSAGES_MASK","","",null,null],[17,"MAP_FILE","","",null,null],[17,"MAP_SHARED","","",null,null],[17,"MAP_PRIVATE","","",null,null],[17,"MAP_FIXED","","",null,null],[17,"MAP_FAILED","","",null,null],[17,"MS_ASYNC","","",null,null],[17,"MS_INVALIDATE","","",null,null],[17,"MS_SYNC","","",null,null],[17,"MS_RDONLY","","",null,null],[17,"MS_NOSUID","","",null,null],[17,"MS_NODEV","","",null,null],[17,"MS_NOEXEC","","",null,null],[17,"MS_SYNCHRONOUS","","",null,null],[17,"MS_REMOUNT","","",null,null],[17,"MS_MANDLOCK","","",null,null],[17,"MS_DIRSYNC","","",null,null],[17,"MS_NOATIME","","",null,null],[17,"MS_NODIRATIME","","",null,null],[17,"MS_BIND","","",null,null],[17,"MS_MOVE","","",null,null],[17,"MS_REC","","",null,null],[17,"MS_SILENT","","",null,null],[17,"MS_POSIXACL","","",null,null],[17,"MS_UNBINDABLE","","",null,null],[17,"MS_PRIVATE","","",null,null],[17,"MS_SLAVE","","",null,null],[17,"MS_SHARED","","",null,null],[17,"MS_RELATIME","","",null,null],[17,"MS_KERNMOUNT","","",null,null],[17,"MS_I_VERSION","","",null,null],[17,"MS_STRICTATIME","","",null,null],[17,"MS_ACTIVE","","",null,null],[17,"MS_MGC_VAL","","",null,null],[17,"MS_MGC_MSK","","",null,null],[17,"EPERM","","",null,null],[17,"ENOENT","","",null,null],[17,"ESRCH","","",null,null],[17,"EINTR","","",null,null],[17,"EIO","","",null,null],[17,"ENXIO","","",null,null],[17,"E2BIG","","",null,null],[17,"ENOEXEC","","",null,null],[17,"EBADF","","",null,null],[17,"ECHILD","","",null,null],[17,"EAGAIN","","",null,null],[17,"ENOMEM","","",null,null],[17,"EACCES","","",null,null],[17,"EFAULT","","",null,null],[17,"ENOTBLK","","",null,null],[17,"EBUSY","","",null,null],[17,"EEXIST","","",null,null],[17,"EXDEV","","",null,null],[17,"ENODEV","","",null,null],[17,"ENOTDIR","","",null,null],[17,"EISDIR","","",null,null],[17,"EINVAL","","",null,null],[17,"ENFILE","","",null,null],[17,"EMFILE","","",null,null],[17,"ENOTTY","","",null,null],[17,"ETXTBSY","","",null,null],[17,"EFBIG","","",null,null],[17,"ENOSPC","","",null,null],[17,"ESPIPE","","",null,null],[17,"EROFS","","",null,null],[17,"EMLINK","","",null,null],[17,"EPIPE","","",null,null],[17,"EDOM","","",null,null],[17,"ERANGE","","",null,null],[17,"EWOULDBLOCK","","",null,null],[17,"SCM_RIGHTS","","",null,null],[17,"SCM_CREDENTIALS","","",null,null],[17,"PROT_GROWSDOWN","","",null,null],[17,"PROT_GROWSUP","","",null,null],[17,"MAP_TYPE","","",null,null],[17,"MADV_NORMAL","","",null,null],[17,"MADV_RANDOM","","",null,null],[17,"MADV_SEQUENTIAL","","",null,null],[17,"MADV_WILLNEED","","",null,null],[17,"MADV_DONTNEED","","",null,null],[17,"MADV_FREE","","",null,null],[17,"MADV_REMOVE","","",null,null],[17,"MADV_DONTFORK","","",null,null],[17,"MADV_DOFORK","","",null,null],[17,"MADV_MERGEABLE","","",null,null],[17,"MADV_UNMERGEABLE","","",null,null],[17,"MADV_HUGEPAGE","","",null,null],[17,"MADV_NOHUGEPAGE","","",null,null],[17,"MADV_DONTDUMP","","",null,null],[17,"MADV_DODUMP","","",null,null],[17,"MADV_HWPOISON","","",null,null],[17,"IFF_UP","","",null,null],[17,"IFF_BROADCAST","","",null,null],[17,"IFF_DEBUG","","",null,null],[17,"IFF_LOOPBACK","","",null,null],[17,"IFF_POINTOPOINT","","",null,null],[17,"IFF_NOTRAILERS","","",null,null],[17,"IFF_RUNNING","","",null,null],[17,"IFF_NOARP","","",null,null],[17,"IFF_PROMISC","","",null,null],[17,"IFF_ALLMULTI","","",null,null],[17,"IFF_MASTER","","",null,null],[17,"IFF_SLAVE","","",null,null],[17,"IFF_MULTICAST","","",null,null],[17,"IFF_PORTSEL","","",null,null],[17,"IFF_AUTOMEDIA","","",null,null],[17,"IFF_DYNAMIC","","",null,null],[17,"SOL_IP","","",null,null],[17,"SOL_TCP","","",null,null],[17,"SOL_UDP","","",null,null],[17,"SOL_IPV6","","",null,null],[17,"SOL_ICMPV6","","",null,null],[17,"SOL_RAW","","",null,null],[17,"SOL_DECNET","","",null,null],[17,"SOL_X25","","",null,null],[17,"SOL_PACKET","","",null,null],[17,"SOL_ATM","","",null,null],[17,"SOL_AAL","","",null,null],[17,"SOL_IRDA","","",null,null],[17,"SOL_NETBEUI","","",null,null],[17,"SOL_LLC","","",null,null],[17,"SOL_DCCP","","",null,null],[17,"SOL_NETLINK","","",null,null],[17,"SOL_TIPC","","",null,null],[17,"SOL_BLUETOOTH","","",null,null],[17,"SOL_ALG","","",null,null],[17,"AF_UNSPEC","","",null,null],[17,"AF_UNIX","","",null,null],[17,"AF_LOCAL","","",null,null],[17,"AF_INET","","",null,null],[17,"AF_AX25","","",null,null],[17,"AF_IPX","","",null,null],[17,"AF_APPLETALK","","",null,null],[17,"AF_NETROM","","",null,null],[17,"AF_BRIDGE","","",null,null],[17,"AF_ATMPVC","","",null,null],[17,"AF_X25","","",null,null],[17,"AF_INET6","","",null,null],[17,"AF_ROSE","","",null,null],[17,"AF_DECnet","","",null,null],[17,"AF_NETBEUI","","",null,null],[17,"AF_SECURITY","","",null,null],[17,"AF_KEY","","",null,null],[17,"AF_NETLINK","","",null,null],[17,"AF_ROUTE","","",null,null],[17,"AF_PACKET","","",null,null],[17,"AF_ASH","","",null,null],[17,"AF_ECONET","","",null,null],[17,"AF_ATMSVC","","",null,null],[17,"AF_RDS","","",null,null],[17,"AF_SNA","","",null,null],[17,"AF_IRDA","","",null,null],[17,"AF_PPPOX","","",null,null],[17,"AF_WANPIPE","","",null,null],[17,"AF_LLC","","",null,null],[17,"AF_CAN","","",null,null],[17,"AF_TIPC","","",null,null],[17,"AF_BLUETOOTH","","",null,null],[17,"AF_IUCV","","",null,null],[17,"AF_RXRPC","","",null,null],[17,"AF_ISDN","","",null,null],[17,"AF_PHONET","","",null,null],[17,"AF_IEEE802154","","",null,null],[17,"AF_CAIF","","",null,null],[17,"AF_ALG","","",null,null],[17,"PF_UNSPEC","","",null,null],[17,"PF_UNIX","","",null,null],[17,"PF_LOCAL","","",null,null],[17,"PF_INET","","",null,null],[17,"PF_AX25","","",null,null],[17,"PF_IPX","","",null,null],[17,"PF_APPLETALK","","",null,null],[17,"PF_NETROM","","",null,null],[17,"PF_BRIDGE","","",null,null],[17,"PF_ATMPVC","","",null,null],[17,"PF_X25","","",null,null],[17,"PF_INET6","","",null,null],[17,"PF_ROSE","","",null,null],[17,"PF_DECnet","","",null,null],[17,"PF_NETBEUI","","",null,null],[17,"PF_SECURITY","","",null,null],[17,"PF_KEY","","",null,null],[17,"PF_NETLINK","","",null,null],[17,"PF_ROUTE","","",null,null],[17,"PF_PACKET","","",null,null],[17,"PF_ASH","","",null,null],[17,"PF_ECONET","","",null,null],[17,"PF_ATMSVC","","",null,null],[17,"PF_RDS","","",null,null],[17,"PF_SNA","","",null,null],[17,"PF_IRDA","","",null,null],[17,"PF_PPPOX","","",null,null],[17,"PF_WANPIPE","","",null,null],[17,"PF_LLC","","",null,null],[17,"PF_CAN","","",null,null],[17,"PF_TIPC","","",null,null],[17,"PF_BLUETOOTH","","",null,null],[17,"PF_IUCV","","",null,null],[17,"PF_RXRPC","","",null,null],[17,"PF_ISDN","","",null,null],[17,"PF_PHONET","","",null,null],[17,"PF_IEEE802154","","",null,null],[17,"PF_CAIF","","",null,null],[17,"PF_ALG","","",null,null],[17,"SOMAXCONN","","",null,null],[17,"MSG_OOB","","",null,null],[17,"MSG_PEEK","","",null,null],[17,"MSG_DONTROUTE","","",null,null],[17,"MSG_CTRUNC","","",null,null],[17,"MSG_TRUNC","","",null,null],[17,"MSG_DONTWAIT","","",null,null],[17,"MSG_EOR","","",null,null],[17,"MSG_WAITALL","","",null,null],[17,"MSG_FIN","","",null,null],[17,"MSG_SYN","","",null,null],[17,"MSG_CONFIRM","","",null,null],[17,"MSG_RST","","",null,null],[17,"MSG_ERRQUEUE","","",null,null],[17,"MSG_NOSIGNAL","","",null,null],[17,"MSG_MORE","","",null,null],[17,"MSG_WAITFORONE","","",null,null],[17,"MSG_FASTOPEN","","",null,null],[17,"MSG_CMSG_CLOEXEC","","",null,null],[17,"SCM_TIMESTAMP","","",null,null],[17,"SOCK_RAW","","",null,null],[17,"SOCK_RDM","","",null,null],[17,"IP_MULTICAST_IF","","",null,null],[17,"IP_MULTICAST_TTL","","",null,null],[17,"IP_MULTICAST_LOOP","","",null,null],[17,"IP_TOS","","",null,null],[17,"IP_TTL","","",null,null],[17,"IP_HDRINCL","","",null,null],[17,"IP_PKTINFO","","",null,null],[17,"IP_RECVTOS","","",null,null],[17,"IP_RECVERR","","",null,null],[17,"IP_ADD_MEMBERSHIP","","",null,null],[17,"IP_DROP_MEMBERSHIP","","",null,null],[17,"IP_ADD_SOURCE_MEMBERSHIP","","",null,null],[17,"IP_DROP_SOURCE_MEMBERSHIP","","",null,null],[17,"IP_TRANSPARENT","","",null,null],[17,"IPV6_ADDRFORM","","",null,null],[17,"IPV6_2292PKTINFO","","",null,null],[17,"IPV6_2292HOPOPTS","","",null,null],[17,"IPV6_2292DSTOPTS","","",null,null],[17,"IPV6_2292RTHDR","","",null,null],[17,"IPV6_2292PKTOPTIONS","","",null,null],[17,"IPV6_CHECKSUM","","",null,null],[17,"IPV6_2292HOPLIMIT","","",null,null],[17,"IPV6_NEXTHOP","","",null,null],[17,"IPV6_FLOWINFO","","",null,null],[17,"IPV6_UNICAST_HOPS","","",null,null],[17,"IPV6_MULTICAST_IF","","",null,null],[17,"IPV6_MULTICAST_HOPS","","",null,null],[17,"IPV6_MULTICAST_LOOP","","",null,null],[17,"IPV6_ADD_MEMBERSHIP","","",null,null],[17,"IPV6_DROP_MEMBERSHIP","","",null,null],[17,"IPV6_ROUTER_ALERT","","",null,null],[17,"IPV6_MTU_DISCOVER","","",null,null],[17,"IPV6_MTU","","",null,null],[17,"IPV6_RECVERR","","",null,null],[17,"IPV6_V6ONLY","","",null,null],[17,"IPV6_JOIN_ANYCAST","","",null,null],[17,"IPV6_LEAVE_ANYCAST","","",null,null],[17,"IPV6_RECVPKTINFO","","",null,null],[17,"IPV6_PKTINFO","","",null,null],[17,"IPV6_RECVTCLASS","","",null,null],[17,"IPV6_TCLASS","","",null,null],[17,"TCP_NODELAY","","",null,null],[17,"TCP_MAXSEG","","",null,null],[17,"TCP_CORK","","",null,null],[17,"TCP_KEEPIDLE","","",null,null],[17,"TCP_KEEPINTVL","","",null,null],[17,"TCP_KEEPCNT","","",null,null],[17,"TCP_SYNCNT","","",null,null],[17,"TCP_LINGER2","","",null,null],[17,"TCP_DEFER_ACCEPT","","",null,null],[17,"TCP_WINDOW_CLAMP","","",null,null],[17,"TCP_INFO","","",null,null],[17,"TCP_QUICKACK","","",null,null],[17,"TCP_CONGESTION","","",null,null],[17,"SO_DEBUG","","",null,null],[17,"SHUT_RD","","",null,null],[17,"SHUT_WR","","",null,null],[17,"SHUT_RDWR","","",null,null],[17,"LOCK_SH","","",null,null],[17,"LOCK_EX","","",null,null],[17,"LOCK_NB","","",null,null],[17,"LOCK_UN","","",null,null],[17,"SS_ONSTACK","","",null,null],[17,"SS_DISABLE","","",null,null],[17,"PATH_MAX","","",null,null],[17,"FD_SETSIZE","","",null,null],[17,"EPOLLIN","","",null,null],[17,"EPOLLPRI","","",null,null],[17,"EPOLLOUT","","",null,null],[17,"EPOLLRDNORM","","",null,null],[17,"EPOLLRDBAND","","",null,null],[17,"EPOLLWRNORM","","",null,null],[17,"EPOLLWRBAND","","",null,null],[17,"EPOLLMSG","","",null,null],[17,"EPOLLERR","","",null,null],[17,"EPOLLHUP","","",null,null],[17,"EPOLLET","","",null,null],[17,"EPOLL_CTL_ADD","","",null,null],[17,"EPOLL_CTL_MOD","","",null,null],[17,"EPOLL_CTL_DEL","","",null,null],[17,"MNT_DETACH","","",null,null],[17,"MNT_EXPIRE","","",null,null],[17,"Q_GETFMT","","",null,null],[17,"Q_GETINFO","","",null,null],[17,"Q_SETINFO","","",null,null],[17,"QIF_BLIMITS","","",null,null],[17,"QIF_SPACE","","",null,null],[17,"QIF_ILIMITS","","",null,null],[17,"QIF_INODES","","",null,null],[17,"QIF_BTIME","","",null,null],[17,"QIF_ITIME","","",null,null],[17,"QIF_LIMITS","","",null,null],[17,"QIF_USAGE","","",null,null],[17,"QIF_TIMES","","",null,null],[17,"QIF_ALL","","",null,null],[17,"MNT_FORCE","","",null,null],[17,"Q_SYNC","","",null,null],[17,"Q_QUOTAON","","",null,null],[17,"Q_QUOTAOFF","","",null,null],[17,"Q_GETQUOTA","","",null,null],[17,"Q_SETQUOTA","","",null,null],[17,"TCIOFF","","",null,null],[17,"TCION","","",null,null],[17,"TCOOFF","","",null,null],[17,"TCOON","","",null,null],[17,"TCIFLUSH","","",null,null],[17,"TCOFLUSH","","",null,null],[17,"TCIOFLUSH","","",null,null],[17,"NL0","","",null,null],[17,"NL1","","",null,null],[17,"TAB0","","",null,null],[17,"CR0","","",null,null],[17,"FF0","","",null,null],[17,"BS0","","",null,null],[17,"VT0","","",null,null],[17,"VERASE","","",null,null],[17,"VKILL","","",null,null],[17,"VINTR","","",null,null],[17,"VQUIT","","",null,null],[17,"VLNEXT","","",null,null],[17,"IGNBRK","","",null,null],[17,"BRKINT","","",null,null],[17,"IGNPAR","","",null,null],[17,"PARMRK","","",null,null],[17,"INPCK","","",null,null],[17,"ISTRIP","","",null,null],[17,"INLCR","","",null,null],[17,"IGNCR","","",null,null],[17,"ICRNL","","",null,null],[17,"IXANY","","",null,null],[17,"IMAXBEL","","",null,null],[17,"OPOST","","",null,null],[17,"CS5","","",null,null],[17,"CRTSCTS","","",null,null],[17,"ECHO","","",null,null],[17,"OCRNL","","",null,null],[17,"ONOCR","","",null,null],[17,"ONLRET","","",null,null],[17,"OFILL","","",null,null],[17,"OFDEL","","",null,null],[17,"CLONE_VM","","",null,null],[17,"CLONE_FS","","",null,null],[17,"CLONE_FILES","","",null,null],[17,"CLONE_SIGHAND","","",null,null],[17,"CLONE_PTRACE","","",null,null],[17,"CLONE_VFORK","","",null,null],[17,"CLONE_PARENT","","",null,null],[17,"CLONE_THREAD","","",null,null],[17,"CLONE_NEWNS","","",null,null],[17,"CLONE_SYSVSEM","","",null,null],[17,"CLONE_SETTLS","","",null,null],[17,"CLONE_PARENT_SETTID","","",null,null],[17,"CLONE_CHILD_CLEARTID","","",null,null],[17,"CLONE_DETACHED","","",null,null],[17,"CLONE_UNTRACED","","",null,null],[17,"CLONE_CHILD_SETTID","","",null,null],[17,"CLONE_NEWUTS","","",null,null],[17,"CLONE_NEWIPC","","",null,null],[17,"CLONE_NEWUSER","","",null,null],[17,"CLONE_NEWPID","","",null,null],[17,"CLONE_NEWNET","","",null,null],[17,"CLONE_IO","","",null,null],[17,"CLONE_NEWCGROUP","","",null,null],[17,"WNOHANG","","",null,null],[17,"WUNTRACED","","",null,null],[17,"WSTOPPED","","",null,null],[17,"WEXITED","","",null,null],[17,"WCONTINUED","","",null,null],[17,"WNOWAIT","","",null,null],[17,"PTRACE_O_TRACESYSGOOD","","",null,null],[17,"PTRACE_O_TRACEFORK","","",null,null],[17,"PTRACE_O_TRACEVFORK","","",null,null],[17,"PTRACE_O_TRACECLONE","","",null,null],[17,"PTRACE_O_TRACEEXEC","","",null,null],[17,"PTRACE_O_TRACEVFORKDONE","","",null,null],[17,"PTRACE_O_TRACEEXIT","","",null,null],[17,"PTRACE_O_TRACESECCOMP","","",null,null],[17,"PTRACE_O_EXITKILL","","",null,null],[17,"PTRACE_O_SUSPEND_SECCOMP","","",null,null],[17,"PTRACE_O_MASK","","",null,null],[17,"PTRACE_EVENT_FORK","","",null,null],[17,"PTRACE_EVENT_VFORK","","",null,null],[17,"PTRACE_EVENT_CLONE","","",null,null],[17,"PTRACE_EVENT_EXEC","","",null,null],[17,"PTRACE_EVENT_VFORK_DONE","","",null,null],[17,"PTRACE_EVENT_EXIT","","",null,null],[17,"PTRACE_EVENT_SECCOMP","","",null,null],[17,"__WNOTHREAD","","",null,null],[17,"__WALL","","",null,null],[17,"__WCLONE","","",null,null],[17,"SPLICE_F_MOVE","","",null,null],[17,"SPLICE_F_NONBLOCK","","",null,null],[17,"SPLICE_F_MORE","","",null,null],[17,"SPLICE_F_GIFT","","",null,null],[17,"RTLD_LOCAL","","",null,null],[17,"RTLD_LAZY","","",null,null],[17,"POSIX_FADV_NORMAL","","",null,null],[17,"POSIX_FADV_RANDOM","","",null,null],[17,"POSIX_FADV_SEQUENTIAL","","",null,null],[17,"POSIX_FADV_WILLNEED","","",null,null],[17,"AT_FDCWD","","",null,null],[17,"AT_SYMLINK_NOFOLLOW","","",null,null],[17,"AT_REMOVEDIR","","",null,null],[17,"AT_SYMLINK_FOLLOW","","",null,null],[17,"AT_NO_AUTOMOUNT","","",null,null],[17,"AT_EMPTY_PATH","","",null,null],[17,"LOG_CRON","","",null,null],[17,"LOG_AUTHPRIV","","",null,null],[17,"LOG_FTP","","",null,null],[17,"LOG_PERROR","","",null,null],[17,"PIPE_BUF","","",null,null],[17,"SI_LOAD_SHIFT","","",null,null],[17,"SIGEV_SIGNAL","","",null,null],[17,"SIGEV_NONE","","",null,null],[17,"SIGEV_THREAD","","",null,null],[17,"P_ALL","","",null,null],[17,"P_PID","","",null,null],[17,"P_PGID","","",null,null],[17,"UTIME_OMIT","","",null,null],[17,"UTIME_NOW","","",null,null],[17,"POLLIN","","",null,null],[17,"POLLPRI","","",null,null],[17,"POLLOUT","","",null,null],[17,"POLLERR","","",null,null],[17,"POLLHUP","","",null,null],[17,"POLLNVAL","","",null,null],[17,"POLLRDNORM","","",null,null],[17,"POLLRDBAND","","",null,null],[17,"IPTOS_LOWDELAY","","",null,null],[17,"IPTOS_THROUGHPUT","","",null,null],[17,"IPTOS_RELIABILITY","","",null,null],[17,"IPTOS_MINCOST","","",null,null],[17,"IPTOS_PREC_NETCONTROL","","",null,null],[17,"IPTOS_PREC_INTERNETCONTROL","","",null,null],[17,"IPTOS_PREC_CRITIC_ECP","","",null,null],[17,"IPTOS_PREC_FLASHOVERRIDE","","",null,null],[17,"IPTOS_PREC_FLASH","","",null,null],[17,"IPTOS_PREC_IMMEDIATE","","",null,null],[17,"IPTOS_PREC_PRIORITY","","",null,null],[17,"IPTOS_PREC_ROUTINE","","",null,null],[17,"IPTOS_ECN_MASK","","",null,null],[17,"IPTOS_ECN_ECT1","","",null,null],[17,"IPTOS_ECN_ECT0","","",null,null],[17,"IPTOS_ECN_CE","","",null,null],[17,"IPOPT_COPY","","",null,null],[17,"IPOPT_CLASS_MASK","","",null,null],[17,"IPOPT_NUMBER_MASK","","",null,null],[17,"IPOPT_CONTROL","","",null,null],[17,"IPOPT_RESERVED1","","",null,null],[17,"IPOPT_MEASUREMENT","","",null,null],[17,"IPOPT_RESERVED2","","",null,null],[17,"IPOPT_END","","",null,null],[17,"IPOPT_NOOP","","",null,null],[17,"IPOPT_SEC","","",null,null],[17,"IPOPT_LSRR","","",null,null],[17,"IPOPT_TIMESTAMP","","",null,null],[17,"IPOPT_RR","","",null,null],[17,"IPOPT_SID","","",null,null],[17,"IPOPT_SSRR","","",null,null],[17,"IPOPT_RA","","",null,null],[17,"IPVERSION","","",null,null],[17,"MAXTTL","","",null,null],[17,"IPDEFTTL","","",null,null],[17,"IPOPT_OPTVAL","","",null,null],[17,"IPOPT_OLEN","","",null,null],[17,"IPOPT_OFFSET","","",null,null],[17,"IPOPT_MINOFF","","",null,null],[17,"MAX_IPOPTLEN","","",null,null],[17,"IPOPT_NOP","","",null,null],[17,"IPOPT_EOL","","",null,null],[17,"IPOPT_TS","","",null,null],[17,"IPOPT_TS_TSONLY","","",null,null],[17,"IPOPT_TS_TSANDADDR","","",null,null],[17,"IPOPT_TS_PRESPEC","","",null,null],[17,"ARPOP_RREQUEST","","",null,null],[17,"ARPOP_RREPLY","","",null,null],[17,"ARPOP_InREQUEST","","",null,null],[17,"ARPOP_InREPLY","","",null,null],[17,"ARPOP_NAK","","",null,null],[17,"ATF_NETMASK","","",null,null],[17,"ATF_DONTPUB","","",null,null],[17,"ARPHRD_NETROM","","",null,null],[17,"ARPHRD_ETHER","","",null,null],[17,"ARPHRD_EETHER","","",null,null],[17,"ARPHRD_AX25","","",null,null],[17,"ARPHRD_PRONET","","",null,null],[17,"ARPHRD_CHAOS","","",null,null],[17,"ARPHRD_IEEE802","","",null,null],[17,"ARPHRD_ARCNET","","",null,null],[17,"ARPHRD_APPLETLK","","",null,null],[17,"ARPHRD_DLCI","","",null,null],[17,"ARPHRD_ATM","","",null,null],[17,"ARPHRD_METRICOM","","",null,null],[17,"ARPHRD_IEEE1394","","",null,null],[17,"ARPHRD_EUI64","","",null,null],[17,"ARPHRD_INFINIBAND","","",null,null],[17,"ARPHRD_SLIP","","",null,null],[17,"ARPHRD_CSLIP","","",null,null],[17,"ARPHRD_SLIP6","","",null,null],[17,"ARPHRD_CSLIP6","","",null,null],[17,"ARPHRD_RSRVD","","",null,null],[17,"ARPHRD_ADAPT","","",null,null],[17,"ARPHRD_ROSE","","",null,null],[17,"ARPHRD_X25","","",null,null],[17,"ARPHRD_HWX25","","",null,null],[17,"ARPHRD_PPP","","",null,null],[17,"ARPHRD_CISCO","","",null,null],[17,"ARPHRD_HDLC","","",null,null],[17,"ARPHRD_LAPB","","",null,null],[17,"ARPHRD_DDCMP","","",null,null],[17,"ARPHRD_RAWHDLC","","",null,null],[17,"ARPHRD_TUNNEL","","",null,null],[17,"ARPHRD_TUNNEL6","","",null,null],[17,"ARPHRD_FRAD","","",null,null],[17,"ARPHRD_SKIP","","",null,null],[17,"ARPHRD_LOOPBACK","","",null,null],[17,"ARPHRD_LOCALTLK","","",null,null],[17,"ARPHRD_FDDI","","",null,null],[17,"ARPHRD_BIF","","",null,null],[17,"ARPHRD_SIT","","",null,null],[17,"ARPHRD_IPDDP","","",null,null],[17,"ARPHRD_IPGRE","","",null,null],[17,"ARPHRD_PIMREG","","",null,null],[17,"ARPHRD_HIPPI","","",null,null],[17,"ARPHRD_ASH","","",null,null],[17,"ARPHRD_ECONET","","",null,null],[17,"ARPHRD_IRDA","","",null,null],[17,"ARPHRD_FCPP","","",null,null],[17,"ARPHRD_FCAL","","",null,null],[17,"ARPHRD_FCPL","","",null,null],[17,"ARPHRD_FCFABRIC","","",null,null],[17,"ARPHRD_IEEE802_TR","","",null,null],[17,"ARPHRD_IEEE80211","","",null,null],[17,"ARPHRD_IEEE80211_PRISM","","",null,null],[17,"ARPHRD_IEEE80211_RADIOTAP","","",null,null],[17,"ARPHRD_IEEE802154","","",null,null],[17,"ARPHRD_VOID","","",null,null],[17,"ARPHRD_NONE","","",null,null],[5,"CMSG_FIRSTHDR","","",null,[[]]],[5,"CMSG_DATA","","",null,[[]]],[5,"CMSG_SPACE","","",null,[[["c_uint",6]],["c_uint",6]]],[5,"CMSG_LEN","","",null,[[["c_uint",6]],["c_uint",6]]],[5,"FD_CLR","","",null,[[["c_int",6]]]],[5,"FD_ISSET","","",null,[[["c_int",6]],["bool",15]]],[5,"FD_SET","","",null,[[["c_int",6]]]],[5,"FD_ZERO","","",null,[[]]],[5,"WIFSTOPPED","","",null,[[["c_int",6]],["bool",15]]],[5,"WSTOPSIG","","",null,[[["c_int",6]],["c_int",6]]],[5,"WIFCONTINUED","","",null,[[["c_int",6]],["bool",15]]],[5,"WIFSIGNALED","","",null,[[["c_int",6]],["bool",15]]],[5,"WTERMSIG","","",null,[[["c_int",6]],["c_int",6]]],[5,"WIFEXITED","","",null,[[["c_int",6]],["bool",15]]],[5,"WEXITSTATUS","","",null,[[["c_int",6]],["c_int",6]]],[5,"WCOREDUMP","","",null,[[["c_int",6]],["bool",15]]],[5,"QCMD","","",null,[[["c_int",6]],["c_int",6]]],[5,"IPOPT_COPIED","","",null,[[["u8",15]],["u8",15]]],[5,"IPOPT_CLASS","","",null,[[["u8",15]],["u8",15]]],[5,"IPOPT_NUMBER","","",null,[[["u8",15]],["u8",15]]],[5,"IPTOS_ECN","","",null,[[["u8",15]],["u8",15]]],[6,"useconds_t","","",null,null],[6,"dev_t","","",null,null],[6,"socklen_t","","",null,null],[6,"mode_t","","",null,null],[6,"ino64_t","","",null,null],[6,"off64_t","","",null,null],[6,"blkcnt64_t","","",null,null],[6,"rlim64_t","","",null,null],[6,"mqd_t","","",null,null],[6,"nfds_t","","",null,null],[6,"nl_item","","",null,null],[6,"idtype_t","","",null,null],[6,"loff_t","","",null,null],[6,"pthread_key_t","","",null,null],[6,"__u8","","",null,null],[6,"__u16","","",null,null],[6,"__s16","","",null,null],[6,"__u32","","",null,null],[6,"__s32","","",null,null],[6,"Elf32_Half","","",null,null],[6,"Elf32_Word","","",null,null],[6,"Elf32_Off","","",null,null],[6,"Elf32_Addr","","",null,null],[6,"Elf64_Half","","",null,null],[6,"Elf64_Word","","",null,null],[6,"Elf64_Off","","",null,null],[6,"Elf64_Addr","","",null,null],[6,"Elf64_Xword","","",null,null],[6,"Elf64_Sxword","","",null,null],[6,"Elf32_Section","","",null,null],[6,"Elf64_Section","","",null,null],[4,"fpos64_t","","",null,null],[3,"rlimit64","","",null,null],[12,"rlim_cur","","",40,null],[12,"rlim_max","","",40,null],[3,"glob_t","","",null,null],[12,"gl_pathc","","",41,null],[12,"gl_pathv","","",41,null],[12,"gl_offs","","",41,null],[12,"gl_flags","","",41,null],[3,"passwd","","",null,null],[12,"pw_name","","",42,null],[12,"pw_passwd","","",42,null],[12,"pw_uid","","",42,null],[12,"pw_gid","","",42,null],[12,"pw_gecos","","",42,null],[12,"pw_dir","","",42,null],[12,"pw_shell","","",42,null],[3,"spwd","","",null,null],[12,"sp_namp","","",43,null],[12,"sp_pwdp","","",43,null],[12,"sp_lstchg","","",43,null],[12,"sp_min","","",43,null],[12,"sp_max","","",43,null],[12,"sp_warn","","",43,null],[12,"sp_inact","","",43,null],[12,"sp_expire","","",43,null],[12,"sp_flag","","",43,null],[3,"dqblk","","",null,null],[12,"dqb_bhardlimit","","",44,null],[12,"dqb_bsoftlimit","","",44,null],[12,"dqb_curspace","","",44,null],[12,"dqb_ihardlimit","","",44,null],[12,"dqb_isoftlimit","","",44,null],[12,"dqb_curinodes","","",44,null],[12,"dqb_btime","","",44,null],[12,"dqb_itime","","",44,null],[12,"dqb_valid","","",44,null],[3,"signalfd_siginfo","","",null,null],[12,"ssi_signo","","",45,null],[12,"ssi_errno","","",45,null],[12,"ssi_code","","",45,null],[12,"ssi_pid","","",45,null],[12,"ssi_uid","","",45,null],[12,"ssi_fd","","",45,null],[12,"ssi_tid","","",45,null],[12,"ssi_band","","",45,null],[12,"ssi_overrun","","",45,null],[12,"ssi_trapno","","",45,null],[12,"ssi_status","","",45,null],[12,"ssi_int","","",45,null],[12,"ssi_ptr","","",45,null],[12,"ssi_utime","","",45,null],[12,"ssi_stime","","",45,null],[12,"ssi_addr","","",45,null],[12,"ssi_addr_lsb","","",45,null],[12,"ssi_syscall","","",45,null],[12,"ssi_call_addr","","",45,null],[12,"ssi_arch","","",45,null],[3,"itimerspec","","",null,null],[12,"it_interval","","",46,null],[12,"it_value","","",46,null],[3,"fsid_t","","",null,null],[3,"packet_mreq","","",null,null],[12,"mr_ifindex","","",47,null],[12,"mr_type","","",47,null],[12,"mr_alen","","",47,null],[12,"mr_address","","",47,null],[3,"cpu_set_t","","",null,null],[3,"if_nameindex","","",null,null],[12,"if_index","","",48,null],[12,"if_name","","",48,null],[3,"msginfo","","",null,null],[12,"msgpool","","",49,null],[12,"msgmap","","",49,null],[12,"msgmax","","",49,null],[12,"msgmnb","","",49,null],[12,"msgmni","","",49,null],[12,"msgssz","","",49,null],[12,"msgtql","","",49,null],[12,"msgseg","","",49,null],[3,"sembuf","","",null,null],[12,"sem_num","","",50,null],[12,"sem_op","","",50,null],[12,"sem_flg","","",50,null],[3,"input_event","","",null,null],[12,"time","","",51,null],[12,"type_","","",51,null],[12,"code","","",51,null],[12,"value","","",51,null],[3,"input_id","","",null,null],[12,"bustype","","",52,null],[12,"vendor","","",52,null],[12,"product","","",52,null],[12,"version","","",52,null],[3,"input_absinfo","","",null,null],[12,"value","","",53,null],[12,"minimum","","",53,null],[12,"maximum","","",53,null],[12,"fuzz","","",53,null],[12,"flat","","",53,null],[12,"resolution","","",53,null],[3,"input_keymap_entry","","",null,null],[12,"flags","","",54,null],[12,"len","","",54,null],[12,"index","","",54,null],[12,"keycode","","",54,null],[12,"scancode","","",54,null],[3,"input_mask","","",null,null],[12,"type_","","",55,null],[12,"codes_size","","",55,null],[12,"codes_ptr","","",55,null],[3,"ff_replay","","",null,null],[12,"length","","",56,null],[12,"delay","","",56,null],[3,"ff_trigger","","",null,null],[12,"button","","",57,null],[12,"interval","","",57,null],[3,"ff_envelope","","",null,null],[12,"attack_length","","",58,null],[12,"attack_level","","",58,null],[12,"fade_length","","",58,null],[12,"fade_level","","",58,null],[3,"ff_constant_effect","","",null,null],[12,"level","","",59,null],[12,"envelope","","",59,null],[3,"ff_ramp_effect","","",null,null],[12,"start_level","","",60,null],[12,"end_level","","",60,null],[12,"envelope","","",60,null],[3,"ff_condition_effect","","",null,null],[12,"right_saturation","","",61,null],[12,"left_saturation","","",61,null],[12,"right_coeff","","",61,null],[12,"left_coeff","","",61,null],[12,"deadband","","",61,null],[12,"center","","",61,null],[3,"ff_periodic_effect","","",null,null],[12,"waveform","","",62,null],[12,"period","","",62,null],[12,"magnitude","","",62,null],[12,"offset","","",62,null],[12,"phase","","",62,null],[12,"envelope","","",62,null],[12,"custom_len","","",62,null],[12,"custom_data","","",62,null],[3,"ff_rumble_effect","","",null,null],[12,"strong_magnitude","","",63,null],[12,"weak_magnitude","","",63,null],[3,"ff_effect","","",null,null],[12,"type_","","",64,null],[12,"id","","",64,null],[12,"direction","","",64,null],[12,"trigger","","",64,null],[12,"replay","","",64,null],[12,"u","","",64,null],[3,"dl_phdr_info","","",null,null],[12,"dlpi_addr","","",65,null],[12,"dlpi_name","","",65,null],[12,"dlpi_phdr","","",65,null],[12,"dlpi_phnum","","",65,null],[12,"dlpi_adds","","",65,null],[12,"dlpi_subs","","",65,null],[12,"dlpi_tls_modid","","",65,null],[12,"dlpi_tls_data","","",65,null],[3,"Elf32_Ehdr","","",null,null],[12,"e_ident","","",66,null],[12,"e_type","","",66,null],[12,"e_machine","","",66,null],[12,"e_version","","",66,null],[12,"e_entry","","",66,null],[12,"e_phoff","","",66,null],[12,"e_shoff","","",66,null],[12,"e_flags","","",66,null],[12,"e_ehsize","","",66,null],[12,"e_phentsize","","",66,null],[12,"e_phnum","","",66,null],[12,"e_shentsize","","",66,null],[12,"e_shnum","","",66,null],[12,"e_shstrndx","","",66,null],[3,"Elf64_Ehdr","","",null,null],[12,"e_ident","","",67,null],[12,"e_type","","",67,null],[12,"e_machine","","",67,null],[12,"e_version","","",67,null],[12,"e_entry","","",67,null],[12,"e_phoff","","",67,null],[12,"e_shoff","","",67,null],[12,"e_flags","","",67,null],[12,"e_ehsize","","",67,null],[12,"e_phentsize","","",67,null],[12,"e_phnum","","",67,null],[12,"e_shentsize","","",67,null],[12,"e_shnum","","",67,null],[12,"e_shstrndx","","",67,null],[3,"Elf32_Sym","","",null,null],[12,"st_name","","",68,null],[12,"st_value","","",68,null],[12,"st_size","","",68,null],[12,"st_info","","",68,null],[12,"st_other","","",68,null],[12,"st_shndx","","",68,null],[3,"Elf64_Sym","","",null,null],[12,"st_name","","",69,null],[12,"st_info","","",69,null],[12,"st_other","","",69,null],[12,"st_shndx","","",69,null],[12,"st_value","","",69,null],[12,"st_size","","",69,null],[3,"Elf32_Phdr","","",null,null],[12,"p_type","","",70,null],[12,"p_offset","","",70,null],[12,"p_vaddr","","",70,null],[12,"p_paddr","","",70,null],[12,"p_filesz","","",70,null],[12,"p_memsz","","",70,null],[12,"p_flags","","",70,null],[12,"p_align","","",70,null],[3,"Elf64_Phdr","","",null,null],[12,"p_type","","",71,null],[12,"p_flags","","",71,null],[12,"p_offset","","",71,null],[12,"p_vaddr","","",71,null],[12,"p_paddr","","",71,null],[12,"p_filesz","","",71,null],[12,"p_memsz","","",71,null],[12,"p_align","","",71,null],[3,"Elf32_Shdr","","",null,null],[12,"sh_name","","",72,null],[12,"sh_type","","",72,null],[12,"sh_flags","","",72,null],[12,"sh_addr","","",72,null],[12,"sh_offset","","",72,null],[12,"sh_size","","",72,null],[12,"sh_link","","",72,null],[12,"sh_info","","",72,null],[12,"sh_addralign","","",72,null],[12,"sh_entsize","","",72,null],[3,"Elf64_Shdr","","",null,null],[12,"sh_name","","",73,null],[12,"sh_type","","",73,null],[12,"sh_flags","","",73,null],[12,"sh_addr","","",73,null],[12,"sh_offset","","",73,null],[12,"sh_size","","",73,null],[12,"sh_link","","",73,null],[12,"sh_info","","",73,null],[12,"sh_addralign","","",73,null],[12,"sh_entsize","","",73,null],[3,"Elf32_Chdr","","",null,null],[12,"ch_type","","",74,null],[12,"ch_size","","",74,null],[12,"ch_addralign","","",74,null],[3,"Elf64_Chdr","","",null,null],[12,"ch_type","","",75,null],[12,"ch_reserved","","",75,null],[12,"ch_size","","",75,null],[12,"ch_addralign","","",75,null],[3,"ucred","","",null,null],[12,"pid","","",76,null],[12,"uid","","",76,null],[12,"gid","","",76,null],[3,"mntent","","",null,null],[12,"mnt_fsname","","",77,null],[12,"mnt_dir","","",77,null],[12,"mnt_type","","",77,null],[12,"mnt_opts","","",77,null],[12,"mnt_freq","","",77,null],[12,"mnt_passno","","",77,null],[3,"posix_spawn_file_actions_t","","",null,null],[3,"posix_spawnattr_t","","",null,null],[3,"genlmsghdr","","",null,null],[12,"cmd","","",78,null],[12,"version","","",78,null],[12,"reserved","","",78,null],[3,"in6_pktinfo","","",null,null],[12,"ipi6_addr","","",79,null],[12,"ipi6_ifindex","","",79,null],[3,"arpd_request","","",null,null],[12,"req","","",80,null],[12,"ip","","",80,null],[12,"dev","","",80,null],[12,"stamp","","",80,null],[12,"updated","","",80,null],[12,"ha","","",80,null],[3,"inotify_event","","",null,null],[12,"wd","","",81,null],[12,"mask","","",81,null],[12,"cookie","","",81,null],[12,"len","","",81,null],[3,"sockaddr_vm","","",null,null],[12,"svm_family","","",82,null],[12,"svm_reserved1","","",82,null],[12,"svm_port","","",82,null],[12,"svm_cid","","",82,null],[12,"svm_zero","","",82,null],[3,"sockaddr_nl","","",null,null],[12,"nl_family","","",83,null],[12,"nl_pid","","",83,null],[12,"nl_groups","","",83,null],[3,"dirent","","",null,null],[12,"d_ino","","",84,null],[12,"d_off","","",84,null],[12,"d_reclen","","",84,null],[12,"d_type","","",84,null],[12,"d_name","","",84,null],[3,"dirent64","","",null,null],[12,"d_ino","","",85,null],[12,"d_off","","",85,null],[12,"d_reclen","","",85,null],[12,"d_type","","",85,null],[12,"d_name","","",85,null],[3,"sockaddr_alg","","",null,null],[12,"salg_family","","",86,null],[12,"salg_type","","",86,null],[12,"salg_feat","","",86,null],[12,"salg_mask","","",86,null],[12,"salg_name","","",86,null],[3,"af_alg_iv","","",null,null],[12,"ivlen","","",87,null],[12,"iv","","",87,null],[3,"mq_attr","","",null,null],[12,"mq_flags","","",88,null],[12,"mq_maxmsg","","",88,null],[12,"mq_msgsize","","",88,null],[12,"mq_curmsgs","","",88,null],[17,"ABDAY_1","","",null,null],[17,"ABDAY_2","","",null,null],[17,"ABDAY_3","","",null,null],[17,"ABDAY_4","","",null,null],[17,"ABDAY_5","","",null,null],[17,"ABDAY_6","","",null,null],[17,"ABDAY_7","","",null,null],[17,"DAY_1","","",null,null],[17,"DAY_2","","",null,null],[17,"DAY_3","","",null,null],[17,"DAY_4","","",null,null],[17,"DAY_5","","",null,null],[17,"DAY_6","","",null,null],[17,"DAY_7","","",null,null],[17,"ABMON_1","","",null,null],[17,"ABMON_2","","",null,null],[17,"ABMON_3","","",null,null],[17,"ABMON_4","","",null,null],[17,"ABMON_5","","",null,null],[17,"ABMON_6","","",null,null],[17,"ABMON_7","","",null,null],[17,"ABMON_8","","",null,null],[17,"ABMON_9","","",null,null],[17,"ABMON_10","","",null,null],[17,"ABMON_11","","",null,null],[17,"ABMON_12","","",null,null],[17,"MON_1","","",null,null],[17,"MON_2","","",null,null],[17,"MON_3","","",null,null],[17,"MON_4","","",null,null],[17,"MON_5","","",null,null],[17,"MON_6","","",null,null],[17,"MON_7","","",null,null],[17,"MON_8","","",null,null],[17,"MON_9","","",null,null],[17,"MON_10","","",null,null],[17,"MON_11","","",null,null],[17,"MON_12","","",null,null],[17,"AM_STR","","",null,null],[17,"PM_STR","","",null,null],[17,"D_T_FMT","","",null,null],[17,"D_FMT","","",null,null],[17,"T_FMT","","",null,null],[17,"T_FMT_AMPM","","",null,null],[17,"ERA","","",null,null],[17,"ERA_D_FMT","","",null,null],[17,"ALT_DIGITS","","",null,null],[17,"ERA_D_T_FMT","","",null,null],[17,"ERA_T_FMT","","",null,null],[17,"CODESET","","",null,null],[17,"CRNCYSTR","","",null,null],[17,"RUSAGE_THREAD","","",null,null],[17,"RUSAGE_CHILDREN","","",null,null],[17,"RADIXCHAR","","",null,null],[17,"THOUSEP","","",null,null],[17,"YESEXPR","","",null,null],[17,"NOEXPR","","",null,null],[17,"YESSTR","","",null,null],[17,"NOSTR","","",null,null],[17,"FILENAME_MAX","","",null,null],[17,"L_tmpnam","","",null,null],[17,"_PC_LINK_MAX","","",null,null],[17,"_PC_MAX_CANON","","",null,null],[17,"_PC_MAX_INPUT","","",null,null],[17,"_PC_NAME_MAX","","",null,null],[17,"_PC_PATH_MAX","","",null,null],[17,"_PC_PIPE_BUF","","",null,null],[17,"_PC_CHOWN_RESTRICTED","","",null,null],[17,"_PC_NO_TRUNC","","",null,null],[17,"_PC_VDISABLE","","",null,null],[17,"_PC_SYNC_IO","","",null,null],[17,"_PC_ASYNC_IO","","",null,null],[17,"_PC_PRIO_IO","","",null,null],[17,"_PC_SOCK_MAXBUF","","",null,null],[17,"_PC_FILESIZEBITS","","",null,null],[17,"_PC_REC_INCR_XFER_SIZE","","",null,null],[17,"_PC_REC_MAX_XFER_SIZE","","",null,null],[17,"_PC_REC_MIN_XFER_SIZE","","",null,null],[17,"_PC_REC_XFER_ALIGN","","",null,null],[17,"_PC_ALLOC_SIZE_MIN","","",null,null],[17,"_PC_SYMLINK_MAX","","",null,null],[17,"_PC_2_SYMLINKS","","",null,null],[17,"MS_NOUSER","","",null,null],[17,"_SC_ARG_MAX","","",null,null],[17,"_SC_CHILD_MAX","","",null,null],[17,"_SC_CLK_TCK","","",null,null],[17,"_SC_NGROUPS_MAX","","",null,null],[17,"_SC_OPEN_MAX","","",null,null],[17,"_SC_STREAM_MAX","","",null,null],[17,"_SC_TZNAME_MAX","","",null,null],[17,"_SC_JOB_CONTROL","","",null,null],[17,"_SC_SAVED_IDS","","",null,null],[17,"_SC_REALTIME_SIGNALS","","",null,null],[17,"_SC_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_TIMERS","","",null,null],[17,"_SC_ASYNCHRONOUS_IO","","",null,null],[17,"_SC_PRIORITIZED_IO","","",null,null],[17,"_SC_SYNCHRONIZED_IO","","",null,null],[17,"_SC_FSYNC","","",null,null],[17,"_SC_MAPPED_FILES","","",null,null],[17,"_SC_MEMLOCK","","",null,null],[17,"_SC_MEMLOCK_RANGE","","",null,null],[17,"_SC_MEMORY_PROTECTION","","",null,null],[17,"_SC_MESSAGE_PASSING","","",null,null],[17,"_SC_SEMAPHORES","","",null,null],[17,"_SC_SHARED_MEMORY_OBJECTS","","",null,null],[17,"_SC_AIO_LISTIO_MAX","","",null,null],[17,"_SC_AIO_MAX","","",null,null],[17,"_SC_AIO_PRIO_DELTA_MAX","","",null,null],[17,"_SC_DELAYTIMER_MAX","","",null,null],[17,"_SC_MQ_OPEN_MAX","","",null,null],[17,"_SC_MQ_PRIO_MAX","","",null,null],[17,"_SC_VERSION","","",null,null],[17,"_SC_PAGESIZE","","",null,null],[17,"_SC_PAGE_SIZE","","",null,null],[17,"_SC_RTSIG_MAX","","",null,null],[17,"_SC_SEM_NSEMS_MAX","","",null,null],[17,"_SC_SEM_VALUE_MAX","","",null,null],[17,"_SC_SIGQUEUE_MAX","","",null,null],[17,"_SC_TIMER_MAX","","",null,null],[17,"_SC_BC_BASE_MAX","","",null,null],[17,"_SC_BC_DIM_MAX","","",null,null],[17,"_SC_BC_SCALE_MAX","","",null,null],[17,"_SC_BC_STRING_MAX","","",null,null],[17,"_SC_COLL_WEIGHTS_MAX","","",null,null],[17,"_SC_EXPR_NEST_MAX","","",null,null],[17,"_SC_LINE_MAX","","",null,null],[17,"_SC_RE_DUP_MAX","","",null,null],[17,"_SC_2_VERSION","","",null,null],[17,"_SC_2_C_BIND","","",null,null],[17,"_SC_2_C_DEV","","",null,null],[17,"_SC_2_FORT_DEV","","",null,null],[17,"_SC_2_FORT_RUN","","",null,null],[17,"_SC_2_SW_DEV","","",null,null],[17,"_SC_2_LOCALEDEF","","",null,null],[17,"_SC_UIO_MAXIOV","","",null,null],[17,"_SC_IOV_MAX","","",null,null],[17,"_SC_THREADS","","",null,null],[17,"_SC_THREAD_SAFE_FUNCTIONS","","",null,null],[17,"_SC_GETGR_R_SIZE_MAX","","",null,null],[17,"_SC_GETPW_R_SIZE_MAX","","",null,null],[17,"_SC_LOGIN_NAME_MAX","","",null,null],[17,"_SC_TTY_NAME_MAX","","",null,null],[17,"_SC_THREAD_DESTRUCTOR_ITERATIONS","","",null,null],[17,"_SC_THREAD_KEYS_MAX","","",null,null],[17,"_SC_THREAD_STACK_MIN","","",null,null],[17,"_SC_THREAD_THREADS_MAX","","",null,null],[17,"_SC_THREAD_ATTR_STACKADDR","","",null,null],[17,"_SC_THREAD_ATTR_STACKSIZE","","",null,null],[17,"_SC_THREAD_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_THREAD_PRIO_INHERIT","","",null,null],[17,"_SC_THREAD_PRIO_PROTECT","","",null,null],[17,"_SC_THREAD_PROCESS_SHARED","","",null,null],[17,"_SC_NPROCESSORS_CONF","","",null,null],[17,"_SC_NPROCESSORS_ONLN","","",null,null],[17,"_SC_PHYS_PAGES","","",null,null],[17,"_SC_AVPHYS_PAGES","","",null,null],[17,"_SC_ATEXIT_MAX","","",null,null],[17,"_SC_PASS_MAX","","",null,null],[17,"_SC_XOPEN_VERSION","","",null,null],[17,"_SC_XOPEN_XCU_VERSION","","",null,null],[17,"_SC_XOPEN_UNIX","","",null,null],[17,"_SC_XOPEN_CRYPT","","",null,null],[17,"_SC_XOPEN_ENH_I18N","","",null,null],[17,"_SC_XOPEN_SHM","","",null,null],[17,"_SC_2_CHAR_TERM","","",null,null],[17,"_SC_2_UPE","","",null,null],[17,"_SC_XOPEN_XPG2","","",null,null],[17,"_SC_XOPEN_XPG3","","",null,null],[17,"_SC_XOPEN_XPG4","","",null,null],[17,"_SC_NZERO","","",null,null],[17,"_SC_XBS5_ILP32_OFF32","","",null,null],[17,"_SC_XBS5_ILP32_OFFBIG","","",null,null],[17,"_SC_XBS5_LP64_OFF64","","",null,null],[17,"_SC_XBS5_LPBIG_OFFBIG","","",null,null],[17,"_SC_XOPEN_LEGACY","","",null,null],[17,"_SC_XOPEN_REALTIME","","",null,null],[17,"_SC_XOPEN_REALTIME_THREADS","","",null,null],[17,"_SC_ADVISORY_INFO","","",null,null],[17,"_SC_BARRIERS","","",null,null],[17,"_SC_CLOCK_SELECTION","","",null,null],[17,"_SC_CPUTIME","","",null,null],[17,"_SC_THREAD_CPUTIME","","",null,null],[17,"_SC_MONOTONIC_CLOCK","","",null,null],[17,"_SC_READER_WRITER_LOCKS","","",null,null],[17,"_SC_SPIN_LOCKS","","",null,null],[17,"_SC_REGEXP","","",null,null],[17,"_SC_SHELL","","",null,null],[17,"_SC_SPAWN","","",null,null],[17,"_SC_SPORADIC_SERVER","","",null,null],[17,"_SC_THREAD_SPORADIC_SERVER","","",null,null],[17,"_SC_TIMEOUTS","","",null,null],[17,"_SC_TYPED_MEMORY_OBJECTS","","",null,null],[17,"_SC_2_PBS","","",null,null],[17,"_SC_2_PBS_ACCOUNTING","","",null,null],[17,"_SC_2_PBS_LOCATE","","",null,null],[17,"_SC_2_PBS_MESSAGE","","",null,null],[17,"_SC_2_PBS_TRACK","","",null,null],[17,"_SC_SYMLOOP_MAX","","",null,null],[17,"_SC_STREAMS","","",null,null],[17,"_SC_2_PBS_CHECKPOINT","","",null,null],[17,"_SC_V6_ILP32_OFF32","","",null,null],[17,"_SC_V6_ILP32_OFFBIG","","",null,null],[17,"_SC_V6_LP64_OFF64","","",null,null],[17,"_SC_V6_LPBIG_OFFBIG","","",null,null],[17,"_SC_HOST_NAME_MAX","","",null,null],[17,"_SC_TRACE","","",null,null],[17,"_SC_TRACE_EVENT_FILTER","","",null,null],[17,"_SC_TRACE_INHERIT","","",null,null],[17,"_SC_TRACE_LOG","","",null,null],[17,"_SC_IPV6","","",null,null],[17,"_SC_RAW_SOCKETS","","",null,null],[17,"_SC_V7_ILP32_OFF32","","",null,null],[17,"_SC_V7_ILP32_OFFBIG","","",null,null],[17,"_SC_V7_LP64_OFF64","","",null,null],[17,"_SC_V7_LPBIG_OFFBIG","","",null,null],[17,"_SC_SS_REPL_MAX","","",null,null],[17,"_SC_TRACE_EVENT_NAME_MAX","","",null,null],[17,"_SC_TRACE_NAME_MAX","","",null,null],[17,"_SC_TRACE_SYS_MAX","","",null,null],[17,"_SC_TRACE_USER_EVENT_MAX","","",null,null],[17,"_SC_XOPEN_STREAMS","","",null,null],[17,"_SC_THREAD_ROBUST_PRIO_INHERIT","","",null,null],[17,"_SC_THREAD_ROBUST_PRIO_PROTECT","","",null,null],[17,"RLIM_SAVED_MAX","","",null,null],[17,"RLIM_SAVED_CUR","","",null,null],[17,"GLOB_ERR","","",null,null],[17,"GLOB_MARK","","",null,null],[17,"GLOB_NOSORT","","",null,null],[17,"GLOB_DOOFFS","","",null,null],[17,"GLOB_NOCHECK","","",null,null],[17,"GLOB_APPEND","","",null,null],[17,"GLOB_NOESCAPE","","",null,null],[17,"GLOB_NOSPACE","","",null,null],[17,"GLOB_ABORTED","","",null,null],[17,"GLOB_NOMATCH","","",null,null],[17,"POSIX_MADV_NORMAL","","",null,null],[17,"POSIX_MADV_RANDOM","","",null,null],[17,"POSIX_MADV_SEQUENTIAL","","",null,null],[17,"POSIX_MADV_WILLNEED","","",null,null],[17,"S_IEXEC","","",null,null],[17,"S_IWRITE","","",null,null],[17,"S_IREAD","","",null,null],[17,"F_LOCK","","",null,null],[17,"F_TEST","","",null,null],[17,"F_TLOCK","","",null,null],[17,"F_ULOCK","","",null,null],[17,"F_SEAL_FUTURE_WRITE","","",null,null],[17,"IFF_LOWER_UP","","",null,null],[17,"IFF_DORMANT","","",null,null],[17,"IFF_ECHO","","",null,null],[17,"IFA_UNSPEC","","",null,null],[17,"IFA_ADDRESS","","",null,null],[17,"IFA_LOCAL","","",null,null],[17,"IFA_LABEL","","",null,null],[17,"IFA_BROADCAST","","",null,null],[17,"IFA_ANYCAST","","",null,null],[17,"IFA_CACHEINFO","","",null,null],[17,"IFA_MULTICAST","","",null,null],[17,"IFA_F_SECONDARY","","",null,null],[17,"IFA_F_TEMPORARY","","",null,null],[17,"IFA_F_NODAD","","",null,null],[17,"IFA_F_OPTIMISTIC","","",null,null],[17,"IFA_F_DADFAILED","","",null,null],[17,"IFA_F_HOMEADDRESS","","",null,null],[17,"IFA_F_DEPRECATED","","",null,null],[17,"IFA_F_TENTATIVE","","",null,null],[17,"IFA_F_PERMANENT","","",null,null],[17,"IFLA_UNSPEC","","",null,null],[17,"IFLA_ADDRESS","","",null,null],[17,"IFLA_BROADCAST","","",null,null],[17,"IFLA_IFNAME","","",null,null],[17,"IFLA_MTU","","",null,null],[17,"IFLA_LINK","","",null,null],[17,"IFLA_QDISC","","",null,null],[17,"IFLA_STATS","","",null,null],[17,"IFLA_COST","","",null,null],[17,"IFLA_PRIORITY","","",null,null],[17,"IFLA_MASTER","","",null,null],[17,"IFLA_WIRELESS","","",null,null],[17,"IFLA_PROTINFO","","",null,null],[17,"IFLA_TXQLEN","","",null,null],[17,"IFLA_MAP","","",null,null],[17,"IFLA_WEIGHT","","",null,null],[17,"IFLA_OPERSTATE","","",null,null],[17,"IFLA_LINKMODE","","",null,null],[17,"IFLA_LINKINFO","","",null,null],[17,"IFLA_NET_NS_PID","","",null,null],[17,"IFLA_IFALIAS","","",null,null],[17,"IFLA_NUM_VF","","",null,null],[17,"IFLA_VFINFO_LIST","","",null,null],[17,"IFLA_STATS64","","",null,null],[17,"IFLA_VF_PORTS","","",null,null],[17,"IFLA_PORT_SELF","","",null,null],[17,"IFLA_AF_SPEC","","",null,null],[17,"IFLA_GROUP","","",null,null],[17,"IFLA_NET_NS_FD","","",null,null],[17,"IFLA_EXT_MASK","","",null,null],[17,"IFLA_PROMISCUITY","","",null,null],[17,"IFLA_NUM_TX_QUEUES","","",null,null],[17,"IFLA_NUM_RX_QUEUES","","",null,null],[17,"IFLA_CARRIER","","",null,null],[17,"IFLA_PHYS_PORT_ID","","",null,null],[17,"IFLA_CARRIER_CHANGES","","",null,null],[17,"IFLA_PHYS_SWITCH_ID","","",null,null],[17,"IFLA_LINK_NETNSID","","",null,null],[17,"IFLA_PHYS_PORT_NAME","","",null,null],[17,"IFLA_PROTO_DOWN","","",null,null],[17,"IFLA_INFO_UNSPEC","","",null,null],[17,"IFLA_INFO_KIND","","",null,null],[17,"IFLA_INFO_DATA","","",null,null],[17,"IFLA_INFO_XSTATS","","",null,null],[17,"IFLA_INFO_SLAVE_KIND","","",null,null],[17,"IFLA_INFO_SLAVE_DATA","","",null,null],[17,"IFF_TUN","","",null,null],[17,"IFF_TAP","","",null,null],[17,"IFF_NO_PI","","",null,null],[17,"TUN_READQ_SIZE","","",null,null],[17,"TUN_TUN_DEV","","",null,null],[17,"TUN_TAP_DEV","","",null,null],[17,"TUN_TYPE_MASK","","",null,null],[17,"IFF_ONE_QUEUE","","",null,null],[17,"IFF_VNET_HDR","","",null,null],[17,"IFF_TUN_EXCL","","",null,null],[17,"IFF_MULTI_QUEUE","","",null,null],[17,"IFF_ATTACH_QUEUE","","",null,null],[17,"IFF_DETACH_QUEUE","","",null,null],[17,"IFF_PERSIST","","",null,null],[17,"IFF_NOFILTER","","",null,null],[17,"ST_RDONLY","","",null,null],[17,"ST_NOSUID","","",null,null],[17,"ST_NODEV","","",null,null],[17,"ST_NOEXEC","","",null,null],[17,"ST_SYNCHRONOUS","","",null,null],[17,"ST_MANDLOCK","","",null,null],[17,"ST_WRITE","","",null,null],[17,"ST_APPEND","","",null,null],[17,"ST_IMMUTABLE","","",null,null],[17,"ST_NOATIME","","",null,null],[17,"ST_NODIRATIME","","",null,null],[17,"RTLD_NEXT","","",null,null],[17,"RTLD_DEFAULT","","",null,null],[17,"RTLD_NODELETE","","",null,null],[17,"RTLD_NOW","","",null,null],[17,"TCP_MD5SIG","","",null,null],[17,"PTHREAD_MUTEX_INITIALIZER","","",null,null],[17,"PTHREAD_COND_INITIALIZER","","",null,null],[17,"PTHREAD_RWLOCK_INITIALIZER","","",null,null],[17,"PTHREAD_MUTEX_NORMAL","","",null,null],[17,"PTHREAD_MUTEX_RECURSIVE","","",null,null],[17,"PTHREAD_MUTEX_ERRORCHECK","","",null,null],[17,"PTHREAD_MUTEX_DEFAULT","","",null,null],[17,"PTHREAD_PROCESS_PRIVATE","","",null,null],[17,"PTHREAD_PROCESS_SHARED","","",null,null],[17,"__SIZEOF_PTHREAD_COND_T","","",null,null],[17,"RENAME_NOREPLACE","","",null,null],[17,"RENAME_EXCHANGE","","",null,null],[17,"RENAME_WHITEOUT","","",null,null],[17,"SCHED_OTHER","","",null,null],[17,"SCHED_FIFO","","",null,null],[17,"SCHED_RR","","",null,null],[17,"SCHED_BATCH","","",null,null],[17,"SCHED_IDLE","","",null,null],[17,"SCHED_RESET_ON_FORK","","",null,null],[17,"IPPROTO_HOPOPTS","","Hop-by-hop option header",null,null],[17,"IPPROTO_IGMP","","group mgmt protocol",null,null],[17,"IPPROTO_IPIP","","for compatibility",null,null],[17,"IPPROTO_EGP","","exterior gateway protocol",null,null],[17,"IPPROTO_PUP","","pup",null,null],[17,"IPPROTO_IDP","","xns idp",null,null],[17,"IPPROTO_TP","","tp-4 w/ class negotiation",null,null],[17,"IPPROTO_DCCP","","DCCP",null,null],[17,"IPPROTO_ROUTING","","IP6 routing header",null,null],[17,"IPPROTO_FRAGMENT","","IP6 fragmentation header",null,null],[17,"IPPROTO_RSVP","","resource reservation",null,null],[17,"IPPROTO_GRE","","General Routing Encap.",null,null],[17,"IPPROTO_ESP","","IP6 Encap Sec. Payload",null,null],[17,"IPPROTO_AH","","IP6 Auth Header",null,null],[17,"IPPROTO_NONE","","IP6 no next header",null,null],[17,"IPPROTO_DSTOPTS","","IP6 destination option",null,null],[17,"IPPROTO_MTP","","",null,null],[17,"IPPROTO_BEETPH","","",null,null],[17,"IPPROTO_ENCAP","","encapsulation header",null,null],[17,"IPPROTO_PIM","","Protocol indep. multicast",null,null],[17,"IPPROTO_COMP","","IP Payload Comp. Protocol",null,null],[17,"IPPROTO_SCTP","","SCTP",null,null],[17,"IPPROTO_MH","","",null,null],[17,"IPPROTO_UDPLITE","","",null,null],[17,"IPPROTO_MPLS","","",null,null],[17,"IPPROTO_RAW","","raw IP packet",null,null],[17,"IPPROTO_MAX","","",null,null],[17,"AF_IB","","",null,null],[17,"AF_MPLS","","",null,null],[17,"AF_NFC","","",null,null],[17,"AF_VSOCK","","",null,null],[17,"AF_XDP","","",null,null],[17,"PF_IB","","",null,null],[17,"PF_MPLS","","",null,null],[17,"PF_NFC","","",null,null],[17,"PF_VSOCK","","",null,null],[17,"PF_XDP","","",null,null],[17,"IPC_PRIVATE","","",null,null],[17,"IPC_CREAT","","",null,null],[17,"IPC_EXCL","","",null,null],[17,"IPC_NOWAIT","","",null,null],[17,"IPC_RMID","","",null,null],[17,"IPC_SET","","",null,null],[17,"IPC_STAT","","",null,null],[17,"IPC_INFO","","",null,null],[17,"MSG_STAT","","",null,null],[17,"MSG_INFO","","",null,null],[17,"MSG_NOERROR","","",null,null],[17,"MSG_EXCEPT","","",null,null],[17,"MSG_COPY","","",null,null],[17,"SHM_R","","",null,null],[17,"SHM_W","","",null,null],[17,"SHM_RDONLY","","",null,null],[17,"SHM_RND","","",null,null],[17,"SHM_REMAP","","",null,null],[17,"SHM_EXEC","","",null,null],[17,"SHM_LOCK","","",null,null],[17,"SHM_UNLOCK","","",null,null],[17,"SHM_HUGETLB","","",null,null],[17,"SHM_NORESERVE","","",null,null],[17,"EPOLLRDHUP","","",null,null],[17,"EPOLLEXCLUSIVE","","",null,null],[17,"EPOLLONESHOT","","",null,null],[17,"QFMT_VFS_OLD","","",null,null],[17,"QFMT_VFS_V0","","",null,null],[17,"QFMT_VFS_V1","","",null,null],[17,"EFD_SEMAPHORE","","",null,null],[17,"LOG_NFACILITIES","","",null,null],[17,"SEM_FAILED","","",null,null],[17,"RB_AUTOBOOT","","",null,null],[17,"RB_HALT_SYSTEM","","",null,null],[17,"RB_ENABLE_CAD","","",null,null],[17,"RB_DISABLE_CAD","","",null,null],[17,"RB_POWER_OFF","","",null,null],[17,"RB_SW_SUSPEND","","",null,null],[17,"RB_KEXEC","","",null,null],[17,"AI_PASSIVE","","",null,null],[17,"AI_CANONNAME","","",null,null],[17,"AI_NUMERICHOST","","",null,null],[17,"AI_V4MAPPED","","",null,null],[17,"AI_ALL","","",null,null],[17,"AI_ADDRCONFIG","","",null,null],[17,"AI_NUMERICSERV","","",null,null],[17,"EAI_BADFLAGS","","",null,null],[17,"EAI_NONAME","","",null,null],[17,"EAI_AGAIN","","",null,null],[17,"EAI_FAIL","","",null,null],[17,"EAI_NODATA","","",null,null],[17,"EAI_FAMILY","","",null,null],[17,"EAI_SOCKTYPE","","",null,null],[17,"EAI_SERVICE","","",null,null],[17,"EAI_MEMORY","","",null,null],[17,"EAI_SYSTEM","","",null,null],[17,"EAI_OVERFLOW","","",null,null],[17,"NI_NUMERICHOST","","",null,null],[17,"NI_NUMERICSERV","","",null,null],[17,"NI_NOFQDN","","",null,null],[17,"NI_NAMEREQD","","",null,null],[17,"NI_DGRAM","","",null,null],[17,"SYNC_FILE_RANGE_WAIT_BEFORE","","",null,null],[17,"SYNC_FILE_RANGE_WRITE","","",null,null],[17,"SYNC_FILE_RANGE_WAIT_AFTER","","",null,null],[17,"AIO_CANCELED","","",null,null],[17,"AIO_NOTCANCELED","","",null,null],[17,"AIO_ALLDONE","","",null,null],[17,"LIO_READ","","",null,null],[17,"LIO_WRITE","","",null,null],[17,"LIO_NOP","","",null,null],[17,"LIO_WAIT","","",null,null],[17,"LIO_NOWAIT","","",null,null],[17,"MREMAP_MAYMOVE","","",null,null],[17,"MREMAP_FIXED","","",null,null],[17,"PR_SET_PDEATHSIG","","",null,null],[17,"PR_GET_PDEATHSIG","","",null,null],[17,"PR_GET_DUMPABLE","","",null,null],[17,"PR_SET_DUMPABLE","","",null,null],[17,"PR_GET_UNALIGN","","",null,null],[17,"PR_SET_UNALIGN","","",null,null],[17,"PR_UNALIGN_NOPRINT","","",null,null],[17,"PR_UNALIGN_SIGBUS","","",null,null],[17,"PR_GET_KEEPCAPS","","",null,null],[17,"PR_SET_KEEPCAPS","","",null,null],[17,"PR_GET_FPEMU","","",null,null],[17,"PR_SET_FPEMU","","",null,null],[17,"PR_FPEMU_NOPRINT","","",null,null],[17,"PR_FPEMU_SIGFPE","","",null,null],[17,"PR_GET_FPEXC","","",null,null],[17,"PR_SET_FPEXC","","",null,null],[17,"PR_FP_EXC_SW_ENABLE","","",null,null],[17,"PR_FP_EXC_DIV","","",null,null],[17,"PR_FP_EXC_OVF","","",null,null],[17,"PR_FP_EXC_UND","","",null,null],[17,"PR_FP_EXC_RES","","",null,null],[17,"PR_FP_EXC_INV","","",null,null],[17,"PR_FP_EXC_DISABLED","","",null,null],[17,"PR_FP_EXC_NONRECOV","","",null,null],[17,"PR_FP_EXC_ASYNC","","",null,null],[17,"PR_FP_EXC_PRECISE","","",null,null],[17,"PR_GET_TIMING","","",null,null],[17,"PR_SET_TIMING","","",null,null],[17,"PR_TIMING_STATISTICAL","","",null,null],[17,"PR_TIMING_TIMESTAMP","","",null,null],[17,"PR_SET_NAME","","",null,null],[17,"PR_GET_NAME","","",null,null],[17,"PR_GET_ENDIAN","","",null,null],[17,"PR_SET_ENDIAN","","",null,null],[17,"PR_ENDIAN_BIG","","",null,null],[17,"PR_ENDIAN_LITTLE","","",null,null],[17,"PR_ENDIAN_PPC_LITTLE","","",null,null],[17,"PR_GET_SECCOMP","","",null,null],[17,"PR_SET_SECCOMP","","",null,null],[17,"PR_CAPBSET_READ","","",null,null],[17,"PR_CAPBSET_DROP","","",null,null],[17,"PR_GET_TSC","","",null,null],[17,"PR_SET_TSC","","",null,null],[17,"PR_TSC_ENABLE","","",null,null],[17,"PR_TSC_SIGSEGV","","",null,null],[17,"PR_GET_SECUREBITS","","",null,null],[17,"PR_SET_SECUREBITS","","",null,null],[17,"PR_SET_TIMERSLACK","","",null,null],[17,"PR_GET_TIMERSLACK","","",null,null],[17,"PR_TASK_PERF_EVENTS_DISABLE","","",null,null],[17,"PR_TASK_PERF_EVENTS_ENABLE","","",null,null],[17,"PR_MCE_KILL","","",null,null],[17,"PR_MCE_KILL_CLEAR","","",null,null],[17,"PR_MCE_KILL_SET","","",null,null],[17,"PR_MCE_KILL_LATE","","",null,null],[17,"PR_MCE_KILL_EARLY","","",null,null],[17,"PR_MCE_KILL_DEFAULT","","",null,null],[17,"PR_MCE_KILL_GET","","",null,null],[17,"PR_SET_MM","","",null,null],[17,"PR_SET_MM_START_CODE","","",null,null],[17,"PR_SET_MM_END_CODE","","",null,null],[17,"PR_SET_MM_START_DATA","","",null,null],[17,"PR_SET_MM_END_DATA","","",null,null],[17,"PR_SET_MM_START_STACK","","",null,null],[17,"PR_SET_MM_START_BRK","","",null,null],[17,"PR_SET_MM_BRK","","",null,null],[17,"PR_SET_MM_ARG_START","","",null,null],[17,"PR_SET_MM_ARG_END","","",null,null],[17,"PR_SET_MM_ENV_START","","",null,null],[17,"PR_SET_MM_ENV_END","","",null,null],[17,"PR_SET_MM_AUXV","","",null,null],[17,"PR_SET_MM_EXE_FILE","","",null,null],[17,"PR_SET_MM_MAP","","",null,null],[17,"PR_SET_MM_MAP_SIZE","","",null,null],[17,"PR_SET_PTRACER","","",null,null],[17,"PR_SET_CHILD_SUBREAPER","","",null,null],[17,"PR_GET_CHILD_SUBREAPER","","",null,null],[17,"PR_SET_NO_NEW_PRIVS","","",null,null],[17,"PR_GET_NO_NEW_PRIVS","","",null,null],[17,"PR_GET_TID_ADDRESS","","",null,null],[17,"PR_SET_THP_DISABLE","","",null,null],[17,"PR_GET_THP_DISABLE","","",null,null],[17,"PR_MPX_ENABLE_MANAGEMENT","","",null,null],[17,"PR_MPX_DISABLE_MANAGEMENT","","",null,null],[17,"PR_SET_FP_MODE","","",null,null],[17,"PR_GET_FP_MODE","","",null,null],[17,"PR_FP_MODE_FR","","",null,null],[17,"PR_FP_MODE_FRE","","",null,null],[17,"PR_CAP_AMBIENT","","",null,null],[17,"PR_CAP_AMBIENT_IS_SET","","",null,null],[17,"PR_CAP_AMBIENT_RAISE","","",null,null],[17,"PR_CAP_AMBIENT_LOWER","","",null,null],[17,"PR_CAP_AMBIENT_CLEAR_ALL","","",null,null],[17,"GRND_NONBLOCK","","",null,null],[17,"GRND_RANDOM","","",null,null],[17,"SECCOMP_MODE_DISABLED","","",null,null],[17,"SECCOMP_MODE_STRICT","","",null,null],[17,"SECCOMP_MODE_FILTER","","",null,null],[17,"ITIMER_REAL","","",null,null],[17,"ITIMER_VIRTUAL","","",null,null],[17,"ITIMER_PROF","","",null,null],[17,"TFD_CLOEXEC","","",null,null],[17,"TFD_NONBLOCK","","",null,null],[17,"TFD_TIMER_ABSTIME","","",null,null],[17,"XATTR_CREATE","","",null,null],[17,"XATTR_REPLACE","","",null,null],[17,"_POSIX_VDISABLE","","",null,null],[17,"FALLOC_FL_KEEP_SIZE","","",null,null],[17,"FALLOC_FL_PUNCH_HOLE","","",null,null],[17,"FALLOC_FL_COLLAPSE_RANGE","","",null,null],[17,"FALLOC_FL_ZERO_RANGE","","",null,null],[17,"FALLOC_FL_INSERT_RANGE","","",null,null],[17,"FALLOC_FL_UNSHARE_RANGE","","",null,null],[17,"ENOATTR","","",null,null],[17,"SO_ORIGINAL_DST","","",null,null],[17,"IP_ORIGDSTADDR","","",null,null],[17,"IP_RECVORIGDSTADDR","","",null,null],[17,"IPV6_ORIGDSTADDR","","",null,null],[17,"IPV6_RECVORIGDSTADDR","","",null,null],[17,"IPV6_FLOWLABEL_MGR","","",null,null],[17,"IPV6_FLOWINFO_SEND","","",null,null],[17,"IPV6_FLOWINFO_FLOWLABEL","","",null,null],[17,"IPV6_FLOWINFO_PRIORITY","","",null,null],[17,"IUTF8","","",null,null],[17,"CMSPAR","","",null,null],[17,"MFD_CLOEXEC","","",null,null],[17,"MFD_ALLOW_SEALING","","",null,null],[17,"MFD_HUGETLB","","",null,null],[17,"PT_NULL","","",null,null],[17,"PT_LOAD","","",null,null],[17,"PT_DYNAMIC","","",null,null],[17,"PT_INTERP","","",null,null],[17,"PT_NOTE","","",null,null],[17,"PT_SHLIB","","",null,null],[17,"PT_PHDR","","",null,null],[17,"PT_TLS","","",null,null],[17,"PT_NUM","","",null,null],[17,"PT_LOOS","","",null,null],[17,"PT_GNU_EH_FRAME","","",null,null],[17,"PT_GNU_STACK","","",null,null],[17,"PT_GNU_RELRO","","",null,null],[17,"ETH_ALEN","","",null,null],[17,"ETH_HLEN","","",null,null],[17,"ETH_ZLEN","","",null,null],[17,"ETH_DATA_LEN","","",null,null],[17,"ETH_FRAME_LEN","","",null,null],[17,"ETH_FCS_LEN","","",null,null],[17,"ETH_P_LOOP","","",null,null],[17,"ETH_P_PUP","","",null,null],[17,"ETH_P_PUPAT","","",null,null],[17,"ETH_P_IP","","",null,null],[17,"ETH_P_X25","","",null,null],[17,"ETH_P_ARP","","",null,null],[17,"ETH_P_BPQ","","",null,null],[17,"ETH_P_IEEEPUP","","",null,null],[17,"ETH_P_IEEEPUPAT","","",null,null],[17,"ETH_P_BATMAN","","",null,null],[17,"ETH_P_DEC","","",null,null],[17,"ETH_P_DNA_DL","","",null,null],[17,"ETH_P_DNA_RC","","",null,null],[17,"ETH_P_DNA_RT","","",null,null],[17,"ETH_P_LAT","","",null,null],[17,"ETH_P_DIAG","","",null,null],[17,"ETH_P_CUST","","",null,null],[17,"ETH_P_SCA","","",null,null],[17,"ETH_P_TEB","","",null,null],[17,"ETH_P_RARP","","",null,null],[17,"ETH_P_ATALK","","",null,null],[17,"ETH_P_AARP","","",null,null],[17,"ETH_P_8021Q","","",null,null],[17,"ETH_P_IPX","","",null,null],[17,"ETH_P_IPV6","","",null,null],[17,"ETH_P_PAUSE","","",null,null],[17,"ETH_P_SLOW","","",null,null],[17,"ETH_P_WCCP","","",null,null],[17,"ETH_P_MPLS_UC","","",null,null],[17,"ETH_P_MPLS_MC","","",null,null],[17,"ETH_P_ATMMPOA","","",null,null],[17,"ETH_P_PPP_DISC","","",null,null],[17,"ETH_P_PPP_SES","","",null,null],[17,"ETH_P_LINK_CTL","","",null,null],[17,"ETH_P_ATMFATE","","",null,null],[17,"ETH_P_PAE","","",null,null],[17,"ETH_P_AOE","","",null,null],[17,"ETH_P_8021AD","","",null,null],[17,"ETH_P_802_EX1","","",null,null],[17,"ETH_P_TIPC","","",null,null],[17,"ETH_P_MACSEC","","",null,null],[17,"ETH_P_8021AH","","",null,null],[17,"ETH_P_MVRP","","",null,null],[17,"ETH_P_1588","","",null,null],[17,"ETH_P_PRP","","",null,null],[17,"ETH_P_FCOE","","",null,null],[17,"ETH_P_TDLS","","",null,null],[17,"ETH_P_FIP","","",null,null],[17,"ETH_P_80221","","",null,null],[17,"ETH_P_LOOPBACK","","",null,null],[17,"ETH_P_QINQ1","","",null,null],[17,"ETH_P_QINQ2","","",null,null],[17,"ETH_P_QINQ3","","",null,null],[17,"ETH_P_EDSA","","",null,null],[17,"ETH_P_AF_IUCV","","",null,null],[17,"ETH_P_802_3_MIN","","",null,null],[17,"ETH_P_802_3","","",null,null],[17,"ETH_P_AX25","","",null,null],[17,"ETH_P_ALL","","",null,null],[17,"ETH_P_802_2","","",null,null],[17,"ETH_P_SNAP","","",null,null],[17,"ETH_P_DDCMP","","",null,null],[17,"ETH_P_WAN_PPP","","",null,null],[17,"ETH_P_PPP_MP","","",null,null],[17,"ETH_P_LOCALTALK","","",null,null],[17,"ETH_P_CANFD","","",null,null],[17,"ETH_P_PPPTALK","","",null,null],[17,"ETH_P_TR_802_2","","",null,null],[17,"ETH_P_MOBITEX","","",null,null],[17,"ETH_P_CONTROL","","",null,null],[17,"ETH_P_IRDA","","",null,null],[17,"ETH_P_ECONET","","",null,null],[17,"ETH_P_HDLC","","",null,null],[17,"ETH_P_ARCNET","","",null,null],[17,"ETH_P_DSA","","",null,null],[17,"ETH_P_TRAILER","","",null,null],[17,"ETH_P_PHONET","","",null,null],[17,"ETH_P_IEEE802154","","",null,null],[17,"ETH_P_CAIF","","",null,null],[17,"POSIX_SPAWN_RESETIDS","","",null,null],[17,"POSIX_SPAWN_SETPGROUP","","",null,null],[17,"POSIX_SPAWN_SETSIGDEF","","",null,null],[17,"POSIX_SPAWN_SETSIGMASK","","",null,null],[17,"POSIX_SPAWN_SETSCHEDPARAM","","",null,null],[17,"POSIX_SPAWN_SETSCHEDULER","","",null,null],[17,"NLMSG_NOOP","","",null,null],[17,"NLMSG_ERROR","","",null,null],[17,"NLMSG_DONE","","",null,null],[17,"NLMSG_OVERRUN","","",null,null],[17,"NLMSG_MIN_TYPE","","",null,null],[17,"NFNLGRP_NONE","","",null,null],[17,"NFNLGRP_CONNTRACK_NEW","","",null,null],[17,"NFNLGRP_CONNTRACK_UPDATE","","",null,null],[17,"NFNLGRP_CONNTRACK_DESTROY","","",null,null],[17,"NFNLGRP_CONNTRACK_EXP_NEW","","",null,null],[17,"NFNLGRP_CONNTRACK_EXP_UPDATE","","",null,null],[17,"NFNLGRP_CONNTRACK_EXP_DESTROY","","",null,null],[17,"NFNLGRP_NFTABLES","","",null,null],[17,"NFNLGRP_ACCT_QUOTA","","",null,null],[17,"NFNETLINK_V0","","",null,null],[17,"NFNL_SUBSYS_NONE","","",null,null],[17,"NFNL_SUBSYS_CTNETLINK","","",null,null],[17,"NFNL_SUBSYS_CTNETLINK_EXP","","",null,null],[17,"NFNL_SUBSYS_QUEUE","","",null,null],[17,"NFNL_SUBSYS_ULOG","","",null,null],[17,"NFNL_SUBSYS_OSF","","",null,null],[17,"NFNL_SUBSYS_IPSET","","",null,null],[17,"NFNL_SUBSYS_ACCT","","",null,null],[17,"NFNL_SUBSYS_CTNETLINK_TIMEOUT","","",null,null],[17,"NFNL_SUBSYS_CTHELPER","","",null,null],[17,"NFNL_SUBSYS_NFTABLES","","",null,null],[17,"NFNL_SUBSYS_NFT_COMPAT","","",null,null],[17,"NFNL_SUBSYS_COUNT","","",null,null],[17,"NFNL_MSG_BATCH_BEGIN","","",null,null],[17,"NFNL_MSG_BATCH_END","","",null,null],[17,"NFULNL_MSG_PACKET","","",null,null],[17,"NFULNL_MSG_CONFIG","","",null,null],[17,"NFULA_UNSPEC","","",null,null],[17,"NFULA_PACKET_HDR","","",null,null],[17,"NFULA_MARK","","",null,null],[17,"NFULA_TIMESTAMP","","",null,null],[17,"NFULA_IFINDEX_INDEV","","",null,null],[17,"NFULA_IFINDEX_OUTDEV","","",null,null],[17,"NFULA_IFINDEX_PHYSINDEV","","",null,null],[17,"NFULA_IFINDEX_PHYSOUTDEV","","",null,null],[17,"NFULA_HWADDR","","",null,null],[17,"NFULA_PAYLOAD","","",null,null],[17,"NFULA_PREFIX","","",null,null],[17,"NFULA_UID","","",null,null],[17,"NFULA_SEQ","","",null,null],[17,"NFULA_SEQ_GLOBAL","","",null,null],[17,"NFULA_GID","","",null,null],[17,"NFULA_HWTYPE","","",null,null],[17,"NFULA_HWHEADER","","",null,null],[17,"NFULA_HWLEN","","",null,null],[17,"NFULA_CT","","",null,null],[17,"NFULA_CT_INFO","","",null,null],[17,"NFULNL_CFG_CMD_NONE","","",null,null],[17,"NFULNL_CFG_CMD_BIND","","",null,null],[17,"NFULNL_CFG_CMD_UNBIND","","",null,null],[17,"NFULNL_CFG_CMD_PF_BIND","","",null,null],[17,"NFULNL_CFG_CMD_PF_UNBIND","","",null,null],[17,"NFULA_CFG_UNSPEC","","",null,null],[17,"NFULA_CFG_CMD","","",null,null],[17,"NFULA_CFG_MODE","","",null,null],[17,"NFULA_CFG_NLBUFSIZ","","",null,null],[17,"NFULA_CFG_TIMEOUT","","",null,null],[17,"NFULA_CFG_QTHRESH","","",null,null],[17,"NFULA_CFG_FLAGS","","",null,null],[17,"NFULNL_COPY_NONE","","",null,null],[17,"NFULNL_COPY_META","","",null,null],[17,"NFULNL_COPY_PACKET","","",null,null],[17,"NFULNL_CFG_F_SEQ","","",null,null],[17,"NFULNL_CFG_F_SEQ_GLOBAL","","",null,null],[17,"NFULNL_CFG_F_CONNTRACK","","",null,null],[17,"GENL_NAMSIZ","","",null,null],[17,"GENL_MIN_ID","","",null,null],[17,"GENL_MAX_ID","","",null,null],[17,"GENL_ADMIN_PERM","","",null,null],[17,"GENL_CMD_CAP_DO","","",null,null],[17,"GENL_CMD_CAP_DUMP","","",null,null],[17,"GENL_CMD_CAP_HASPOL","","",null,null],[17,"GENL_ID_CTRL","","",null,null],[17,"CTRL_CMD_UNSPEC","","",null,null],[17,"CTRL_CMD_NEWFAMILY","","",null,null],[17,"CTRL_CMD_DELFAMILY","","",null,null],[17,"CTRL_CMD_GETFAMILY","","",null,null],[17,"CTRL_CMD_NEWOPS","","",null,null],[17,"CTRL_CMD_DELOPS","","",null,null],[17,"CTRL_CMD_GETOPS","","",null,null],[17,"CTRL_CMD_NEWMCAST_GRP","","",null,null],[17,"CTRL_CMD_DELMCAST_GRP","","",null,null],[17,"CTRL_CMD_GETMCAST_GRP","","",null,null],[17,"CTRL_ATTR_UNSPEC","","",null,null],[17,"CTRL_ATTR_FAMILY_ID","","",null,null],[17,"CTRL_ATTR_FAMILY_NAME","","",null,null],[17,"CTRL_ATTR_VERSION","","",null,null],[17,"CTRL_ATTR_HDRSIZE","","",null,null],[17,"CTRL_ATTR_MAXATTR","","",null,null],[17,"CTRL_ATTR_OPS","","",null,null],[17,"CTRL_ATTR_MCAST_GROUPS","","",null,null],[17,"CTRL_ATTR_OP_UNSPEC","","",null,null],[17,"CTRL_ATTR_OP_ID","","",null,null],[17,"CTRL_ATTR_OP_FLAGS","","",null,null],[17,"CTRL_ATTR_MCAST_GRP_UNSPEC","","",null,null],[17,"CTRL_ATTR_MCAST_GRP_NAME","","",null,null],[17,"CTRL_ATTR_MCAST_GRP_ID","","",null,null],[17,"PACKET_ADD_MEMBERSHIP","","",null,null],[17,"PACKET_DROP_MEMBERSHIP","","",null,null],[17,"PACKET_MR_MULTICAST","","",null,null],[17,"PACKET_MR_PROMISC","","",null,null],[17,"PACKET_MR_ALLMULTI","","",null,null],[17,"PACKET_MR_UNICAST","","",null,null],[17,"NF_DROP","","",null,null],[17,"NF_ACCEPT","","",null,null],[17,"NF_STOLEN","","",null,null],[17,"NF_QUEUE","","",null,null],[17,"NF_REPEAT","","",null,null],[17,"NF_STOP","","",null,null],[17,"NF_MAX_VERDICT","","",null,null],[17,"NF_VERDICT_MASK","","",null,null],[17,"NF_VERDICT_FLAG_QUEUE_BYPASS","","",null,null],[17,"NF_VERDICT_QMASK","","",null,null],[17,"NF_VERDICT_QBITS","","",null,null],[17,"NF_VERDICT_BITS","","",null,null],[17,"NF_INET_PRE_ROUTING","","",null,null],[17,"NF_INET_LOCAL_IN","","",null,null],[17,"NF_INET_FORWARD","","",null,null],[17,"NF_INET_LOCAL_OUT","","",null,null],[17,"NF_INET_POST_ROUTING","","",null,null],[17,"NF_INET_NUMHOOKS","","",null,null],[17,"NFPROTO_UNSPEC","","",null,null],[17,"NFPROTO_IPV4","","",null,null],[17,"NFPROTO_ARP","","",null,null],[17,"NFPROTO_BRIDGE","","",null,null],[17,"NFPROTO_IPV6","","",null,null],[17,"NFPROTO_DECNET","","",null,null],[17,"NFPROTO_NUMPROTO","","",null,null],[17,"NF_IP_PRE_ROUTING","","",null,null],[17,"NF_IP_LOCAL_IN","","",null,null],[17,"NF_IP_FORWARD","","",null,null],[17,"NF_IP_LOCAL_OUT","","",null,null],[17,"NF_IP_POST_ROUTING","","",null,null],[17,"NF_IP_NUMHOOKS","","",null,null],[17,"NF_IP_PRI_FIRST","","",null,null],[17,"NF_IP_PRI_CONNTRACK_DEFRAG","","",null,null],[17,"NF_IP_PRI_RAW","","",null,null],[17,"NF_IP_PRI_SELINUX_FIRST","","",null,null],[17,"NF_IP_PRI_CONNTRACK","","",null,null],[17,"NF_IP_PRI_MANGLE","","",null,null],[17,"NF_IP_PRI_NAT_DST","","",null,null],[17,"NF_IP_PRI_FILTER","","",null,null],[17,"NF_IP_PRI_SECURITY","","",null,null],[17,"NF_IP_PRI_NAT_SRC","","",null,null],[17,"NF_IP_PRI_SELINUX_LAST","","",null,null],[17,"NF_IP_PRI_CONNTRACK_HELPER","","",null,null],[17,"NF_IP_PRI_CONNTRACK_CONFIRM","","",null,null],[17,"NF_IP_PRI_LAST","","",null,null],[17,"NF_IP6_PRE_ROUTING","","",null,null],[17,"NF_IP6_LOCAL_IN","","",null,null],[17,"NF_IP6_FORWARD","","",null,null],[17,"NF_IP6_LOCAL_OUT","","",null,null],[17,"NF_IP6_POST_ROUTING","","",null,null],[17,"NF_IP6_NUMHOOKS","","",null,null],[17,"NF_IP6_PRI_FIRST","","",null,null],[17,"NF_IP6_PRI_CONNTRACK_DEFRAG","","",null,null],[17,"NF_IP6_PRI_RAW","","",null,null],[17,"NF_IP6_PRI_SELINUX_FIRST","","",null,null],[17,"NF_IP6_PRI_CONNTRACK","","",null,null],[17,"NF_IP6_PRI_MANGLE","","",null,null],[17,"NF_IP6_PRI_NAT_DST","","",null,null],[17,"NF_IP6_PRI_FILTER","","",null,null],[17,"NF_IP6_PRI_SECURITY","","",null,null],[17,"NF_IP6_PRI_NAT_SRC","","",null,null],[17,"NF_IP6_PRI_SELINUX_LAST","","",null,null],[17,"NF_IP6_PRI_CONNTRACK_HELPER","","",null,null],[17,"NF_IP6_PRI_LAST","","",null,null],[17,"SIOCADDRT","","",null,null],[17,"SIOCDELRT","","",null,null],[17,"SIOCGIFNAME","","",null,null],[17,"SIOCSIFLINK","","",null,null],[17,"SIOCGIFCONF","","",null,null],[17,"SIOCGIFFLAGS","","",null,null],[17,"SIOCSIFFLAGS","","",null,null],[17,"SIOCGIFADDR","","",null,null],[17,"SIOCSIFADDR","","",null,null],[17,"SIOCGIFDSTADDR","","",null,null],[17,"SIOCSIFDSTADDR","","",null,null],[17,"SIOCGIFBRDADDR","","",null,null],[17,"SIOCSIFBRDADDR","","",null,null],[17,"SIOCGIFNETMASK","","",null,null],[17,"SIOCSIFNETMASK","","",null,null],[17,"SIOCGIFMETRIC","","",null,null],[17,"SIOCSIFMETRIC","","",null,null],[17,"SIOCGIFMEM","","",null,null],[17,"SIOCSIFMEM","","",null,null],[17,"SIOCGIFMTU","","",null,null],[17,"SIOCSIFMTU","","",null,null],[17,"SIOCSIFHWADDR","","",null,null],[17,"SIOCGIFENCAP","","",null,null],[17,"SIOCSIFENCAP","","",null,null],[17,"SIOCGIFHWADDR","","",null,null],[17,"SIOCGIFSLAVE","","",null,null],[17,"SIOCSIFSLAVE","","",null,null],[17,"SIOCADDMULTI","","",null,null],[17,"SIOCDELMULTI","","",null,null],[17,"SIOCDARP","","",null,null],[17,"SIOCGARP","","",null,null],[17,"SIOCSARP","","",null,null],[17,"SIOCDRARP","","",null,null],[17,"SIOCGRARP","","",null,null],[17,"SIOCSRARP","","",null,null],[17,"SIOCGIFMAP","","",null,null],[17,"SIOCSIFMAP","","",null,null],[17,"IPTOS_TOS_MASK","","",null,null],[17,"IPTOS_PREC_MASK","","",null,null],[17,"IPTOS_ECN_NOT_ECT","","",null,null],[17,"RTF_UP","","",null,null],[17,"RTF_GATEWAY","","",null,null],[17,"RTF_HOST","","",null,null],[17,"RTF_REINSTATE","","",null,null],[17,"RTF_DYNAMIC","","",null,null],[17,"RTF_MODIFIED","","",null,null],[17,"RTF_MTU","","",null,null],[17,"RTF_MSS","","",null,null],[17,"RTF_WINDOW","","",null,null],[17,"RTF_IRTT","","",null,null],[17,"RTF_REJECT","","",null,null],[17,"RTF_STATIC","","",null,null],[17,"RTF_XRESOLVE","","",null,null],[17,"RTF_NOFORWARD","","",null,null],[17,"RTF_THROW","","",null,null],[17,"RTF_NOPMTUDISC","","",null,null],[17,"RTF_DEFAULT","","",null,null],[17,"RTF_ALLONLINK","","",null,null],[17,"RTF_ADDRCONF","","",null,null],[17,"RTF_LINKRT","","",null,null],[17,"RTF_NONEXTHOP","","",null,null],[17,"RTF_CACHE","","",null,null],[17,"RTF_FLOW","","",null,null],[17,"RTF_POLICY","","",null,null],[17,"RTCF_VALVE","","",null,null],[17,"RTCF_MASQ","","",null,null],[17,"RTCF_NAT","","",null,null],[17,"RTCF_DOREDIRECT","","",null,null],[17,"RTCF_LOG","","",null,null],[17,"RTCF_DIRECTSRC","","",null,null],[17,"RTF_LOCAL","","",null,null],[17,"RTF_INTERFACE","","",null,null],[17,"RTF_MULTICAST","","",null,null],[17,"RTF_BROADCAST","","",null,null],[17,"RTF_NAT","","",null,null],[17,"RTF_ADDRCLASSMASK","","",null,null],[17,"RT_CLASS_UNSPEC","","",null,null],[17,"RT_CLASS_DEFAULT","","",null,null],[17,"RT_CLASS_MAIN","","",null,null],[17,"RT_CLASS_LOCAL","","",null,null],[17,"RT_CLASS_MAX","","",null,null],[17,"NUD_NONE","","",null,null],[17,"NUD_INCOMPLETE","","",null,null],[17,"NUD_REACHABLE","","",null,null],[17,"NUD_STALE","","",null,null],[17,"NUD_DELAY","","",null,null],[17,"NUD_PROBE","","",null,null],[17,"NUD_FAILED","","",null,null],[17,"NUD_NOARP","","",null,null],[17,"NUD_PERMANENT","","",null,null],[17,"NTF_USE","","",null,null],[17,"NTF_SELF","","",null,null],[17,"NTF_MASTER","","",null,null],[17,"NTF_PROXY","","",null,null],[17,"NTF_ROUTER","","",null,null],[17,"NDA_UNSPEC","","",null,null],[17,"NDA_DST","","",null,null],[17,"NDA_LLADDR","","",null,null],[17,"NDA_CACHEINFO","","",null,null],[17,"NDA_PROBES","","",null,null],[17,"NDA_VLAN","","",null,null],[17,"NDA_PORT","","",null,null],[17,"NDA_VNI","","",null,null],[17,"NDA_IFINDEX","","",null,null],[17,"NLA_ALIGNTO","","",null,null],[17,"NETLINK_ROUTE","","",null,null],[17,"NETLINK_UNUSED","","",null,null],[17,"NETLINK_USERSOCK","","",null,null],[17,"NETLINK_FIREWALL","","",null,null],[17,"NETLINK_SOCK_DIAG","","",null,null],[17,"NETLINK_NFLOG","","",null,null],[17,"NETLINK_XFRM","","",null,null],[17,"NETLINK_SELINUX","","",null,null],[17,"NETLINK_ISCSI","","",null,null],[17,"NETLINK_AUDIT","","",null,null],[17,"NETLINK_FIB_LOOKUP","","",null,null],[17,"NETLINK_CONNECTOR","","",null,null],[17,"NETLINK_NETFILTER","","",null,null],[17,"NETLINK_IP6_FW","","",null,null],[17,"NETLINK_DNRTMSG","","",null,null],[17,"NETLINK_KOBJECT_UEVENT","","",null,null],[17,"NETLINK_GENERIC","","",null,null],[17,"NETLINK_SCSITRANSPORT","","",null,null],[17,"NETLINK_ECRYPTFS","","",null,null],[17,"NETLINK_RDMA","","",null,null],[17,"NETLINK_CRYPTO","","",null,null],[17,"NETLINK_INET_DIAG","","",null,null],[17,"NLM_F_REQUEST","","",null,null],[17,"NLM_F_MULTI","","",null,null],[17,"NLM_F_ACK","","",null,null],[17,"NLM_F_ECHO","","",null,null],[17,"NLM_F_DUMP_INTR","","",null,null],[17,"NLM_F_DUMP_FILTERED","","",null,null],[17,"NLM_F_ROOT","","",null,null],[17,"NLM_F_MATCH","","",null,null],[17,"NLM_F_ATOMIC","","",null,null],[17,"NLM_F_DUMP","","",null,null],[17,"NLM_F_REPLACE","","",null,null],[17,"NLM_F_EXCL","","",null,null],[17,"NLM_F_CREATE","","",null,null],[17,"NLM_F_APPEND","","",null,null],[17,"NETLINK_ADD_MEMBERSHIP","","",null,null],[17,"NETLINK_DROP_MEMBERSHIP","","",null,null],[17,"NETLINK_PKTINFO","","",null,null],[17,"NETLINK_BROADCAST_ERROR","","",null,null],[17,"NETLINK_NO_ENOBUFS","","",null,null],[17,"NETLINK_RX_RING","","",null,null],[17,"NETLINK_TX_RING","","",null,null],[17,"NETLINK_LISTEN_ALL_NSID","","",null,null],[17,"NETLINK_LIST_MEMBERSHIPS","","",null,null],[17,"NETLINK_CAP_ACK","","",null,null],[17,"NLA_F_NESTED","","",null,null],[17,"NLA_F_NET_BYTEORDER","","",null,null],[17,"NLA_TYPE_MASK","","",null,null],[17,"TCA_UNSPEC","","",null,null],[17,"TCA_KIND","","",null,null],[17,"TCA_OPTIONS","","",null,null],[17,"TCA_STATS","","",null,null],[17,"TCA_XSTATS","","",null,null],[17,"TCA_RATE","","",null,null],[17,"TCA_FCNT","","",null,null],[17,"TCA_STATS2","","",null,null],[17,"TCA_STAB","","",null,null],[17,"RTM_NEWLINK","","",null,null],[17,"RTM_DELLINK","","",null,null],[17,"RTM_GETLINK","","",null,null],[17,"RTM_SETLINK","","",null,null],[17,"RTM_NEWADDR","","",null,null],[17,"RTM_DELADDR","","",null,null],[17,"RTM_GETADDR","","",null,null],[17,"RTM_NEWROUTE","","",null,null],[17,"RTM_DELROUTE","","",null,null],[17,"RTM_GETROUTE","","",null,null],[17,"RTM_NEWNEIGH","","",null,null],[17,"RTM_DELNEIGH","","",null,null],[17,"RTM_GETNEIGH","","",null,null],[17,"RTM_NEWRULE","","",null,null],[17,"RTM_DELRULE","","",null,null],[17,"RTM_GETRULE","","",null,null],[17,"RTM_NEWQDISC","","",null,null],[17,"RTM_DELQDISC","","",null,null],[17,"RTM_GETQDISC","","",null,null],[17,"RTM_NEWTCLASS","","",null,null],[17,"RTM_DELTCLASS","","",null,null],[17,"RTM_GETTCLASS","","",null,null],[17,"RTM_NEWTFILTER","","",null,null],[17,"RTM_DELTFILTER","","",null,null],[17,"RTM_GETTFILTER","","",null,null],[17,"RTM_NEWACTION","","",null,null],[17,"RTM_DELACTION","","",null,null],[17,"RTM_GETACTION","","",null,null],[17,"RTM_NEWPREFIX","","",null,null],[17,"RTM_GETMULTICAST","","",null,null],[17,"RTM_GETANYCAST","","",null,null],[17,"RTM_NEWNEIGHTBL","","",null,null],[17,"RTM_GETNEIGHTBL","","",null,null],[17,"RTM_SETNEIGHTBL","","",null,null],[17,"RTM_NEWNDUSEROPT","","",null,null],[17,"RTM_NEWADDRLABEL","","",null,null],[17,"RTM_DELADDRLABEL","","",null,null],[17,"RTM_GETADDRLABEL","","",null,null],[17,"RTM_GETDCB","","",null,null],[17,"RTM_SETDCB","","",null,null],[17,"RTM_NEWNETCONF","","",null,null],[17,"RTM_GETNETCONF","","",null,null],[17,"RTM_NEWMDB","","",null,null],[17,"RTM_DELMDB","","",null,null],[17,"RTM_GETMDB","","",null,null],[17,"RTM_NEWNSID","","",null,null],[17,"RTM_DELNSID","","",null,null],[17,"RTM_GETNSID","","",null,null],[17,"RTM_F_NOTIFY","","",null,null],[17,"RTM_F_CLONED","","",null,null],[17,"RTM_F_EQUALIZE","","",null,null],[17,"RTM_F_PREFIX","","",null,null],[17,"RTA_UNSPEC","","",null,null],[17,"RTA_DST","","",null,null],[17,"RTA_SRC","","",null,null],[17,"RTA_IIF","","",null,null],[17,"RTA_OIF","","",null,null],[17,"RTA_GATEWAY","","",null,null],[17,"RTA_PRIORITY","","",null,null],[17,"RTA_PREFSRC","","",null,null],[17,"RTA_METRICS","","",null,null],[17,"RTA_MULTIPATH","","",null,null],[17,"RTA_PROTOINFO","","",null,null],[17,"RTA_FLOW","","",null,null],[17,"RTA_CACHEINFO","","",null,null],[17,"RTA_SESSION","","",null,null],[17,"RTA_MP_ALGO","","",null,null],[17,"RTA_TABLE","","",null,null],[17,"RTA_MARK","","",null,null],[17,"RTA_MFC_STATS","","",null,null],[17,"RTN_UNSPEC","","",null,null],[17,"RTN_UNICAST","","",null,null],[17,"RTN_LOCAL","","",null,null],[17,"RTN_BROADCAST","","",null,null],[17,"RTN_ANYCAST","","",null,null],[17,"RTN_MULTICAST","","",null,null],[17,"RTN_BLACKHOLE","","",null,null],[17,"RTN_UNREACHABLE","","",null,null],[17,"RTN_PROHIBIT","","",null,null],[17,"RTN_THROW","","",null,null],[17,"RTN_NAT","","",null,null],[17,"RTN_XRESOLVE","","",null,null],[17,"RTPROT_UNSPEC","","",null,null],[17,"RTPROT_REDIRECT","","",null,null],[17,"RTPROT_KERNEL","","",null,null],[17,"RTPROT_BOOT","","",null,null],[17,"RTPROT_STATIC","","",null,null],[17,"RT_SCOPE_UNIVERSE","","",null,null],[17,"RT_SCOPE_SITE","","",null,null],[17,"RT_SCOPE_LINK","","",null,null],[17,"RT_SCOPE_HOST","","",null,null],[17,"RT_SCOPE_NOWHERE","","",null,null],[17,"RT_TABLE_UNSPEC","","",null,null],[17,"RT_TABLE_COMPAT","","",null,null],[17,"RT_TABLE_DEFAULT","","",null,null],[17,"RT_TABLE_MAIN","","",null,null],[17,"RT_TABLE_LOCAL","","",null,null],[17,"RTMSG_OVERRUN","","",null,null],[17,"RTMSG_NEWDEVICE","","",null,null],[17,"RTMSG_DELDEVICE","","",null,null],[17,"RTMSG_NEWROUTE","","",null,null],[17,"RTMSG_DELROUTE","","",null,null],[17,"RTMSG_NEWRULE","","",null,null],[17,"RTMSG_DELRULE","","",null,null],[17,"RTMSG_CONTROL","","",null,null],[17,"RTMSG_AR_FAILED","","",null,null],[17,"MAX_ADDR_LEN","","",null,null],[17,"ARPD_UPDATE","","",null,null],[17,"ARPD_LOOKUP","","",null,null],[17,"ARPD_FLUSH","","",null,null],[17,"ATF_MAGIC","","",null,null],[17,"SO_TIMESTAMPING","","",null,null],[17,"SCM_TIMESTAMPING","","",null,null],[17,"MODULE_INIT_IGNORE_MODVERSIONS","","",null,null],[17,"MODULE_INIT_IGNORE_VERMAGIC","","",null,null],[17,"SOF_TIMESTAMPING_TX_HARDWARE","","",null,null],[17,"SOF_TIMESTAMPING_TX_SOFTWARE","","",null,null],[17,"SOF_TIMESTAMPING_RX_HARDWARE","","",null,null],[17,"SOF_TIMESTAMPING_RX_SOFTWARE","","",null,null],[17,"SOF_TIMESTAMPING_SOFTWARE","","",null,null],[17,"SOF_TIMESTAMPING_SYS_HARDWARE","","",null,null],[17,"SOF_TIMESTAMPING_RAW_HARDWARE","","",null,null],[17,"ALG_SET_KEY","","",null,null],[17,"ALG_SET_IV","","",null,null],[17,"ALG_SET_OP","","",null,null],[17,"ALG_SET_AEAD_ASSOCLEN","","",null,null],[17,"ALG_SET_AEAD_AUTHSIZE","","",null,null],[17,"ALG_OP_DECRYPT","","",null,null],[17,"ALG_OP_ENCRYPT","","",null,null],[17,"VMADDR_CID_ANY","","",null,null],[17,"VMADDR_CID_HYPERVISOR","","",null,null],[17,"VMADDR_CID_RESERVED","","",null,null],[17,"VMADDR_CID_HOST","","",null,null],[17,"VMADDR_PORT_ANY","","",null,null],[17,"IN_ACCESS","","",null,null],[17,"IN_MODIFY","","",null,null],[17,"IN_ATTRIB","","",null,null],[17,"IN_CLOSE_WRITE","","",null,null],[17,"IN_CLOSE_NOWRITE","","",null,null],[17,"IN_CLOSE","","",null,null],[17,"IN_OPEN","","",null,null],[17,"IN_MOVED_FROM","","",null,null],[17,"IN_MOVED_TO","","",null,null],[17,"IN_MOVE","","",null,null],[17,"IN_CREATE","","",null,null],[17,"IN_DELETE","","",null,null],[17,"IN_DELETE_SELF","","",null,null],[17,"IN_MOVE_SELF","","",null,null],[17,"IN_UNMOUNT","","",null,null],[17,"IN_Q_OVERFLOW","","",null,null],[17,"IN_IGNORED","","",null,null],[17,"IN_ONLYDIR","","",null,null],[17,"IN_DONT_FOLLOW","","",null,null],[17,"IN_ISDIR","","",null,null],[17,"IN_ONESHOT","","",null,null],[17,"IN_ALL_EVENTS","","",null,null],[17,"IN_CLOEXEC","","",null,null],[17,"IN_NONBLOCK","","",null,null],[17,"FUTEX_WAIT","","",null,null],[17,"FUTEX_WAKE","","",null,null],[17,"FUTEX_FD","","",null,null],[17,"FUTEX_REQUEUE","","",null,null],[17,"FUTEX_CMP_REQUEUE","","",null,null],[17,"FUTEX_WAKE_OP","","",null,null],[17,"FUTEX_LOCK_PI","","",null,null],[17,"FUTEX_UNLOCK_PI","","",null,null],[17,"FUTEX_TRYLOCK_PI","","",null,null],[17,"FUTEX_WAIT_BITSET","","",null,null],[17,"FUTEX_WAKE_BITSET","","",null,null],[17,"FUTEX_WAIT_REQUEUE_PI","","",null,null],[17,"FUTEX_CMP_REQUEUE_PI","","",null,null],[17,"FUTEX_PRIVATE_FLAG","","",null,null],[17,"FUTEX_CLOCK_REALTIME","","",null,null],[17,"FUTEX_CMD_MASK","","",null,null],[5,"NLA_ALIGN","","",null,[[["c_int",6]],["c_int",6]]],[5,"CMSG_NXTHDR","","",null,[[]]],[5,"CPU_ZERO","","",null,[[["cpu_set_t",3]]]],[5,"CPU_SET","","",null,[[["usize",15],["cpu_set_t",3]]]],[5,"CPU_CLR","","",null,[[["usize",15],["cpu_set_t",3]]]],[5,"CPU_ISSET","","",null,[[["usize",15],["cpu_set_t",3]],["bool",15]]],[5,"CPU_EQUAL","","",null,[[["cpu_set_t",3]],["bool",15]]],[5,"major","","",null,[[["dev_t",6]],["c_uint",6]]],[5,"minor","","",null,[[["dev_t",6]],["c_uint",6]]],[5,"makedev","","",null,[[["c_uint",6]],["dev_t",6]]],[5,"IPTOS_TOS","","",null,[[["u8",15]],["u8",15]]],[5,"IPTOS_PREC","","",null,[[["u8",15]],["u8",15]]],[5,"RT_TOS","","",null,[[["u8",15]],["u8",15]]],[5,"RT_ADDRCLASS","","",null,[[["u32",15]],["u32",15]]],[5,"RT_LOCALADDR","","",null,[[["u32",15]],["bool",15]]],[6,"pthread_t","","",null,null],[6,"__priority_which_t","","",null,null],[6,"__rlimit_resource_t","","",null,null],[3,"statx","","",null,null],[12,"stx_mask","","",89,null],[12,"stx_blksize","","",89,null],[12,"stx_attributes","","",89,null],[12,"stx_nlink","","",89,null],[12,"stx_uid","","",89,null],[12,"stx_gid","","",89,null],[12,"stx_mode","","",89,null],[12,"__statx_pad1","","",89,null],[12,"stx_ino","","",89,null],[12,"stx_size","","",89,null],[12,"stx_blocks","","",89,null],[12,"stx_attributes_mask","","",89,null],[12,"stx_atime","","",89,null],[12,"stx_btime","","",89,null],[12,"stx_ctime","","",89,null],[12,"stx_mtime","","",89,null],[12,"stx_rdev_major","","",89,null],[12,"stx_rdev_minor","","",89,null],[12,"stx_dev_major","","",89,null],[12,"stx_dev_minor","","",89,null],[12,"__statx_pad2","","",89,null],[3,"statx_timestamp","","",null,null],[12,"tv_sec","","",90,null],[12,"tv_nsec","","",90,null],[12,"__statx_timestamp_pad1","","",90,null],[3,"aiocb","","",null,null],[12,"aio_fildes","","",91,null],[12,"aio_lio_opcode","","",91,null],[12,"aio_reqprio","","",91,null],[12,"aio_buf","","",91,null],[12,"aio_nbytes","","",91,null],[12,"aio_sigevent","","",91,null],[12,"aio_offset","","",91,null],[3,"__exit_status","","",null,null],[12,"e_termination","","",92,null],[12,"e_exit","","",92,null],[3,"__timeval","","",null,null],[12,"tv_sec","","",93,null],[12,"tv_usec","","",93,null],[3,"glob64_t","","",null,null],[12,"gl_pathc","","",94,null],[12,"gl_pathv","","",94,null],[12,"gl_offs","","",94,null],[12,"gl_flags","","",94,null],[3,"msghdr","","",null,null],[12,"msg_name","","",95,null],[12,"msg_namelen","","",95,null],[12,"msg_iov","","",95,null],[12,"msg_iovlen","","",95,null],[12,"msg_control","","",95,null],[12,"msg_controllen","","",95,null],[12,"msg_flags","","",95,null],[3,"cmsghdr","","",null,null],[12,"cmsg_len","","",96,null],[12,"cmsg_level","","",96,null],[12,"cmsg_type","","",96,null],[3,"termios","","",null,null],[12,"c_iflag","","",97,null],[12,"c_oflag","","",97,null],[12,"c_cflag","","",97,null],[12,"c_lflag","","",97,null],[12,"c_line","","",97,null],[12,"c_cc","","",97,null],[12,"c_ispeed","","",97,null],[12,"c_ospeed","","",97,null],[3,"mallinfo","","",null,null],[12,"arena","","",98,null],[12,"ordblks","","",98,null],[12,"smblks","","",98,null],[12,"hblks","","",98,null],[12,"hblkhd","","",98,null],[12,"usmblks","","",98,null],[12,"fsmblks","","",98,null],[12,"uordblks","","",98,null],[12,"fordblks","","",98,null],[12,"keepcost","","",98,null],[3,"nlmsghdr","","",null,null],[12,"nlmsg_len","","",99,null],[12,"nlmsg_type","","",99,null],[12,"nlmsg_flags","","",99,null],[12,"nlmsg_seq","","",99,null],[12,"nlmsg_pid","","",99,null],[3,"nlmsgerr","","",null,null],[12,"error","","",100,null],[12,"msg","","",100,null],[3,"nl_pktinfo","","",null,null],[12,"group","","",101,null],[3,"nl_mmap_req","","",null,null],[12,"nm_block_size","","",102,null],[12,"nm_block_nr","","",102,null],[12,"nm_frame_size","","",102,null],[12,"nm_frame_nr","","",102,null],[3,"nl_mmap_hdr","","",null,null],[12,"nm_status","","",103,null],[12,"nm_len","","",103,null],[12,"nm_group","","",103,null],[12,"nm_pid","","",103,null],[12,"nm_uid","","",103,null],[12,"nm_gid","","",103,null],[3,"nlattr","","",null,null],[12,"nla_len","","",104,null],[12,"nla_type","","",104,null],[3,"rtentry","","",null,null],[12,"rt_pad1","","",105,null],[12,"rt_dst","","",105,null],[12,"rt_gateway","","",105,null],[12,"rt_genmask","","",105,null],[12,"rt_flags","","",105,null],[12,"rt_pad2","","",105,null],[12,"rt_pad3","","",105,null],[12,"rt_tos","","",105,null],[12,"rt_class","","",105,null],[12,"rt_pad4","","",105,null],[12,"rt_metric","","",105,null],[12,"rt_dev","","",105,null],[12,"rt_mtu","","",105,null],[12,"rt_window","","",105,null],[12,"rt_irtt","","",105,null],[3,"utmpx","","",null,null],[12,"ut_type","","",106,null],[12,"ut_pid","","",106,null],[12,"ut_line","","",106,null],[12,"ut_id","","",106,null],[12,"ut_user","","",106,null],[12,"ut_host","","",106,null],[12,"ut_exit","","",106,null],[12,"ut_session","","",106,null],[12,"ut_tv","","",106,null],[12,"ut_addr_v6","","",106,null],[17,"RLIMIT_CPU","","",null,null],[17,"RLIMIT_FSIZE","","",null,null],[17,"RLIMIT_DATA","","",null,null],[17,"RLIMIT_STACK","","",null,null],[17,"RLIMIT_CORE","","",null,null],[17,"RLIMIT_LOCKS","","",null,null],[17,"RLIMIT_SIGPENDING","","",null,null],[17,"RLIMIT_MSGQUEUE","","",null,null],[17,"RLIMIT_NICE","","",null,null],[17,"RLIMIT_RTPRIO","","",null,null],[17,"RLIMIT_RTTIME","","",null,null],[17,"RLIMIT_NLIMITS","","",null,null],[17,"MS_RMT_MASK","","",null,null],[17,"__UT_LINESIZE","","",null,null],[17,"__UT_NAMESIZE","","",null,null],[17,"__UT_HOSTSIZE","","",null,null],[17,"EMPTY","","",null,null],[17,"RUN_LVL","","",null,null],[17,"BOOT_TIME","","",null,null],[17,"NEW_TIME","","",null,null],[17,"OLD_TIME","","",null,null],[17,"INIT_PROCESS","","",null,null],[17,"LOGIN_PROCESS","","",null,null],[17,"USER_PROCESS","","",null,null],[17,"DEAD_PROCESS","","",null,null],[17,"ACCOUNTING","","",null,null],[17,"SOCK_NONBLOCK","","",null,null],[17,"SOL_RXRPC","","",null,null],[17,"SOL_PPPOL2TP","","",null,null],[17,"SOL_PNPIPE","","",null,null],[17,"SOL_RDS","","",null,null],[17,"SOL_IUCV","","",null,null],[17,"SOL_CAIF","","",null,null],[17,"SOL_NFC","","",null,null],[17,"SOL_XDP","","",null,null],[17,"MSG_TRYHARD","","",null,null],[17,"LC_PAPER","","",null,null],[17,"LC_NAME","","",null,null],[17,"LC_ADDRESS","","",null,null],[17,"LC_TELEPHONE","","",null,null],[17,"LC_MEASUREMENT","","",null,null],[17,"LC_IDENTIFICATION","","",null,null],[17,"LC_PAPER_MASK","","",null,null],[17,"LC_NAME_MASK","","",null,null],[17,"LC_ADDRESS_MASK","","",null,null],[17,"LC_TELEPHONE_MASK","","",null,null],[17,"LC_MEASUREMENT_MASK","","",null,null],[17,"LC_IDENTIFICATION_MASK","","",null,null],[17,"LC_ALL_MASK","","",null,null],[17,"MAP_SHARED_VALIDATE","","",null,null],[17,"MAP_FIXED_NOREPLACE","","",null,null],[17,"ENOTSUP","","",null,null],[17,"SOCK_SEQPACKET","","",null,null],[17,"SOCK_DCCP","","",null,null],[17,"SOCK_PACKET","","",null,null],[17,"TCP_COOKIE_TRANSACTIONS","","",null,null],[17,"TCP_THIN_LINEAR_TIMEOUTS","","",null,null],[17,"TCP_THIN_DUPACK","","",null,null],[17,"TCP_USER_TIMEOUT","","",null,null],[17,"TCP_REPAIR","","",null,null],[17,"TCP_REPAIR_QUEUE","","",null,null],[17,"TCP_QUEUE_SEQ","","",null,null],[17,"TCP_REPAIR_OPTIONS","","",null,null],[17,"TCP_FASTOPEN","","",null,null],[17,"TCP_TIMESTAMP","","",null,null],[17,"DCCP_SOCKOPT_PACKET_SIZE","","",null,null],[17,"DCCP_SOCKOPT_SERVICE","","",null,null],[17,"DCCP_SOCKOPT_CHANGE_L","","",null,null],[17,"DCCP_SOCKOPT_CHANGE_R","","",null,null],[17,"DCCP_SOCKOPT_GET_CUR_MPS","","",null,null],[17,"DCCP_SOCKOPT_SERVER_TIMEWAIT","","",null,null],[17,"DCCP_SOCKOPT_SEND_CSCOV","","",null,null],[17,"DCCP_SOCKOPT_RECV_CSCOV","","",null,null],[17,"DCCP_SOCKOPT_AVAILABLE_CCIDS","","",null,null],[17,"DCCP_SOCKOPT_CCID","","",null,null],[17,"DCCP_SOCKOPT_TX_CCID","","",null,null],[17,"DCCP_SOCKOPT_RX_CCID","","",null,null],[17,"DCCP_SOCKOPT_QPOLICY_ID","","",null,null],[17,"DCCP_SOCKOPT_QPOLICY_TXQLEN","","",null,null],[17,"DCCP_SOCKOPT_CCID_RX_INFO","","",null,null],[17,"DCCP_SOCKOPT_CCID_TX_INFO","","",null,null],[17,"DCCP_SERVICE_LIST_MAX_LEN","","maximum number of services provided on the same listening …",null,null],[17,"SIGEV_THREAD_ID","","",null,null],[17,"BUFSIZ","","",null,null],[17,"TMP_MAX","","",null,null],[17,"FOPEN_MAX","","",null,null],[17,"POSIX_MADV_DONTNEED","","",null,null],[17,"_SC_EQUIV_CLASS_MAX","","",null,null],[17,"_SC_CHARCLASS_NAME_MAX","","",null,null],[17,"_SC_PII","","",null,null],[17,"_SC_PII_XTI","","",null,null],[17,"_SC_PII_SOCKET","","",null,null],[17,"_SC_PII_INTERNET","","",null,null],[17,"_SC_PII_OSI","","",null,null],[17,"_SC_POLL","","",null,null],[17,"_SC_SELECT","","",null,null],[17,"_SC_PII_INTERNET_STREAM","","",null,null],[17,"_SC_PII_INTERNET_DGRAM","","",null,null],[17,"_SC_PII_OSI_COTS","","",null,null],[17,"_SC_PII_OSI_CLTS","","",null,null],[17,"_SC_PII_OSI_M","","",null,null],[17,"_SC_T_IOV_MAX","","",null,null],[17,"_SC_2_C_VERSION","","",null,null],[17,"_SC_CHAR_BIT","","",null,null],[17,"_SC_CHAR_MAX","","",null,null],[17,"_SC_CHAR_MIN","","",null,null],[17,"_SC_INT_MAX","","",null,null],[17,"_SC_INT_MIN","","",null,null],[17,"_SC_LONG_BIT","","",null,null],[17,"_SC_WORD_BIT","","",null,null],[17,"_SC_MB_LEN_MAX","","",null,null],[17,"_SC_SSIZE_MAX","","",null,null],[17,"_SC_SCHAR_MAX","","",null,null],[17,"_SC_SCHAR_MIN","","",null,null],[17,"_SC_SHRT_MAX","","",null,null],[17,"_SC_SHRT_MIN","","",null,null],[17,"_SC_UCHAR_MAX","","",null,null],[17,"_SC_UINT_MAX","","",null,null],[17,"_SC_ULONG_MAX","","",null,null],[17,"_SC_USHRT_MAX","","",null,null],[17,"_SC_NL_ARGMAX","","",null,null],[17,"_SC_NL_LANGMAX","","",null,null],[17,"_SC_NL_MSGMAX","","",null,null],[17,"_SC_NL_NMAX","","",null,null],[17,"_SC_NL_SETMAX","","",null,null],[17,"_SC_NL_TEXTMAX","","",null,null],[17,"_SC_BASE","","",null,null],[17,"_SC_C_LANG_SUPPORT","","",null,null],[17,"_SC_C_LANG_SUPPORT_R","","",null,null],[17,"_SC_DEVICE_IO","","",null,null],[17,"_SC_DEVICE_SPECIFIC","","",null,null],[17,"_SC_DEVICE_SPECIFIC_R","","",null,null],[17,"_SC_FD_MGMT","","",null,null],[17,"_SC_FIFO","","",null,null],[17,"_SC_PIPE","","",null,null],[17,"_SC_FILE_ATTRIBUTES","","",null,null],[17,"_SC_FILE_LOCKING","","",null,null],[17,"_SC_FILE_SYSTEM","","",null,null],[17,"_SC_MULTI_PROCESS","","",null,null],[17,"_SC_SINGLE_PROCESS","","",null,null],[17,"_SC_NETWORKING","","",null,null],[17,"_SC_REGEX_VERSION","","",null,null],[17,"_SC_SIGNALS","","",null,null],[17,"_SC_SYSTEM_DATABASE","","",null,null],[17,"_SC_SYSTEM_DATABASE_R","","",null,null],[17,"_SC_USER_GROUPS","","",null,null],[17,"_SC_USER_GROUPS_R","","",null,null],[17,"_SC_LEVEL1_ICACHE_SIZE","","",null,null],[17,"_SC_LEVEL1_ICACHE_ASSOC","","",null,null],[17,"_SC_LEVEL1_ICACHE_LINESIZE","","",null,null],[17,"_SC_LEVEL1_DCACHE_SIZE","","",null,null],[17,"_SC_LEVEL1_DCACHE_ASSOC","","",null,null],[17,"_SC_LEVEL1_DCACHE_LINESIZE","","",null,null],[17,"_SC_LEVEL2_CACHE_SIZE","","",null,null],[17,"_SC_LEVEL2_CACHE_ASSOC","","",null,null],[17,"_SC_LEVEL2_CACHE_LINESIZE","","",null,null],[17,"_SC_LEVEL3_CACHE_SIZE","","",null,null],[17,"_SC_LEVEL3_CACHE_ASSOC","","",null,null],[17,"_SC_LEVEL3_CACHE_LINESIZE","","",null,null],[17,"_SC_LEVEL4_CACHE_SIZE","","",null,null],[17,"_SC_LEVEL4_CACHE_ASSOC","","",null,null],[17,"_SC_LEVEL4_CACHE_LINESIZE","","",null,null],[17,"O_ACCMODE","","",null,null],[17,"ST_RELATIME","","",null,null],[17,"NI_MAXHOST","","",null,null],[17,"ADFS_SUPER_MAGIC","","",null,null],[17,"AFFS_SUPER_MAGIC","","",null,null],[17,"CODA_SUPER_MAGIC","","",null,null],[17,"CRAMFS_MAGIC","","",null,null],[17,"EFS_SUPER_MAGIC","","",null,null],[17,"EXT2_SUPER_MAGIC","","",null,null],[17,"EXT3_SUPER_MAGIC","","",null,null],[17,"EXT4_SUPER_MAGIC","","",null,null],[17,"HPFS_SUPER_MAGIC","","",null,null],[17,"HUGETLBFS_MAGIC","","",null,null],[17,"ISOFS_SUPER_MAGIC","","",null,null],[17,"JFFS2_SUPER_MAGIC","","",null,null],[17,"MINIX_SUPER_MAGIC","","",null,null],[17,"MINIX_SUPER_MAGIC2","","",null,null],[17,"MINIX2_SUPER_MAGIC","","",null,null],[17,"MINIX2_SUPER_MAGIC2","","",null,null],[17,"MSDOS_SUPER_MAGIC","","",null,null],[17,"NCP_SUPER_MAGIC","","",null,null],[17,"NFS_SUPER_MAGIC","","",null,null],[17,"OPENPROM_SUPER_MAGIC","","",null,null],[17,"PROC_SUPER_MAGIC","","",null,null],[17,"QNX4_SUPER_MAGIC","","",null,null],[17,"REISERFS_SUPER_MAGIC","","",null,null],[17,"SMB_SUPER_MAGIC","","",null,null],[17,"TMPFS_MAGIC","","",null,null],[17,"USBDEVICE_SUPER_MAGIC","","",null,null],[17,"CPU_SETSIZE","","",null,null],[17,"PTRACE_TRACEME","","",null,null],[17,"PTRACE_PEEKTEXT","","",null,null],[17,"PTRACE_PEEKDATA","","",null,null],[17,"PTRACE_PEEKUSER","","",null,null],[17,"PTRACE_POKETEXT","","",null,null],[17,"PTRACE_POKEDATA","","",null,null],[17,"PTRACE_POKEUSER","","",null,null],[17,"PTRACE_CONT","","",null,null],[17,"PTRACE_KILL","","",null,null],[17,"PTRACE_SINGLESTEP","","",null,null],[17,"PTRACE_ATTACH","","",null,null],[17,"PTRACE_SYSCALL","","",null,null],[17,"PTRACE_SETOPTIONS","","",null,null],[17,"PTRACE_GETEVENTMSG","","",null,null],[17,"PTRACE_GETSIGINFO","","",null,null],[17,"PTRACE_SETSIGINFO","","",null,null],[17,"PTRACE_GETREGSET","","",null,null],[17,"PTRACE_SETREGSET","","",null,null],[17,"PTRACE_SEIZE","","",null,null],[17,"PTRACE_INTERRUPT","","",null,null],[17,"PTRACE_LISTEN","","",null,null],[17,"PTRACE_PEEKSIGINFO","","",null,null],[17,"EPOLLWAKEUP","","",null,null],[17,"SEEK_DATA","","",null,null],[17,"SEEK_HOLE","","",null,null],[17,"LINUX_REBOOT_MAGIC1","","",null,null],[17,"LINUX_REBOOT_MAGIC2","","",null,null],[17,"LINUX_REBOOT_MAGIC2A","","",null,null],[17,"LINUX_REBOOT_MAGIC2B","","",null,null],[17,"LINUX_REBOOT_MAGIC2C","","",null,null],[17,"LINUX_REBOOT_CMD_RESTART","","",null,null],[17,"LINUX_REBOOT_CMD_HALT","","",null,null],[17,"LINUX_REBOOT_CMD_CAD_ON","","",null,null],[17,"LINUX_REBOOT_CMD_CAD_OFF","","",null,null],[17,"LINUX_REBOOT_CMD_POWER_OFF","","",null,null],[17,"LINUX_REBOOT_CMD_RESTART2","","",null,null],[17,"LINUX_REBOOT_CMD_SW_SUSPEND","","",null,null],[17,"LINUX_REBOOT_CMD_KEXEC","","",null,null],[17,"TCA_PAD","","",null,null],[17,"TCA_DUMP_INVISIBLE","","",null,null],[17,"TCA_CHAIN","","",null,null],[17,"TCA_HW_OFFLOAD","","",null,null],[17,"RTM_DELNETCONF","","",null,null],[17,"RTM_NEWSTATS","","",null,null],[17,"RTM_GETSTATS","","",null,null],[17,"RTM_NEWCACHEREPORT","","",null,null],[17,"RTM_F_LOOKUP_TABLE","","",null,null],[17,"RTM_F_FIB_MATCH","","",null,null],[17,"RTA_VIA","","",null,null],[17,"RTA_NEWDST","","",null,null],[17,"RTA_PREF","","",null,null],[17,"RTA_ENCAP_TYPE","","",null,null],[17,"RTA_ENCAP","","",null,null],[17,"RTA_EXPIRES","","",null,null],[17,"RTA_PAD","","",null,null],[17,"RTA_UID","","",null,null],[17,"RTA_TTL_PROPAGATE","","",null,null],[17,"NTF_EXT_LEARNED","","",null,null],[17,"NTF_OFFLOADED","","",null,null],[17,"NDA_MASTER","","",null,null],[17,"NDA_LINK_NETNSID","","",null,null],[17,"NDA_SRC_VNI","","",null,null],[17,"IFA_FLAGS","","",null,null],[17,"IFA_F_MANAGETEMPADDR","","",null,null],[17,"IFA_F_NOPREFIXROUTE","","",null,null],[17,"IFA_F_MCAUTOJOIN","","",null,null],[17,"IFA_F_STABLE_PRIVACY","","",null,null],[17,"MAX_LINKS","","",null,null],[17,"GENL_UNS_ADMIN_PERM","","",null,null],[17,"GENL_ID_VFS_DQUOT","","",null,null],[17,"GENL_ID_PMCRAID","","",null,null],[17,"TIOCM_LE","","",null,null],[17,"TIOCM_DTR","","",null,null],[17,"TIOCM_RTS","","",null,null],[17,"TIOCM_CD","","",null,null],[17,"TIOCM_RI","","",null,null],[17,"NF_NETDEV_INGRESS","","",null,null],[17,"NF_NETDEV_NUMHOOKS","","",null,null],[17,"NFPROTO_INET","","",null,null],[17,"NFPROTO_NETDEV","","",null,null],[17,"NFT_TABLE_MAXNAMELEN","","",null,null],[17,"NFT_CHAIN_MAXNAMELEN","","",null,null],[17,"NFT_SET_MAXNAMELEN","","",null,null],[17,"NFT_OBJ_MAXNAMELEN","","",null,null],[17,"NFT_USERDATA_MAXLEN","","",null,null],[17,"NFT_REG_VERDICT","","",null,null],[17,"NFT_REG_1","","",null,null],[17,"NFT_REG_2","","",null,null],[17,"NFT_REG_3","","",null,null],[17,"NFT_REG_4","","",null,null],[17,"__NFT_REG_MAX","","",null,null],[17,"NFT_REG32_00","","",null,null],[17,"NFT_REG32_01","","",null,null],[17,"NFT_REG32_02","","",null,null],[17,"NFT_REG32_03","","",null,null],[17,"NFT_REG32_04","","",null,null],[17,"NFT_REG32_05","","",null,null],[17,"NFT_REG32_06","","",null,null],[17,"NFT_REG32_07","","",null,null],[17,"NFT_REG32_08","","",null,null],[17,"NFT_REG32_09","","",null,null],[17,"NFT_REG32_10","","",null,null],[17,"NFT_REG32_11","","",null,null],[17,"NFT_REG32_12","","",null,null],[17,"NFT_REG32_13","","",null,null],[17,"NFT_REG32_14","","",null,null],[17,"NFT_REG32_15","","",null,null],[17,"NFT_REG_SIZE","","",null,null],[17,"NFT_REG32_SIZE","","",null,null],[17,"NFT_CONTINUE","","",null,null],[17,"NFT_BREAK","","",null,null],[17,"NFT_JUMP","","",null,null],[17,"NFT_GOTO","","",null,null],[17,"NFT_RETURN","","",null,null],[17,"NFT_MSG_NEWTABLE","","",null,null],[17,"NFT_MSG_GETTABLE","","",null,null],[17,"NFT_MSG_DELTABLE","","",null,null],[17,"NFT_MSG_NEWCHAIN","","",null,null],[17,"NFT_MSG_GETCHAIN","","",null,null],[17,"NFT_MSG_DELCHAIN","","",null,null],[17,"NFT_MSG_NEWRULE","","",null,null],[17,"NFT_MSG_GETRULE","","",null,null],[17,"NFT_MSG_DELRULE","","",null,null],[17,"NFT_MSG_NEWSET","","",null,null],[17,"NFT_MSG_GETSET","","",null,null],[17,"NFT_MSG_DELSET","","",null,null],[17,"NFT_MSG_NEWSETELEM","","",null,null],[17,"NFT_MSG_GETSETELEM","","",null,null],[17,"NFT_MSG_DELSETELEM","","",null,null],[17,"NFT_MSG_NEWGEN","","",null,null],[17,"NFT_MSG_GETGEN","","",null,null],[17,"NFT_MSG_TRACE","","",null,null],[17,"NFT_MSG_NEWOBJ","","",null,null],[17,"NFT_MSG_GETOBJ","","",null,null],[17,"NFT_MSG_DELOBJ","","",null,null],[17,"NFT_MSG_GETOBJ_RESET","","",null,null],[17,"NFT_MSG_MAX","","",null,null],[17,"NFT_SET_ANONYMOUS","","",null,null],[17,"NFT_SET_CONSTANT","","",null,null],[17,"NFT_SET_INTERVAL","","",null,null],[17,"NFT_SET_MAP","","",null,null],[17,"NFT_SET_TIMEOUT","","",null,null],[17,"NFT_SET_EVAL","","",null,null],[17,"NFT_SET_POL_PERFORMANCE","","",null,null],[17,"NFT_SET_POL_MEMORY","","",null,null],[17,"NFT_SET_ELEM_INTERVAL_END","","",null,null],[17,"NFT_DATA_VALUE","","",null,null],[17,"NFT_DATA_VERDICT","","",null,null],[17,"NFT_DATA_RESERVED_MASK","","",null,null],[17,"NFT_DATA_VALUE_MAXLEN","","",null,null],[17,"NFT_BYTEORDER_NTOH","","",null,null],[17,"NFT_BYTEORDER_HTON","","",null,null],[17,"NFT_CMP_EQ","","",null,null],[17,"NFT_CMP_NEQ","","",null,null],[17,"NFT_CMP_LT","","",null,null],[17,"NFT_CMP_LTE","","",null,null],[17,"NFT_CMP_GT","","",null,null],[17,"NFT_CMP_GTE","","",null,null],[17,"NFT_RANGE_EQ","","",null,null],[17,"NFT_RANGE_NEQ","","",null,null],[17,"NFT_LOOKUP_F_INV","","",null,null],[17,"NFT_DYNSET_OP_ADD","","",null,null],[17,"NFT_DYNSET_OP_UPDATE","","",null,null],[17,"NFT_DYNSET_F_INV","","",null,null],[17,"NFT_PAYLOAD_LL_HEADER","","",null,null],[17,"NFT_PAYLOAD_NETWORK_HEADER","","",null,null],[17,"NFT_PAYLOAD_TRANSPORT_HEADER","","",null,null],[17,"NFT_PAYLOAD_CSUM_NONE","","",null,null],[17,"NFT_PAYLOAD_CSUM_INET","","",null,null],[17,"NFT_META_LEN","","",null,null],[17,"NFT_META_PROTOCOL","","",null,null],[17,"NFT_META_PRIORITY","","",null,null],[17,"NFT_META_MARK","","",null,null],[17,"NFT_META_IIF","","",null,null],[17,"NFT_META_OIF","","",null,null],[17,"NFT_META_IIFNAME","","",null,null],[17,"NFT_META_OIFNAME","","",null,null],[17,"NFT_META_IIFTYPE","","",null,null],[17,"NFT_META_OIFTYPE","","",null,null],[17,"NFT_META_SKUID","","",null,null],[17,"NFT_META_SKGID","","",null,null],[17,"NFT_META_NFTRACE","","",null,null],[17,"NFT_META_RTCLASSID","","",null,null],[17,"NFT_META_SECMARK","","",null,null],[17,"NFT_META_NFPROTO","","",null,null],[17,"NFT_META_L4PROTO","","",null,null],[17,"NFT_META_BRI_IIFNAME","","",null,null],[17,"NFT_META_BRI_OIFNAME","","",null,null],[17,"NFT_META_PKTTYPE","","",null,null],[17,"NFT_META_CPU","","",null,null],[17,"NFT_META_IIFGROUP","","",null,null],[17,"NFT_META_OIFGROUP","","",null,null],[17,"NFT_META_CGROUP","","",null,null],[17,"NFT_META_PRANDOM","","",null,null],[17,"NFT_CT_STATE","","",null,null],[17,"NFT_CT_DIRECTION","","",null,null],[17,"NFT_CT_STATUS","","",null,null],[17,"NFT_CT_MARK","","",null,null],[17,"NFT_CT_SECMARK","","",null,null],[17,"NFT_CT_EXPIRATION","","",null,null],[17,"NFT_CT_HELPER","","",null,null],[17,"NFT_CT_L3PROTOCOL","","",null,null],[17,"NFT_CT_SRC","","",null,null],[17,"NFT_CT_DST","","",null,null],[17,"NFT_CT_PROTOCOL","","",null,null],[17,"NFT_CT_PROTO_SRC","","",null,null],[17,"NFT_CT_PROTO_DST","","",null,null],[17,"NFT_CT_LABELS","","",null,null],[17,"NFT_CT_PKTS","","",null,null],[17,"NFT_CT_BYTES","","",null,null],[17,"NFT_LIMIT_PKTS","","",null,null],[17,"NFT_LIMIT_PKT_BYTES","","",null,null],[17,"NFT_LIMIT_F_INV","","",null,null],[17,"NFT_QUEUE_FLAG_BYPASS","","",null,null],[17,"NFT_QUEUE_FLAG_CPU_FANOUT","","",null,null],[17,"NFT_QUEUE_FLAG_MASK","","",null,null],[17,"NFT_QUOTA_F_INV","","",null,null],[17,"NFT_REJECT_ICMP_UNREACH","","",null,null],[17,"NFT_REJECT_TCP_RST","","",null,null],[17,"NFT_REJECT_ICMPX_UNREACH","","",null,null],[17,"NFT_REJECT_ICMPX_NO_ROUTE","","",null,null],[17,"NFT_REJECT_ICMPX_PORT_UNREACH","","",null,null],[17,"NFT_REJECT_ICMPX_HOST_UNREACH","","",null,null],[17,"NFT_REJECT_ICMPX_ADMIN_PROHIBITED","","",null,null],[17,"NFT_NAT_SNAT","","",null,null],[17,"NFT_NAT_DNAT","","",null,null],[17,"NFT_TRACETYPE_UNSPEC","","",null,null],[17,"NFT_TRACETYPE_POLICY","","",null,null],[17,"NFT_TRACETYPE_RETURN","","",null,null],[17,"NFT_TRACETYPE_RULE","","",null,null],[17,"NFT_NG_INCREMENTAL","","",null,null],[17,"NFT_NG_RANDOM","","",null,null],[17,"M_MXFAST","","",null,null],[17,"M_NLBLKS","","",null,null],[17,"M_GRAIN","","",null,null],[17,"M_KEEP","","",null,null],[17,"M_TRIM_THRESHOLD","","",null,null],[17,"M_TOP_PAD","","",null,null],[17,"M_MMAP_THRESHOLD","","",null,null],[17,"M_MMAP_MAX","","",null,null],[17,"M_CHECK_ACTION","","",null,null],[17,"M_PERTURB","","",null,null],[17,"M_ARENA_TEST","","",null,null],[17,"M_ARENA_MAX","","",null,null],[17,"AT_STATX_SYNC_TYPE","","",null,null],[17,"AT_STATX_SYNC_AS_STAT","","",null,null],[17,"AT_STATX_FORCE_SYNC","","",null,null],[17,"AT_STATX_DONT_SYNC","","",null,null],[17,"STATX_TYPE","","",null,null],[17,"STATX_MODE","","",null,null],[17,"STATX_NLINK","","",null,null],[17,"STATX_UID","","",null,null],[17,"STATX_GID","","",null,null],[17,"STATX_ATIME","","",null,null],[17,"STATX_MTIME","","",null,null],[17,"STATX_CTIME","","",null,null],[17,"STATX_INO","","",null,null],[17,"STATX_SIZE","","",null,null],[17,"STATX_BLOCKS","","",null,null],[17,"STATX_BASIC_STATS","","",null,null],[17,"STATX_BTIME","","",null,null],[17,"STATX_ALL","","",null,null],[17,"STATX__RESERVED","","",null,null],[17,"STATX_ATTR_COMPRESSED","","",null,null],[17,"STATX_ATTR_IMMUTABLE","","",null,null],[17,"STATX_ATTR_APPEND","","",null,null],[17,"STATX_ATTR_NODUMP","","",null,null],[17,"STATX_ATTR_ENCRYPTED","","",null,null],[17,"STATX_ATTR_AUTOMOUNT","","",null,null],[17,"PTHREAD_STACK_MIN","","",null,null],[17,"PTHREAD_MUTEX_ADAPTIVE_NP","","",null,null],[6,"clock_t","","",null,null],[6,"time_t","","",null,null],[6,"ino_t","","",null,null],[6,"off_t","","",null,null],[6,"blkcnt_t","","",null,null],[6,"shmatt_t","","",null,null],[6,"msgqnum_t","","",null,null],[6,"msglen_t","","",null,null],[6,"fsblkcnt_t","","",null,null],[6,"fsfilcnt_t","","",null,null],[6,"rlim_t","","",null,null],[6,"__fsword_t","","",null,null],[3,"sigset_t","","",null,null],[3,"sysinfo","","",null,null],[12,"uptime","","",107,null],[12,"loads","","",107,null],[12,"totalram","","",107,null],[12,"freeram","","",107,null],[12,"sharedram","","",107,null],[12,"bufferram","","",107,null],[12,"totalswap","","",107,null],[12,"freeswap","","",107,null],[12,"procs","","",107,null],[12,"pad","","",107,null],[12,"totalhigh","","",107,null],[12,"freehigh","","",107,null],[12,"mem_unit","","",107,null],[12,"_f","","",107,null],[3,"msqid_ds","","",null,null],[12,"msg_perm","","",108,null],[12,"msg_stime","","",108,null],[12,"msg_rtime","","",108,null],[12,"msg_ctime","","",108,null],[12,"msg_qnum","","",108,null],[12,"msg_qbytes","","",108,null],[12,"msg_lspid","","",108,null],[12,"msg_lrpid","","",108,null],[17,"RLIM_INFINITY","","",null,null],[17,"__SIZEOF_PTHREAD_RWLOCKATTR_T","","",null,null],[17,"O_LARGEFILE","","",null,null],[6,"c_char","","",null,null],[6,"wchar_t","","",null,null],[6,"nlink_t","","",null,null],[6,"blksize_t","","",null,null],[6,"greg_t","","",null,null],[6,"suseconds_t","","",null,null],[6,"__u64","","",null,null],[3,"sigaction","","",null,null],[12,"sa_sigaction","","",109,null],[12,"sa_mask","","",109,null],[12,"sa_flags","","",109,null],[12,"sa_restorer","","",109,null],[3,"statfs","","",null,null],[12,"f_type","","",110,null],[12,"f_bsize","","",110,null],[12,"f_blocks","","",110,null],[12,"f_bfree","","",110,null],[12,"f_bavail","","",110,null],[12,"f_files","","",110,null],[12,"f_ffree","","",110,null],[12,"f_fsid","","",110,null],[12,"f_namelen","","",110,null],[12,"f_frsize","","",110,null],[3,"flock","","",null,null],[12,"l_type","","",111,null],[12,"l_whence","","",111,null],[12,"l_start","","",111,null],[12,"l_len","","",111,null],[12,"l_pid","","",111,null],[3,"flock64","","",null,null],[12,"l_type","","",112,null],[12,"l_whence","","",112,null],[12,"l_start","","",112,null],[12,"l_len","","",112,null],[12,"l_pid","","",112,null],[3,"siginfo_t","","",null,null],[12,"si_signo","","",113,null],[12,"si_errno","","",113,null],[12,"si_code","","",113,null],[3,"stack_t","","",null,null],[12,"ss_sp","","",114,null],[12,"ss_flags","","",114,null],[12,"ss_size","","",114,null],[3,"stat","","",null,null],[12,"st_dev","","",115,null],[12,"st_ino","","",115,null],[12,"st_nlink","","",115,null],[12,"st_mode","","",115,null],[12,"st_uid","","",115,null],[12,"st_gid","","",115,null],[12,"st_rdev","","",115,null],[12,"st_size","","",115,null],[12,"st_blksize","","",115,null],[12,"st_blocks","","",115,null],[12,"st_atime","","",115,null],[12,"st_atime_nsec","","",115,null],[12,"st_mtime","","",115,null],[12,"st_mtime_nsec","","",115,null],[12,"st_ctime","","",115,null],[12,"st_ctime_nsec","","",115,null],[3,"stat64","","",null,null],[12,"st_dev","","",116,null],[12,"st_ino","","",116,null],[12,"st_nlink","","",116,null],[12,"st_mode","","",116,null],[12,"st_uid","","",116,null],[12,"st_gid","","",116,null],[12,"st_rdev","","",116,null],[12,"st_size","","",116,null],[12,"st_blksize","","",116,null],[12,"st_blocks","","",116,null],[12,"st_atime","","",116,null],[12,"st_atime_nsec","","",116,null],[12,"st_mtime","","",116,null],[12,"st_mtime_nsec","","",116,null],[12,"st_ctime","","",116,null],[12,"st_ctime_nsec","","",116,null],[3,"statfs64","","",null,null],[12,"f_type","","",117,null],[12,"f_bsize","","",117,null],[12,"f_blocks","","",117,null],[12,"f_bfree","","",117,null],[12,"f_bavail","","",117,null],[12,"f_files","","",117,null],[12,"f_ffree","","",117,null],[12,"f_fsid","","",117,null],[12,"f_namelen","","",117,null],[12,"f_frsize","","",117,null],[12,"f_flags","","",117,null],[12,"f_spare","","",117,null],[3,"statvfs64","","",null,null],[12,"f_bsize","","",118,null],[12,"f_frsize","","",118,null],[12,"f_blocks","","",118,null],[12,"f_bfree","","",118,null],[12,"f_bavail","","",118,null],[12,"f_files","","",118,null],[12,"f_ffree","","",118,null],[12,"f_favail","","",118,null],[12,"f_fsid","","",118,null],[12,"f_flag","","",118,null],[12,"f_namemax","","",118,null],[3,"pthread_attr_t","","",null,null],[3,"_libc_fpxreg","","",null,null],[12,"significand","","",119,null],[12,"exponent","","",119,null],[3,"_libc_xmmreg","","",null,null],[12,"element","","",120,null],[3,"_libc_fpstate","","",null,null],[12,"cwd","","",121,null],[12,"swd","","",121,null],[12,"ftw","","",121,null],[12,"fop","","",121,null],[12,"rip","","",121,null],[12,"rdp","","",121,null],[12,"mxcsr","","",121,null],[12,"mxcr_mask","","",121,null],[12,"_st","","",121,null],[12,"_xmm","","",121,null],[3,"user_regs_struct","","",null,null],[12,"r15","","",122,null],[12,"r14","","",122,null],[12,"r13","","",122,null],[12,"r12","","",122,null],[12,"rbp","","",122,null],[12,"rbx","","",122,null],[12,"r11","","",122,null],[12,"r10","","",122,null],[12,"r9","","",122,null],[12,"r8","","",122,null],[12,"rax","","",122,null],[12,"rcx","","",122,null],[12,"rdx","","",122,null],[12,"rsi","","",122,null],[12,"rdi","","",122,null],[12,"orig_rax","","",122,null],[12,"rip","","",122,null],[12,"cs","","",122,null],[12,"eflags","","",122,null],[12,"rsp","","",122,null],[12,"ss","","",122,null],[12,"fs_base","","",122,null],[12,"gs_base","","",122,null],[12,"ds","","",122,null],[12,"es","","",122,null],[12,"fs","","",122,null],[12,"gs","","",122,null],[3,"user","","",null,null],[12,"regs","","",123,null],[12,"u_fpvalid","","",123,null],[12,"i387","","",123,null],[12,"u_tsize","","",123,null],[12,"u_dsize","","",123,null],[12,"u_ssize","","",123,null],[12,"start_code","","",123,null],[12,"start_stack","","",123,null],[12,"signal","","",123,null],[12,"u_ar0","","",123,null],[12,"u_fpstate","","",123,null],[12,"magic","","",123,null],[12,"u_comm","","",123,null],[12,"u_debugreg","","",123,null],[3,"mcontext_t","","",null,null],[12,"gregs","","",124,null],[12,"fpregs","","",124,null],[3,"ipc_perm","","",null,null],[12,"__key","","",125,null],[12,"uid","","",125,null],[12,"gid","","",125,null],[12,"cuid","","",125,null],[12,"cgid","","",125,null],[12,"mode","","",125,null],[12,"__seq","","",125,null],[3,"shmid_ds","","",null,null],[12,"shm_perm","","",126,null],[12,"shm_segsz","","",126,null],[12,"shm_atime","","",126,null],[12,"shm_dtime","","",126,null],[12,"shm_ctime","","",126,null],[12,"shm_cpid","","",126,null],[12,"shm_lpid","","",126,null],[12,"shm_nattch","","",126,null],[3,"termios2","","",null,null],[12,"c_iflag","","",127,null],[12,"c_oflag","","",127,null],[12,"c_cflag","","",127,null],[12,"c_lflag","","",127,null],[12,"c_line","","",127,null],[12,"c_cc","","",127,null],[12,"c_ispeed","","",127,null],[12,"c_ospeed","","",127,null],[3,"ip_mreqn","","",null,null],[12,"imr_multiaddr","","",128,null],[12,"imr_address","","",128,null],[12,"imr_ifindex","","",128,null],[3,"user_fpregs_struct","","",null,null],[12,"cwd","","",129,null],[12,"swd","","",129,null],[12,"ftw","","",129,null],[12,"fop","","",129,null],[12,"rip","","",129,null],[12,"rdp","","",129,null],[12,"mxcsr","","",129,null],[12,"mxcr_mask","","",129,null],[12,"st_space","","",129,null],[12,"xmm_space","","",129,null],[3,"ucontext_t","","",null,null],[12,"uc_flags","","",130,null],[12,"uc_link","","",130,null],[12,"uc_stack","","",130,null],[12,"uc_mcontext","","",130,null],[12,"uc_sigmask","","",130,null],[17,"POSIX_FADV_DONTNEED","","",null,null],[17,"POSIX_FADV_NOREUSE","","",null,null],[17,"VEOF","","",null,null],[17,"RTLD_DEEPBIND","","",null,null],[17,"RTLD_GLOBAL","","",null,null],[17,"RTLD_NOLOAD","","",null,null],[17,"TIOCGSOFTCAR","","",null,null],[17,"TIOCSSOFTCAR","","",null,null],[17,"TIOCGRS485","","",null,null],[17,"TIOCSRS485","","",null,null],[17,"RLIMIT_RSS","","",null,null],[17,"RLIMIT_AS","","",null,null],[17,"RLIMIT_MEMLOCK","","",null,null],[17,"RLIMIT_NOFILE","","",null,null],[17,"RLIMIT_NPROC","","",null,null],[17,"O_APPEND","","",null,null],[17,"O_CREAT","","",null,null],[17,"O_EXCL","","",null,null],[17,"O_NOCTTY","","",null,null],[17,"O_NONBLOCK","","",null,null],[17,"O_SYNC","","",null,null],[17,"O_RSYNC","","",null,null],[17,"O_DSYNC","","",null,null],[17,"O_FSYNC","","",null,null],[17,"O_NOATIME","","",null,null],[17,"O_PATH","","",null,null],[17,"O_TMPFILE","","",null,null],[17,"MADV_SOFT_OFFLINE","","",null,null],[17,"MAP_GROWSDOWN","","",null,null],[17,"EDEADLK","","",null,null],[17,"ENAMETOOLONG","","",null,null],[17,"ENOLCK","","",null,null],[17,"ENOSYS","","",null,null],[17,"ENOTEMPTY","","",null,null],[17,"ELOOP","","",null,null],[17,"ENOMSG","","",null,null],[17,"EIDRM","","",null,null],[17,"ECHRNG","","",null,null],[17,"EL2NSYNC","","",null,null],[17,"EL3HLT","","",null,null],[17,"EL3RST","","",null,null],[17,"ELNRNG","","",null,null],[17,"EUNATCH","","",null,null],[17,"ENOCSI","","",null,null],[17,"EL2HLT","","",null,null],[17,"EBADE","","",null,null],[17,"EBADR","","",null,null],[17,"EXFULL","","",null,null],[17,"ENOANO","","",null,null],[17,"EBADRQC","","",null,null],[17,"EBADSLT","","",null,null],[17,"EMULTIHOP","","",null,null],[17,"EOVERFLOW","","",null,null],[17,"ENOTUNIQ","","",null,null],[17,"EBADFD","","",null,null],[17,"EBADMSG","","",null,null],[17,"EREMCHG","","",null,null],[17,"ELIBACC","","",null,null],[17,"ELIBBAD","","",null,null],[17,"ELIBSCN","","",null,null],[17,"ELIBMAX","","",null,null],[17,"ELIBEXEC","","",null,null],[17,"EILSEQ","","",null,null],[17,"ERESTART","","",null,null],[17,"ESTRPIPE","","",null,null],[17,"EUSERS","","",null,null],[17,"ENOTSOCK","","",null,null],[17,"EDESTADDRREQ","","",null,null],[17,"EMSGSIZE","","",null,null],[17,"EPROTOTYPE","","",null,null],[17,"ENOPROTOOPT","","",null,null],[17,"EPROTONOSUPPORT","","",null,null],[17,"ESOCKTNOSUPPORT","","",null,null],[17,"EOPNOTSUPP","","",null,null],[17,"EPFNOSUPPORT","","",null,null],[17,"EAFNOSUPPORT","","",null,null],[17,"EADDRINUSE","","",null,null],[17,"EADDRNOTAVAIL","","",null,null],[17,"ENETDOWN","","",null,null],[17,"ENETUNREACH","","",null,null],[17,"ENETRESET","","",null,null],[17,"ECONNABORTED","","",null,null],[17,"ECONNRESET","","",null,null],[17,"ENOBUFS","","",null,null],[17,"EISCONN","","",null,null],[17,"ENOTCONN","","",null,null],[17,"ESHUTDOWN","","",null,null],[17,"ETOOMANYREFS","","",null,null],[17,"ETIMEDOUT","","",null,null],[17,"ECONNREFUSED","","",null,null],[17,"EHOSTDOWN","","",null,null],[17,"EHOSTUNREACH","","",null,null],[17,"EALREADY","","",null,null],[17,"EINPROGRESS","","",null,null],[17,"ESTALE","","",null,null],[17,"EDQUOT","","",null,null],[17,"ENOMEDIUM","","",null,null],[17,"EMEDIUMTYPE","","",null,null],[17,"ECANCELED","","",null,null],[17,"ENOKEY","","",null,null],[17,"EKEYEXPIRED","","",null,null],[17,"EKEYREVOKED","","",null,null],[17,"EKEYREJECTED","","",null,null],[17,"EOWNERDEAD","","",null,null],[17,"ENOTRECOVERABLE","","",null,null],[17,"EHWPOISON","","",null,null],[17,"ERFKILL","","",null,null],[17,"SOL_SOCKET","","",null,null],[17,"SO_REUSEADDR","","",null,null],[17,"SO_TYPE","","",null,null],[17,"SO_ERROR","","",null,null],[17,"SO_DONTROUTE","","",null,null],[17,"SO_BROADCAST","","",null,null],[17,"SO_SNDBUF","","",null,null],[17,"SO_RCVBUF","","",null,null],[17,"SO_SNDBUFFORCE","","",null,null],[17,"SO_RCVBUFFORCE","","",null,null],[17,"SO_KEEPALIVE","","",null,null],[17,"SO_OOBINLINE","","",null,null],[17,"SO_NO_CHECK","","",null,null],[17,"SO_PRIORITY","","",null,null],[17,"SO_LINGER","","",null,null],[17,"SO_BSDCOMPAT","","",null,null],[17,"SO_REUSEPORT","","",null,null],[17,"SO_PASSCRED","","",null,null],[17,"SO_PEERCRED","","",null,null],[17,"SO_RCVLOWAT","","",null,null],[17,"SO_SNDLOWAT","","",null,null],[17,"SO_RCVTIMEO","","",null,null],[17,"SO_SNDTIMEO","","",null,null],[17,"SO_SECURITY_AUTHENTICATION","","",null,null],[17,"SO_SECURITY_ENCRYPTION_TRANSPORT","","",null,null],[17,"SO_SECURITY_ENCRYPTION_NETWORK","","",null,null],[17,"SO_BINDTODEVICE","","",null,null],[17,"SO_ATTACH_FILTER","","",null,null],[17,"SO_DETACH_FILTER","","",null,null],[17,"SO_GET_FILTER","","",null,null],[17,"SO_PEERNAME","","",null,null],[17,"SO_TIMESTAMP","","",null,null],[17,"SO_ACCEPTCONN","","",null,null],[17,"SO_PEERSEC","","",null,null],[17,"SO_PASSSEC","","",null,null],[17,"SO_TIMESTAMPNS","","",null,null],[17,"SCM_TIMESTAMPNS","","",null,null],[17,"SO_MARK","","",null,null],[17,"SO_PROTOCOL","","",null,null],[17,"SO_DOMAIN","","",null,null],[17,"SO_RXQ_OVFL","","",null,null],[17,"SO_WIFI_STATUS","","",null,null],[17,"SCM_WIFI_STATUS","","",null,null],[17,"SO_PEEK_OFF","","",null,null],[17,"SO_NOFCS","","",null,null],[17,"SO_LOCK_FILTER","","",null,null],[17,"SO_SELECT_ERR_QUEUE","","",null,null],[17,"SO_BUSY_POLL","","",null,null],[17,"SO_MAX_PACING_RATE","","",null,null],[17,"SO_BPF_EXTENSIONS","","",null,null],[17,"SO_INCOMING_CPU","","",null,null],[17,"SO_ATTACH_BPF","","",null,null],[17,"SO_DETACH_BPF","","",null,null],[17,"SOCK_STREAM","","",null,null],[17,"SOCK_DGRAM","","",null,null],[17,"SA_ONSTACK","","",null,null],[17,"SA_SIGINFO","","",null,null],[17,"SA_NOCLDWAIT","","",null,null],[17,"SIGTTIN","","",null,null],[17,"SIGTTOU","","",null,null],[17,"SIGXCPU","","",null,null],[17,"SIGXFSZ","","",null,null],[17,"SIGVTALRM","","",null,null],[17,"SIGPROF","","",null,null],[17,"SIGWINCH","","",null,null],[17,"SIGCHLD","","",null,null],[17,"SIGBUS","","",null,null],[17,"SIGUSR1","","",null,null],[17,"SIGUSR2","","",null,null],[17,"SIGCONT","","",null,null],[17,"SIGSTOP","","",null,null],[17,"SIGTSTP","","",null,null],[17,"SIGURG","","",null,null],[17,"SIGIO","","",null,null],[17,"SIGSYS","","",null,null],[17,"SIGSTKFLT","","",null,null],[17,"SIGUNUSED","","",null,null],[17,"SIGPOLL","","",null,null],[17,"SIGPWR","","",null,null],[17,"SIG_SETMASK","","",null,null],[17,"SIG_BLOCK","","",null,null],[17,"SIG_UNBLOCK","","",null,null],[17,"POLLWRNORM","","",null,null],[17,"POLLWRBAND","","",null,null],[17,"O_ASYNC","","",null,null],[17,"O_NDELAY","","",null,null],[17,"PTRACE_DETACH","","",null,null],[17,"EFD_NONBLOCK","","",null,null],[17,"F_GETLK","","",null,null],[17,"F_GETOWN","","",null,null],[17,"F_SETOWN","","",null,null],[17,"F_SETLK","","",null,null],[17,"F_SETLKW","","",null,null],[17,"F_RDLCK","","",null,null],[17,"F_WRLCK","","",null,null],[17,"F_UNLCK","","",null,null],[17,"SFD_NONBLOCK","","",null,null],[17,"TCSANOW","","",null,null],[17,"TCSADRAIN","","",null,null],[17,"TCSAFLUSH","","",null,null],[17,"TIOCLINUX","","",null,null],[17,"TIOCGSERIAL","","",null,null],[17,"TIOCEXCL","","",null,null],[17,"TIOCNXCL","","",null,null],[17,"TIOCSCTTY","","",null,null],[17,"TIOCSTI","","",null,null],[17,"TIOCMGET","","",null,null],[17,"TIOCMBIS","","",null,null],[17,"TIOCMBIC","","",null,null],[17,"TIOCMSET","","",null,null],[17,"TIOCCONS","","",null,null],[17,"TIOCM_ST","","",null,null],[17,"TIOCM_SR","","",null,null],[17,"TIOCM_CTS","","",null,null],[17,"TIOCM_CAR","","",null,null],[17,"TIOCM_RNG","","",null,null],[17,"TIOCM_DSR","","",null,null],[17,"SFD_CLOEXEC","","",null,null],[17,"NCCS","","",null,null],[17,"O_TRUNC","","",null,null],[17,"O_CLOEXEC","","",null,null],[17,"EBFONT","","",null,null],[17,"ENOSTR","","",null,null],[17,"ENODATA","","",null,null],[17,"ETIME","","",null,null],[17,"ENOSR","","",null,null],[17,"ENONET","","",null,null],[17,"ENOPKG","","",null,null],[17,"EREMOTE","","",null,null],[17,"ENOLINK","","",null,null],[17,"EADV","","",null,null],[17,"ESRMNT","","",null,null],[17,"ECOMM","","",null,null],[17,"EPROTO","","",null,null],[17,"EDOTDOT","","",null,null],[17,"SA_NODEFER","","",null,null],[17,"SA_RESETHAND","","",null,null],[17,"SA_RESTART","","",null,null],[17,"SA_NOCLDSTOP","","",null,null],[17,"EPOLL_CLOEXEC","","",null,null],[17,"EFD_CLOEXEC","","",null,null],[17,"__SIZEOF_PTHREAD_CONDATTR_T","","",null,null],[17,"__SIZEOF_PTHREAD_MUTEXATTR_T","","",null,null],[17,"O_DIRECT","","",null,null],[17,"O_DIRECTORY","","",null,null],[17,"O_NOFOLLOW","","",null,null],[17,"MAP_HUGETLB","","",null,null],[17,"MAP_LOCKED","","",null,null],[17,"MAP_NORESERVE","","",null,null],[17,"MAP_32BIT","","",null,null],[17,"MAP_ANON","","",null,null],[17,"MAP_ANONYMOUS","","",null,null],[17,"MAP_DENYWRITE","","",null,null],[17,"MAP_EXECUTABLE","","",null,null],[17,"MAP_POPULATE","","",null,null],[17,"MAP_NONBLOCK","","",null,null],[17,"MAP_STACK","","",null,null],[17,"EDEADLOCK","","",null,null],[17,"EUCLEAN","","",null,null],[17,"ENOTNAM","","",null,null],[17,"ENAVAIL","","",null,null],[17,"EISNAM","","",null,null],[17,"EREMOTEIO","","",null,null],[17,"FIOCLEX","","",null,null],[17,"FIONCLEX","","",null,null],[17,"FIONBIO","","",null,null],[17,"PTRACE_GETFPREGS","","",null,null],[17,"PTRACE_SETFPREGS","","",null,null],[17,"PTRACE_GETFPXREGS","","",null,null],[17,"PTRACE_SETFPXREGS","","",null,null],[17,"PTRACE_GETREGS","","",null,null],[17,"PTRACE_SETREGS","","",null,null],[17,"PTRACE_PEEKSIGINFO_SHARED","","",null,null],[17,"MCL_CURRENT","","",null,null],[17,"MCL_FUTURE","","",null,null],[17,"SIGSTKSZ","","",null,null],[17,"MINSIGSTKSZ","","",null,null],[17,"CBAUD","","",null,null],[17,"TAB1","","",null,null],[17,"TAB2","","",null,null],[17,"TAB3","","",null,null],[17,"CR1","","",null,null],[17,"CR2","","",null,null],[17,"CR3","","",null,null],[17,"FF1","","",null,null],[17,"BS1","","",null,null],[17,"VT1","","",null,null],[17,"VWERASE","","",null,null],[17,"VREPRINT","","",null,null],[17,"VSUSP","","",null,null],[17,"VSTART","","",null,null],[17,"VSTOP","","",null,null],[17,"VDISCARD","","",null,null],[17,"VTIME","","",null,null],[17,"IXON","","",null,null],[17,"IXOFF","","",null,null],[17,"ONLCR","","",null,null],[17,"CSIZE","","",null,null],[17,"CS6","","",null,null],[17,"CS7","","",null,null],[17,"CS8","","",null,null],[17,"CSTOPB","","",null,null],[17,"CREAD","","",null,null],[17,"PARENB","","",null,null],[17,"PARODD","","",null,null],[17,"HUPCL","","",null,null],[17,"CLOCAL","","",null,null],[17,"ECHOKE","","",null,null],[17,"ECHOE","","",null,null],[17,"ECHOK","","",null,null],[17,"ECHONL","","",null,null],[17,"ECHOPRT","","",null,null],[17,"ECHOCTL","","",null,null],[17,"ISIG","","",null,null],[17,"ICANON","","",null,null],[17,"PENDIN","","",null,null],[17,"NOFLSH","","",null,null],[17,"CIBAUD","","",null,null],[17,"CBAUDEX","","",null,null],[17,"VSWTC","","",null,null],[17,"OLCUC","","",null,null],[17,"NLDLY","","",null,null],[17,"CRDLY","","",null,null],[17,"TABDLY","","",null,null],[17,"BSDLY","","",null,null],[17,"FFDLY","","",null,null],[17,"VTDLY","","",null,null],[17,"XTABS","","",null,null],[17,"B0","","",null,null],[17,"B50","","",null,null],[17,"B75","","",null,null],[17,"B110","","",null,null],[17,"B134","","",null,null],[17,"B150","","",null,null],[17,"B200","","",null,null],[17,"B300","","",null,null],[17,"B600","","",null,null],[17,"B1200","","",null,null],[17,"B1800","","",null,null],[17,"B2400","","",null,null],[17,"B4800","","",null,null],[17,"B9600","","",null,null],[17,"B19200","","",null,null],[17,"B38400","","",null,null],[17,"EXTA","","",null,null],[17,"EXTB","","",null,null],[17,"BOTHER","","",null,null],[17,"B57600","","",null,null],[17,"B115200","","",null,null],[17,"B230400","","",null,null],[17,"B460800","","",null,null],[17,"B500000","","",null,null],[17,"B576000","","",null,null],[17,"B921600","","",null,null],[17,"B1000000","","",null,null],[17,"B1152000","","",null,null],[17,"B1500000","","",null,null],[17,"B2000000","","",null,null],[17,"B2500000","","",null,null],[17,"B3000000","","",null,null],[17,"B3500000","","",null,null],[17,"B4000000","","",null,null],[17,"VEOL","","",null,null],[17,"VEOL2","","",null,null],[17,"VMIN","","",null,null],[17,"IEXTEN","","",null,null],[17,"TOSTOP","","",null,null],[17,"FLUSHO","","",null,null],[17,"EXTPROC","","",null,null],[17,"TCGETS","","",null,null],[17,"TCSETS","","",null,null],[17,"TCSETSW","","",null,null],[17,"TCSETSF","","",null,null],[17,"TCGETA","","",null,null],[17,"TCSETA","","",null,null],[17,"TCSETAW","","",null,null],[17,"TCSETAF","","",null,null],[17,"TCSBRK","","",null,null],[17,"TCXONC","","",null,null],[17,"TCFLSH","","",null,null],[17,"TIOCINQ","","",null,null],[17,"TIOCGPGRP","","",null,null],[17,"TIOCSPGRP","","",null,null],[17,"TIOCOUTQ","","",null,null],[17,"TIOCGWINSZ","","",null,null],[17,"TIOCSWINSZ","","",null,null],[17,"FIONREAD","","",null,null],[17,"R15","","",null,null],[17,"R14","","",null,null],[17,"R13","","",null,null],[17,"R12","","",null,null],[17,"RBP","","",null,null],[17,"RBX","","",null,null],[17,"R11","","",null,null],[17,"R10","","",null,null],[17,"R9","","",null,null],[17,"R8","","",null,null],[17,"RAX","","",null,null],[17,"RCX","","",null,null],[17,"RDX","","",null,null],[17,"RSI","","",null,null],[17,"RDI","","",null,null],[17,"ORIG_RAX","","",null,null],[17,"RIP","","",null,null],[17,"CS","","",null,null],[17,"EFLAGS","","",null,null],[17,"RSP","","",null,null],[17,"SS","","",null,null],[17,"FS_BASE","","",null,null],[17,"GS_BASE","","",null,null],[17,"DS","","",null,null],[17,"ES","","",null,null],[17,"FS","","",null,null],[17,"GS","","",null,null],[17,"REG_R8","","",null,null],[17,"REG_R9","","",null,null],[17,"REG_R10","","",null,null],[17,"REG_R11","","",null,null],[17,"REG_R12","","",null,null],[17,"REG_R13","","",null,null],[17,"REG_R14","","",null,null],[17,"REG_R15","","",null,null],[17,"REG_RDI","","",null,null],[17,"REG_RSI","","",null,null],[17,"REG_RBP","","",null,null],[17,"REG_RBX","","",null,null],[17,"REG_RDX","","",null,null],[17,"REG_RAX","","",null,null],[17,"REG_RCX","","",null,null],[17,"REG_RSP","","",null,null],[17,"REG_RIP","","",null,null],[17,"REG_EFL","","",null,null],[17,"REG_CSGSFS","","",null,null],[17,"REG_ERR","","",null,null],[17,"REG_TRAPNO","","",null,null],[17,"REG_OLDMASK","","",null,null],[17,"REG_CR2","","",null,null],[6,"c_long","","",null,null],[6,"c_ulong","","",null,null],[3,"statvfs","","",null,null],[12,"f_bsize","","",131,null],[12,"f_frsize","","",131,null],[12,"f_blocks","","",131,null],[12,"f_bfree","","",131,null],[12,"f_bavail","","",131,null],[12,"f_files","","",131,null],[12,"f_ffree","","",131,null],[12,"f_favail","","",131,null],[12,"f_fsid","","",131,null],[12,"f_flag","","",131,null],[12,"f_namemax","","",131,null],[17,"__SIZEOF_PTHREAD_MUTEX_T","","",null,null],[17,"__SIZEOF_PTHREAD_RWLOCK_T","","",null,null],[17,"PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP","","",null,null],[17,"PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP","","",null,null],[17,"PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP","","",null,null],[17,"SYS_read","","",null,null],[17,"SYS_write","","",null,null],[17,"SYS_open","","",null,null],[17,"SYS_close","","",null,null],[17,"SYS_stat","","",null,null],[17,"SYS_fstat","","",null,null],[17,"SYS_lstat","","",null,null],[17,"SYS_poll","","",null,null],[17,"SYS_lseek","","",null,null],[17,"SYS_mmap","","",null,null],[17,"SYS_mprotect","","",null,null],[17,"SYS_munmap","","",null,null],[17,"SYS_brk","","",null,null],[17,"SYS_rt_sigaction","","",null,null],[17,"SYS_rt_sigprocmask","","",null,null],[17,"SYS_rt_sigreturn","","",null,null],[17,"SYS_ioctl","","",null,null],[17,"SYS_pread64","","",null,null],[17,"SYS_pwrite64","","",null,null],[17,"SYS_readv","","",null,null],[17,"SYS_writev","","",null,null],[17,"SYS_access","","",null,null],[17,"SYS_pipe","","",null,null],[17,"SYS_select","","",null,null],[17,"SYS_sched_yield","","",null,null],[17,"SYS_mremap","","",null,null],[17,"SYS_msync","","",null,null],[17,"SYS_mincore","","",null,null],[17,"SYS_madvise","","",null,null],[17,"SYS_shmget","","",null,null],[17,"SYS_shmat","","",null,null],[17,"SYS_shmctl","","",null,null],[17,"SYS_dup","","",null,null],[17,"SYS_dup2","","",null,null],[17,"SYS_pause","","",null,null],[17,"SYS_nanosleep","","",null,null],[17,"SYS_getitimer","","",null,null],[17,"SYS_alarm","","",null,null],[17,"SYS_setitimer","","",null,null],[17,"SYS_getpid","","",null,null],[17,"SYS_sendfile","","",null,null],[17,"SYS_socket","","",null,null],[17,"SYS_connect","","",null,null],[17,"SYS_accept","","",null,null],[17,"SYS_sendto","","",null,null],[17,"SYS_recvfrom","","",null,null],[17,"SYS_sendmsg","","",null,null],[17,"SYS_recvmsg","","",null,null],[17,"SYS_shutdown","","",null,null],[17,"SYS_bind","","",null,null],[17,"SYS_listen","","",null,null],[17,"SYS_getsockname","","",null,null],[17,"SYS_getpeername","","",null,null],[17,"SYS_socketpair","","",null,null],[17,"SYS_setsockopt","","",null,null],[17,"SYS_getsockopt","","",null,null],[17,"SYS_clone","","",null,null],[17,"SYS_fork","","",null,null],[17,"SYS_vfork","","",null,null],[17,"SYS_execve","","",null,null],[17,"SYS_exit","","",null,null],[17,"SYS_wait4","","",null,null],[17,"SYS_kill","","",null,null],[17,"SYS_uname","","",null,null],[17,"SYS_semget","","",null,null],[17,"SYS_semop","","",null,null],[17,"SYS_semctl","","",null,null],[17,"SYS_shmdt","","",null,null],[17,"SYS_msgget","","",null,null],[17,"SYS_msgsnd","","",null,null],[17,"SYS_msgrcv","","",null,null],[17,"SYS_msgctl","","",null,null],[17,"SYS_fcntl","","",null,null],[17,"SYS_flock","","",null,null],[17,"SYS_fsync","","",null,null],[17,"SYS_fdatasync","","",null,null],[17,"SYS_truncate","","",null,null],[17,"SYS_ftruncate","","",null,null],[17,"SYS_getdents","","",null,null],[17,"SYS_getcwd","","",null,null],[17,"SYS_chdir","","",null,null],[17,"SYS_fchdir","","",null,null],[17,"SYS_rename","","",null,null],[17,"SYS_mkdir","","",null,null],[17,"SYS_rmdir","","",null,null],[17,"SYS_creat","","",null,null],[17,"SYS_link","","",null,null],[17,"SYS_unlink","","",null,null],[17,"SYS_symlink","","",null,null],[17,"SYS_readlink","","",null,null],[17,"SYS_chmod","","",null,null],[17,"SYS_fchmod","","",null,null],[17,"SYS_chown","","",null,null],[17,"SYS_fchown","","",null,null],[17,"SYS_lchown","","",null,null],[17,"SYS_umask","","",null,null],[17,"SYS_gettimeofday","","",null,null],[17,"SYS_getrlimit","","",null,null],[17,"SYS_getrusage","","",null,null],[17,"SYS_sysinfo","","",null,null],[17,"SYS_times","","",null,null],[17,"SYS_ptrace","","",null,null],[17,"SYS_getuid","","",null,null],[17,"SYS_syslog","","",null,null],[17,"SYS_getgid","","",null,null],[17,"SYS_setuid","","",null,null],[17,"SYS_setgid","","",null,null],[17,"SYS_geteuid","","",null,null],[17,"SYS_getegid","","",null,null],[17,"SYS_setpgid","","",null,null],[17,"SYS_getppid","","",null,null],[17,"SYS_getpgrp","","",null,null],[17,"SYS_setsid","","",null,null],[17,"SYS_setreuid","","",null,null],[17,"SYS_setregid","","",null,null],[17,"SYS_getgroups","","",null,null],[17,"SYS_setgroups","","",null,null],[17,"SYS_setresuid","","",null,null],[17,"SYS_getresuid","","",null,null],[17,"SYS_setresgid","","",null,null],[17,"SYS_getresgid","","",null,null],[17,"SYS_getpgid","","",null,null],[17,"SYS_setfsuid","","",null,null],[17,"SYS_setfsgid","","",null,null],[17,"SYS_getsid","","",null,null],[17,"SYS_capget","","",null,null],[17,"SYS_capset","","",null,null],[17,"SYS_rt_sigpending","","",null,null],[17,"SYS_rt_sigtimedwait","","",null,null],[17,"SYS_rt_sigqueueinfo","","",null,null],[17,"SYS_rt_sigsuspend","","",null,null],[17,"SYS_sigaltstack","","",null,null],[17,"SYS_utime","","",null,null],[17,"SYS_mknod","","",null,null],[17,"SYS_uselib","","",null,null],[17,"SYS_personality","","",null,null],[17,"SYS_ustat","","",null,null],[17,"SYS_statfs","","",null,null],[17,"SYS_fstatfs","","",null,null],[17,"SYS_sysfs","","",null,null],[17,"SYS_getpriority","","",null,null],[17,"SYS_setpriority","","",null,null],[17,"SYS_sched_setparam","","",null,null],[17,"SYS_sched_getparam","","",null,null],[17,"SYS_sched_setscheduler","","",null,null],[17,"SYS_sched_getscheduler","","",null,null],[17,"SYS_sched_get_priority_max","","",null,null],[17,"SYS_sched_get_priority_min","","",null,null],[17,"SYS_sched_rr_get_interval","","",null,null],[17,"SYS_mlock","","",null,null],[17,"SYS_munlock","","",null,null],[17,"SYS_mlockall","","",null,null],[17,"SYS_munlockall","","",null,null],[17,"SYS_vhangup","","",null,null],[17,"SYS_modify_ldt","","",null,null],[17,"SYS_pivot_root","","",null,null],[17,"SYS__sysctl","","",null,null],[17,"SYS_prctl","","",null,null],[17,"SYS_arch_prctl","","",null,null],[17,"SYS_adjtimex","","",null,null],[17,"SYS_setrlimit","","",null,null],[17,"SYS_chroot","","",null,null],[17,"SYS_sync","","",null,null],[17,"SYS_acct","","",null,null],[17,"SYS_settimeofday","","",null,null],[17,"SYS_mount","","",null,null],[17,"SYS_umount2","","",null,null],[17,"SYS_swapon","","",null,null],[17,"SYS_swapoff","","",null,null],[17,"SYS_reboot","","",null,null],[17,"SYS_sethostname","","",null,null],[17,"SYS_setdomainname","","",null,null],[17,"SYS_iopl","","",null,null],[17,"SYS_ioperm","","",null,null],[17,"SYS_create_module","","",null,null],[17,"SYS_init_module","","",null,null],[17,"SYS_delete_module","","",null,null],[17,"SYS_get_kernel_syms","","",null,null],[17,"SYS_query_module","","",null,null],[17,"SYS_quotactl","","",null,null],[17,"SYS_nfsservctl","","",null,null],[17,"SYS_getpmsg","","",null,null],[17,"SYS_putpmsg","","",null,null],[17,"SYS_afs_syscall","","",null,null],[17,"SYS_tuxcall","","",null,null],[17,"SYS_security","","",null,null],[17,"SYS_gettid","","",null,null],[17,"SYS_readahead","","",null,null],[17,"SYS_setxattr","","",null,null],[17,"SYS_lsetxattr","","",null,null],[17,"SYS_fsetxattr","","",null,null],[17,"SYS_getxattr","","",null,null],[17,"SYS_lgetxattr","","",null,null],[17,"SYS_fgetxattr","","",null,null],[17,"SYS_listxattr","","",null,null],[17,"SYS_llistxattr","","",null,null],[17,"SYS_flistxattr","","",null,null],[17,"SYS_removexattr","","",null,null],[17,"SYS_lremovexattr","","",null,null],[17,"SYS_fremovexattr","","",null,null],[17,"SYS_tkill","","",null,null],[17,"SYS_time","","",null,null],[17,"SYS_futex","","",null,null],[17,"SYS_sched_setaffinity","","",null,null],[17,"SYS_sched_getaffinity","","",null,null],[17,"SYS_set_thread_area","","",null,null],[17,"SYS_io_setup","","",null,null],[17,"SYS_io_destroy","","",null,null],[17,"SYS_io_getevents","","",null,null],[17,"SYS_io_submit","","",null,null],[17,"SYS_io_cancel","","",null,null],[17,"SYS_get_thread_area","","",null,null],[17,"SYS_lookup_dcookie","","",null,null],[17,"SYS_epoll_create","","",null,null],[17,"SYS_epoll_ctl_old","","",null,null],[17,"SYS_epoll_wait_old","","",null,null],[17,"SYS_remap_file_pages","","",null,null],[17,"SYS_getdents64","","",null,null],[17,"SYS_set_tid_address","","",null,null],[17,"SYS_restart_syscall","","",null,null],[17,"SYS_semtimedop","","",null,null],[17,"SYS_fadvise64","","",null,null],[17,"SYS_timer_create","","",null,null],[17,"SYS_timer_settime","","",null,null],[17,"SYS_timer_gettime","","",null,null],[17,"SYS_timer_getoverrun","","",null,null],[17,"SYS_timer_delete","","",null,null],[17,"SYS_clock_settime","","",null,null],[17,"SYS_clock_gettime","","",null,null],[17,"SYS_clock_getres","","",null,null],[17,"SYS_clock_nanosleep","","",null,null],[17,"SYS_exit_group","","",null,null],[17,"SYS_epoll_wait","","",null,null],[17,"SYS_epoll_ctl","","",null,null],[17,"SYS_tgkill","","",null,null],[17,"SYS_utimes","","",null,null],[17,"SYS_vserver","","",null,null],[17,"SYS_mbind","","",null,null],[17,"SYS_set_mempolicy","","",null,null],[17,"SYS_get_mempolicy","","",null,null],[17,"SYS_mq_open","","",null,null],[17,"SYS_mq_unlink","","",null,null],[17,"SYS_mq_timedsend","","",null,null],[17,"SYS_mq_timedreceive","","",null,null],[17,"SYS_mq_notify","","",null,null],[17,"SYS_mq_getsetattr","","",null,null],[17,"SYS_kexec_load","","",null,null],[17,"SYS_waitid","","",null,null],[17,"SYS_add_key","","",null,null],[17,"SYS_request_key","","",null,null],[17,"SYS_keyctl","","",null,null],[17,"SYS_ioprio_set","","",null,null],[17,"SYS_ioprio_get","","",null,null],[17,"SYS_inotify_init","","",null,null],[17,"SYS_inotify_add_watch","","",null,null],[17,"SYS_inotify_rm_watch","","",null,null],[17,"SYS_migrate_pages","","",null,null],[17,"SYS_openat","","",null,null],[17,"SYS_mkdirat","","",null,null],[17,"SYS_mknodat","","",null,null],[17,"SYS_fchownat","","",null,null],[17,"SYS_futimesat","","",null,null],[17,"SYS_newfstatat","","",null,null],[17,"SYS_unlinkat","","",null,null],[17,"SYS_renameat","","",null,null],[17,"SYS_linkat","","",null,null],[17,"SYS_symlinkat","","",null,null],[17,"SYS_readlinkat","","",null,null],[17,"SYS_fchmodat","","",null,null],[17,"SYS_faccessat","","",null,null],[17,"SYS_pselect6","","",null,null],[17,"SYS_ppoll","","",null,null],[17,"SYS_unshare","","",null,null],[17,"SYS_set_robust_list","","",null,null],[17,"SYS_get_robust_list","","",null,null],[17,"SYS_splice","","",null,null],[17,"SYS_tee","","",null,null],[17,"SYS_sync_file_range","","",null,null],[17,"SYS_vmsplice","","",null,null],[17,"SYS_move_pages","","",null,null],[17,"SYS_utimensat","","",null,null],[17,"SYS_epoll_pwait","","",null,null],[17,"SYS_signalfd","","",null,null],[17,"SYS_timerfd_create","","",null,null],[17,"SYS_eventfd","","",null,null],[17,"SYS_fallocate","","",null,null],[17,"SYS_timerfd_settime","","",null,null],[17,"SYS_timerfd_gettime","","",null,null],[17,"SYS_accept4","","",null,null],[17,"SYS_signalfd4","","",null,null],[17,"SYS_eventfd2","","",null,null],[17,"SYS_epoll_create1","","",null,null],[17,"SYS_dup3","","",null,null],[17,"SYS_pipe2","","",null,null],[17,"SYS_inotify_init1","","",null,null],[17,"SYS_preadv","","",null,null],[17,"SYS_pwritev","","",null,null],[17,"SYS_rt_tgsigqueueinfo","","",null,null],[17,"SYS_perf_event_open","","",null,null],[17,"SYS_recvmmsg","","",null,null],[17,"SYS_fanotify_init","","",null,null],[17,"SYS_fanotify_mark","","",null,null],[17,"SYS_prlimit64","","",null,null],[17,"SYS_name_to_handle_at","","",null,null],[17,"SYS_open_by_handle_at","","",null,null],[17,"SYS_clock_adjtime","","",null,null],[17,"SYS_syncfs","","",null,null],[17,"SYS_sendmmsg","","",null,null],[17,"SYS_setns","","",null,null],[17,"SYS_getcpu","","",null,null],[17,"SYS_process_vm_readv","","",null,null],[17,"SYS_process_vm_writev","","",null,null],[17,"SYS_kcmp","","",null,null],[17,"SYS_finit_module","","",null,null],[17,"SYS_sched_setattr","","",null,null],[17,"SYS_sched_getattr","","",null,null],[17,"SYS_renameat2","","",null,null],[17,"SYS_seccomp","","",null,null],[17,"SYS_getrandom","","",null,null],[17,"SYS_memfd_create","","",null,null],[17,"SYS_kexec_file_load","","",null,null],[17,"SYS_bpf","","",null,null],[17,"SYS_execveat","","",null,null],[17,"SYS_userfaultfd","","",null,null],[17,"SYS_membarrier","","",null,null],[17,"SYS_mlock2","","",null,null],[17,"SYS_copy_file_range","","",null,null],[17,"SYS_preadv2","","",null,null],[17,"SYS_pwritev2","","",null,null],[17,"SYS_pkey_mprotect","","",null,null],[17,"SYS_pkey_alloc","","",null,null],[17,"SYS_pkey_free","","",null,null],[17,"SYS_statx","","",null,null],[3,"max_align_t","","",null,null],[3,"sem_t","","",null,null],[3,"pthread_mutexattr_t","","",null,null],[3,"pthread_rwlockattr_t","","",null,null],[3,"pthread_condattr_t","","",null,null],[3,"pthread_cond_t","","",null,null],[3,"pthread_mutex_t","","",null,null],[3,"pthread_rwlock_t","","",null,null],[4,"c_void","","Equivalent to C\'s <code>void</code> type when used as a pointer.",null,null],[3,"in6_addr","","",null,null],[12,"s6_addr","","",132,null],[11,"from","","",131,[[]]],[11,"borrow","","",131,[[]]],[11,"borrow_mut","","",131,[[]]],[11,"try_from","","",131,[[],["result",4]]],[11,"into","","",131,[[]]],[11,"try_into","","",131,[[],["result",4]]],[11,"type_id","","",131,[[],["typeid",3]]],[11,"from","","",133,[[]]],[11,"borrow","","",133,[[]]],[11,"borrow_mut","","",133,[[]]],[11,"try_from","","",133,[[],["result",4]]],[11,"into","","",133,[[]]],[11,"try_into","","",133,[[],["result",4]]],[11,"type_id","","",133,[[],["typeid",3]]],[11,"from","","",109,[[]]],[11,"borrow","","",109,[[]]],[11,"borrow_mut","","",109,[[]]],[11,"try_from","","",109,[[],["result",4]]],[11,"into","","",109,[[]]],[11,"try_into","","",109,[[],["result",4]]],[11,"type_id","","",109,[[],["typeid",3]]],[11,"from","","",110,[[]]],[11,"borrow","","",110,[[]]],[11,"borrow_mut","","",110,[[]]],[11,"try_from","","",110,[[],["result",4]]],[11,"into","","",110,[[]]],[11,"try_into","","",110,[[],["result",4]]],[11,"type_id","","",110,[[],["typeid",3]]],[11,"from","","",111,[[]]],[11,"borrow","","",111,[[]]],[11,"borrow_mut","","",111,[[]]],[11,"try_from","","",111,[[],["result",4]]],[11,"into","","",111,[[]]],[11,"try_into","","",111,[[],["result",4]]],[11,"type_id","","",111,[[],["typeid",3]]],[11,"from","","",112,[[]]],[11,"borrow","","",112,[[]]],[11,"borrow_mut","","",112,[[]]],[11,"try_from","","",112,[[],["result",4]]],[11,"into","","",112,[[]]],[11,"try_into","","",112,[[],["result",4]]],[11,"type_id","","",112,[[],["typeid",3]]],[11,"from","","",113,[[]]],[11,"borrow","","",113,[[]]],[11,"borrow_mut","","",113,[[]]],[11,"try_from","","",113,[[],["result",4]]],[11,"into","","",113,[[]]],[11,"try_into","","",113,[[],["result",4]]],[11,"type_id","","",113,[[],["typeid",3]]],[11,"from","","",114,[[]]],[11,"borrow","","",114,[[]]],[11,"borrow_mut","","",114,[[]]],[11,"try_from","","",114,[[],["result",4]]],[11,"into","","",114,[[]]],[11,"try_into","","",114,[[],["result",4]]],[11,"type_id","","",114,[[],["typeid",3]]],[11,"from","","",115,[[]]],[11,"borrow","","",115,[[]]],[11,"borrow_mut","","",115,[[]]],[11,"try_from","","",115,[[],["result",4]]],[11,"into","","",115,[[]]],[11,"try_into","","",115,[[],["result",4]]],[11,"type_id","","",115,[[],["typeid",3]]],[11,"from","","",116,[[]]],[11,"borrow","","",116,[[]]],[11,"borrow_mut","","",116,[[]]],[11,"try_from","","",116,[[],["result",4]]],[11,"into","","",116,[[]]],[11,"try_into","","",116,[[],["result",4]]],[11,"type_id","","",116,[[],["typeid",3]]],[11,"from","","",117,[[]]],[11,"borrow","","",117,[[]]],[11,"borrow_mut","","",117,[[]]],[11,"try_from","","",117,[[],["result",4]]],[11,"into","","",117,[[]]],[11,"try_into","","",117,[[],["result",4]]],[11,"type_id","","",117,[[],["typeid",3]]],[11,"from","","",118,[[]]],[11,"borrow","","",118,[[]]],[11,"borrow_mut","","",118,[[]]],[11,"try_from","","",118,[[],["result",4]]],[11,"into","","",118,[[]]],[11,"try_into","","",118,[[],["result",4]]],[11,"type_id","","",118,[[],["typeid",3]]],[11,"from","","",134,[[]]],[11,"borrow","","",134,[[]]],[11,"borrow_mut","","",134,[[]]],[11,"try_from","","",134,[[],["result",4]]],[11,"into","","",134,[[]]],[11,"try_into","","",134,[[],["result",4]]],[11,"type_id","","",134,[[],["typeid",3]]],[11,"from","","",119,[[]]],[11,"borrow","","",119,[[]]],[11,"borrow_mut","","",119,[[]]],[11,"try_from","","",119,[[],["result",4]]],[11,"into","","",119,[[]]],[11,"try_into","","",119,[[],["result",4]]],[11,"type_id","","",119,[[],["typeid",3]]],[11,"from","","",120,[[]]],[11,"borrow","","",120,[[]]],[11,"borrow_mut","","",120,[[]]],[11,"try_from","","",120,[[],["result",4]]],[11,"into","","",120,[[]]],[11,"try_into","","",120,[[],["result",4]]],[11,"type_id","","",120,[[],["typeid",3]]],[11,"from","","",121,[[]]],[11,"borrow","","",121,[[]]],[11,"borrow_mut","","",121,[[]]],[11,"try_from","","",121,[[],["result",4]]],[11,"into","","",121,[[]]],[11,"try_into","","",121,[[],["result",4]]],[11,"type_id","","",121,[[],["typeid",3]]],[11,"from","","",122,[[]]],[11,"borrow","","",122,[[]]],[11,"borrow_mut","","",122,[[]]],[11,"try_from","","",122,[[],["result",4]]],[11,"into","","",122,[[]]],[11,"try_into","","",122,[[],["result",4]]],[11,"type_id","","",122,[[],["typeid",3]]],[11,"from","","",123,[[]]],[11,"borrow","","",123,[[]]],[11,"borrow_mut","","",123,[[]]],[11,"try_from","","",123,[[],["result",4]]],[11,"into","","",123,[[]]],[11,"try_into","","",123,[[],["result",4]]],[11,"type_id","","",123,[[],["typeid",3]]],[11,"from","","",124,[[]]],[11,"borrow","","",124,[[]]],[11,"borrow_mut","","",124,[[]]],[11,"try_from","","",124,[[],["result",4]]],[11,"into","","",124,[[]]],[11,"try_into","","",124,[[],["result",4]]],[11,"type_id","","",124,[[],["typeid",3]]],[11,"from","","",125,[[]]],[11,"borrow","","",125,[[]]],[11,"borrow_mut","","",125,[[]]],[11,"try_from","","",125,[[],["result",4]]],[11,"into","","",125,[[]]],[11,"try_into","","",125,[[],["result",4]]],[11,"type_id","","",125,[[],["typeid",3]]],[11,"from","","",126,[[]]],[11,"borrow","","",126,[[]]],[11,"borrow_mut","","",126,[[]]],[11,"try_from","","",126,[[],["result",4]]],[11,"into","","",126,[[]]],[11,"try_into","","",126,[[],["result",4]]],[11,"type_id","","",126,[[],["typeid",3]]],[11,"from","","",127,[[]]],[11,"borrow","","",127,[[]]],[11,"borrow_mut","","",127,[[]]],[11,"try_from","","",127,[[],["result",4]]],[11,"into","","",127,[[]]],[11,"try_into","","",127,[[],["result",4]]],[11,"type_id","","",127,[[],["typeid",3]]],[11,"from","","",128,[[]]],[11,"borrow","","",128,[[]]],[11,"borrow_mut","","",128,[[]]],[11,"try_from","","",128,[[],["result",4]]],[11,"into","","",128,[[]]],[11,"try_into","","",128,[[],["result",4]]],[11,"type_id","","",128,[[],["typeid",3]]],[11,"from","","",129,[[]]],[11,"borrow","","",129,[[]]],[11,"borrow_mut","","",129,[[]]],[11,"try_from","","",129,[[],["result",4]]],[11,"into","","",129,[[]]],[11,"try_into","","",129,[[],["result",4]]],[11,"type_id","","",129,[[],["typeid",3]]],[11,"from","","",130,[[]]],[11,"borrow","","",130,[[]]],[11,"borrow_mut","","",130,[[]]],[11,"try_from","","",130,[[],["result",4]]],[11,"into","","",130,[[]]],[11,"try_into","","",130,[[],["result",4]]],[11,"type_id","","",130,[[],["typeid",3]]],[11,"from","","",135,[[]]],[11,"borrow","","",135,[[]]],[11,"borrow_mut","","",135,[[]]],[11,"try_from","","",135,[[],["result",4]]],[11,"into","","",135,[[]]],[11,"try_into","","",135,[[],["result",4]]],[11,"type_id","","",135,[[],["typeid",3]]],[11,"from","","",107,[[]]],[11,"borrow","","",107,[[]]],[11,"borrow_mut","","",107,[[]]],[11,"try_from","","",107,[[],["result",4]]],[11,"into","","",107,[[]]],[11,"try_into","","",107,[[],["result",4]]],[11,"type_id","","",107,[[],["typeid",3]]],[11,"from","","",108,[[]]],[11,"borrow","","",108,[[]]],[11,"borrow_mut","","",108,[[]]],[11,"try_from","","",108,[[],["result",4]]],[11,"into","","",108,[[]]],[11,"try_into","","",108,[[],["result",4]]],[11,"type_id","","",108,[[],["typeid",3]]],[11,"from","","",136,[[]]],[11,"borrow","","",136,[[]]],[11,"borrow_mut","","",136,[[]]],[11,"try_from","","",136,[[],["result",4]]],[11,"into","","",136,[[]]],[11,"try_into","","",136,[[],["result",4]]],[11,"type_id","","",136,[[],["typeid",3]]],[11,"from","","",89,[[]]],[11,"borrow","","",89,[[]]],[11,"borrow_mut","","",89,[[]]],[11,"try_from","","",89,[[],["result",4]]],[11,"into","","",89,[[]]],[11,"try_into","","",89,[[],["result",4]]],[11,"type_id","","",89,[[],["typeid",3]]],[11,"from","","",90,[[]]],[11,"borrow","","",90,[[]]],[11,"borrow_mut","","",90,[[]]],[11,"try_from","","",90,[[],["result",4]]],[11,"into","","",90,[[]]],[11,"try_into","","",90,[[],["result",4]]],[11,"type_id","","",90,[[],["typeid",3]]],[11,"from","","",91,[[]]],[11,"borrow","","",91,[[]]],[11,"borrow_mut","","",91,[[]]],[11,"try_from","","",91,[[],["result",4]]],[11,"into","","",91,[[]]],[11,"try_into","","",91,[[],["result",4]]],[11,"type_id","","",91,[[],["typeid",3]]],[11,"from","","",92,[[]]],[11,"borrow","","",92,[[]]],[11,"borrow_mut","","",92,[[]]],[11,"try_from","","",92,[[],["result",4]]],[11,"into","","",92,[[]]],[11,"try_into","","",92,[[],["result",4]]],[11,"type_id","","",92,[[],["typeid",3]]],[11,"from","","",93,[[]]],[11,"borrow","","",93,[[]]],[11,"borrow_mut","","",93,[[]]],[11,"try_from","","",93,[[],["result",4]]],[11,"into","","",93,[[]]],[11,"try_into","","",93,[[],["result",4]]],[11,"type_id","","",93,[[],["typeid",3]]],[11,"from","","",94,[[]]],[11,"borrow","","",94,[[]]],[11,"borrow_mut","","",94,[[]]],[11,"try_from","","",94,[[],["result",4]]],[11,"into","","",94,[[]]],[11,"try_into","","",94,[[],["result",4]]],[11,"type_id","","",94,[[],["typeid",3]]],[11,"from","","",95,[[]]],[11,"borrow","","",95,[[]]],[11,"borrow_mut","","",95,[[]]],[11,"try_from","","",95,[[],["result",4]]],[11,"into","","",95,[[]]],[11,"try_into","","",95,[[],["result",4]]],[11,"type_id","","",95,[[],["typeid",3]]],[11,"from","","",96,[[]]],[11,"borrow","","",96,[[]]],[11,"borrow_mut","","",96,[[]]],[11,"try_from","","",96,[[],["result",4]]],[11,"into","","",96,[[]]],[11,"try_into","","",96,[[],["result",4]]],[11,"type_id","","",96,[[],["typeid",3]]],[11,"from","","",97,[[]]],[11,"borrow","","",97,[[]]],[11,"borrow_mut","","",97,[[]]],[11,"try_from","","",97,[[],["result",4]]],[11,"into","","",97,[[]]],[11,"try_into","","",97,[[],["result",4]]],[11,"type_id","","",97,[[],["typeid",3]]],[11,"from","","",98,[[]]],[11,"borrow","","",98,[[]]],[11,"borrow_mut","","",98,[[]]],[11,"try_from","","",98,[[],["result",4]]],[11,"into","","",98,[[]]],[11,"try_into","","",98,[[],["result",4]]],[11,"type_id","","",98,[[],["typeid",3]]],[11,"from","","",99,[[]]],[11,"borrow","","",99,[[]]],[11,"borrow_mut","","",99,[[]]],[11,"try_from","","",99,[[],["result",4]]],[11,"into","","",99,[[]]],[11,"try_into","","",99,[[],["result",4]]],[11,"type_id","","",99,[[],["typeid",3]]],[11,"from","","",100,[[]]],[11,"borrow","","",100,[[]]],[11,"borrow_mut","","",100,[[]]],[11,"try_from","","",100,[[],["result",4]]],[11,"into","","",100,[[]]],[11,"try_into","","",100,[[],["result",4]]],[11,"type_id","","",100,[[],["typeid",3]]],[11,"from","","",101,[[]]],[11,"borrow","","",101,[[]]],[11,"borrow_mut","","",101,[[]]],[11,"try_from","","",101,[[],["result",4]]],[11,"into","","",101,[[]]],[11,"try_into","","",101,[[],["result",4]]],[11,"type_id","","",101,[[],["typeid",3]]],[11,"from","","",102,[[]]],[11,"borrow","","",102,[[]]],[11,"borrow_mut","","",102,[[]]],[11,"try_from","","",102,[[],["result",4]]],[11,"into","","",102,[[]]],[11,"try_into","","",102,[[],["result",4]]],[11,"type_id","","",102,[[],["typeid",3]]],[11,"from","","",103,[[]]],[11,"borrow","","",103,[[]]],[11,"borrow_mut","","",103,[[]]],[11,"try_from","","",103,[[],["result",4]]],[11,"into","","",103,[[]]],[11,"try_into","","",103,[[],["result",4]]],[11,"type_id","","",103,[[],["typeid",3]]],[11,"from","","",104,[[]]],[11,"borrow","","",104,[[]]],[11,"borrow_mut","","",104,[[]]],[11,"try_from","","",104,[[],["result",4]]],[11,"into","","",104,[[]]],[11,"try_into","","",104,[[],["result",4]]],[11,"type_id","","",104,[[],["typeid",3]]],[11,"from","","",105,[[]]],[11,"borrow","","",105,[[]]],[11,"borrow_mut","","",105,[[]]],[11,"try_from","","",105,[[],["result",4]]],[11,"into","","",105,[[]]],[11,"try_into","","",105,[[],["result",4]]],[11,"type_id","","",105,[[],["typeid",3]]],[11,"from","","",106,[[]]],[11,"borrow","","",106,[[]]],[11,"borrow_mut","","",106,[[]]],[11,"try_from","","",106,[[],["result",4]]],[11,"into","","",106,[[]]],[11,"try_into","","",106,[[],["result",4]]],[11,"type_id","","",106,[[],["typeid",3]]],[11,"from","","",137,[[]]],[11,"borrow","","",137,[[]]],[11,"borrow_mut","","",137,[[]]],[11,"try_from","","",137,[[],["result",4]]],[11,"into","","",137,[[]]],[11,"try_into","","",137,[[],["result",4]]],[11,"type_id","","",137,[[],["typeid",3]]],[11,"from","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"into","","",40,[[]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"from","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"into","","",41,[[]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"from","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"into","","",42,[[]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"from","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"into","","",43,[[]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"from","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"into","","",44,[[]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"from","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"into","","",45,[[]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"from","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"into","","",46,[[]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"from","","",138,[[]]],[11,"borrow","","",138,[[]]],[11,"borrow_mut","","",138,[[]]],[11,"try_from","","",138,[[],["result",4]]],[11,"into","","",138,[[]]],[11,"try_into","","",138,[[],["result",4]]],[11,"type_id","","",138,[[],["typeid",3]]],[11,"from","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"into","","",47,[[]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"from","","",139,[[]]],[11,"borrow","","",139,[[]]],[11,"borrow_mut","","",139,[[]]],[11,"try_from","","",139,[[],["result",4]]],[11,"into","","",139,[[]]],[11,"try_into","","",139,[[],["result",4]]],[11,"type_id","","",139,[[],["typeid",3]]],[11,"from","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"into","","",48,[[]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"from","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"into","","",49,[[]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"from","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"into","","",50,[[]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"from","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"into","","",51,[[]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"from","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"into","","",52,[[]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"from","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"into","","",53,[[]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"from","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"into","","",54,[[]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"from","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"into","","",55,[[]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"from","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"into","","",56,[[]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"from","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"into","","",57,[[]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"from","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"into","","",58,[[]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"from","","",59,[[]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"into","","",59,[[]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"from","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"into","","",60,[[]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"from","","",61,[[]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"into","","",61,[[]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"from","","",62,[[]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"into","","",62,[[]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"from","","",63,[[]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"into","","",63,[[]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"from","","",64,[[]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"into","","",64,[[]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"from","","",65,[[]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"into","","",65,[[]]],[11,"try_into","","",65,[[],["result",4]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"from","","",66,[[]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"into","","",66,[[]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"from","","",67,[[]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"into","","",67,[[]]],[11,"try_into","","",67,[[],["result",4]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"from","","",68,[[]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"into","","",68,[[]]],[11,"try_into","","",68,[[],["result",4]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"from","","",69,[[]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"into","","",69,[[]]],[11,"try_into","","",69,[[],["result",4]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"from","","",70,[[]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"into","","",70,[[]]],[11,"try_into","","",70,[[],["result",4]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"from","","",71,[[]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"into","","",71,[[]]],[11,"try_into","","",71,[[],["result",4]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"from","","",72,[[]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"into","","",72,[[]]],[11,"try_into","","",72,[[],["result",4]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"from","","",73,[[]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"into","","",73,[[]]],[11,"try_into","","",73,[[],["result",4]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"from","","",74,[[]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"into","","",74,[[]]],[11,"try_into","","",74,[[],["result",4]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"from","","",75,[[]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"into","","",75,[[]]],[11,"try_into","","",75,[[],["result",4]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"from","","",76,[[]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"into","","",76,[[]]],[11,"try_into","","",76,[[],["result",4]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"from","","",77,[[]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"into","","",77,[[]]],[11,"try_into","","",77,[[],["result",4]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"from","","",140,[[]]],[11,"borrow","","",140,[[]]],[11,"borrow_mut","","",140,[[]]],[11,"try_from","","",140,[[],["result",4]]],[11,"into","","",140,[[]]],[11,"try_into","","",140,[[],["result",4]]],[11,"type_id","","",140,[[],["typeid",3]]],[11,"from","","",141,[[]]],[11,"borrow","","",141,[[]]],[11,"borrow_mut","","",141,[[]]],[11,"try_from","","",141,[[],["result",4]]],[11,"into","","",141,[[]]],[11,"try_into","","",141,[[],["result",4]]],[11,"type_id","","",141,[[],["typeid",3]]],[11,"from","","",78,[[]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"into","","",78,[[]]],[11,"try_into","","",78,[[],["result",4]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"from","","",79,[[]]],[11,"borrow","","",79,[[]]],[11,"borrow_mut","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"into","","",79,[[]]],[11,"try_into","","",79,[[],["result",4]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"from","","",80,[[]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"into","","",80,[[]]],[11,"try_into","","",80,[[],["result",4]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"from","","",81,[[]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"into","","",81,[[]]],[11,"try_into","","",81,[[],["result",4]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"from","","",82,[[]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"into","","",82,[[]]],[11,"try_into","","",82,[[],["result",4]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"from","","",83,[[]]],[11,"borrow","","",83,[[]]],[11,"borrow_mut","","",83,[[]]],[11,"try_from","","",83,[[],["result",4]]],[11,"into","","",83,[[]]],[11,"try_into","","",83,[[],["result",4]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"from","","",84,[[]]],[11,"borrow","","",84,[[]]],[11,"borrow_mut","","",84,[[]]],[11,"try_from","","",84,[[],["result",4]]],[11,"into","","",84,[[]]],[11,"try_into","","",84,[[],["result",4]]],[11,"type_id","","",84,[[],["typeid",3]]],[11,"from","","",85,[[]]],[11,"borrow","","",85,[[]]],[11,"borrow_mut","","",85,[[]]],[11,"try_from","","",85,[[],["result",4]]],[11,"into","","",85,[[]]],[11,"try_into","","",85,[[],["result",4]]],[11,"type_id","","",85,[[],["typeid",3]]],[11,"from","","",86,[[]]],[11,"borrow","","",86,[[]]],[11,"borrow_mut","","",86,[[]]],[11,"try_from","","",86,[[],["result",4]]],[11,"into","","",86,[[]]],[11,"try_into","","",86,[[],["result",4]]],[11,"type_id","","",86,[[],["typeid",3]]],[11,"from","","",87,[[]]],[11,"borrow","","",87,[[]]],[11,"borrow_mut","","",87,[[]]],[11,"try_from","","",87,[[],["result",4]]],[11,"into","","",87,[[]]],[11,"try_into","","",87,[[],["result",4]]],[11,"type_id","","",87,[[],["typeid",3]]],[11,"from","","",88,[[]]],[11,"borrow","","",88,[[]]],[11,"borrow_mut","","",88,[[]]],[11,"try_from","","",88,[[],["result",4]]],[11,"into","","",88,[[]]],[11,"try_into","","",88,[[],["result",4]]],[11,"type_id","","",88,[[],["typeid",3]]],[11,"from","","",142,[[]]],[11,"borrow","","",142,[[]]],[11,"borrow_mut","","",142,[[]]],[11,"try_from","","",142,[[],["result",4]]],[11,"into","","",142,[[]]],[11,"try_into","","",142,[[],["result",4]]],[11,"type_id","","",142,[[],["typeid",3]]],[11,"from","","",143,[[]]],[11,"borrow","","",143,[[]]],[11,"borrow_mut","","",143,[[]]],[11,"try_from","","",143,[[],["result",4]]],[11,"into","","",143,[[]]],[11,"try_into","","",143,[[],["result",4]]],[11,"type_id","","",143,[[],["typeid",3]]],[11,"from","","",144,[[]]],[11,"borrow","","",144,[[]]],[11,"borrow_mut","","",144,[[]]],[11,"try_from","","",144,[[],["result",4]]],[11,"into","","",144,[[]]],[11,"try_into","","",144,[[],["result",4]]],[11,"type_id","","",144,[[],["typeid",3]]],[11,"from","","",145,[[]]],[11,"borrow","","",145,[[]]],[11,"borrow_mut","","",145,[[]]],[11,"try_from","","",145,[[],["result",4]]],[11,"into","","",145,[[]]],[11,"try_into","","",145,[[],["result",4]]],[11,"type_id","","",145,[[],["typeid",3]]],[11,"from","","",146,[[]]],[11,"borrow","","",146,[[]]],[11,"borrow_mut","","",146,[[]]],[11,"try_from","","",146,[[],["result",4]]],[11,"into","","",146,[[]]],[11,"try_into","","",146,[[],["result",4]]],[11,"type_id","","",146,[[],["typeid",3]]],[11,"from","","",147,[[]]],[11,"borrow","","",147,[[]]],[11,"borrow_mut","","",147,[[]]],[11,"try_from","","",147,[[],["result",4]]],[11,"into","","",147,[[]]],[11,"try_into","","",147,[[],["result",4]]],[11,"type_id","","",147,[[],["typeid",3]]],[11,"from","","",148,[[]]],[11,"borrow","","",148,[[]]],[11,"borrow_mut","","",148,[[]]],[11,"try_from","","",148,[[],["result",4]]],[11,"into","","",148,[[]]],[11,"try_into","","",148,[[],["result",4]]],[11,"type_id","","",148,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"into","","",17,[[]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"into","","",18,[[]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"into","","",19,[[]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"into","","",20,[[]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"into","","",21,[[]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"into","","",22,[[]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"into","","",23,[[]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"into","","",24,[[]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","","",149,[[]]],[11,"borrow","","",149,[[]]],[11,"borrow_mut","","",149,[[]]],[11,"try_from","","",149,[[],["result",4]]],[11,"into","","",149,[[]]],[11,"try_into","","",149,[[],["result",4]]],[11,"type_id","","",149,[[],["typeid",3]]],[11,"from","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"into","","",25,[[]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"into","","",26,[[]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"into","","",27,[[]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"into","","",28,[[]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"into","","",29,[[]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"into","","",30,[[]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","","",150,[[]]],[11,"borrow","","",150,[[]]],[11,"borrow_mut","","",150,[[]]],[11,"try_from","","",150,[[],["result",4]]],[11,"into","","",150,[[]]],[11,"try_into","","",150,[[],["result",4]]],[11,"type_id","","",150,[[],["typeid",3]]],[11,"from","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"into","","",31,[[]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"into","","",32,[[]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"from","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"into","","",33,[[]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"from","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"into","","",34,[[]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"from","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"into","","",35,[[]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"from","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"into","","",36,[[]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"from","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"into","","",37,[[]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"from","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"into","","",38,[[]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"from","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"into","","",39,[[]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"from","","",132,[[]]],[11,"borrow","","",132,[[]]],[11,"borrow_mut","","",132,[[]]],[11,"try_from","","",132,[[],["result",4]]],[11,"into","","",132,[[]]],[11,"try_into","","",132,[[],["result",4]]],[11,"type_id","","",132,[[],["typeid",3]]],[11,"from","","",151,[[]]],[11,"borrow","","",151,[[]]],[11,"borrow_mut","","",151,[[]]],[11,"try_from","","",151,[[],["result",4]]],[11,"into","","",151,[[]]],[11,"try_into","","",151,[[],["result",4]]],[11,"type_id","","",151,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"into","","",4,[[]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"into","","",5,[[]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"into","","",6,[[]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"into","","",7,[[]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"into","","",8,[[]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"into","","",9,[[]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"into","","",10,[[]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"into","","",11,[[]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"into","","",12,[[]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"into","","",13,[[]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"into","","",14,[[]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"into","","",15,[[]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"into","","",16,[[]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",152,[[]]],[11,"borrow","","",152,[[]]],[11,"borrow_mut","","",152,[[]]],[11,"try_from","","",152,[[],["result",4]]],[11,"into","","",152,[[]]],[11,"try_into","","",152,[[],["result",4]]],[11,"type_id","","",152,[[],["typeid",3]]],[11,"from","","",153,[[]]],[11,"borrow","","",153,[[]]],[11,"borrow_mut","","",153,[[]]],[11,"try_from","","",153,[[],["result",4]]],[11,"into","","",153,[[]]],[11,"try_into","","",153,[[],["result",4]]],[11,"type_id","","",153,[[],["typeid",3]]],[11,"from","","",154,[[]]],[11,"borrow","","",154,[[]]],[11,"borrow_mut","","",154,[[]]],[11,"try_from","","",154,[[],["result",4]]],[11,"into","","",154,[[]]],[11,"try_into","","",154,[[],["result",4]]],[11,"type_id","","",154,[[],["typeid",3]]],[11,"fmt","","",154,[[["formatter",3]],[["error",3],["result",4]]]],[11,"clone","","",151,[[],["dir",4]]],[11,"clone","","",0,[[],["group",3]]],[11,"clone","","",1,[[],["utimbuf",3]]],[11,"clone","","",2,[[],["timeval",3]]],[11,"clone","","",3,[[],["timespec",3]]],[11,"clone","","",4,[[],["rlimit",3]]],[11,"clone","","",5,[[],["rusage",3]]],[11,"clone","","",6,[[],["ipv6_mreq",3]]],[11,"clone","","",7,[[],["hostent",3]]],[11,"clone","","",8,[[],["iovec",3]]],[11,"clone","","",9,[[],["pollfd",3]]],[11,"clone","","",10,[[],["winsize",3]]],[11,"clone","","",11,[[],["linger",3]]],[11,"clone","","",12,[[],["sigval",3]]],[11,"clone","","",13,[[],["itimerval",3]]],[11,"clone","","",14,[[],["tms",3]]],[11,"clone","","",15,[[],["servent",3]]],[11,"clone","","",16,[[],["protoent",3]]],[11,"clone","","",152,[[],["file",4]]],[11,"clone","","",153,[[],["fpos_t",4]]],[11,"clone","","",148,[[],["timezone",4]]],[11,"clone","","",17,[[],["in_addr",3]]],[11,"clone","","",18,[[],["ip_mreq",3]]],[11,"clone","","",19,[[],["ip_mreq_source",3]]],[11,"clone","","",20,[[],["sockaddr",3]]],[11,"clone","","",21,[[],["sockaddr_in",3]]],[11,"clone","","",22,[[],["sockaddr_in6",3]]],[11,"clone","","",23,[[],["addrinfo",3]]],[11,"clone","","",24,[[],["sockaddr_ll",3]]],[11,"clone","","",149,[[],["fd_set",3]]],[11,"clone","","",25,[[],["tm",3]]],[11,"clone","","",26,[[],["sched_param",3]]],[11,"clone","","",27,[[],["dl_info",3]]],[11,"clone","","",28,[[],["lconv",3]]],[11,"clone","","",29,[[],["in_pktinfo",3]]],[11,"clone","","",30,[[],["ifaddrs",3]]],[11,"clone","","",150,[[],["in6_rtmsg",3]]],[11,"clone","","",31,[[],["arpreq",3]]],[11,"clone","","",32,[[],["arpreq_old",3]]],[11,"clone","","",33,[[],["arphdr",3]]],[11,"clone","","",34,[[],["mmsghdr",3]]],[11,"clone","","",35,[[],["epoll_event",3]]],[11,"clone","","",36,[[],["sockaddr_un",3]]],[11,"clone","","",37,[[],["sockaddr_storage",3]]],[11,"clone","","",38,[[],["utsname",3]]],[11,"clone","","",39,[[],["sigevent",3]]],[11,"clone","","",137,[[],["fpos64_t",4]]],[11,"clone","","",40,[[],["rlimit64",3]]],[11,"clone","","",41,[[],["glob_t",3]]],[11,"clone","","",42,[[],["passwd",3]]],[11,"clone","","",43,[[],["spwd",3]]],[11,"clone","","",44,[[],["dqblk",3]]],[11,"clone","","",45,[[],["signalfd_siginfo",3]]],[11,"clone","","",46,[[],["itimerspec",3]]],[11,"clone","","",138,[[],["fsid_t",3]]],[11,"clone","","",47,[[],["packet_mreq",3]]],[11,"clone","","",139,[[],["cpu_set_t",3]]],[11,"clone","","",48,[[],["if_nameindex",3]]],[11,"clone","","",49,[[],["msginfo",3]]],[11,"clone","","",50,[[],["sembuf",3]]],[11,"clone","","",51,[[],["input_event",3]]],[11,"clone","","",52,[[],["input_id",3]]],[11,"clone","","",53,[[],["input_absinfo",3]]],[11,"clone","","",54,[[],["input_keymap_entry",3]]],[11,"clone","","",55,[[],["input_mask",3]]],[11,"clone","","",56,[[],["ff_replay",3]]],[11,"clone","","",57,[[],["ff_trigger",3]]],[11,"clone","","",58,[[],["ff_envelope",3]]],[11,"clone","","",59,[[],["ff_constant_effect",3]]],[11,"clone","","",60,[[],["ff_ramp_effect",3]]],[11,"clone","","",61,[[],["ff_condition_effect",3]]],[11,"clone","","",62,[[],["ff_periodic_effect",3]]],[11,"clone","","",63,[[],["ff_rumble_effect",3]]],[11,"clone","","",64,[[],["ff_effect",3]]],[11,"clone","","",65,[[],["dl_phdr_info",3]]],[11,"clone","","",66,[[],["elf32_ehdr",3]]],[11,"clone","","",67,[[],["elf64_ehdr",3]]],[11,"clone","","",68,[[],["elf32_sym",3]]],[11,"clone","","",69,[[],["elf64_sym",3]]],[11,"clone","","",70,[[],["elf32_phdr",3]]],[11,"clone","","",71,[[],["elf64_phdr",3]]],[11,"clone","","",72,[[],["elf32_shdr",3]]],[11,"clone","","",73,[[],["elf64_shdr",3]]],[11,"clone","","",74,[[],["elf32_chdr",3]]],[11,"clone","","",75,[[],["elf64_chdr",3]]],[11,"clone","","",76,[[],["ucred",3]]],[11,"clone","","",77,[[],["mntent",3]]],[11,"clone","","",140,[[],["posix_spawn_file_actions_t",3]]],[11,"clone","","",141,[[],["posix_spawnattr_t",3]]],[11,"clone","","",78,[[],["genlmsghdr",3]]],[11,"clone","","",79,[[],["in6_pktinfo",3]]],[11,"clone","","",80,[[],["arpd_request",3]]],[11,"clone","","",81,[[],["inotify_event",3]]],[11,"clone","","",82,[[],["sockaddr_vm",3]]],[11,"clone","","",83,[[],["sockaddr_nl",3]]],[11,"clone","","",84,[[],["dirent",3]]],[11,"clone","","",85,[[],["dirent64",3]]],[11,"clone","","",86,[[],["sockaddr_alg",3]]],[11,"clone","","",87,[[],["af_alg_iv",3]]],[11,"clone","","",88,[[],["mq_attr",3]]],[11,"clone","","",89,[[],["statx",3]]],[11,"clone","","",90,[[],["statx_timestamp",3]]],[11,"clone","","",91,[[],["aiocb",3]]],[11,"clone","","",92,[[],["__exit_status",3]]],[11,"clone","","",93,[[],["__timeval",3]]],[11,"clone","","",94,[[],["glob64_t",3]]],[11,"clone","","",95,[[],["msghdr",3]]],[11,"clone","","",96,[[],["cmsghdr",3]]],[11,"clone","","",97,[[],["termios",3]]],[11,"clone","","",98,[[],["mallinfo",3]]],[11,"clone","","",99,[[],["nlmsghdr",3]]],[11,"clone","","",100,[[],["nlmsgerr",3]]],[11,"clone","","",101,[[],["nl_pktinfo",3]]],[11,"clone","","",102,[[],["nl_mmap_req",3]]],[11,"clone","","",103,[[],["nl_mmap_hdr",3]]],[11,"clone","","",104,[[],["nlattr",3]]],[11,"clone","","",105,[[],["rtentry",3]]],[11,"clone","","",106,[[],["utmpx",3]]],[11,"clone","","",135,[[],["sigset_t",3]]],[11,"clone","","",107,[[],["sysinfo",3]]],[11,"clone","","",108,[[],["msqid_ds",3]]],[11,"clone","","",109,[[],["sigaction",3]]],[11,"clone","","",110,[[],["statfs",3]]],[11,"clone","","",111,[[],["flock",3]]],[11,"clone","","",112,[[],["flock64",3]]],[11,"clone","","",113,[[],["siginfo_t",3]]],[11,"clone","","",114,[[],["stack_t",3]]],[11,"clone","","",115,[[],["stat",3]]],[11,"clone","","",116,[[],["stat64",3]]],[11,"clone","","",117,[[],["statfs64",3]]],[11,"clone","","",118,[[],["statvfs64",3]]],[11,"clone","","",134,[[],["pthread_attr_t",3]]],[11,"clone","","",119,[[],["_libc_fpxreg",3]]],[11,"clone","","",120,[[],["_libc_xmmreg",3]]],[11,"clone","","",121,[[],["_libc_fpstate",3]]],[11,"clone","","",122,[[],["user_regs_struct",3]]],[11,"clone","","",123,[[],["user",3]]],[11,"clone","","",124,[[],["mcontext_t",3]]],[11,"clone","","",125,[[],["ipc_perm",3]]],[11,"clone","","",126,[[],["shmid_ds",3]]],[11,"clone","","",127,[[],["termios2",3]]],[11,"clone","","",128,[[],["ip_mreqn",3]]],[11,"clone","","",129,[[],["user_fpregs_struct",3]]],[11,"clone","","",130,[[],["ucontext_t",3]]],[11,"clone","","",131,[[],["statvfs",3]]],[11,"clone","","",133,[[],["max_align_t",3]]],[11,"clone","","",136,[[],["sem_t",3]]],[11,"clone","","",142,[[],["pthread_mutexattr_t",3]]],[11,"clone","","",143,[[],["pthread_rwlockattr_t",3]]],[11,"clone","","",144,[[],["pthread_condattr_t",3]]],[11,"clone","","",145,[[],["pthread_cond_t",3]]],[11,"clone","","",146,[[],["pthread_mutex_t",3]]],[11,"clone","","",147,[[],["pthread_rwlock_t",3]]],[11,"clone","","",132,[[],["in6_addr",3]]],[11,"si_addr","","",113,[[]]],[11,"si_value","","",113,[[],["sigval",3]]]],"p":[[3,"group"],[3,"utimbuf"],[3,"timeval"],[3,"timespec"],[3,"rlimit"],[3,"rusage"],[3,"ipv6_mreq"],[3,"hostent"],[3,"iovec"],[3,"pollfd"],[3,"winsize"],[3,"linger"],[3,"sigval"],[3,"itimerval"],[3,"tms"],[3,"servent"],[3,"protoent"],[3,"in_addr"],[3,"ip_mreq"],[3,"ip_mreq_source"],[3,"sockaddr"],[3,"sockaddr_in"],[3,"sockaddr_in6"],[3,"addrinfo"],[3,"sockaddr_ll"],[3,"tm"],[3,"sched_param"],[3,"Dl_info"],[3,"lconv"],[3,"in_pktinfo"],[3,"ifaddrs"],[3,"arpreq"],[3,"arpreq_old"],[3,"arphdr"],[3,"mmsghdr"],[3,"epoll_event"],[3,"sockaddr_un"],[3,"sockaddr_storage"],[3,"utsname"],[3,"sigevent"],[3,"rlimit64"],[3,"glob_t"],[3,"passwd"],[3,"spwd"],[3,"dqblk"],[3,"signalfd_siginfo"],[3,"itimerspec"],[3,"packet_mreq"],[3,"if_nameindex"],[3,"msginfo"],[3,"sembuf"],[3,"input_event"],[3,"input_id"],[3,"input_absinfo"],[3,"input_keymap_entry"],[3,"input_mask"],[3,"ff_replay"],[3,"ff_trigger"],[3,"ff_envelope"],[3,"ff_constant_effect"],[3,"ff_ramp_effect"],[3,"ff_condition_effect"],[3,"ff_periodic_effect"],[3,"ff_rumble_effect"],[3,"ff_effect"],[3,"dl_phdr_info"],[3,"Elf32_Ehdr"],[3,"Elf64_Ehdr"],[3,"Elf32_Sym"],[3,"Elf64_Sym"],[3,"Elf32_Phdr"],[3,"Elf64_Phdr"],[3,"Elf32_Shdr"],[3,"Elf64_Shdr"],[3,"Elf32_Chdr"],[3,"Elf64_Chdr"],[3,"ucred"],[3,"mntent"],[3,"genlmsghdr"],[3,"in6_pktinfo"],[3,"arpd_request"],[3,"inotify_event"],[3,"sockaddr_vm"],[3,"sockaddr_nl"],[3,"dirent"],[3,"dirent64"],[3,"sockaddr_alg"],[3,"af_alg_iv"],[3,"mq_attr"],[3,"statx"],[3,"statx_timestamp"],[3,"aiocb"],[3,"__exit_status"],[3,"__timeval"],[3,"glob64_t"],[3,"msghdr"],[3,"cmsghdr"],[3,"termios"],[3,"mallinfo"],[3,"nlmsghdr"],[3,"nlmsgerr"],[3,"nl_pktinfo"],[3,"nl_mmap_req"],[3,"nl_mmap_hdr"],[3,"nlattr"],[3,"rtentry"],[3,"utmpx"],[3,"sysinfo"],[3,"msqid_ds"],[3,"sigaction"],[3,"statfs"],[3,"flock"],[3,"flock64"],[3,"siginfo_t"],[3,"stack_t"],[3,"stat"],[3,"stat64"],[3,"statfs64"],[3,"statvfs64"],[3,"_libc_fpxreg"],[3,"_libc_xmmreg"],[3,"_libc_fpstate"],[3,"user_regs_struct"],[3,"user"],[3,"mcontext_t"],[3,"ipc_perm"],[3,"shmid_ds"],[3,"termios2"],[3,"ip_mreqn"],[3,"user_fpregs_struct"],[3,"ucontext_t"],[3,"statvfs"],[3,"in6_addr"],[3,"max_align_t"],[3,"pthread_attr_t"],[3,"sigset_t"],[3,"sem_t"],[4,"fpos64_t"],[3,"fsid_t"],[3,"cpu_set_t"],[3,"posix_spawn_file_actions_t"],[3,"posix_spawnattr_t"],[3,"pthread_mutexattr_t"],[3,"pthread_rwlockattr_t"],[3,"pthread_condattr_t"],[3,"pthread_cond_t"],[3,"pthread_mutex_t"],[3,"pthread_rwlock_t"],[4,"timezone"],[3,"fd_set"],[3,"in6_rtmsg"],[4,"DIR"],[4,"FILE"],[4,"fpos_t"],[4,"c_void"]]},\
"lzw":{"doc":"LZW decoder and encoderThis crates provides a <code>LzwEncoder</code> …","i":[[3,"Decoder","lzw","Decoder for a LZW compressed stream (this algorithm is …",null,null],[3,"DecoderEarlyChange","","Decoder for a LZW compressed stream using an “early …",null,null],[3,"Encoder","","LZW encoder using the algorithm of GIF files.",null,null],[5,"encode","","Convenience function that reads and compresses all bytes …",null,[[["u8",15]],["result",6]]],[8,"BitReader","","A bit reader.",null,null],[10,"read_bits","","Returns the next <code>n</code> bits.",0,[[["u8",15]],["bits",4]]],[8,"BitWriter","","A bit writer.",null,null],[10,"write_bits","","Writes the next <code>n</code> bits.",1,[[["u16",15],["u8",15]],["result",6]]],[3,"LsbReader","","Reads bits from a byte stream, LSB first.",null,null],[3,"LsbWriter","","Writes bits to a byte stream, LSB first.",null,null],[3,"MsbReader","","Reads bits from a byte stream, MSB first.",null,null],[3,"MsbWriter","","Writes bits to a byte stream, MSB first.",null,null],[4,"Bits","","Containes either the consumed bytes and reconstructed …",null,null],[13,"Some","","Consumed bytes, reconstructed bits",2,null],[13,"None","","Consumed bytes",2,null],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"read_bits","","",6,[[["u8",15]],["bits",4]]],[11,"read_bits","","",7,[[["u8",15]],["bits",4]]],[11,"write_bits","","",8,[[["u16",15],["u8",15]],["result",6]]],[11,"write_bits","","",9,[[["u16",15],["u8",15]],["result",6]]],[11,"drop","","",5,[[]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"write","","",8,[[],[["usize",15],["result",6]]]],[11,"flush","","",8,[[],["result",6]]],[11,"write","","",9,[[],[["usize",15],["result",6]]]],[11,"flush","","",9,[[],["result",6]]],[11,"new","","Creates a new LZW decoder. ",3,[[["u8",15]],["decoder",3]]],[11,"decode_bytes","","Tries to obtain and decode a code word from <code>bytes</code>.",3,[[],["result",6]]],[11,"new","","Creates a new LZW decoder. ",4,[[["u8",15]],["decoderearlychange",3]]],[11,"decode_bytes","","Tries to obtain and decode a code word from <code>bytes</code>.",4,[[],["result",6]]],[11,"new","","Creates a new LZW encoder.",5,[[["u8",15]],[["encoder",3],["result",6]]]],[11,"encode_bytes","","Compresses <code>bytes</code> and writes the result into the writer.",5,[[],["result",6]]],[11,"new","","Creates a new bit reader",6,[[],["lsbreader",3]]],[11,"new","","Creates a new bit reader",7,[[],["msbreader",3]]],[11,"new","","Creates a new bit reader",8,[[],["lsbwriter",3]]],[11,"new","","Creates a new bit reader",9,[[],["msbwriter",3]]]],"p":[[8,"BitReader"],[8,"BitWriter"],[4,"Bits"],[3,"Decoder"],[3,"DecoderEarlyChange"],[3,"Encoder"],[3,"LsbReader"],[3,"MsbReader"],[3,"LsbWriter"],[3,"MsbWriter"]]},\
"memoffset":{"doc":"A crate used for calculating offsets of struct members …","i":[[14,"offset_of","memoffset","Calculates the offset of the specified field from the …",null,null],[14,"span_of","","Produces a range instance representing the sub-slice …",null,null]],"p":[]},\
"num":{"doc":"A collection of numeric types and traits for Rust.","i":[[0,"integer","num","",null,null],[8,"Integer","num::integer","",null,null],[10,"div_floor","","Floored integer division.",0,[[]]],[10,"mod_floor","","Floored integer modulo, satisfying:",0,[[]]],[11,"div_ceil","","Ceiled integer division.",0,[[]]],[10,"gcd","","Greatest Common Divisor (GCD).",0,[[]]],[10,"lcm","","Lowest Common Multiple (LCM).",0,[[]]],[11,"gcd_lcm","","Greatest Common Divisor (GCD) and Lowest Common Multiple …",0,[[]]],[11,"extended_gcd","","Greatest common divisor and Bézout coefficients.",0,[[],["extendedgcd",3]]],[11,"extended_gcd_lcm","","Greatest common divisor, least common multiple, and …",0,[[]]],[10,"divides","","Deprecated, use <code>is_multiple_of</code> instead.",0,[[],["bool",15]]],[10,"is_multiple_of","","Returns <code>true</code> if <code>self</code> is a multiple of <code>other</code>.",0,[[],["bool",15]]],[10,"is_even","","Returns <code>true</code> if the number is even.",0,[[],["bool",15]]],[10,"is_odd","","Returns <code>true</code> if the number is odd.",0,[[],["bool",15]]],[10,"div_rem","","Simultaneous truncated integer division and modulus. …",0,[[]]],[11,"div_mod_floor","","Simultaneous floored integer division and modulus. …",0,[[]]],[11,"next_multiple_of","","Rounds up to nearest multiple of argument.",0,[[]]],[11,"prev_multiple_of","","Rounds down to nearest multiple of argument.",0,[[]]],[3,"ExtendedGcd","","Greatest common divisor and Bézout coefficients",null,null],[12,"gcd","","",1,null],[12,"x","","",1,null],[12,"y","","",1,null],[5,"div_rem","","Simultaneous integer division and modulus",null,[[]]],[5,"div_floor","","Floored integer division",null,[[]]],[5,"mod_floor","","Floored integer modulus",null,[[]]],[5,"div_mod_floor","","Simultaneous floored integer division and modulus",null,[[]]],[5,"div_ceil","","Ceiled integer division",null,[[]]],[5,"gcd","","Calculates the Greatest Common Divisor (GCD) of the …",null,[[]]],[5,"lcm","","Calculates the Lowest Common Multiple (LCM) of the number …",null,[[]]],[5,"gcd_lcm","","Calculates the Greatest Common Divisor (GCD) and Lowest …",null,[[]]],[3,"IterBinomial","","An iterator over binomial coefficients.",null,null],[5,"binomial","","Calculate the binomial coefficient.",null,[[]]],[5,"multinomial","","Calculate the multinomial coefficient.",null,[[]]],[8,"Roots","","Provides methods to compute an integer\'s square root, …",null,null],[10,"nth_root","","Returns the truncated principal <code>n</code>th root of an integer -- …",2,[[["u32",15]]]],[11,"sqrt","","Returns the truncated principal square root of an integer …",2,[[]]],[11,"cbrt","","Returns the truncated principal cube root of an integer --…",2,[[]]],[5,"cbrt","","Returns the truncated principal cube root of an integer --…",null,[[]]],[5,"nth_root","","Returns the truncated principal <code>n</code>th root of an integer -- …",null,[[["u32",15]]]],[5,"sqrt","","Returns the truncated principal square root of an integer …",null,[[]]],[0,"iter","num","",null,null],[3,"Range","num::iter","An iterator over the range [start, stop)",null,null],[5,"range","","Returns an iterator over the given range [start, stop) …",null,[[],["range",3]]],[3,"RangeInclusive","","An iterator over the range [start, stop]",null,null],[5,"range_inclusive","","Return an iterator over the range [start, stop]",null,[[],["rangeinclusive",3]]],[3,"RangeStep","","An iterator over the range [start, stop) by <code>step</code>. It …",null,null],[5,"range_step","","Return an iterator over the range [start, stop) by <code>step</code>. …",null,[[],["rangestep",3]]],[3,"RangeStepInclusive","","An iterator over the range [start, stop] by <code>step</code>. It …",null,null],[5,"range_step_inclusive","","Return an iterator over the range [start, stop] by <code>step</code>. …",null,[[],["rangestepinclusive",3]]],[0,"traits","num","",null,null],[0,"bounds","num::traits","",null,null],[8,"Bounded","num::traits::bounds","Numbers which have upper and lower bounds",null,null],[10,"min_value","","returns the smallest finite number this type can represent",3,[[]]],[10,"max_value","","returns the largest finite number this type can represent",3,[[]]],[0,"cast","num::traits","",null,null],[8,"ToPrimitive","num::traits::cast","A generic trait for converting a value to a number.",null,null],[11,"to_isize","","Converts the value of <code>self</code> to an <code>isize</code>. If the value …",4,[[],[["isize",15],["option",4]]]],[11,"to_i8","","Converts the value of <code>self</code> to an <code>i8</code>. If the value cannot …",4,[[],[["option",4],["i8",15]]]],[11,"to_i16","","Converts the value of <code>self</code> to an <code>i16</code>. If the value cannot …",4,[[],[["i16",15],["option",4]]]],[11,"to_i32","","Converts the value of <code>self</code> to an <code>i32</code>. If the value cannot …",4,[[],[["option",4],["i32",15]]]],[10,"to_i64","","Converts the value of <code>self</code> to an <code>i64</code>. If the value cannot …",4,[[],[["option",4],["i64",15]]]],[11,"to_i128","","Converts the value of <code>self</code> to an <code>i128</code>. If the value …",4,[[],[["option",4],["i128",15]]]],[11,"to_usize","","Converts the value of <code>self</code> to a <code>usize</code>. If the value …",4,[[],[["usize",15],["option",4]]]],[11,"to_u8","","Converts the value of <code>self</code> to a <code>u8</code>. If the value cannot be…",4,[[],[["u8",15],["option",4]]]],[11,"to_u16","","Converts the value of <code>self</code> to a <code>u16</code>. If the value cannot …",4,[[],[["option",4],["u16",15]]]],[11,"to_u32","","Converts the value of <code>self</code> to a <code>u32</code>. If the value cannot …",4,[[],[["u32",15],["option",4]]]],[10,"to_u64","","Converts the value of <code>self</code> to a <code>u64</code>. If the value cannot …",4,[[],[["option",4],["u64",15]]]],[11,"to_u128","","Converts the value of <code>self</code> to a <code>u128</code>. If the value cannot …",4,[[],[["option",4],["u128",15]]]],[11,"to_f32","","Converts the value of <code>self</code> to an <code>f32</code>. If the value cannot …",4,[[],[["option",4],["f32",15]]]],[11,"to_f64","","Converts the value of <code>self</code> to an <code>f64</code>. If the value cannot …",4,[[],[["f64",15],["option",4]]]],[8,"FromPrimitive","","A generic trait for converting a number to a value.",null,null],[11,"from_isize","","Converts an <code>isize</code> to return an optional value of this …",5,[[["isize",15]],["option",4]]],[11,"from_i8","","Converts an <code>i8</code> to return an optional value of this type. …",5,[[["i8",15]],["option",4]]],[11,"from_i16","","Converts an <code>i16</code> to return an optional value of this type. …",5,[[["i16",15]],["option",4]]],[11,"from_i32","","Converts an <code>i32</code> to return an optional value of this type. …",5,[[["i32",15]],["option",4]]],[10,"from_i64","","Converts an <code>i64</code> to return an optional value of this type. …",5,[[["i64",15]],["option",4]]],[11,"from_i128","","Converts an <code>i128</code> to return an optional value of this …",5,[[["i128",15]],["option",4]]],[11,"from_usize","","Converts a <code>usize</code> to return an optional value of this …",5,[[["usize",15]],["option",4]]],[11,"from_u8","","Converts an <code>u8</code> to return an optional value of this type. …",5,[[["u8",15]],["option",4]]],[11,"from_u16","","Converts an <code>u16</code> to return an optional value of this type. …",5,[[["u16",15]],["option",4]]],[11,"from_u32","","Converts an <code>u32</code> to return an optional value of this type. …",5,[[["u32",15]],["option",4]]],[10,"from_u64","","Converts an <code>u64</code> to return an optional value of this type. …",5,[[["u64",15]],["option",4]]],[11,"from_u128","","Converts an <code>u128</code> to return an optional value of this …",5,[[["u128",15]],["option",4]]],[11,"from_f32","","Converts a <code>f32</code> to return an optional value of this type. …",5,[[["f32",15]],["option",4]]],[11,"from_f64","","Converts a <code>f64</code> to return an optional value of this type. …",5,[[["f64",15]],["option",4]]],[5,"cast","","Cast from one machine scalar to another.",null,[[],["option",4]]],[8,"NumCast","","An interface for casting between machine scalars.",null,null],[10,"from","","Creates a number from another value that can be converted …",6,[[],["option",4]]],[8,"AsPrimitive","","A generic interface for casting between machine scalars …",null,null],[10,"as_","","Convert a value to another, using the <code>as</code> operator.",7,[[]]],[0,"float","num::traits","",null,null],[8,"FloatCore","num::traits::float","Generic trait for floating point numbers that works with …",null,null],[10,"infinity","","Returns positive infinity.",8,[[]]],[10,"neg_infinity","","Returns negative infinity.",8,[[]]],[10,"nan","","Returns NaN.",8,[[]]],[10,"neg_zero","","Returns <code>-0.0</code>.",8,[[]]],[10,"min_value","","Returns the smallest finite value that this type can …",8,[[]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this …",8,[[]]],[10,"epsilon","","Returns epsilon, a small positive value.",8,[[]]],[10,"max_value","","Returns the largest finite value that this type can …",8,[[]]],[11,"is_nan","","Returns <code>true</code> if the number is NaN.",8,[[],["bool",15]]],[11,"is_infinite","","Returns <code>true</code> if the number is infinite.",8,[[],["bool",15]]],[11,"is_finite","","Returns <code>true</code> if the number is neither infinite or NaN.",8,[[],["bool",15]]],[11,"is_normal","","Returns <code>true</code> if the number is neither zero, infinite, …",8,[[],["bool",15]]],[10,"classify","","Returns the floating point category of the number. If …",8,[[],["fpcategory",4]]],[11,"floor","","Returns the largest integer less than or equal to a …",8,[[]]],[11,"ceil","","Returns the smallest integer greater than or equal to a …",8,[[]]],[11,"round","","Returns the nearest integer to a number. Round half-way …",8,[[]]],[11,"trunc","","Return the integer part of a number.",8,[[]]],[11,"fract","","Returns the fractional part of a number.",8,[[]]],[11,"abs","","Computes the absolute value of <code>self</code>. Returns …",8,[[]]],[11,"signum","","Returns a number that represents the sign of <code>self</code>.",8,[[]]],[11,"is_sign_positive","","Returns <code>true</code> if <code>self</code> is positive, including <code>+0.0</code> and …",8,[[],["bool",15]]],[11,"is_sign_negative","","Returns <code>true</code> if <code>self</code> is negative, including <code>-0.0</code> and …",8,[[],["bool",15]]],[11,"min","","Returns the minimum of the two numbers.",8,[[]]],[11,"max","","Returns the maximum of the two numbers.",8,[[]]],[11,"recip","","Returns the reciprocal (multiplicative inverse) of the …",8,[[]]],[11,"powi","","Raise a number to an integer power.",8,[[["i32",15]]]],[10,"to_degrees","","Converts to degrees, assuming the number is in radians.",8,[[]]],[10,"to_radians","","Converts to radians, assuming the number is in degrees.",8,[[]]],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as …",8,[[]]],[8,"Float","","Generic trait for floating point numbers",null,null],[10,"nan","","Returns the <code>NaN</code> value.",9,[[]]],[10,"infinity","","Returns the infinite value.",9,[[]]],[10,"neg_infinity","","Returns the negative infinite value.",9,[[]]],[10,"neg_zero","","Returns <code>-0.0</code>.",9,[[]]],[10,"min_value","","Returns the smallest finite value that this type can …",9,[[]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this …",9,[[]]],[11,"epsilon","","Returns epsilon, a small positive value.",9,[[]]],[10,"max_value","","Returns the largest finite value that this type can …",9,[[]]],[10,"is_nan","","Returns <code>true</code> if this value is <code>NaN</code> and false otherwise.",9,[[],["bool",15]]],[10,"is_infinite","","Returns <code>true</code> if this value is positive infinity or …",9,[[],["bool",15]]],[10,"is_finite","","Returns <code>true</code> if this number is neither infinite nor <code>NaN</code>.",9,[[],["bool",15]]],[10,"is_normal","","Returns <code>true</code> if the number is neither zero, infinite, …",9,[[],["bool",15]]],[10,"classify","","Returns the floating point category of the number. If …",9,[[],["fpcategory",4]]],[10,"floor","","Returns the largest integer less than or equal to a …",9,[[]]],[10,"ceil","","Returns the smallest integer greater than or equal to a …",9,[[]]],[10,"round","","Returns the nearest integer to a number. Round half-way …",9,[[]]],[10,"trunc","","Return the integer part of a number.",9,[[]]],[10,"fract","","Returns the fractional part of a number.",9,[[]]],[10,"abs","","Computes the absolute value of <code>self</code>. Returns <code>Float::nan()</code> …",9,[[]]],[10,"signum","","Returns a number that represents the sign of <code>self</code>.",9,[[]]],[10,"is_sign_positive","","Returns <code>true</code> if <code>self</code> is positive, including <code>+0.0</code>, …",9,[[],["bool",15]]],[10,"is_sign_negative","","Returns <code>true</code> if <code>self</code> is negative, including <code>-0.0</code>, …",9,[[],["bool",15]]],[10,"mul_add","","Fused multiply-add. Computes <code>(self * a) + b</code> with only one …",9,[[]]],[10,"recip","","Take the reciprocal (inverse) of a number, <code>1/x</code>.",9,[[]]],[10,"powi","","Raise a number to an integer power.",9,[[["i32",15]]]],[10,"powf","","Raise a number to a floating point power.",9,[[]]],[10,"sqrt","","Take the square root of a number.",9,[[]]],[10,"exp","","Returns <code>e^(self)</code>, (the exponential function).",9,[[]]],[10,"exp2","","Returns <code>2^(self)</code>.",9,[[]]],[10,"ln","","Returns the natural logarithm of the number.",9,[[]]],[10,"log","","Returns the logarithm of the number with respect to an …",9,[[]]],[10,"log2","","Returns the base 2 logarithm of the number.",9,[[]]],[10,"log10","","Returns the base 10 logarithm of the number.",9,[[]]],[11,"to_degrees","","Converts radians to degrees.",9,[[]]],[11,"to_radians","","Converts degrees to radians.",9,[[]]],[10,"max","","Returns the maximum of the two numbers.",9,[[]]],[10,"min","","Returns the minimum of the two numbers.",9,[[]]],[10,"abs_sub","","The positive difference of two numbers.",9,[[]]],[10,"cbrt","","Take the cubic root of a number.",9,[[]]],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle …",9,[[]]],[10,"sin","","Computes the sine of a number (in radians).",9,[[]]],[10,"cos","","Computes the cosine of a number (in radians).",9,[[]]],[10,"tan","","Computes the tangent of a number (in radians).",9,[[]]],[10,"asin","","Computes the arcsine of a number. Return value is in …",9,[[]]],[10,"acos","","Computes the arccosine of a number. Return value is in …",9,[[]]],[10,"atan","","Computes the arctangent of a number. Return value is in …",9,[[]]],[10,"atan2","","Computes the four quadrant arctangent of <code>self</code> (<code>y</code>) and …",9,[[]]],[10,"sin_cos","","Simultaneously computes the sine and cosine of the …",9,[[]]],[10,"exp_m1","","Returns <code>e^(self) - 1</code> in a way that is accurate even if the…",9,[[]]],[10,"ln_1p","","Returns <code>ln(1+n)</code> (natural logarithm) more accurately than …",9,[[]]],[10,"sinh","","Hyperbolic sine function.",9,[[]]],[10,"cosh","","Hyperbolic cosine function.",9,[[]]],[10,"tanh","","Hyperbolic tangent function.",9,[[]]],[10,"asinh","","Inverse hyperbolic sine function.",9,[[]]],[10,"acosh","","Inverse hyperbolic cosine function.",9,[[]]],[10,"atanh","","Inverse hyperbolic tangent function.",9,[[]]],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as …",9,[[]]],[8,"FloatConst","","",null,null],[10,"E","","Return Euler’s number.",10,[[]]],[10,"FRAC_1_PI","","Return <code>1.0 / π</code>.",10,[[]]],[10,"FRAC_1_SQRT_2","","Return <code>1.0 / sqrt(2.0)</code>.",10,[[]]],[10,"FRAC_2_PI","","Return <code>2.0 / π</code>.",10,[[]]],[10,"FRAC_2_SQRT_PI","","Return <code>2.0 / sqrt(π)</code>.",10,[[]]],[10,"FRAC_PI_2","","Return <code>π / 2.0</code>.",10,[[]]],[10,"FRAC_PI_3","","Return <code>π / 3.0</code>.",10,[[]]],[10,"FRAC_PI_4","","Return <code>π / 4.0</code>.",10,[[]]],[10,"FRAC_PI_6","","Return <code>π / 6.0</code>.",10,[[]]],[10,"FRAC_PI_8","","Return <code>π / 8.0</code>.",10,[[]]],[10,"LN_10","","Return <code>ln(10.0)</code>.",10,[[]]],[10,"LN_2","","Return <code>ln(2.0)</code>.",10,[[]]],[10,"LOG10_E","","Return <code>log10(e)</code>.",10,[[]]],[10,"LOG2_E","","Return <code>log2(e)</code>.",10,[[]]],[10,"PI","","Return Archimedes’ constant <code>π</code>.",10,[[]]],[10,"SQRT_2","","Return <code>sqrt(2.0)</code>.",10,[[]]],[11,"TAU","","Return the full circle constant <code>τ</code>.",10,[[]]],[0,"identities","num::traits","",null,null],[8,"Zero","num::traits::identities","Defines an additive identity element for <code>Self</code>.",null,null],[10,"zero","","Returns the additive identity element of <code>Self</code>, <code>0</code>.",11,[[]]],[11,"set_zero","","Sets <code>self</code> to the additive identity element of <code>Self</code>, <code>0</code>.",11,[[]]],[10,"is_zero","","Returns <code>true</code> if <code>self</code> is equal to the additive identity.",11,[[],["bool",15]]],[8,"One","","Defines a multiplicative identity element for <code>Self</code>.",null,null],[10,"one","","Returns the multiplicative identity element of <code>Self</code>, <code>1</code>.",12,[[]]],[11,"set_one","","Sets <code>self</code> to the multiplicative identity element of <code>Self</code>, …",12,[[]]],[11,"is_one","","Returns <code>true</code> if <code>self</code> is equal to the multiplicative …",12,[[],["bool",15]]],[5,"zero","","Returns the additive identity, <code>0</code>.",null,[[]]],[5,"one","","Returns the multiplicative identity, <code>1</code>.",null,[[]]],[0,"int","num::traits","",null,null],[8,"PrimInt","num::traits::int","Generic trait for primitive integers.",null,null],[10,"count_ones","","Returns the number of ones in the binary representation …",13,[[],["u32",15]]],[10,"count_zeros","","Returns the number of zeros in the binary representation …",13,[[],["u32",15]]],[10,"leading_zeros","","Returns the number of leading zeros in the binary …",13,[[],["u32",15]]],[10,"trailing_zeros","","Returns the number of trailing zeros in the binary …",13,[[],["u32",15]]],[10,"rotate_left","","Shifts the bits to the left by a specified amount amount, …",13,[[["u32",15]]]],[10,"rotate_right","","Shifts the bits to the right by a specified amount …",13,[[["u32",15]]]],[10,"signed_shl","","Shifts the bits to the left by a specified amount amount, …",13,[[["u32",15]]]],[10,"signed_shr","","Shifts the bits to the right by a specified amount …",13,[[["u32",15]]]],[10,"unsigned_shl","","Shifts the bits to the left by a specified amount amount, …",13,[[["u32",15]]]],[10,"unsigned_shr","","Shifts the bits to the right by a specified amount …",13,[[["u32",15]]]],[10,"swap_bytes","","Reverses the byte order of the integer.",13,[[]]],[10,"from_be","","Convert an integer from big endian to the target\'s …",13,[[]]],[10,"from_le","","Convert an integer from little endian to the target\'s …",13,[[]]],[10,"to_be","","Convert <code>self</code> to big endian from the target\'s endianness.",13,[[]]],[10,"to_le","","Convert <code>self</code> to little endian from the target\'s …",13,[[]]],[10,"pow","","Raises self to the power of <code>exp</code>, using exponentiation by …",13,[[["u32",15]]]],[0,"ops","num::traits","",null,null],[0,"checked","num::traits::ops","",null,null],[8,"CheckedAdd","num::traits::ops::checked","Performs addition that returns <code>None</code> instead of wrapping …",null,null],[10,"checked_add","","Adds two numbers, checking for overflow. If overflow …",14,[[],["option",4]]],[8,"CheckedSub","","Performs subtraction that returns <code>None</code> instead of …",null,null],[10,"checked_sub","","Subtracts two numbers, checking for underflow. If …",15,[[],["option",4]]],[8,"CheckedMul","","Performs multiplication that returns <code>None</code> instead of …",null,null],[10,"checked_mul","","Multiplies two numbers, checking for underflow or …",16,[[],["option",4]]],[8,"CheckedDiv","","Performs division that returns <code>None</code> instead of panicking …",null,null],[10,"checked_div","","Divides two numbers, checking for underflow, overflow and …",17,[[],["option",4]]],[8,"CheckedRem","","Performs an integral remainder that returns <code>None</code> instead …",null,null],[10,"checked_rem","","Finds the remainder of dividing two numbers, checking for …",18,[[],["option",4]]],[8,"CheckedNeg","","Performs negation that returns <code>None</code> if the result can\'t …",null,null],[10,"checked_neg","","Negates a number, returning <code>None</code> for results that can\'t …",19,[[],["option",4]]],[8,"CheckedShl","","Performs a left shift that returns <code>None</code> on shifts larger …",null,null],[10,"checked_shl","","Checked shift left. Computes <code>self << rhs</code>, returning <code>None</code> …",20,[[["u32",15]],["option",4]]],[8,"CheckedShr","","Performs a right shift that returns <code>None</code> on shifts larger …",null,null],[10,"checked_shr","","Checked shift right. Computes <code>self >> rhs</code>, returning <code>None</code> …",21,[[["u32",15]],["option",4]]],[0,"inv","num::traits::ops","",null,null],[8,"Inv","num::traits::ops::inv","Unary operator for retrieving the multiplicative inverse, …",null,null],[16,"Output","","The result after applying the operator.",22,null],[10,"inv","","Returns the multiplicative inverse of <code>self</code>.",22,[[]]],[0,"mul_add","num::traits::ops","",null,null],[8,"MulAdd","num::traits::ops::mul_add","Fused multiply-add. Computes <code>(self * a) + b</code> with only one …",null,null],[16,"Output","","The resulting type after applying the fused multiply-add.",23,null],[10,"mul_add","","Performs the fused multiply-add operation.",23,[[]]],[8,"MulAddAssign","","The fused multiply-add assignment operation.",null,null],[10,"mul_add_assign","","Performs the fused multiply-add operation.",24,[[]]],[0,"saturating","num::traits::ops","",null,null],[8,"Saturating","num::traits::ops::saturating","Saturating math operations",null,null],[10,"saturating_add","","Saturating addition operator. Returns a+b, saturating at …",25,[[]]],[10,"saturating_sub","","Saturating subtraction operator. Returns a-b, saturating …",25,[[]]],[0,"wrapping","num::traits::ops","",null,null],[8,"WrappingAdd","num::traits::ops::wrapping","Performs addition that wraps around on overflow.",null,null],[10,"wrapping_add","","Wrapping (modular) addition. Computes <code>self + other</code>, …",26,[[]]],[8,"WrappingSub","","Performs subtraction that wraps around on overflow.",null,null],[10,"wrapping_sub","","Wrapping (modular) subtraction. Computes <code>self - other</code>, …",27,[[]]],[8,"WrappingMul","","Performs multiplication that wraps around on overflow.",null,null],[10,"wrapping_mul","","Wrapping (modular) multiplication. Computes <code>self * other</code>, …",28,[[]]],[8,"WrappingShl","","Performs a left shift that does not panic.",null,null],[10,"wrapping_shl","","Panic-free bitwise shift-left; yields <code>self << mask(rhs)</code>, …",29,[[["u32",15]]]],[8,"WrappingShr","","Performs a right shift that does not panic.",null,null],[10,"wrapping_shr","","Panic-free bitwise shift-right; yields <code>self >> mask(rhs)</code>, …",30,[[["u32",15]]]],[0,"pow","num::traits","",null,null],[8,"Pow","num::traits::pow","Binary operator for raising a value to a power.",null,null],[16,"Output","","The result after applying the operator.",31,null],[10,"pow","","Returns <code>self</code> to the power <code>rhs</code>.",31,[[]]],[5,"pow","","Raises a value to the power of exp, using exponentiation …",null,[[["usize",15]]]],[5,"checked_pow","","Raises a value to the power of exp, returning <code>None</code> if an …",null,[[["usize",15]],["option",4]]],[0,"real","num::traits","",null,null],[8,"Real","num::traits::real","A trait for real number types that do not necessarily have…",null,null],[10,"min_value","","Returns the smallest finite value that this type can …",32,[[]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this …",32,[[]]],[10,"epsilon","","Returns epsilon, a small positive value.",32,[[]]],[10,"max_value","","Returns the largest finite value that this type can …",32,[[]]],[10,"floor","","Returns the largest integer less than or equal to a …",32,[[]]],[10,"ceil","","Returns the smallest integer greater than or equal to a …",32,[[]]],[10,"round","","Returns the nearest integer to a number. Round half-way …",32,[[]]],[10,"trunc","","Return the integer part of a number.",32,[[]]],[10,"fract","","Returns the fractional part of a number.",32,[[]]],[10,"abs","","Computes the absolute value of <code>self</code>. Returns <code>Float::nan()</code> …",32,[[]]],[10,"signum","","Returns a number that represents the sign of <code>self</code>.",32,[[]]],[10,"is_sign_positive","","Returns <code>true</code> if <code>self</code> is positive, including <code>+0.0</code>, …",32,[[],["bool",15]]],[10,"is_sign_negative","","Returns <code>true</code> if <code>self</code> is negative, including <code>-0.0</code>, …",32,[[],["bool",15]]],[10,"mul_add","","Fused multiply-add. Computes <code>(self * a) + b</code> with only one …",32,[[]]],[10,"recip","","Take the reciprocal (inverse) of a number, <code>1/x</code>.",32,[[]]],[10,"powi","","Raise a number to an integer power.",32,[[["i32",15]]]],[10,"powf","","Raise a number to a real number power.",32,[[]]],[10,"sqrt","","Take the square root of a number.",32,[[]]],[10,"exp","","Returns <code>e^(self)</code>, (the exponential function).",32,[[]]],[10,"exp2","","Returns <code>2^(self)</code>.",32,[[]]],[10,"ln","","Returns the natural logarithm of the number.",32,[[]]],[10,"log","","Returns the logarithm of the number with respect to an …",32,[[]]],[10,"log2","","Returns the base 2 logarithm of the number.",32,[[]]],[10,"log10","","Returns the base 10 logarithm of the number.",32,[[]]],[10,"to_degrees","","Converts radians to degrees.",32,[[]]],[10,"to_radians","","Converts degrees to radians.",32,[[]]],[10,"max","","Returns the maximum of the two numbers.",32,[[]]],[10,"min","","Returns the minimum of the two numbers.",32,[[]]],[10,"abs_sub","","The positive difference of two numbers.",32,[[]]],[10,"cbrt","","Take the cubic root of a number.",32,[[]]],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle …",32,[[]]],[10,"sin","","Computes the sine of a number (in radians).",32,[[]]],[10,"cos","","Computes the cosine of a number (in radians).",32,[[]]],[10,"tan","","Computes the tangent of a number (in radians).",32,[[]]],[10,"asin","","Computes the arcsine of a number. Return value is in …",32,[[]]],[10,"acos","","Computes the arccosine of a number. Return value is in …",32,[[]]],[10,"atan","","Computes the arctangent of a number. Return value is in …",32,[[]]],[10,"atan2","","Computes the four quadrant arctangent of <code>self</code> (<code>y</code>) and …",32,[[]]],[10,"sin_cos","","Simultaneously computes the sine and cosine of the …",32,[[]]],[10,"exp_m1","","Returns <code>e^(self) - 1</code> in a way that is accurate even if the…",32,[[]]],[10,"ln_1p","","Returns <code>ln(1+n)</code> (natural logarithm) more accurately than …",32,[[]]],[10,"sinh","","Hyperbolic sine function.",32,[[]]],[10,"cosh","","Hyperbolic cosine function.",32,[[]]],[10,"tanh","","Hyperbolic tangent function.",32,[[]]],[10,"asinh","","Inverse hyperbolic sine function.",32,[[]]],[10,"acosh","","Inverse hyperbolic cosine function.",32,[[]]],[10,"atanh","","Inverse hyperbolic tangent function.",32,[[]]],[0,"sign","num::traits","",null,null],[8,"Signed","num::traits::sign","Useful functions for signed numbers (i.e. numbers that …",null,null],[10,"abs","","Computes the absolute value.",33,[[]]],[10,"abs_sub","","The positive difference of two numbers.",33,[[]]],[10,"signum","","Returns the sign of the number.",33,[[]]],[10,"is_positive","","Returns true if the number is positive and false if the …",33,[[],["bool",15]]],[10,"is_negative","","Returns true if the number is negative and false if the …",33,[[],["bool",15]]],[5,"abs","","Computes the absolute value.",null,[[]]],[5,"abs_sub","","The positive difference of two numbers.",null,[[]]],[5,"signum","","Returns the sign of the number.",null,[[]]],[8,"Unsigned","","A trait for values which cannot be negative",null,null],[8,"Num","num::traits","The base trait for numeric types, covering <code>0</code> and <code>1</code> values,…",null,null],[16,"FromStrRadixErr","","",34,null],[10,"from_str_radix","","Convert from a string and radix <= 36.",34,[[["u32",15],["str",15]],["result",4]]],[8,"NumOps","","The trait for types implementing basic numeric operations",null,null],[8,"NumRef","","The trait for <code>Num</code> types which also implement numeric …",null,null],[8,"RefNum","","The trait for references which implement numeric …",null,null],[8,"NumAssignOps","","The trait for types implementing numeric assignment …",null,null],[8,"NumAssign","","The trait for <code>Num</code> types which also implement assignment …",null,null],[8,"NumAssignRef","","The trait for <code>NumAssign</code> types which also implement …",null,null],[4,"FloatErrorKind","","",null,null],[13,"Empty","","",35,null],[13,"Invalid","","",35,null],[3,"ParseFloatError","","",null,null],[12,"kind","","",36,null],[5,"clamp","","A value bounded by a minimum and a maximum",null,[[]]],[5,"clamp_min","","A value bounded by a minimum value",null,[[]]],[5,"clamp_max","","A value bounded by a maximum value",null,[[]]],[8,"Bounded","","Numbers which have upper and lower bounds",null,null],[10,"min_value","","returns the smallest finite number this type can represent",3,[[]]],[10,"max_value","","returns the largest finite number this type can represent",3,[[]]],[8,"Float","","Generic trait for floating point numbers",null,null],[10,"nan","","Returns the <code>NaN</code> value.",9,[[]]],[10,"infinity","","Returns the infinite value.",9,[[]]],[10,"neg_infinity","","Returns the negative infinite value.",9,[[]]],[10,"neg_zero","","Returns <code>-0.0</code>.",9,[[]]],[10,"min_value","","Returns the smallest finite value that this type can …",9,[[]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this …",9,[[]]],[11,"epsilon","","Returns epsilon, a small positive value.",9,[[]]],[10,"max_value","","Returns the largest finite value that this type can …",9,[[]]],[10,"is_nan","","Returns <code>true</code> if this value is <code>NaN</code> and false otherwise.",9,[[],["bool",15]]],[10,"is_infinite","","Returns <code>true</code> if this value is positive infinity or …",9,[[],["bool",15]]],[10,"is_finite","","Returns <code>true</code> if this number is neither infinite nor <code>NaN</code>.",9,[[],["bool",15]]],[10,"is_normal","","Returns <code>true</code> if the number is neither zero, infinite, …",9,[[],["bool",15]]],[10,"classify","","Returns the floating point category of the number. If …",9,[[],["fpcategory",4]]],[10,"floor","","Returns the largest integer less than or equal to a …",9,[[]]],[10,"ceil","","Returns the smallest integer greater than or equal to a …",9,[[]]],[10,"round","","Returns the nearest integer to a number. Round half-way …",9,[[]]],[10,"trunc","","Return the integer part of a number.",9,[[]]],[10,"fract","","Returns the fractional part of a number.",9,[[]]],[10,"abs","","Computes the absolute value of <code>self</code>. Returns <code>Float::nan()</code> …",9,[[]]],[10,"signum","","Returns a number that represents the sign of <code>self</code>.",9,[[]]],[10,"is_sign_positive","","Returns <code>true</code> if <code>self</code> is positive, including <code>+0.0</code>, …",9,[[],["bool",15]]],[10,"is_sign_negative","","Returns <code>true</code> if <code>self</code> is negative, including <code>-0.0</code>, …",9,[[],["bool",15]]],[10,"mul_add","","Fused multiply-add. Computes <code>(self * a) + b</code> with only one …",9,[[]]],[10,"recip","","Take the reciprocal (inverse) of a number, <code>1/x</code>.",9,[[]]],[10,"powi","","Raise a number to an integer power.",9,[[["i32",15]]]],[10,"powf","","Raise a number to a floating point power.",9,[[]]],[10,"sqrt","","Take the square root of a number.",9,[[]]],[10,"exp","","Returns <code>e^(self)</code>, (the exponential function).",9,[[]]],[10,"exp2","","Returns <code>2^(self)</code>.",9,[[]]],[10,"ln","","Returns the natural logarithm of the number.",9,[[]]],[10,"log","","Returns the logarithm of the number with respect to an …",9,[[]]],[10,"log2","","Returns the base 2 logarithm of the number.",9,[[]]],[10,"log10","","Returns the base 10 logarithm of the number.",9,[[]]],[11,"to_degrees","","Converts radians to degrees.",9,[[]]],[11,"to_radians","","Converts degrees to radians.",9,[[]]],[10,"max","","Returns the maximum of the two numbers.",9,[[]]],[10,"min","","Returns the minimum of the two numbers.",9,[[]]],[10,"abs_sub","","The positive difference of two numbers.",9,[[]]],[10,"cbrt","","Take the cubic root of a number.",9,[[]]],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle …",9,[[]]],[10,"sin","","Computes the sine of a number (in radians).",9,[[]]],[10,"cos","","Computes the cosine of a number (in radians).",9,[[]]],[10,"tan","","Computes the tangent of a number (in radians).",9,[[]]],[10,"asin","","Computes the arcsine of a number. Return value is in …",9,[[]]],[10,"acos","","Computes the arccosine of a number. Return value is in …",9,[[]]],[10,"atan","","Computes the arctangent of a number. Return value is in …",9,[[]]],[10,"atan2","","Computes the four quadrant arctangent of <code>self</code> (<code>y</code>) and …",9,[[]]],[10,"sin_cos","","Simultaneously computes the sine and cosine of the …",9,[[]]],[10,"exp_m1","","Returns <code>e^(self) - 1</code> in a way that is accurate even if the…",9,[[]]],[10,"ln_1p","","Returns <code>ln(1+n)</code> (natural logarithm) more accurately than …",9,[[]]],[10,"sinh","","Hyperbolic sine function.",9,[[]]],[10,"cosh","","Hyperbolic cosine function.",9,[[]]],[10,"tanh","","Hyperbolic tangent function.",9,[[]]],[10,"asinh","","Inverse hyperbolic sine function.",9,[[]]],[10,"acosh","","Inverse hyperbolic cosine function.",9,[[]]],[10,"atanh","","Inverse hyperbolic tangent function.",9,[[]]],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as …",9,[[]]],[8,"FloatConst","","",null,null],[10,"E","","Return Euler’s number.",10,[[]]],[10,"FRAC_1_PI","","Return <code>1.0 / π</code>.",10,[[]]],[10,"FRAC_1_SQRT_2","","Return <code>1.0 / sqrt(2.0)</code>.",10,[[]]],[10,"FRAC_2_PI","","Return <code>2.0 / π</code>.",10,[[]]],[10,"FRAC_2_SQRT_PI","","Return <code>2.0 / sqrt(π)</code>.",10,[[]]],[10,"FRAC_PI_2","","Return <code>π / 2.0</code>.",10,[[]]],[10,"FRAC_PI_3","","Return <code>π / 3.0</code>.",10,[[]]],[10,"FRAC_PI_4","","Return <code>π / 4.0</code>.",10,[[]]],[10,"FRAC_PI_6","","Return <code>π / 6.0</code>.",10,[[]]],[10,"FRAC_PI_8","","Return <code>π / 8.0</code>.",10,[[]]],[10,"LN_10","","Return <code>ln(10.0)</code>.",10,[[]]],[10,"LN_2","","Return <code>ln(2.0)</code>.",10,[[]]],[10,"LOG10_E","","Return <code>log10(e)</code>.",10,[[]]],[10,"LOG2_E","","Return <code>log2(e)</code>.",10,[[]]],[10,"PI","","Return Archimedes’ constant <code>π</code>.",10,[[]]],[10,"SQRT_2","","Return <code>sqrt(2.0)</code>.",10,[[]]],[11,"TAU","","Return the full circle constant <code>τ</code>.",10,[[]]],[5,"cast","","Cast from one machine scalar to another.",null,[[],["option",4]]],[8,"AsPrimitive","","A generic interface for casting between machine scalars …",null,null],[10,"as_","","Convert a value to another, using the <code>as</code> operator.",7,[[]]],[8,"FromPrimitive","","A generic trait for converting a number to a value.",null,null],[11,"from_isize","","Converts an <code>isize</code> to return an optional value of this …",5,[[["isize",15]],["option",4]]],[11,"from_i8","","Converts an <code>i8</code> to return an optional value of this type. …",5,[[["i8",15]],["option",4]]],[11,"from_i16","","Converts an <code>i16</code> to return an optional value of this type. …",5,[[["i16",15]],["option",4]]],[11,"from_i32","","Converts an <code>i32</code> to return an optional value of this type. …",5,[[["i32",15]],["option",4]]],[10,"from_i64","","Converts an <code>i64</code> to return an optional value of this type. …",5,[[["i64",15]],["option",4]]],[11,"from_i128","","Converts an <code>i128</code> to return an optional value of this …",5,[[["i128",15]],["option",4]]],[11,"from_usize","","Converts a <code>usize</code> to return an optional value of this …",5,[[["usize",15]],["option",4]]],[11,"from_u8","","Converts an <code>u8</code> to return an optional value of this type. …",5,[[["u8",15]],["option",4]]],[11,"from_u16","","Converts an <code>u16</code> to return an optional value of this type. …",5,[[["u16",15]],["option",4]]],[11,"from_u32","","Converts an <code>u32</code> to return an optional value of this type. …",5,[[["u32",15]],["option",4]]],[10,"from_u64","","Converts an <code>u64</code> to return an optional value of this type. …",5,[[["u64",15]],["option",4]]],[11,"from_u128","","Converts an <code>u128</code> to return an optional value of this …",5,[[["u128",15]],["option",4]]],[11,"from_f32","","Converts a <code>f32</code> to return an optional value of this type. …",5,[[["f32",15]],["option",4]]],[11,"from_f64","","Converts a <code>f64</code> to return an optional value of this type. …",5,[[["f64",15]],["option",4]]],[8,"NumCast","","An interface for casting between machine scalars.",null,null],[10,"from","","Creates a number from another value that can be converted …",6,[[],["option",4]]],[8,"ToPrimitive","","A generic trait for converting a value to a number.",null,null],[11,"to_isize","","Converts the value of <code>self</code> to an <code>isize</code>. If the value …",4,[[],[["isize",15],["option",4]]]],[11,"to_i8","","Converts the value of <code>self</code> to an <code>i8</code>. If the value cannot …",4,[[],[["option",4],["i8",15]]]],[11,"to_i16","","Converts the value of <code>self</code> to an <code>i16</code>. If the value cannot …",4,[[],[["i16",15],["option",4]]]],[11,"to_i32","","Converts the value of <code>self</code> to an <code>i32</code>. If the value cannot …",4,[[],[["option",4],["i32",15]]]],[10,"to_i64","","Converts the value of <code>self</code> to an <code>i64</code>. If the value cannot …",4,[[],[["option",4],["i64",15]]]],[11,"to_i128","","Converts the value of <code>self</code> to an <code>i128</code>. If the value …",4,[[],[["option",4],["i128",15]]]],[11,"to_usize","","Converts the value of <code>self</code> to a <code>usize</code>. If the value …",4,[[],[["usize",15],["option",4]]]],[11,"to_u8","","Converts the value of <code>self</code> to a <code>u8</code>. If the value cannot be…",4,[[],[["u8",15],["option",4]]]],[11,"to_u16","","Converts the value of <code>self</code> to a <code>u16</code>. If the value cannot …",4,[[],[["option",4],["u16",15]]]],[11,"to_u32","","Converts the value of <code>self</code> to a <code>u32</code>. If the value cannot …",4,[[],[["u32",15],["option",4]]]],[10,"to_u64","","Converts the value of <code>self</code> to a <code>u64</code>. If the value cannot …",4,[[],[["option",4],["u64",15]]]],[11,"to_u128","","Converts the value of <code>self</code> to a <code>u128</code>. If the value cannot …",4,[[],[["option",4],["u128",15]]]],[11,"to_f32","","Converts the value of <code>self</code> to an <code>f32</code>. If the value cannot …",4,[[],[["option",4],["f32",15]]]],[11,"to_f64","","Converts the value of <code>self</code> to an <code>f64</code>. If the value cannot …",4,[[],[["f64",15],["option",4]]]],[5,"one","","Returns the multiplicative identity, <code>1</code>.",null,[[]]],[5,"zero","","Returns the additive identity, <code>0</code>.",null,[[]]],[8,"One","","Defines a multiplicative identity element for <code>Self</code>.",null,null],[10,"one","","Returns the multiplicative identity element of <code>Self</code>, <code>1</code>.",12,[[]]],[11,"set_one","","Sets <code>self</code> to the multiplicative identity element of <code>Self</code>, …",12,[[]]],[11,"is_one","","Returns <code>true</code> if <code>self</code> is equal to the multiplicative …",12,[[],["bool",15]]],[8,"Zero","","Defines an additive identity element for <code>Self</code>.",null,null],[10,"zero","","Returns the additive identity element of <code>Self</code>, <code>0</code>.",11,[[]]],[11,"set_zero","","Sets <code>self</code> to the additive identity element of <code>Self</code>, <code>0</code>.",11,[[]]],[10,"is_zero","","Returns <code>true</code> if <code>self</code> is equal to the additive identity.",11,[[],["bool",15]]],[8,"PrimInt","","Generic trait for primitive integers.",null,null],[10,"count_ones","","Returns the number of ones in the binary representation …",13,[[],["u32",15]]],[10,"count_zeros","","Returns the number of zeros in the binary representation …",13,[[],["u32",15]]],[10,"leading_zeros","","Returns the number of leading zeros in the binary …",13,[[],["u32",15]]],[10,"trailing_zeros","","Returns the number of trailing zeros in the binary …",13,[[],["u32",15]]],[10,"rotate_left","","Shifts the bits to the left by a specified amount amount, …",13,[[["u32",15]]]],[10,"rotate_right","","Shifts the bits to the right by a specified amount …",13,[[["u32",15]]]],[10,"signed_shl","","Shifts the bits to the left by a specified amount amount, …",13,[[["u32",15]]]],[10,"signed_shr","","Shifts the bits to the right by a specified amount …",13,[[["u32",15]]]],[10,"unsigned_shl","","Shifts the bits to the left by a specified amount amount, …",13,[[["u32",15]]]],[10,"unsigned_shr","","Shifts the bits to the right by a specified amount …",13,[[["u32",15]]]],[10,"swap_bytes","","Reverses the byte order of the integer.",13,[[]]],[10,"from_be","","Convert an integer from big endian to the target\'s …",13,[[]]],[10,"from_le","","Convert an integer from little endian to the target\'s …",13,[[]]],[10,"to_be","","Convert <code>self</code> to big endian from the target\'s endianness.",13,[[]]],[10,"to_le","","Convert <code>self</code> to little endian from the target\'s …",13,[[]]],[10,"pow","","Raises self to the power of <code>exp</code>, using exponentiation by …",13,[[["u32",15]]]],[8,"CheckedAdd","","Performs addition that returns <code>None</code> instead of wrapping …",null,null],[10,"checked_add","","Adds two numbers, checking for overflow. If overflow …",14,[[],["option",4]]],[8,"CheckedDiv","","Performs division that returns <code>None</code> instead of panicking …",null,null],[10,"checked_div","","Divides two numbers, checking for underflow, overflow and …",17,[[],["option",4]]],[8,"CheckedMul","","Performs multiplication that returns <code>None</code> instead of …",null,null],[10,"checked_mul","","Multiplies two numbers, checking for underflow or …",16,[[],["option",4]]],[8,"CheckedNeg","","Performs negation that returns <code>None</code> if the result can\'t …",null,null],[10,"checked_neg","","Negates a number, returning <code>None</code> for results that can\'t …",19,[[],["option",4]]],[8,"CheckedRem","","Performs an integral remainder that returns <code>None</code> instead …",null,null],[10,"checked_rem","","Finds the remainder of dividing two numbers, checking for …",18,[[],["option",4]]],[8,"CheckedShl","","Performs a left shift that returns <code>None</code> on shifts larger …",null,null],[10,"checked_shl","","Checked shift left. Computes <code>self << rhs</code>, returning <code>None</code> …",20,[[["u32",15]],["option",4]]],[8,"CheckedShr","","Performs a right shift that returns <code>None</code> on shifts larger …",null,null],[10,"checked_shr","","Checked shift right. Computes <code>self >> rhs</code>, returning <code>None</code> …",21,[[["u32",15]],["option",4]]],[8,"CheckedSub","","Performs subtraction that returns <code>None</code> instead of …",null,null],[10,"checked_sub","","Subtracts two numbers, checking for underflow. If …",15,[[],["option",4]]],[8,"Inv","","Unary operator for retrieving the multiplicative inverse, …",null,null],[16,"Output","","The result after applying the operator.",22,null],[10,"inv","","Returns the multiplicative inverse of <code>self</code>.",22,[[]]],[8,"MulAdd","","Fused multiply-add. Computes <code>(self * a) + b</code> with only one …",null,null],[16,"Output","","The resulting type after applying the fused multiply-add.",23,null],[10,"mul_add","","Performs the fused multiply-add operation.",23,[[]]],[8,"MulAddAssign","","The fused multiply-add assignment operation.",null,null],[10,"mul_add_assign","","Performs the fused multiply-add operation.",24,[[]]],[8,"Saturating","","Saturating math operations",null,null],[10,"saturating_add","","Saturating addition operator. Returns a+b, saturating at …",25,[[]]],[10,"saturating_sub","","Saturating subtraction operator. Returns a-b, saturating …",25,[[]]],[8,"WrappingAdd","","Performs addition that wraps around on overflow.",null,null],[10,"wrapping_add","","Wrapping (modular) addition. Computes <code>self + other</code>, …",26,[[]]],[8,"WrappingMul","","Performs multiplication that wraps around on overflow.",null,null],[10,"wrapping_mul","","Wrapping (modular) multiplication. Computes <code>self * other</code>, …",28,[[]]],[8,"WrappingShl","","Performs a left shift that does not panic.",null,null],[10,"wrapping_shl","","Panic-free bitwise shift-left; yields <code>self << mask(rhs)</code>, …",29,[[["u32",15]]]],[8,"WrappingShr","","Performs a right shift that does not panic.",null,null],[10,"wrapping_shr","","Panic-free bitwise shift-right; yields <code>self >> mask(rhs)</code>, …",30,[[["u32",15]]]],[8,"WrappingSub","","Performs subtraction that wraps around on overflow.",null,null],[10,"wrapping_sub","","Wrapping (modular) subtraction. Computes <code>self - other</code>, …",27,[[]]],[5,"checked_pow","","Raises a value to the power of exp, returning <code>None</code> if an …",null,[[["usize",15]],["option",4]]],[5,"pow","","Raises a value to the power of exp, using exponentiation …",null,[[["usize",15]]]],[8,"Pow","","Binary operator for raising a value to a power.",null,null],[16,"Output","","The result after applying the operator.",31,null],[10,"pow","","Returns <code>self</code> to the power <code>rhs</code>.",31,[[]]],[5,"abs","","Computes the absolute value.",null,[[]]],[5,"abs_sub","","The positive difference of two numbers.",null,[[]]],[5,"signum","","Returns the sign of the number.",null,[[]]],[8,"Signed","","Useful functions for signed numbers (i.e. numbers that …",null,null],[10,"abs","","Computes the absolute value.",33,[[]]],[10,"abs_sub","","The positive difference of two numbers.",33,[[]]],[10,"signum","","Returns the sign of the number.",33,[[]]],[10,"is_positive","","Returns true if the number is positive and false if the …",33,[[],["bool",15]]],[10,"is_negative","","Returns true if the number is negative and false if the …",33,[[],["bool",15]]],[8,"Unsigned","","A trait for values which cannot be negative",null,null],[8,"Integer","num","",null,null],[10,"div_floor","","Floored integer division.",0,[[]]],[10,"mod_floor","","Floored integer modulo, satisfying:",0,[[]]],[11,"div_ceil","","Ceiled integer division.",0,[[]]],[10,"gcd","","Greatest Common Divisor (GCD).",0,[[]]],[10,"lcm","","Lowest Common Multiple (LCM).",0,[[]]],[11,"gcd_lcm","","Greatest Common Divisor (GCD) and Lowest Common Multiple …",0,[[]]],[11,"extended_gcd","","Greatest common divisor and Bézout coefficients.",0,[[],["extendedgcd",3]]],[11,"extended_gcd_lcm","","Greatest common divisor, least common multiple, and …",0,[[]]],[10,"divides","","Deprecated, use <code>is_multiple_of</code> instead.",0,[[],["bool",15]]],[10,"is_multiple_of","","Returns <code>true</code> if <code>self</code> is a multiple of <code>other</code>.",0,[[],["bool",15]]],[10,"is_even","","Returns <code>true</code> if the number is even.",0,[[],["bool",15]]],[10,"is_odd","","Returns <code>true</code> if the number is odd.",0,[[],["bool",15]]],[10,"div_rem","","Simultaneous truncated integer division and modulus. …",0,[[]]],[11,"div_mod_floor","","Simultaneous floored integer division and modulus. …",0,[[]]],[11,"next_multiple_of","","Rounds up to nearest multiple of argument.",0,[[]]],[11,"prev_multiple_of","","Rounds down to nearest multiple of argument.",0,[[]]],[5,"range","","Returns an iterator over the given range [start, stop) …",null,[[],["range",3]]],[5,"range_inclusive","","Return an iterator over the range [start, stop]",null,[[],["rangeinclusive",3]]],[5,"range_step","","Return an iterator over the range [start, stop) by <code>step</code>. …",null,[[],["rangestep",3]]],[5,"range_step_inclusive","","Return an iterator over the range [start, stop] by <code>step</code>. …",null,[[],["rangestepinclusive",3]]],[8,"Num","","The base trait for numeric types, covering <code>0</code> and <code>1</code> values,…",null,null],[16,"FromStrRadixErr","","",34,null],[10,"from_str_radix","","Convert from a string and radix <= 36.",34,[[["u32",15],["str",15]],["result",4]]],[8,"Zero","","Defines an additive identity element for <code>Self</code>.",null,null],[10,"zero","","Returns the additive identity element of <code>Self</code>, <code>0</code>.",11,[[]]],[11,"set_zero","","Sets <code>self</code> to the additive identity element of <code>Self</code>, <code>0</code>.",11,[[]]],[10,"is_zero","","Returns <code>true</code> if <code>self</code> is equal to the additive identity.",11,[[],["bool",15]]],[8,"One","","Defines a multiplicative identity element for <code>Self</code>.",null,null],[10,"one","","Returns the multiplicative identity element of <code>Self</code>, <code>1</code>.",12,[[]]],[11,"set_one","","Sets <code>self</code> to the multiplicative identity element of <code>Self</code>, …",12,[[]]],[11,"is_one","","Returns <code>true</code> if <code>self</code> is equal to the multiplicative …",12,[[],["bool",15]]],[8,"Signed","","Useful functions for signed numbers (i.e. numbers that …",null,null],[10,"abs","","Computes the absolute value.",33,[[]]],[10,"abs_sub","","The positive difference of two numbers.",33,[[]]],[10,"signum","","Returns the sign of the number.",33,[[]]],[10,"is_positive","","Returns true if the number is positive and false if the …",33,[[],["bool",15]]],[10,"is_negative","","Returns true if the number is negative and false if the …",33,[[],["bool",15]]],[8,"Unsigned","","A trait for values which cannot be negative",null,null],[8,"Bounded","","Numbers which have upper and lower bounds",null,null],[10,"min_value","","returns the smallest finite number this type can represent",3,[[]]],[10,"max_value","","returns the largest finite number this type can represent",3,[[]]],[5,"one","","Returns the multiplicative identity, <code>1</code>.",null,[[]]],[5,"zero","","Returns the additive identity, <code>0</code>.",null,[[]]],[5,"abs","","Computes the absolute value.",null,[[]]],[5,"abs_sub","","The positive difference of two numbers.",null,[[]]],[5,"signum","","Returns the sign of the number.",null,[[]]],[8,"Saturating","","Saturating math operations",null,null],[10,"saturating_add","","Saturating addition operator. Returns a+b, saturating at …",25,[[]]],[10,"saturating_sub","","Saturating subtraction operator. Returns a-b, saturating …",25,[[]]],[8,"CheckedAdd","","Performs addition that returns <code>None</code> instead of wrapping …",null,null],[10,"checked_add","","Adds two numbers, checking for overflow. If overflow …",14,[[],["option",4]]],[8,"CheckedSub","","Performs subtraction that returns <code>None</code> instead of …",null,null],[10,"checked_sub","","Subtracts two numbers, checking for underflow. If …",15,[[],["option",4]]],[8,"CheckedMul","","Performs multiplication that returns <code>None</code> instead of …",null,null],[10,"checked_mul","","Multiplies two numbers, checking for underflow or …",16,[[],["option",4]]],[8,"CheckedDiv","","Performs division that returns <code>None</code> instead of panicking …",null,null],[10,"checked_div","","Divides two numbers, checking for underflow, overflow and …",17,[[],["option",4]]],[8,"PrimInt","","Generic trait for primitive integers.",null,null],[10,"count_ones","","Returns the number of ones in the binary representation …",13,[[],["u32",15]]],[10,"count_zeros","","Returns the number of zeros in the binary representation …",13,[[],["u32",15]]],[10,"leading_zeros","","Returns the number of leading zeros in the binary …",13,[[],["u32",15]]],[10,"trailing_zeros","","Returns the number of trailing zeros in the binary …",13,[[],["u32",15]]],[10,"rotate_left","","Shifts the bits to the left by a specified amount amount, …",13,[[["u32",15]]]],[10,"rotate_right","","Shifts the bits to the right by a specified amount …",13,[[["u32",15]]]],[10,"signed_shl","","Shifts the bits to the left by a specified amount amount, …",13,[[["u32",15]]]],[10,"signed_shr","","Shifts the bits to the right by a specified amount …",13,[[["u32",15]]]],[10,"unsigned_shl","","Shifts the bits to the left by a specified amount amount, …",13,[[["u32",15]]]],[10,"unsigned_shr","","Shifts the bits to the right by a specified amount …",13,[[["u32",15]]]],[10,"swap_bytes","","Reverses the byte order of the integer.",13,[[]]],[10,"from_be","","Convert an integer from big endian to the target\'s …",13,[[]]],[10,"from_le","","Convert an integer from little endian to the target\'s …",13,[[]]],[10,"to_be","","Convert <code>self</code> to big endian from the target\'s endianness.",13,[[]]],[10,"to_le","","Convert <code>self</code> to little endian from the target\'s …",13,[[]]],[10,"pow","","Raises self to the power of <code>exp</code>, using exponentiation by …",13,[[["u32",15]]]],[8,"Float","","Generic trait for floating point numbers",null,null],[10,"nan","","Returns the <code>NaN</code> value.",9,[[]]],[10,"infinity","","Returns the infinite value.",9,[[]]],[10,"neg_infinity","","Returns the negative infinite value.",9,[[]]],[10,"neg_zero","","Returns <code>-0.0</code>.",9,[[]]],[10,"min_value","","Returns the smallest finite value that this type can …",9,[[]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this …",9,[[]]],[11,"epsilon","","Returns epsilon, a small positive value.",9,[[]]],[10,"max_value","","Returns the largest finite value that this type can …",9,[[]]],[10,"is_nan","","Returns <code>true</code> if this value is <code>NaN</code> and false otherwise.",9,[[],["bool",15]]],[10,"is_infinite","","Returns <code>true</code> if this value is positive infinity or …",9,[[],["bool",15]]],[10,"is_finite","","Returns <code>true</code> if this number is neither infinite nor <code>NaN</code>.",9,[[],["bool",15]]],[10,"is_normal","","Returns <code>true</code> if the number is neither zero, infinite, …",9,[[],["bool",15]]],[10,"classify","","Returns the floating point category of the number. If …",9,[[],["fpcategory",4]]],[10,"floor","","Returns the largest integer less than or equal to a …",9,[[]]],[10,"ceil","","Returns the smallest integer greater than or equal to a …",9,[[]]],[10,"round","","Returns the nearest integer to a number. Round half-way …",9,[[]]],[10,"trunc","","Return the integer part of a number.",9,[[]]],[10,"fract","","Returns the fractional part of a number.",9,[[]]],[10,"abs","","Computes the absolute value of <code>self</code>. Returns <code>Float::nan()</code> …",9,[[]]],[10,"signum","","Returns a number that represents the sign of <code>self</code>.",9,[[]]],[10,"is_sign_positive","","Returns <code>true</code> if <code>self</code> is positive, including <code>+0.0</code>, …",9,[[],["bool",15]]],[10,"is_sign_negative","","Returns <code>true</code> if <code>self</code> is negative, including <code>-0.0</code>, …",9,[[],["bool",15]]],[10,"mul_add","","Fused multiply-add. Computes <code>(self * a) + b</code> with only one …",9,[[]]],[10,"recip","","Take the reciprocal (inverse) of a number, <code>1/x</code>.",9,[[]]],[10,"powi","","Raise a number to an integer power.",9,[[["i32",15]]]],[10,"powf","","Raise a number to a floating point power.",9,[[]]],[10,"sqrt","","Take the square root of a number.",9,[[]]],[10,"exp","","Returns <code>e^(self)</code>, (the exponential function).",9,[[]]],[10,"exp2","","Returns <code>2^(self)</code>.",9,[[]]],[10,"ln","","Returns the natural logarithm of the number.",9,[[]]],[10,"log","","Returns the logarithm of the number with respect to an …",9,[[]]],[10,"log2","","Returns the base 2 logarithm of the number.",9,[[]]],[10,"log10","","Returns the base 10 logarithm of the number.",9,[[]]],[11,"to_degrees","","Converts radians to degrees.",9,[[]]],[11,"to_radians","","Converts degrees to radians.",9,[[]]],[10,"max","","Returns the maximum of the two numbers.",9,[[]]],[10,"min","","Returns the minimum of the two numbers.",9,[[]]],[10,"abs_sub","","The positive difference of two numbers.",9,[[]]],[10,"cbrt","","Take the cubic root of a number.",9,[[]]],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle …",9,[[]]],[10,"sin","","Computes the sine of a number (in radians).",9,[[]]],[10,"cos","","Computes the cosine of a number (in radians).",9,[[]]],[10,"tan","","Computes the tangent of a number (in radians).",9,[[]]],[10,"asin","","Computes the arcsine of a number. Return value is in …",9,[[]]],[10,"acos","","Computes the arccosine of a number. Return value is in …",9,[[]]],[10,"atan","","Computes the arctangent of a number. Return value is in …",9,[[]]],[10,"atan2","","Computes the four quadrant arctangent of <code>self</code> (<code>y</code>) and …",9,[[]]],[10,"sin_cos","","Simultaneously computes the sine and cosine of the …",9,[[]]],[10,"exp_m1","","Returns <code>e^(self) - 1</code> in a way that is accurate even if the…",9,[[]]],[10,"ln_1p","","Returns <code>ln(1+n)</code> (natural logarithm) more accurately than …",9,[[]]],[10,"sinh","","Hyperbolic sine function.",9,[[]]],[10,"cosh","","Hyperbolic cosine function.",9,[[]]],[10,"tanh","","Hyperbolic tangent function.",9,[[]]],[10,"asinh","","Inverse hyperbolic sine function.",9,[[]]],[10,"acosh","","Inverse hyperbolic cosine function.",9,[[]]],[10,"atanh","","Inverse hyperbolic tangent function.",9,[[]]],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as …",9,[[]]],[8,"ToPrimitive","","A generic trait for converting a value to a number.",null,null],[11,"to_isize","","Converts the value of <code>self</code> to an <code>isize</code>. If the value …",4,[[],[["isize",15],["option",4]]]],[11,"to_i8","","Converts the value of <code>self</code> to an <code>i8</code>. If the value cannot …",4,[[],[["option",4],["i8",15]]]],[11,"to_i16","","Converts the value of <code>self</code> to an <code>i16</code>. If the value cannot …",4,[[],[["i16",15],["option",4]]]],[11,"to_i32","","Converts the value of <code>self</code> to an <code>i32</code>. If the value cannot …",4,[[],[["option",4],["i32",15]]]],[10,"to_i64","","Converts the value of <code>self</code> to an <code>i64</code>. If the value cannot …",4,[[],[["option",4],["i64",15]]]],[11,"to_i128","","Converts the value of <code>self</code> to an <code>i128</code>. If the value …",4,[[],[["option",4],["i128",15]]]],[11,"to_usize","","Converts the value of <code>self</code> to a <code>usize</code>. If the value …",4,[[],[["usize",15],["option",4]]]],[11,"to_u8","","Converts the value of <code>self</code> to a <code>u8</code>. If the value cannot be…",4,[[],[["u8",15],["option",4]]]],[11,"to_u16","","Converts the value of <code>self</code> to a <code>u16</code>. If the value cannot …",4,[[],[["option",4],["u16",15]]]],[11,"to_u32","","Converts the value of <code>self</code> to a <code>u32</code>. If the value cannot …",4,[[],[["u32",15],["option",4]]]],[10,"to_u64","","Converts the value of <code>self</code> to a <code>u64</code>. If the value cannot …",4,[[],[["option",4],["u64",15]]]],[11,"to_u128","","Converts the value of <code>self</code> to a <code>u128</code>. If the value cannot …",4,[[],[["option",4],["u128",15]]]],[11,"to_f32","","Converts the value of <code>self</code> to an <code>f32</code>. If the value cannot …",4,[[],[["option",4],["f32",15]]]],[11,"to_f64","","Converts the value of <code>self</code> to an <code>f64</code>. If the value cannot …",4,[[],[["f64",15],["option",4]]]],[8,"FromPrimitive","","A generic trait for converting a number to a value.",null,null],[11,"from_isize","","Converts an <code>isize</code> to return an optional value of this …",5,[[["isize",15]],["option",4]]],[11,"from_i8","","Converts an <code>i8</code> to return an optional value of this type. …",5,[[["i8",15]],["option",4]]],[11,"from_i16","","Converts an <code>i16</code> to return an optional value of this type. …",5,[[["i16",15]],["option",4]]],[11,"from_i32","","Converts an <code>i32</code> to return an optional value of this type. …",5,[[["i32",15]],["option",4]]],[10,"from_i64","","Converts an <code>i64</code> to return an optional value of this type. …",5,[[["i64",15]],["option",4]]],[11,"from_i128","","Converts an <code>i128</code> to return an optional value of this …",5,[[["i128",15]],["option",4]]],[11,"from_usize","","Converts a <code>usize</code> to return an optional value of this …",5,[[["usize",15]],["option",4]]],[11,"from_u8","","Converts an <code>u8</code> to return an optional value of this type. …",5,[[["u8",15]],["option",4]]],[11,"from_u16","","Converts an <code>u16</code> to return an optional value of this type. …",5,[[["u16",15]],["option",4]]],[11,"from_u32","","Converts an <code>u32</code> to return an optional value of this type. …",5,[[["u32",15]],["option",4]]],[10,"from_u64","","Converts an <code>u64</code> to return an optional value of this type. …",5,[[["u64",15]],["option",4]]],[11,"from_u128","","Converts an <code>u128</code> to return an optional value of this …",5,[[["u128",15]],["option",4]]],[11,"from_f32","","Converts a <code>f32</code> to return an optional value of this type. …",5,[[["f32",15]],["option",4]]],[11,"from_f64","","Converts a <code>f64</code> to return an optional value of this type. …",5,[[["f64",15]],["option",4]]],[8,"NumCast","","An interface for casting between machine scalars.",null,null],[10,"from","","Creates a number from another value that can be converted …",6,[[],["option",4]]],[0,"cast","","",null,null],[8,"ToPrimitive","num::cast","A generic trait for converting a value to a number.",null,null],[11,"to_isize","","Converts the value of <code>self</code> to an <code>isize</code>. If the value …",4,[[],[["isize",15],["option",4]]]],[11,"to_i8","","Converts the value of <code>self</code> to an <code>i8</code>. If the value cannot …",4,[[],[["option",4],["i8",15]]]],[11,"to_i16","","Converts the value of <code>self</code> to an <code>i16</code>. If the value cannot …",4,[[],[["i16",15],["option",4]]]],[11,"to_i32","","Converts the value of <code>self</code> to an <code>i32</code>. If the value cannot …",4,[[],[["option",4],["i32",15]]]],[10,"to_i64","","Converts the value of <code>self</code> to an <code>i64</code>. If the value cannot …",4,[[],[["option",4],["i64",15]]]],[11,"to_i128","","Converts the value of <code>self</code> to an <code>i128</code>. If the value …",4,[[],[["option",4],["i128",15]]]],[11,"to_usize","","Converts the value of <code>self</code> to a <code>usize</code>. If the value …",4,[[],[["usize",15],["option",4]]]],[11,"to_u8","","Converts the value of <code>self</code> to a <code>u8</code>. If the value cannot be…",4,[[],[["u8",15],["option",4]]]],[11,"to_u16","","Converts the value of <code>self</code> to a <code>u16</code>. If the value cannot …",4,[[],[["option",4],["u16",15]]]],[11,"to_u32","","Converts the value of <code>self</code> to a <code>u32</code>. If the value cannot …",4,[[],[["u32",15],["option",4]]]],[10,"to_u64","","Converts the value of <code>self</code> to a <code>u64</code>. If the value cannot …",4,[[],[["option",4],["u64",15]]]],[11,"to_u128","","Converts the value of <code>self</code> to a <code>u128</code>. If the value cannot …",4,[[],[["option",4],["u128",15]]]],[11,"to_f32","","Converts the value of <code>self</code> to an <code>f32</code>. If the value cannot …",4,[[],[["option",4],["f32",15]]]],[11,"to_f64","","Converts the value of <code>self</code> to an <code>f64</code>. If the value cannot …",4,[[],[["f64",15],["option",4]]]],[8,"FromPrimitive","","A generic trait for converting a number to a value.",null,null],[11,"from_isize","","Converts an <code>isize</code> to return an optional value of this …",5,[[["isize",15]],["option",4]]],[11,"from_i8","","Converts an <code>i8</code> to return an optional value of this type. …",5,[[["i8",15]],["option",4]]],[11,"from_i16","","Converts an <code>i16</code> to return an optional value of this type. …",5,[[["i16",15]],["option",4]]],[11,"from_i32","","Converts an <code>i32</code> to return an optional value of this type. …",5,[[["i32",15]],["option",4]]],[10,"from_i64","","Converts an <code>i64</code> to return an optional value of this type. …",5,[[["i64",15]],["option",4]]],[11,"from_i128","","Converts an <code>i128</code> to return an optional value of this …",5,[[["i128",15]],["option",4]]],[11,"from_usize","","Converts a <code>usize</code> to return an optional value of this …",5,[[["usize",15]],["option",4]]],[11,"from_u8","","Converts an <code>u8</code> to return an optional value of this type. …",5,[[["u8",15]],["option",4]]],[11,"from_u16","","Converts an <code>u16</code> to return an optional value of this type. …",5,[[["u16",15]],["option",4]]],[11,"from_u32","","Converts an <code>u32</code> to return an optional value of this type. …",5,[[["u32",15]],["option",4]]],[10,"from_u64","","Converts an <code>u64</code> to return an optional value of this type. …",5,[[["u64",15]],["option",4]]],[11,"from_u128","","Converts an <code>u128</code> to return an optional value of this …",5,[[["u128",15]],["option",4]]],[11,"from_f32","","Converts a <code>f32</code> to return an optional value of this type. …",5,[[["f32",15]],["option",4]]],[11,"from_f64","","Converts a <code>f64</code> to return an optional value of this type. …",5,[[["f64",15]],["option",4]]],[5,"cast","","Cast from one machine scalar to another.",null,[[],["option",4]]],[8,"NumCast","","An interface for casting between machine scalars.",null,null],[10,"from","","Creates a number from another value that can be converted …",6,[[],["option",4]]],[8,"AsPrimitive","","A generic interface for casting between machine scalars …",null,null],[10,"as_","","Convert a value to another, using the <code>as</code> operator.",7,[[]]],[5,"cast","num","Cast from one machine scalar to another.",null,[[],["option",4]]],[0,"pow","","",null,null],[8,"Pow","num::pow","Binary operator for raising a value to a power.",null,null],[16,"Output","","The result after applying the operator.",31,null],[10,"pow","","Returns <code>self</code> to the power <code>rhs</code>.",31,[[]]],[5,"pow","","Raises a value to the power of exp, using exponentiation …",null,[[["usize",15]]]],[5,"checked_pow","","Raises a value to the power of exp, returning <code>None</code> if an …",null,[[["usize",15]],["option",4]]],[5,"pow","num","Raises a value to the power of exp, using exponentiation …",null,[[["usize",15]]]],[5,"checked_pow","","Raises a value to the power of exp, returning <code>None</code> if an …",null,[[["usize",15]],["option",4]]],[5,"clamp","","A value bounded by a minimum and a maximum",null,[[]]],[11,"from","num::integer","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"into_iter","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"from","num::iter","",38,[[]]],[11,"into","","",38,[[]]],[11,"into_iter","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"into_iter","","",39,[[]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"into_iter","","",40,[[]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"into_iter","","",41,[[]]],[11,"to_owned","","",41,[[]]],[11,"clone_into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"from","num::traits","",35,[[]]],[11,"into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_string","","",36,[[],["string",3]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"fmt","","",36,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",35,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",36,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","num::integer","",1,[[["formatter",3]],[["error",3],["result",4]]]],[11,"next","","",37,[[],["option",4]]],[11,"eq","","",1,[[["extendedgcd",3]],["bool",15]]],[11,"ne","","",1,[[["extendedgcd",3]],["bool",15]]],[11,"clone","","",1,[[],["extendedgcd",3]]],[11,"next_back","num::iter","",39,[[],["option",4]]],[11,"next_back","","",38,[[],["option",4]]],[11,"next","","",38,[[],["option",4]]],[11,"size_hint","","",38,[[]]],[11,"next","","",39,[[],["option",4]]],[11,"size_hint","","",39,[[]]],[11,"next","","",40,[[],["option",4]]],[11,"next","","",41,[[],["option",4]]],[11,"clone","","",41,[[],["rangestepinclusive",3]]],[11,"clone","","",38,[[],["range",3]]],[11,"clone","","",39,[[],["rangeinclusive",3]]],[11,"clone","","",40,[[],["rangestep",3]]],[11,"new","num::integer","For a given n, iterate over all binomial coefficients …",37,[[],["iterbinomial",3]]]],"p":[[8,"Integer"],[3,"ExtendedGcd"],[8,"Roots"],[8,"Bounded"],[8,"ToPrimitive"],[8,"FromPrimitive"],[8,"NumCast"],[8,"AsPrimitive"],[8,"FloatCore"],[8,"Float"],[8,"FloatConst"],[8,"Zero"],[8,"One"],[8,"PrimInt"],[8,"CheckedAdd"],[8,"CheckedSub"],[8,"CheckedMul"],[8,"CheckedDiv"],[8,"CheckedRem"],[8,"CheckedNeg"],[8,"CheckedShl"],[8,"CheckedShr"],[8,"Inv"],[8,"MulAdd"],[8,"MulAddAssign"],[8,"Saturating"],[8,"WrappingAdd"],[8,"WrappingSub"],[8,"WrappingMul"],[8,"WrappingShl"],[8,"WrappingShr"],[8,"Pow"],[8,"Real"],[8,"Signed"],[8,"Num"],[4,"FloatErrorKind"],[3,"ParseFloatError"],[3,"IterBinomial"],[3,"Range"],[3,"RangeInclusive"],[3,"RangeStep"],[3,"RangeStepInclusive"]]},\
"num_cpus":{"doc":"A crate with utilities to determine the number of CPUs …","i":[[5,"get","num_cpus","Returns the number of available CPUs of the current …",null,[[],["usize",15]]],[5,"get_physical","","Returns the number of physical cores of the current …",null,[[],["usize",15]]]],"p":[]},\
"num_derive":{"doc":"Procedural macros to derive numeric traits in Rust.","i":[[24,"FromPrimitive","num_derive","Derives <code>num_traits::FromPrimitive</code> for simple enums and …",null,null],[24,"ToPrimitive","","Derives <code>num_traits::ToPrimitive</code> for simple enums and …",null,null],[24,"NumOps","","Derives <code>num_traits::NumOps</code> for newtypes.  The inner type …",null,null],[24,"NumCast","","Derives <code>num_traits::NumCast</code> for newtypes.  The inner type …",null,null],[24,"Zero","","Derives <code>num_traits::Zero</code> for newtypes.  The inner type …",null,null],[24,"One","","Derives <code>num_traits::One</code> for newtypes.  The inner type …",null,null],[24,"Num","","Derives <code>num_traits::Num</code> for newtypes.  The inner type …",null,null],[24,"Float","","Derives <code>num_traits::Float</code> for newtypes.  The inner type …",null,null]],"p":[]},\
"num_integer":{"doc":"Integer trait and functions.","i":[[8,"Roots","num_integer","Provides methods to compute an integer\'s square root, …",null,null],[10,"nth_root","","Returns the truncated principal <code>n</code>th root of an integer -- …",0,[[["u32",15]]]],[11,"sqrt","","Returns the truncated principal square root of an integer …",0,[[]]],[11,"cbrt","","Returns the truncated principal cube root of an integer --…",0,[[]]],[5,"cbrt","","Returns the truncated principal cube root of an integer --…",null,[[["roots",8]],["roots",8]]],[5,"nth_root","","Returns the truncated principal <code>n</code>th root of an integer -- …",null,[[["roots",8],["u32",15]],["roots",8]]],[5,"sqrt","","Returns the truncated principal square root of an integer …",null,[[["roots",8]],["roots",8]]],[8,"Integer","","",null,null],[10,"div_floor","","Floored integer division.",1,[[]]],[10,"mod_floor","","Floored integer modulo, satisfying:",1,[[]]],[11,"div_ceil","","Ceiled integer division.",1,[[]]],[10,"gcd","","Greatest Common Divisor (GCD).",1,[[]]],[10,"lcm","","Lowest Common Multiple (LCM).",1,[[]]],[11,"gcd_lcm","","Greatest Common Divisor (GCD) and Lowest Common Multiple …",1,[[]]],[11,"extended_gcd","","Greatest common divisor and Bézout coefficients.",1,[[],["extendedgcd",3]]],[11,"extended_gcd_lcm","","Greatest common divisor, least common multiple, and …",1,[[]]],[10,"divides","","Deprecated, use <code>is_multiple_of</code> instead.",1,[[],["bool",15]]],[10,"is_multiple_of","","Returns <code>true</code> if <code>self</code> is a multiple of <code>other</code>.",1,[[],["bool",15]]],[10,"is_even","","Returns <code>true</code> if the number is even.",1,[[],["bool",15]]],[10,"is_odd","","Returns <code>true</code> if the number is odd.",1,[[],["bool",15]]],[10,"div_rem","","Simultaneous truncated integer division and modulus. …",1,[[]]],[11,"div_mod_floor","","Simultaneous floored integer division and modulus. …",1,[[]]],[11,"next_multiple_of","","Rounds up to nearest multiple of argument.",1,[[]]],[11,"prev_multiple_of","","Rounds down to nearest multiple of argument.",1,[[]]],[3,"ExtendedGcd","","Greatest common divisor and Bézout coefficients",null,null],[12,"gcd","","",2,null],[12,"x","","",2,null],[12,"y","","",2,null],[5,"div_rem","","Simultaneous integer division and modulus",null,[[["integer",8]]]],[5,"div_floor","","Floored integer division",null,[[["integer",8]],["integer",8]]],[5,"mod_floor","","Floored integer modulus",null,[[["integer",8]],["integer",8]]],[5,"div_mod_floor","","Simultaneous floored integer division and modulus",null,[[["integer",8]]]],[5,"div_ceil","","Ceiled integer division",null,[[["integer",8]],["integer",8]]],[5,"gcd","","Calculates the Greatest Common Divisor (GCD) of the …",null,[[["integer",8]],["integer",8]]],[5,"lcm","","Calculates the Lowest Common Multiple (LCM) of the number …",null,[[["integer",8]],["integer",8]]],[5,"gcd_lcm","","Calculates the Greatest Common Divisor (GCD) and Lowest …",null,[[["integer",8]]]],[3,"IterBinomial","","An iterator over binomial coefficients.",null,null],[11,"new","","For a given n, iterate over all binomial coefficients …",3,[[],["iterbinomial",3]]],[5,"binomial","","Calculate the binomial coefficient.",null,[[["integer",8],["clone",8]],[["integer",8],["clone",8]]]],[5,"multinomial","","Calculate the multinomial coefficient.",null,[[],[["integer",8],["clone",8]]]],[11,"from","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"from","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"into_iter","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"eq","","",2,[[["extendedgcd",3]],["bool",15]]],[11,"ne","","",2,[[["extendedgcd",3]],["bool",15]]],[11,"next","","",3,[[],["option",4]]],[11,"clone","","",2,[[],["extendedgcd",3]]],[11,"sqrt","","Returns the truncated principal square root of an integer …",0,[[]]],[11,"cbrt","","Returns the truncated principal cube root of an integer --…",0,[[]]]],"p":[[8,"Roots"],[8,"Integer"],[3,"ExtendedGcd"],[3,"IterBinomial"]]},\
"num_iter":{"doc":"External iterators for generic mathematics","i":[[3,"Range","num_iter","An iterator over the range [start, stop)",null,null],[5,"range","","Returns an iterator over the given range [start, stop) …",null,[[],["range",3]]],[3,"RangeInclusive","","An iterator over the range [start, stop]",null,null],[5,"range_inclusive","","Return an iterator over the range [start, stop]",null,[[],["rangeinclusive",3]]],[3,"RangeStep","","An iterator over the range [start, stop) by <code>step</code>. It …",null,null],[5,"range_step","","Return an iterator over the range [start, stop) by <code>step</code>. …",null,[[],["rangestep",3]]],[3,"RangeStepInclusive","","An iterator over the range [start, stop] by <code>step</code>. It …",null,null],[5,"range_step_inclusive","","Return an iterator over the range [start, stop] by <code>step</code>. …",null,[[],["rangestepinclusive",3]]],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"into_iter","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"from","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"into_iter","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"from","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"into_iter","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"from","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"into_iter","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"next_back","","",0,[[],["option",4]]],[11,"next_back","","",1,[[],["option",4]]],[11,"next","","",0,[[],["option",4]]],[11,"size_hint","","",0,[[]]],[11,"next","","",1,[[],["option",4]]],[11,"size_hint","","",1,[[]]],[11,"next","","",2,[[],["option",4]]],[11,"next","","",3,[[],["option",4]]],[11,"clone","","",0,[[],["range",3]]],[11,"clone","","",1,[[],["rangeinclusive",3]]],[11,"clone","","",2,[[],["rangestep",3]]],[11,"clone","","",3,[[],["rangestepinclusive",3]]]],"p":[[3,"Range"],[3,"RangeInclusive"],[3,"RangeStep"],[3,"RangeStepInclusive"]]},\
"num_rational":{"doc":"Rational numbers","i":[[3,"Ratio","num_rational","Represents the ratio between two numbers.",null,null],[6,"Rational","","Alias for a <code>Ratio</code> of machine-sized integers.",null,null],[6,"Rational32","","Alias for a <code>Ratio</code> of 32-bit-sized integers.",null,null],[6,"Rational64","","Alias for a <code>Ratio</code> of 64-bit-sized integers.",null,null],[11,"new_raw","","Creates a <code>Ratio</code> without checking for <code>denom == 0</code> or …",0,[[],["ratio",3]]],[11,"numer","","Gets an immutable reference to the numerator.",0,[[]]],[11,"denom","","Gets an immutable reference to the denominator.",0,[[]]],[11,"new","","Creates a new <code>Ratio</code>. Fails if <code>denom</code> is zero.",0,[[],["ratio",3]]],[11,"from_integer","","Creates a <code>Ratio</code> representing the integer <code>t</code>.",0,[[],["ratio",3]]],[11,"to_integer","","Converts to an integer, rounding towards zero.",0,[[]]],[11,"is_integer","","Returns true if the rational number is an integer …",0,[[],["bool",15]]],[11,"reduced","","Returns a reduced copy of self.",0,[[],["ratio",3]]],[11,"recip","","Returns the reciprocal.",0,[[],["ratio",3]]],[11,"floor","","Rounds towards minus infinity.",0,[[],["ratio",3]]],[11,"ceil","","Rounds towards plus infinity.",0,[[],["ratio",3]]],[11,"round","","Rounds to the nearest integer. Rounds half-way cases away …",0,[[],["ratio",3]]],[11,"trunc","","Rounds towards zero.",0,[[],["ratio",3]]],[11,"fract","","Returns the fractional part of a number, with division …",0,[[],["ratio",3]]],[11,"pow","","Raises the <code>Ratio</code> to the power of an exponent.",0,[[["i32",15]],["ratio",3]]],[3,"ParseRatioError","","",null,null],[11,"approximate_float","","",0,[[["floatcore",8],["numcast",8]],[["option",4],["ratio",3]]]],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"from","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"from","","",0,[[],["ratio",3]]],[11,"from","","",0,[[],["ratio",3]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","Renders as <code>numer/denom</code>. If denom=1, renders as numer.",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"div","","",0,[[["ratio",3]],["ratio",3]]],[11,"div","","",0,[[],["ratio",3]]],[11,"div","","",0,[[["ratio",3]],["ratio",3]]],[11,"div","","",0,[[],["ratio",3]]],[11,"rem","","",0,[[["ratio",3]],["ratio",3]]],[11,"rem","","",0,[[],["ratio",3]]],[11,"rem","","",0,[[["ratio",3]],["ratio",3]]],[11,"rem","","",0,[[],["ratio",3]]],[11,"sub","","",0,[[["ratio",3]],["ratio",3]]],[11,"sub","","",0,[[],["ratio",3]]],[11,"sub","","",0,[[["ratio",3]],["ratio",3]]],[11,"sub","","",0,[[],["ratio",3]]],[11,"eq","","",0,[[],["bool",15]]],[11,"eq","","",1,[[["parseratioerror",3]],["bool",15]]],[11,"ne","","",1,[[["parseratioerror",3]],["bool",15]]],[11,"cmp","","",0,[[],["ordering",4]]],[11,"partial_cmp","","",0,[[],[["option",4],["ordering",4]]]],[11,"add","","",0,[[["ratio",3]],["ratio",3]]],[11,"add","","",0,[[],["ratio",3]]],[11,"add","","",0,[[["ratio",3]],["ratio",3]]],[11,"add","","",0,[[],["ratio",3]]],[11,"mul","","",0,[[["ratio",3]],["ratio",3]]],[11,"mul","","",0,[[],["ratio",3]]],[11,"mul","","",0,[[["ratio",3]],["ratio",3]]],[11,"mul","","",0,[[],["ratio",3]]],[11,"neg","","",0,[[],["ratio",3]]],[11,"add_assign","","",0,[[["ratio",3]]]],[11,"add_assign","","",0,[[]]],[11,"add_assign","","",0,[[["ratio",3]]]],[11,"add_assign","","",0,[[]]],[11,"sub_assign","","",0,[[["ratio",3]]]],[11,"sub_assign","","",0,[[]]],[11,"sub_assign","","",0,[[["ratio",3]]]],[11,"sub_assign","","",0,[[]]],[11,"mul_assign","","",0,[[["ratio",3]]]],[11,"mul_assign","","",0,[[]]],[11,"mul_assign","","",0,[[["ratio",3]]]],[11,"mul_assign","","",0,[[]]],[11,"div_assign","","",0,[[["ratio",3]]]],[11,"div_assign","","",0,[[]]],[11,"div_assign","","",0,[[["ratio",3]]]],[11,"div_assign","","",0,[[]]],[11,"rem_assign","","",0,[[["ratio",3]]]],[11,"rem_assign","","",0,[[]]],[11,"rem_assign","","",0,[[["ratio",3]]]],[11,"rem_assign","","",0,[[]]],[11,"hash","","",0,[[]]],[11,"from_str","","Parses <code>numer/denom</code> or just <code>numer</code>.",0,[[["str",15]],[["ratio",3],["parseratioerror",3],["result",4]]]],[11,"into","","",0,[[]]],[11,"sum","","",0,[[]]],[11,"sum","","",0,[[]]],[11,"product","","",0,[[]]],[11,"product","","",0,[[]]],[11,"clone","","",0,[[],["ratio",3]]],[11,"clone","","",1,[[],["parseratioerror",3]]],[11,"from_i64","","",0,[[["i64",15]],["option",4]]],[11,"from_i128","","",0,[[["i128",15]],["option",4]]],[11,"from_u64","","",0,[[["u64",15]],["option",4]]],[11,"from_u128","","",0,[[["u128",15]],["option",4]]],[11,"from_f32","","",0,[[["f32",15]],["option",4]]],[11,"from_f64","","",0,[[["f64",15]],["option",4]]],[11,"from_i64","","",0,[[["i64",15]],["option",4]]],[11,"from_i128","","",0,[[["i128",15]],["option",4]]],[11,"from_u64","","",0,[[["u64",15]],["option",4]]],[11,"from_u128","","",0,[[["u128",15]],["option",4]]],[11,"from_f32","","",0,[[["f32",15]],["option",4]]],[11,"from_f64","","",0,[[["f64",15]],["option",4]]],[11,"from_i64","","",0,[[["i64",15]],["option",4]]],[11,"from_i128","","",0,[[["i128",15]],["option",4]]],[11,"from_u64","","",0,[[["u64",15]],["option",4]]],[11,"from_u128","","",0,[[["u128",15]],["option",4]]],[11,"from_f32","","",0,[[["f32",15]],["option",4]]],[11,"from_f64","","",0,[[["f64",15]],["option",4]]],[11,"from_i64","","",0,[[["i64",15]],["option",4]]],[11,"from_i128","","",0,[[["i128",15]],["option",4]]],[11,"from_u64","","",0,[[["u64",15]],["option",4]]],[11,"from_u128","","",0,[[["u128",15]],["option",4]]],[11,"from_f32","","",0,[[["f32",15]],["option",4]]],[11,"from_f64","","",0,[[["f64",15]],["option",4]]],[11,"from_i64","","",0,[[["i64",15]],["option",4]]],[11,"from_i128","","",0,[[["i128",15]],["option",4]]],[11,"from_u64","","",0,[[["u64",15]],["option",4]]],[11,"from_u128","","",0,[[["u128",15]],["option",4]]],[11,"from_f32","","",0,[[["f32",15]],["option",4]]],[11,"from_f64","","",0,[[["f64",15]],["option",4]]],[11,"from_i64","","",0,[[["i64",15]],["option",4]]],[11,"from_i128","","",0,[[["i128",15]],["option",4]]],[11,"from_u64","","",0,[[["u64",15]],["option",4]]],[11,"from_u128","","",0,[[["u128",15]],["option",4]]],[11,"from_f32","","",0,[[["f32",15]],["option",4]]],[11,"from_f64","","",0,[[["f64",15]],["option",4]]],[11,"from_i64","","",0,[[["i64",15]],["option",4]]],[11,"from_i128","","",0,[[["i128",15]],["option",4]]],[11,"from_u64","","",0,[[["u64",15]],["option",4]]],[11,"from_u128","","",0,[[["u128",15]],["option",4]]],[11,"from_f32","","",0,[[["f32",15]],["option",4]]],[11,"from_f64","","",0,[[["f64",15]],["option",4]]],[11,"from_i64","","",0,[[["i64",15]],["option",4]]],[11,"from_i128","","",0,[[["i128",15]],["option",4]]],[11,"from_u64","","",0,[[["u64",15]],["option",4]]],[11,"from_u128","","",0,[[["u128",15]],["option",4]]],[11,"from_f32","","",0,[[["f32",15]],["option",4]]],[11,"from_f64","","",0,[[["f64",15]],["option",4]]],[11,"from_i64","","",0,[[["i64",15]],["option",4]]],[11,"from_i128","","",0,[[["i128",15]],["option",4]]],[11,"from_u64","","",0,[[["u64",15]],["option",4]]],[11,"from_u128","","",0,[[["u128",15]],["option",4]]],[11,"from_f32","","",0,[[["f32",15]],["option",4]]],[11,"from_f64","","",0,[[["f64",15]],["option",4]]],[11,"from_i64","","",0,[[["i64",15]],["option",4]]],[11,"from_i128","","",0,[[["i128",15]],["option",4]]],[11,"from_u64","","",0,[[["u64",15]],["option",4]]],[11,"from_u128","","",0,[[["u128",15]],["option",4]]],[11,"from_f32","","",0,[[["f32",15]],["option",4]]],[11,"from_f64","","",0,[[["f64",15]],["option",4]]],[11,"from_i64","","",0,[[["i64",15]],["option",4]]],[11,"from_i128","","",0,[[["i128",15]],["option",4]]],[11,"from_u64","","",0,[[["u64",15]],["option",4]]],[11,"from_u128","","",0,[[["u128",15]],["option",4]]],[11,"from_f32","","",0,[[["f32",15]],["option",4]]],[11,"from_f64","","",0,[[["f64",15]],["option",4]]],[11,"from_i64","","",0,[[["i64",15]],["option",4]]],[11,"from_i128","","",0,[[["i128",15]],["option",4]]],[11,"from_u64","","",0,[[["u64",15]],["option",4]]],[11,"from_u128","","",0,[[["u128",15]],["option",4]]],[11,"from_f32","","",0,[[["f32",15]],["option",4]]],[11,"from_f64","","",0,[[["f64",15]],["option",4]]],[11,"from_str_radix","","Parses <code>numer/denom</code> where the numbers are in base <code>radix</code>.",0,[[["u32",15],["str",15]],[["ratio",3],["parseratioerror",3],["result",4]]]],[11,"zero","","",0,[[],["ratio",3]]],[11,"is_zero","","",0,[[],["bool",15]]],[11,"set_zero","","",0,[[]]],[11,"one","","",0,[[],["ratio",3]]],[11,"is_one","","",0,[[],["bool",15]]],[11,"set_one","","",0,[[]]],[11,"checked_add","","",0,[[["ratio",3]],[["option",4],["ratio",3]]]],[11,"checked_sub","","",0,[[["ratio",3]],[["option",4],["ratio",3]]]],[11,"checked_mul","","",0,[[["ratio",3]],[["option",4],["ratio",3]]]],[11,"checked_div","","",0,[[["ratio",3]],[["option",4],["ratio",3]]]],[11,"inv","","",0,[[],["ratio",3]]],[11,"pow","","",0,[[["i8",15]],["ratio",3]]],[11,"pow","","",0,[[["i8",15]],["ratio",3]]],[11,"pow","","",0,[[["i16",15]],["ratio",3]]],[11,"pow","","",0,[[["i16",15]],["ratio",3]]],[11,"pow","","",0,[[["i32",15]],["ratio",3]]],[11,"pow","","",0,[[["i32",15]],["ratio",3]]],[11,"pow","","",0,[[["i64",15]],["ratio",3]]],[11,"pow","","",0,[[["i64",15]],["ratio",3]]],[11,"pow","","",0,[[["isize",15]],["ratio",3]]],[11,"pow","","",0,[[["isize",15]],["ratio",3]]],[11,"pow","","",0,[[["u8",15]],["ratio",3]]],[11,"pow","","",0,[[["u8",15]],["ratio",3]]],[11,"pow","","",0,[[["u16",15]],["ratio",3]]],[11,"pow","","",0,[[["u16",15]],["ratio",3]]],[11,"pow","","",0,[[["u32",15]],["ratio",3]]],[11,"pow","","",0,[[["u32",15]],["ratio",3]]],[11,"pow","","",0,[[["u64",15]],["ratio",3]]],[11,"pow","","",0,[[["u64",15]],["ratio",3]]],[11,"pow","","",0,[[["usize",15]],["ratio",3]]],[11,"pow","","",0,[[["usize",15]],["ratio",3]]],[11,"abs","","",0,[[],["ratio",3]]],[11,"abs_sub","","",0,[[["ratio",3]],["ratio",3]]],[11,"signum","","",0,[[],["ratio",3]]],[11,"is_positive","","",0,[[],["bool",15]]],[11,"is_negative","","",0,[[],["bool",15]]]],"p":[[3,"Ratio"],[3,"ParseRatioError"]]},\
"num_traits":{"doc":"Numeric traits for generic mathematics","i":[[0,"bounds","num_traits","",null,null],[8,"Bounded","num_traits::bounds","Numbers which have upper and lower bounds",null,null],[10,"min_value","","returns the smallest finite number this type can represent",0,[[]]],[10,"max_value","","returns the largest finite number this type can represent",0,[[]]],[0,"cast","num_traits","",null,null],[8,"ToPrimitive","num_traits::cast","A generic trait for converting a value to a number.",null,null],[11,"to_isize","","Converts the value of <code>self</code> to an <code>isize</code>. If the value …",1,[[],[["option",4],["isize",15]]]],[11,"to_i8","","Converts the value of <code>self</code> to an <code>i8</code>. If the value cannot …",1,[[],[["option",4],["i8",15]]]],[11,"to_i16","","Converts the value of <code>self</code> to an <code>i16</code>. If the value cannot …",1,[[],[["option",4],["i16",15]]]],[11,"to_i32","","Converts the value of <code>self</code> to an <code>i32</code>. If the value cannot …",1,[[],[["i32",15],["option",4]]]],[10,"to_i64","","Converts the value of <code>self</code> to an <code>i64</code>. If the value cannot …",1,[[],[["i64",15],["option",4]]]],[11,"to_i128","","Converts the value of <code>self</code> to an <code>i128</code>. If the value …",1,[[],[["i128",15],["option",4]]]],[11,"to_usize","","Converts the value of <code>self</code> to a <code>usize</code>. If the value …",1,[[],[["usize",15],["option",4]]]],[11,"to_u8","","Converts the value of <code>self</code> to a <code>u8</code>. If the value cannot be…",1,[[],[["option",4],["u8",15]]]],[11,"to_u16","","Converts the value of <code>self</code> to a <code>u16</code>. If the value cannot …",1,[[],[["option",4],["u16",15]]]],[11,"to_u32","","Converts the value of <code>self</code> to a <code>u32</code>. If the value cannot …",1,[[],[["u32",15],["option",4]]]],[10,"to_u64","","Converts the value of <code>self</code> to a <code>u64</code>. If the value cannot …",1,[[],[["option",4],["u64",15]]]],[11,"to_u128","","Converts the value of <code>self</code> to a <code>u128</code>. If the value cannot …",1,[[],[["option",4],["u128",15]]]],[11,"to_f32","","Converts the value of <code>self</code> to an <code>f32</code>. If the value cannot …",1,[[],[["option",4],["f32",15]]]],[11,"to_f64","","Converts the value of <code>self</code> to an <code>f64</code>. If the value cannot …",1,[[],[["f64",15],["option",4]]]],[8,"FromPrimitive","","A generic trait for converting a number to a value.",null,null],[11,"from_isize","","Converts an <code>isize</code> to return an optional value of this …",2,[[["isize",15]],["option",4]]],[11,"from_i8","","Converts an <code>i8</code> to return an optional value of this type. …",2,[[["i8",15]],["option",4]]],[11,"from_i16","","Converts an <code>i16</code> to return an optional value of this type. …",2,[[["i16",15]],["option",4]]],[11,"from_i32","","Converts an <code>i32</code> to return an optional value of this type. …",2,[[["i32",15]],["option",4]]],[10,"from_i64","","Converts an <code>i64</code> to return an optional value of this type. …",2,[[["i64",15]],["option",4]]],[11,"from_i128","","Converts an <code>i128</code> to return an optional value of this …",2,[[["i128",15]],["option",4]]],[11,"from_usize","","Converts a <code>usize</code> to return an optional value of this …",2,[[["usize",15]],["option",4]]],[11,"from_u8","","Converts an <code>u8</code> to return an optional value of this type. …",2,[[["u8",15]],["option",4]]],[11,"from_u16","","Converts an <code>u16</code> to return an optional value of this type. …",2,[[["u16",15]],["option",4]]],[11,"from_u32","","Converts an <code>u32</code> to return an optional value of this type. …",2,[[["u32",15]],["option",4]]],[10,"from_u64","","Converts an <code>u64</code> to return an optional value of this type. …",2,[[["u64",15]],["option",4]]],[11,"from_u128","","Converts an <code>u128</code> to return an optional value of this …",2,[[["u128",15]],["option",4]]],[11,"from_f32","","Converts a <code>f32</code> to return an optional value of this type. …",2,[[["f32",15]],["option",4]]],[11,"from_f64","","Converts a <code>f64</code> to return an optional value of this type. …",2,[[["f64",15]],["option",4]]],[5,"cast","","Cast from one machine scalar to another.",null,[[["numcast",8]],[["numcast",8],["option",4]]]],[8,"NumCast","","An interface for casting between machine scalars.",null,null],[10,"from","","Creates a number from another value that can be converted …",3,[[["toprimitive",8]],["option",4]]],[8,"AsPrimitive","","A generic interface for casting between machine scalars …",null,null],[10,"as_","","Convert a value to another, using the <code>as</code> operator.",4,[[]]],[0,"float","num_traits","",null,null],[8,"FloatCore","num_traits::float","Generic trait for floating point numbers that works with …",null,null],[10,"infinity","","Returns positive infinity.",5,[[]]],[10,"neg_infinity","","Returns negative infinity.",5,[[]]],[10,"nan","","Returns NaN.",5,[[]]],[10,"neg_zero","","Returns <code>-0.0</code>.",5,[[]]],[10,"min_value","","Returns the smallest finite value that this type can …",5,[[]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this …",5,[[]]],[10,"epsilon","","Returns epsilon, a small positive value.",5,[[]]],[10,"max_value","","Returns the largest finite value that this type can …",5,[[]]],[11,"is_nan","","Returns <code>true</code> if the number is NaN.",5,[[],["bool",15]]],[11,"is_infinite","","Returns <code>true</code> if the number is infinite.",5,[[],["bool",15]]],[11,"is_finite","","Returns <code>true</code> if the number is neither infinite or NaN.",5,[[],["bool",15]]],[11,"is_normal","","Returns <code>true</code> if the number is neither zero, infinite, …",5,[[],["bool",15]]],[10,"classify","","Returns the floating point category of the number. If …",5,[[],["fpcategory",4]]],[11,"floor","","Returns the largest integer less than or equal to a …",5,[[]]],[11,"ceil","","Returns the smallest integer greater than or equal to a …",5,[[]]],[11,"round","","Returns the nearest integer to a number. Round half-way …",5,[[]]],[11,"trunc","","Return the integer part of a number.",5,[[]]],[11,"fract","","Returns the fractional part of a number.",5,[[]]],[11,"abs","","Computes the absolute value of <code>self</code>. Returns …",5,[[]]],[11,"signum","","Returns a number that represents the sign of <code>self</code>.",5,[[]]],[11,"is_sign_positive","","Returns <code>true</code> if <code>self</code> is positive, including <code>+0.0</code> and …",5,[[],["bool",15]]],[11,"is_sign_negative","","Returns <code>true</code> if <code>self</code> is negative, including <code>-0.0</code> and …",5,[[],["bool",15]]],[11,"min","","Returns the minimum of the two numbers.",5,[[]]],[11,"max","","Returns the maximum of the two numbers.",5,[[]]],[11,"recip","","Returns the reciprocal (multiplicative inverse) of the …",5,[[]]],[11,"powi","","Raise a number to an integer power.",5,[[["i32",15]]]],[10,"to_degrees","","Converts to degrees, assuming the number is in radians.",5,[[]]],[10,"to_radians","","Converts to radians, assuming the number is in degrees.",5,[[]]],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as …",5,[[]]],[8,"Float","","Generic trait for floating point numbers",null,null],[10,"nan","","Returns the <code>NaN</code> value.",6,[[]]],[10,"infinity","","Returns the infinite value.",6,[[]]],[10,"neg_infinity","","Returns the negative infinite value.",6,[[]]],[10,"neg_zero","","Returns <code>-0.0</code>.",6,[[]]],[10,"min_value","","Returns the smallest finite value that this type can …",6,[[]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this …",6,[[]]],[11,"epsilon","","Returns epsilon, a small positive value.",6,[[]]],[10,"max_value","","Returns the largest finite value that this type can …",6,[[]]],[10,"is_nan","","Returns <code>true</code> if this value is <code>NaN</code> and false otherwise.",6,[[],["bool",15]]],[10,"is_infinite","","Returns <code>true</code> if this value is positive infinity or …",6,[[],["bool",15]]],[10,"is_finite","","Returns <code>true</code> if this number is neither infinite nor <code>NaN</code>.",6,[[],["bool",15]]],[10,"is_normal","","Returns <code>true</code> if the number is neither zero, infinite, …",6,[[],["bool",15]]],[10,"classify","","Returns the floating point category of the number. If …",6,[[],["fpcategory",4]]],[10,"floor","","Returns the largest integer less than or equal to a …",6,[[]]],[10,"ceil","","Returns the smallest integer greater than or equal to a …",6,[[]]],[10,"round","","Returns the nearest integer to a number. Round half-way …",6,[[]]],[10,"trunc","","Return the integer part of a number.",6,[[]]],[10,"fract","","Returns the fractional part of a number.",6,[[]]],[10,"abs","","Computes the absolute value of <code>self</code>. Returns <code>Float::nan()</code> …",6,[[]]],[10,"signum","","Returns a number that represents the sign of <code>self</code>.",6,[[]]],[10,"is_sign_positive","","Returns <code>true</code> if <code>self</code> is positive, including <code>+0.0</code>, …",6,[[],["bool",15]]],[10,"is_sign_negative","","Returns <code>true</code> if <code>self</code> is negative, including <code>-0.0</code>, …",6,[[],["bool",15]]],[10,"mul_add","","Fused multiply-add. Computes <code>(self * a) + b</code> with only one …",6,[[]]],[10,"recip","","Take the reciprocal (inverse) of a number, <code>1/x</code>.",6,[[]]],[10,"powi","","Raise a number to an integer power.",6,[[["i32",15]]]],[10,"powf","","Raise a number to a floating point power.",6,[[]]],[10,"sqrt","","Take the square root of a number.",6,[[]]],[10,"exp","","Returns <code>e^(self)</code>, (the exponential function).",6,[[]]],[10,"exp2","","Returns <code>2^(self)</code>.",6,[[]]],[10,"ln","","Returns the natural logarithm of the number.",6,[[]]],[10,"log","","Returns the logarithm of the number with respect to an …",6,[[]]],[10,"log2","","Returns the base 2 logarithm of the number.",6,[[]]],[10,"log10","","Returns the base 10 logarithm of the number.",6,[[]]],[11,"to_degrees","","Converts radians to degrees.",6,[[]]],[11,"to_radians","","Converts degrees to radians.",6,[[]]],[10,"max","","Returns the maximum of the two numbers.",6,[[]]],[10,"min","","Returns the minimum of the two numbers.",6,[[]]],[10,"abs_sub","","The positive difference of two numbers.",6,[[]]],[10,"cbrt","","Take the cubic root of a number.",6,[[]]],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle …",6,[[]]],[10,"sin","","Computes the sine of a number (in radians).",6,[[]]],[10,"cos","","Computes the cosine of a number (in radians).",6,[[]]],[10,"tan","","Computes the tangent of a number (in radians).",6,[[]]],[10,"asin","","Computes the arcsine of a number. Return value is in …",6,[[]]],[10,"acos","","Computes the arccosine of a number. Return value is in …",6,[[]]],[10,"atan","","Computes the arctangent of a number. Return value is in …",6,[[]]],[10,"atan2","","Computes the four quadrant arctangent of <code>self</code> (<code>y</code>) and …",6,[[]]],[10,"sin_cos","","Simultaneously computes the sine and cosine of the …",6,[[]]],[10,"exp_m1","","Returns <code>e^(self) - 1</code> in a way that is accurate even if the…",6,[[]]],[10,"ln_1p","","Returns <code>ln(1+n)</code> (natural logarithm) more accurately than …",6,[[]]],[10,"sinh","","Hyperbolic sine function.",6,[[]]],[10,"cosh","","Hyperbolic cosine function.",6,[[]]],[10,"tanh","","Hyperbolic tangent function.",6,[[]]],[10,"asinh","","Inverse hyperbolic sine function.",6,[[]]],[10,"acosh","","Inverse hyperbolic cosine function.",6,[[]]],[10,"atanh","","Inverse hyperbolic tangent function.",6,[[]]],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as …",6,[[]]],[8,"FloatConst","","",null,null],[10,"E","","Return Euler’s number.",7,[[]]],[10,"FRAC_1_PI","","Return <code>1.0 / π</code>.",7,[[]]],[10,"FRAC_1_SQRT_2","","Return <code>1.0 / sqrt(2.0)</code>.",7,[[]]],[10,"FRAC_2_PI","","Return <code>2.0 / π</code>.",7,[[]]],[10,"FRAC_2_SQRT_PI","","Return <code>2.0 / sqrt(π)</code>.",7,[[]]],[10,"FRAC_PI_2","","Return <code>π / 2.0</code>.",7,[[]]],[10,"FRAC_PI_3","","Return <code>π / 3.0</code>.",7,[[]]],[10,"FRAC_PI_4","","Return <code>π / 4.0</code>.",7,[[]]],[10,"FRAC_PI_6","","Return <code>π / 6.0</code>.",7,[[]]],[10,"FRAC_PI_8","","Return <code>π / 8.0</code>.",7,[[]]],[10,"LN_10","","Return <code>ln(10.0)</code>.",7,[[]]],[10,"LN_2","","Return <code>ln(2.0)</code>.",7,[[]]],[10,"LOG10_E","","Return <code>log10(e)</code>.",7,[[]]],[10,"LOG2_E","","Return <code>log2(e)</code>.",7,[[]]],[10,"PI","","Return Archimedes’ constant <code>π</code>.",7,[[]]],[10,"SQRT_2","","Return <code>sqrt(2.0)</code>.",7,[[]]],[11,"TAU","","Return the full circle constant <code>τ</code>.",7,[[]]],[0,"identities","num_traits","",null,null],[8,"Zero","num_traits::identities","Defines an additive identity element for <code>Self</code>.",null,null],[10,"zero","","Returns the additive identity element of <code>Self</code>, <code>0</code>.",8,[[]]],[11,"set_zero","","Sets <code>self</code> to the additive identity element of <code>Self</code>, <code>0</code>.",8,[[]]],[10,"is_zero","","Returns <code>true</code> if <code>self</code> is equal to the additive identity.",8,[[],["bool",15]]],[8,"One","","Defines a multiplicative identity element for <code>Self</code>.",null,null],[10,"one","","Returns the multiplicative identity element of <code>Self</code>, <code>1</code>.",9,[[]]],[11,"set_one","","Sets <code>self</code> to the multiplicative identity element of <code>Self</code>, …",9,[[]]],[11,"is_one","","Returns <code>true</code> if <code>self</code> is equal to the multiplicative …",9,[[],["bool",15]]],[5,"zero","","Returns the additive identity, <code>0</code>.",null,[[],["zero",8]]],[5,"one","","Returns the multiplicative identity, <code>1</code>.",null,[[],["one",8]]],[0,"int","num_traits","",null,null],[8,"PrimInt","num_traits::int","Generic trait for primitive integers.",null,null],[10,"count_ones","","Returns the number of ones in the binary representation …",10,[[],["u32",15]]],[10,"count_zeros","","Returns the number of zeros in the binary representation …",10,[[],["u32",15]]],[10,"leading_zeros","","Returns the number of leading zeros in the binary …",10,[[],["u32",15]]],[10,"trailing_zeros","","Returns the number of trailing zeros in the binary …",10,[[],["u32",15]]],[10,"rotate_left","","Shifts the bits to the left by a specified amount amount, …",10,[[["u32",15]]]],[10,"rotate_right","","Shifts the bits to the right by a specified amount …",10,[[["u32",15]]]],[10,"signed_shl","","Shifts the bits to the left by a specified amount amount, …",10,[[["u32",15]]]],[10,"signed_shr","","Shifts the bits to the right by a specified amount …",10,[[["u32",15]]]],[10,"unsigned_shl","","Shifts the bits to the left by a specified amount amount, …",10,[[["u32",15]]]],[10,"unsigned_shr","","Shifts the bits to the right by a specified amount …",10,[[["u32",15]]]],[10,"swap_bytes","","Reverses the byte order of the integer.",10,[[]]],[10,"from_be","","Convert an integer from big endian to the target\'s …",10,[[]]],[10,"from_le","","Convert an integer from little endian to the target\'s …",10,[[]]],[10,"to_be","","Convert <code>self</code> to big endian from the target\'s endianness.",10,[[]]],[10,"to_le","","Convert <code>self</code> to little endian from the target\'s …",10,[[]]],[10,"pow","","Raises self to the power of <code>exp</code>, using exponentiation by …",10,[[["u32",15]]]],[0,"ops","num_traits","",null,null],[0,"checked","num_traits::ops","",null,null],[8,"CheckedAdd","num_traits::ops::checked","Performs addition that returns <code>None</code> instead of wrapping …",null,null],[10,"checked_add","","Adds two numbers, checking for overflow. If overflow …",11,[[],["option",4]]],[8,"CheckedSub","","Performs subtraction that returns <code>None</code> instead of …",null,null],[10,"checked_sub","","Subtracts two numbers, checking for underflow. If …",12,[[],["option",4]]],[8,"CheckedMul","","Performs multiplication that returns <code>None</code> instead of …",null,null],[10,"checked_mul","","Multiplies two numbers, checking for underflow or …",13,[[],["option",4]]],[8,"CheckedDiv","","Performs division that returns <code>None</code> instead of panicking …",null,null],[10,"checked_div","","Divides two numbers, checking for underflow, overflow and …",14,[[],["option",4]]],[8,"CheckedRem","","Performs an integral remainder that returns <code>None</code> instead …",null,null],[10,"checked_rem","","Finds the remainder of dividing two numbers, checking for …",15,[[],["option",4]]],[8,"CheckedNeg","","Performs negation that returns <code>None</code> if the result can\'t …",null,null],[10,"checked_neg","","Negates a number, returning <code>None</code> for results that can\'t …",16,[[],["option",4]]],[8,"CheckedShl","","Performs a left shift that returns <code>None</code> on shifts larger …",null,null],[10,"checked_shl","","Checked shift left. Computes <code>self << rhs</code>, returning <code>None</code> …",17,[[["u32",15]],["option",4]]],[8,"CheckedShr","","Performs a right shift that returns <code>None</code> on shifts larger …",null,null],[10,"checked_shr","","Checked shift right. Computes <code>self >> rhs</code>, returning <code>None</code> …",18,[[["u32",15]],["option",4]]],[0,"inv","num_traits::ops","",null,null],[8,"Inv","num_traits::ops::inv","Unary operator for retrieving the multiplicative inverse, …",null,null],[16,"Output","","The result after applying the operator.",19,null],[10,"inv","","Returns the multiplicative inverse of <code>self</code>.",19,[[]]],[0,"mul_add","num_traits::ops","",null,null],[8,"MulAdd","num_traits::ops::mul_add","Fused multiply-add. Computes <code>(self * a) + b</code> with only one …",null,null],[16,"Output","","The resulting type after applying the fused multiply-add.",20,null],[10,"mul_add","","Performs the fused multiply-add operation.",20,[[]]],[8,"MulAddAssign","","The fused multiply-add assignment operation.",null,null],[10,"mul_add_assign","","Performs the fused multiply-add operation.",21,[[]]],[0,"saturating","num_traits::ops","",null,null],[8,"Saturating","num_traits::ops::saturating","Saturating math operations",null,null],[10,"saturating_add","","Saturating addition operator. Returns a+b, saturating at …",22,[[]]],[10,"saturating_sub","","Saturating subtraction operator. Returns a-b, saturating …",22,[[]]],[0,"wrapping","num_traits::ops","",null,null],[8,"WrappingAdd","num_traits::ops::wrapping","Performs addition that wraps around on overflow.",null,null],[10,"wrapping_add","","Wrapping (modular) addition. Computes <code>self + other</code>, …",23,[[]]],[8,"WrappingSub","","Performs subtraction that wraps around on overflow.",null,null],[10,"wrapping_sub","","Wrapping (modular) subtraction. Computes <code>self - other</code>, …",24,[[]]],[8,"WrappingMul","","Performs multiplication that wraps around on overflow.",null,null],[10,"wrapping_mul","","Wrapping (modular) multiplication. Computes <code>self * other</code>, …",25,[[]]],[8,"WrappingShl","","Performs a left shift that does not panic.",null,null],[10,"wrapping_shl","","Panic-free bitwise shift-left; yields <code>self << mask(rhs)</code>, …",26,[[["u32",15]]]],[8,"WrappingShr","","Performs a right shift that does not panic.",null,null],[10,"wrapping_shr","","Panic-free bitwise shift-right; yields <code>self >> mask(rhs)</code>, …",27,[[["u32",15]]]],[0,"pow","num_traits","",null,null],[8,"Pow","num_traits::pow","Binary operator for raising a value to a power.",null,null],[16,"Output","","The result after applying the operator.",28,null],[10,"pow","","Returns <code>self</code> to the power <code>rhs</code>.",28,[[]]],[5,"pow","","Raises a value to the power of exp, using exponentiation …",null,[[["one",8],["usize",15],["mul",8],["clone",8]],[["one",8],["mul",8],["clone",8]]]],[5,"checked_pow","","Raises a value to the power of exp, returning <code>None</code> if an …",null,[[["one",8],["usize",15],["checkedmul",8],["clone",8]],[["one",8],["checkedmul",8],["option",4],["clone",8]]]],[0,"real","num_traits","",null,null],[8,"Real","num_traits::real","A trait for real number types that do not necessarily have…",null,null],[10,"min_value","","Returns the smallest finite value that this type can …",29,[[]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this …",29,[[]]],[10,"epsilon","","Returns epsilon, a small positive value.",29,[[]]],[10,"max_value","","Returns the largest finite value that this type can …",29,[[]]],[10,"floor","","Returns the largest integer less than or equal to a …",29,[[]]],[10,"ceil","","Returns the smallest integer greater than or equal to a …",29,[[]]],[10,"round","","Returns the nearest integer to a number. Round half-way …",29,[[]]],[10,"trunc","","Return the integer part of a number.",29,[[]]],[10,"fract","","Returns the fractional part of a number.",29,[[]]],[10,"abs","","Computes the absolute value of <code>self</code>. Returns <code>Float::nan()</code> …",29,[[]]],[10,"signum","","Returns a number that represents the sign of <code>self</code>.",29,[[]]],[10,"is_sign_positive","","Returns <code>true</code> if <code>self</code> is positive, including <code>+0.0</code>, …",29,[[],["bool",15]]],[10,"is_sign_negative","","Returns <code>true</code> if <code>self</code> is negative, including <code>-0.0</code>, …",29,[[],["bool",15]]],[10,"mul_add","","Fused multiply-add. Computes <code>(self * a) + b</code> with only one …",29,[[]]],[10,"recip","","Take the reciprocal (inverse) of a number, <code>1/x</code>.",29,[[]]],[10,"powi","","Raise a number to an integer power.",29,[[["i32",15]]]],[10,"powf","","Raise a number to a real number power.",29,[[]]],[10,"sqrt","","Take the square root of a number.",29,[[]]],[10,"exp","","Returns <code>e^(self)</code>, (the exponential function).",29,[[]]],[10,"exp2","","Returns <code>2^(self)</code>.",29,[[]]],[10,"ln","","Returns the natural logarithm of the number.",29,[[]]],[10,"log","","Returns the logarithm of the number with respect to an …",29,[[]]],[10,"log2","","Returns the base 2 logarithm of the number.",29,[[]]],[10,"log10","","Returns the base 10 logarithm of the number.",29,[[]]],[10,"to_degrees","","Converts radians to degrees.",29,[[]]],[10,"to_radians","","Converts degrees to radians.",29,[[]]],[10,"max","","Returns the maximum of the two numbers.",29,[[]]],[10,"min","","Returns the minimum of the two numbers.",29,[[]]],[10,"abs_sub","","The positive difference of two numbers.",29,[[]]],[10,"cbrt","","Take the cubic root of a number.",29,[[]]],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle …",29,[[]]],[10,"sin","","Computes the sine of a number (in radians).",29,[[]]],[10,"cos","","Computes the cosine of a number (in radians).",29,[[]]],[10,"tan","","Computes the tangent of a number (in radians).",29,[[]]],[10,"asin","","Computes the arcsine of a number. Return value is in …",29,[[]]],[10,"acos","","Computes the arccosine of a number. Return value is in …",29,[[]]],[10,"atan","","Computes the arctangent of a number. Return value is in …",29,[[]]],[10,"atan2","","Computes the four quadrant arctangent of <code>self</code> (<code>y</code>) and …",29,[[]]],[10,"sin_cos","","Simultaneously computes the sine and cosine of the …",29,[[]]],[10,"exp_m1","","Returns <code>e^(self) - 1</code> in a way that is accurate even if the…",29,[[]]],[10,"ln_1p","","Returns <code>ln(1+n)</code> (natural logarithm) more accurately than …",29,[[]]],[10,"sinh","","Hyperbolic sine function.",29,[[]]],[10,"cosh","","Hyperbolic cosine function.",29,[[]]],[10,"tanh","","Hyperbolic tangent function.",29,[[]]],[10,"asinh","","Inverse hyperbolic sine function.",29,[[]]],[10,"acosh","","Inverse hyperbolic cosine function.",29,[[]]],[10,"atanh","","Inverse hyperbolic tangent function.",29,[[]]],[0,"sign","num_traits","",null,null],[8,"Signed","num_traits::sign","Useful functions for signed numbers (i.e. numbers that …",null,null],[10,"abs","","Computes the absolute value.",30,[[]]],[10,"abs_sub","","The positive difference of two numbers.",30,[[]]],[10,"signum","","Returns the sign of the number.",30,[[]]],[10,"is_positive","","Returns true if the number is positive and false if the …",30,[[],["bool",15]]],[10,"is_negative","","Returns true if the number is negative and false if the …",30,[[],["bool",15]]],[5,"abs","","Computes the absolute value.",null,[[["signed",8]],["signed",8]]],[5,"abs_sub","","The positive difference of two numbers.",null,[[["signed",8]],["signed",8]]],[5,"signum","","Returns the sign of the number.",null,[[["signed",8]],["signed",8]]],[8,"Unsigned","","A trait for values which cannot be negative",null,null],[8,"Num","num_traits","The base trait for numeric types, covering <code>0</code> and <code>1</code> values,…",null,null],[16,"FromStrRadixErr","","",31,null],[10,"from_str_radix","","Convert from a string and radix <= 36.",31,[[["u32",15],["str",15]],["result",4]]],[8,"NumOps","","The trait for types implementing basic numeric operations",null,null],[8,"NumRef","","The trait for <code>Num</code> types which also implement numeric …",null,null],[8,"RefNum","","The trait for references which implement numeric …",null,null],[8,"NumAssignOps","","The trait for types implementing numeric assignment …",null,null],[8,"NumAssign","","The trait for <code>Num</code> types which also implement assignment …",null,null],[8,"NumAssignRef","","The trait for <code>NumAssign</code> types which also implement …",null,null],[4,"FloatErrorKind","","",null,null],[13,"Empty","","",32,null],[13,"Invalid","","",32,null],[3,"ParseFloatError","","",null,null],[12,"kind","","",33,null],[5,"clamp","","A value bounded by a minimum and a maximum",null,[[["partialord",8]],["partialord",8]]],[5,"clamp_min","","A value bounded by a minimum value",null,[[["partialord",8]],["partialord",8]]],[5,"clamp_max","","A value bounded by a maximum value",null,[[["partialord",8]],["partialord",8]]],[11,"from","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"into","","",32,[[]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"from","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"into","","",33,[[]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"to_string","","",33,[[],["string",3]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]]],"p":[[8,"Bounded"],[8,"ToPrimitive"],[8,"FromPrimitive"],[8,"NumCast"],[8,"AsPrimitive"],[8,"FloatCore"],[8,"Float"],[8,"FloatConst"],[8,"Zero"],[8,"One"],[8,"PrimInt"],[8,"CheckedAdd"],[8,"CheckedSub"],[8,"CheckedMul"],[8,"CheckedDiv"],[8,"CheckedRem"],[8,"CheckedNeg"],[8,"CheckedShl"],[8,"CheckedShr"],[8,"Inv"],[8,"MulAdd"],[8,"MulAddAssign"],[8,"Saturating"],[8,"WrappingAdd"],[8,"WrappingSub"],[8,"WrappingMul"],[8,"WrappingShl"],[8,"WrappingShr"],[8,"Pow"],[8,"Real"],[8,"Signed"],[8,"Num"],[4,"FloatErrorKind"],[3,"ParseFloatError"]]},\
"opengl_graphics":{"doc":"An OpenGL back-end for Rust-Graphics","i":[[0,"shader_utils","opengl_graphics","Helper functions for dealing with shaders.",null,null],[3,"DynamicAttribute","opengl_graphics::shader_utils","Describes a shader attribute.",null,null],[11,"xyz","","Create XYZ vertex attribute.",0,[[["gluint",6],["str",15]],[["result",4],["dynamicattribute",3],["string",3]]]],[11,"xy","","Create XY vertex attribute.",0,[[["gluint",6],["str",15]],[["result",4],["dynamicattribute",3],["string",3]]]],[11,"rgb","","Create RGB color attribute.",0,[[["gluint",6],["str",15]],[["result",4],["dynamicattribute",3],["string",3]]]],[11,"rgba","","Create RGBA color attribute.",0,[[["gluint",6],["str",15]],[["result",4],["dynamicattribute",3],["string",3]]]],[11,"uv","","Create texture coordinate attribute.",0,[[["gluint",6],["str",15]],[["result",4],["dynamicattribute",3],["string",3]]]],[11,"set","","Sets attribute data.",0,[[]]],[5,"compile_shader","","Compiles a shader.",null,[[["glenum",6],["str",15]],[["result",4],["gluint",6],["string",3]]]],[5,"attribute_location","","Finds attribute location from a program.",null,[[["gluint",6],["str",15]],[["result",4],["gluint",6],["string",3]]]],[5,"uniform_location","","Finds uniform location from a program.",null,[[["gluint",6],["str",15]],[["result",4],["gluint",6],["string",3]]]],[0,"error","opengl_graphics","Errors",null,null],[4,"Error","opengl_graphics::error","An enum to represent various possible run-time errors …",null,null],[13,"IoError","","An error happened with I/O.",1,null],[0,"shader_uniforms","opengl_graphics","Types and methods for setting shader uniforms",null,null],[3,"ShaderUniform","opengl_graphics::shader_uniforms","Describes a shader uniform of a given type.",null,null],[8,"UniformType","","Shader uniform type",null,null],[3,"SUFloat","","Shader uniform float",null,null],[3,"SUInt","","Shader uniform integer",null,null],[3,"SUVec2","","Shader uniform vector of size 2 Vector elements are floats",null,null],[3,"SUVec3","","Shader uniform vector of size 3 Vector elements are floats",null,null],[3,"SUVec4","","Shader uniform vector of size 4 Vector elements are floats",null,null],[3,"SUMat2x2","","Shader uniform 2x2 matrix Matrix elements are floats",null,null],[3,"SUMat3x3","","Shader uniform 3x3 matrix Matrix elements are floats",null,null],[3,"SUMat4x4","","Shader uniform 4x4 matrix Matrix elements are floats",null,null],[11,"set","","Set the value of the float uniform.",2,[[["f32",15],["glgraphics",3]]]],[11,"set","","Set the value of the integer uniform.",2,[[["i32",15],["glgraphics",3]]]],[11,"set","","Set the value of the vector 2 uniform.",2,[[["glgraphics",3]]]],[11,"set","","Set the value of the vector 3 uniform.",2,[[["glgraphics",3]]]],[11,"set","","Set the value of the vector 4 uniform.",2,[[["glgraphics",3]]]],[11,"set","","Set the value of the 2x2 matrix uniform.",2,[[["glgraphics",3]]]],[11,"set","","Set the value of the 3x3 matrix uniform.",2,[[["glgraphics",3]]]],[11,"set","","Set the value of the 4x4 matrix uniform.",2,[[["glgraphics",3]]]],[4,"OpenGL","opengl_graphics","",null,null],[13,"V2_0","","",3,null],[13,"V2_1","","",3,null],[13,"V3_0","","",3,null],[13,"V3_1","","",3,null],[13,"V3_2","","",3,null],[13,"V3_3","","",3,null],[13,"V4_0","","",3,null],[13,"V4_1","","",3,null],[13,"V4_2","","",3,null],[13,"V4_3","","",3,null],[13,"V4_4","","",3,null],[13,"V4_5","","",3,null],[3,"Shaders","","Shader picker.",null,null],[4,"GLSL","","For OpenGL version 3.3 and above, the GLSL version is the …",null,null],[13,"V1_10","","",4,null],[13,"V1_20","","",4,null],[13,"V1_30","","",4,null],[13,"V1_40","","",4,null],[13,"V1_50","","",4,null],[13,"V3_30","","",4,null],[13,"V4_00","","",4,null],[13,"V4_10","","",4,null],[13,"V4_20","","",4,null],[13,"V4_30","","",4,null],[13,"V4_40","","",4,null],[13,"V4_50","","",4,null],[3,"Colored","","Describes how to render colored objects.",null,null],[3,"Textured","","Describes how to render textured objects.",null,null],[3,"GlGraphics","","Contains OpenGL data.",null,null],[3,"Texture","","Wraps OpenGL texture data. The texture gets deleted when …",null,null],[0,"ops","","Image operations for textures.",null,null],[5,"flip_vertical","opengl_graphics::ops","Flips the image vertically.",null,[[["u8",15]],[["u8",15],["global",3],["vec",3]]]],[5,"alpha_to_rgba8","","Converts from alpha to rgba8.",null,[[],[["u8",15],["global",3],["vec",3]]]],[8,"ImageSize","opengl_graphics","Implemented by all images to be used with generic …",null,null],[10,"get_size","","Get the image size.",5,[[]]],[11,"get_width","","Gets the image width.",5,[[],["u32",15]]],[11,"get_height","","Gets the image height.",5,[[],["u32",15]]],[3,"TextureSettings","","Texture creation parameters.",null,null],[4,"Format","","Texture format.",null,null],[13,"Rgba8","","<code>(red, green, blue, alpha)</code> with values 0-255.",6,null],[8,"CreateTexture","","Implemented by textures for creation.",null,null],[16,"Error","","The error when creating texture.",7,null],[10,"create","","Create texture from memory.",7,[[["format",4],["texturesettings",3]],["result",4]]],[8,"UpdateTexture","","Implemented by textures for updating.",null,null],[16,"Error","","The error when updating texture.",8,null],[10,"update","","Update the texture.",8,[[["format",4]],["result",4]]],[4,"Filter","","Sampling filter",null,null],[13,"Linear","","A Weighted Linear Blend",9,null],[13,"Nearest","","Nearest Texel",9,null],[6,"GlyphCache","","Glyph cache implementation for OpenGL backend.",null,null],[11,"from","opengl_graphics::shader_utils","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","opengl_graphics::error","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","opengl_graphics::shader_uniforms","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","opengl_graphics","",18,[[]]],[11,"into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"partial_cmp","","",3,[[["opengl",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",4,[[["glsl",4]],[["option",4],["ordering",4]]]],[11,"pick_shader","","",4,[[["shaders",3]],["option",4]]],[11,"clone","","",4,[[],["glsl",4]]],[11,"clone","","",3,[[],["opengl",4]]],[11,"from_str","","",3,[[["str",15]],[["result",4],["opengl",4]]]],[11,"from_str","","",4,[[["str",15]],[["result",4],["glsl",4]]]],[11,"fmt","","",3,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",4,[[["formatter",3]],[["error",3],["result",4]]]],[11,"eq","","",4,[[["glsl",4]],["bool",15]]],[11,"eq","","",3,[[["opengl",4]],["bool",15]]],[11,"cmp","","",3,[[["opengl",4]],["ordering",4]]],[11,"cmp","","",4,[[["glsl",4]],["ordering",4]]],[11,"clone","","",6,[[],["format",4]]],[11,"clone","","",9,[[],["filter",4]]],[11,"clone","","",23,[[],["texturesettings",3]]],[11,"fmt","","",9,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",6,[[["formatter",3]],[["error",3],["result",4]]]],[11,"drop","opengl_graphics::shader_utils","",0,[[]]],[11,"drop","opengl_graphics","",18,[[]]],[11,"drop","","",19,[[]]],[11,"drop","","",21,[[]]],[11,"from","opengl_graphics::error","",1,[[["error",3]],["error",4]]],[11,"clone","opengl_graphics::shader_uniforms","",2,[[],["shaderuniform",3]]],[11,"clone","","",10,[[],["sufloat",3]]],[11,"clone","","",11,[[],["suint",3]]],[11,"clone","","",12,[[],["suvec2",3]]],[11,"clone","","",13,[[],["suvec3",3]]],[11,"clone","","",14,[[],["suvec4",3]]],[11,"clone","","",15,[[],["sumat2x2",3]]],[11,"clone","","",16,[[],["sumat3x3",3]]],[11,"clone","","",17,[[],["sumat4x4",3]]],[11,"fmt","opengl_graphics::error","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"clear_color","opengl_graphics","",20,[[]]],[11,"clear_stencil","","",20,[[["u8",15]]]],[11,"tri_list","","",20,[[["drawstate",3]]]],[11,"tri_list_uv","","",20,[[["drawstate",3],["texture",3]]]],[11,"get_size","","",21,[[]]],[11,"create","","",21,[[["into",8],["format",4],["texturesettings",3]],["result",4]]],[11,"update","","",21,[[["into",8],["format",4]],["result",4]]],[11,"get_uniform","","Try to get uniform from the current shader of a given …",20,[[["str",15]],[["shaderuniform",3],["option",4]]]],[11,"new","","Generate using pass-through shaders.",18,[[["glsl",4]]]],[11,"from_vs_fs","","Generate using custom vertex and fragment shaders.",18,[[["glsl",4],["shaders",3]],[["string",3],["result",4]]]],[11,"new","","Generate using pass-through shaders.",19,[[["glsl",4]]]],[11,"from_vs_fs","","Generate using custom vertex and fragment shaders.",19,[[["glsl",4],["shaders",3]],[["string",3],["result",4]]]],[11,"new","","Creates a new OpenGL back-end.",20,[[["opengl",4]]]],[11,"from_colored_textured","","Create a new OpenGL back-end with <code>Colored</code> and <code>Textured</code> …",20,[[["colored",3],["textured",3]]]],[11,"viewport","","Sets viewport with normalized coordinates and center as …",20,[[["i32",15]]]],[11,"get_current_program","","Returns the current program",20,[[],[["option",4],["gluint",6]]]],[11,"use_program","","Sets the current program only if the program is not in …",20,[[["gluint",6]]]],[11,"clear_program","","Unset the current program.",20,[[]]],[11,"use_draw_state","","Sets the current draw state, by detecting changes.",20,[[["drawstate",3]]]],[11,"clear_draw_state","","Unsets the current draw state.",20,[[]]],[11,"draw_begin","","Setup that should be called at the start of a frame\'s …",20,[[["viewport",3]],["context",3]]],[11,"draw_end","","Finalize the frame\'s draw calls.",20,[[]]],[11,"draw","","Convenience for wrapping draw calls with the begin and …",20,[[["viewport",3]]]],[11,"has_texture_alpha","","Assume all textures has alpha channel for now.",20,[[["texture",3]],["bool",15]]],[11,"new","","Creates a new texture.",21,[[["u32",15],["gluint",6]]]],[11,"get_id","","Gets the OpenGL id of the texture.",21,[[],["gluint",6]]],[11,"empty","","Returns empty texture.",21,[[["texturesettings",3]],[["string",3],["result",4]]]],[11,"from_memory_alpha","","Loads image from memory, the format is 8-bit greyscale.",21,[[["u32",15],["texturesettings",3]],[["string",3],["result",4]]]],[11,"from_path","","Loads image by relative file name to the asset root.",21,[[["texturesettings",3]],[["string",3],["result",4]]]],[11,"from_image","","Creates a texture from image.",21,[[["texturesettings",3],["rgbaimage",6]]]],[11,"update","","Updates image with a new one.",21,[[["rgbaimage",6]]]],[11,"get_major_minor","","Gets the minor version of OpenGL.",3,[[]]],[11,"to_glsl","","Gets GLSL version associated with OpenGL.",3,[[],["glsl",4]]],[11,"new","","Creates a new shader picker.",22,[[],["shaders",3]]],[11,"set","","Sets source for a shader version.",22,[[],["shaders",3]]],[11,"get","","Get the closest shader to a shader version.",22,[[],["option",4]]],[11,"to_opengl","","Gets OpenGL version associated with GLSL.",4,[[],["opengl",4]]],[11,"new","","Create default settings.",23,[[],["texturesettings",3]]],[11,"get_convert_gamma","","Gets whether to convert gamma, treated as sRGB color …",23,[[],["bool",15]]],[11,"set_convert_gamma","","Sets convert gamma.",23,[[["bool",15]]]],[11,"convert_gamma","","Sets convert gamma.",23,[[["bool",15]],["texturesettings",3]]],[11,"get_compress","","Gets wheter compress on the GPU.",23,[[],["bool",15]]],[11,"set_compress","","Sets compress.",23,[[["bool",15]]]],[11,"compress","","Sets compress.",23,[[["bool",15]],["texturesettings",3]]],[11,"get_generate_mipmap","","Gets generate mipmap.",23,[[],["bool",15]]],[11,"set_generate_mipmap","","Sets generate mipmap.",23,[[["bool",15]]]],[11,"generate_mipmap","","Sets generate mipmap.",23,[[["bool",15]],["texturesettings",3]]],[11,"get_min","","Gets minify filter.",23,[[],["filter",4]]],[11,"set_min","","Sets minify filter.",23,[[["filter",4]]]],[11,"min","","Sets minify filter.",23,[[["filter",4]],["texturesettings",3]]],[11,"get_mag","","Gets magnify filter",23,[[],["filter",4]]],[11,"set_mag","","Sets magnify filter",23,[[["filter",4]]]],[11,"mag","","Sets magnify filter",23,[[["filter",4]],["texturesettings",3]]],[11,"get_mipmap","","Gets minify mipmap filter",23,[[],["filter",4]]],[11,"set_mipmap","","Sets magnify mipmap filter, and sets generate_mipmap to …",23,[[["filter",4]]]],[11,"mipmap","","Sets magnify mipmap filter, and sets generate_mipmap to …",23,[[["filter",4]],["texturesettings",3]]],[11,"get_filter","","Returns the min and mag filter",23,[[]]],[11,"set_filter","","Sets the min and mag filter",23,[[["filter",4]]]],[11,"filter","","Sets the min and mag filter",23,[[["filter",4]],["texturesettings",3]]]],"p":[[3,"DynamicAttribute"],[4,"Error"],[3,"ShaderUniform"],[4,"OpenGL"],[4,"GLSL"],[8,"ImageSize"],[4,"Format"],[8,"CreateTexture"],[8,"UpdateTexture"],[4,"Filter"],[3,"SUFloat"],[3,"SUInt"],[3,"SUVec2"],[3,"SUVec3"],[3,"SUVec4"],[3,"SUMat2x2"],[3,"SUMat3x3"],[3,"SUMat4x4"],[3,"Colored"],[3,"Textured"],[3,"GlGraphics"],[3,"Texture"],[3,"Shaders"],[3,"TextureSettings"]]},\
"piston":{"doc":"A modular game engine written in Rust.","i":[],"p":[]},\
"png":{"doc":"PNG encoder and decoderThis crate contains a PNG encoder …","i":[[0,"chunk","png","Chunk types and functions",null,null],[6,"ChunkType","png::chunk","",null,null],[17,"IHDR","","Image header",null,null],[17,"PLTE","","Palette",null,null],[17,"IDAT","","Image data",null,null],[17,"IEND","","Image trailer",null,null],[17,"tRNS","","Transparency",null,null],[17,"bKGD","","Background colour",null,null],[17,"tIME","","Image last-modification time",null,null],[17,"pHYs","","Physical pixel dimensions",null,null],[17,"acTL","","Animation control",null,null],[17,"fcTL","","Frame control",null,null],[17,"fdAT","","Frame data",null,null],[5,"is_critical","","Returns true if the chunk is critical.",null,[[["chunktype",6]],["bool",15]]],[5,"is_private","","Returns true if the chunk is private.",null,[[["chunktype",6]],["bool",15]]],[5,"reserved_set","","Checks whether the reserved bit of the chunk name is set. …",null,[[["chunktype",6]],["bool",15]]],[5,"safe_to_copy","","Returns true if the chunk is safe to copy if unknown.",null,[[["chunktype",6]],["bool",15]]],[4,"ColorType","png","",null,null],[13,"Grayscale","","",0,null],[13,"RGB","","",0,null],[13,"Indexed","","",0,null],[13,"GrayscaleAlpha","","",0,null],[13,"RGBA","","",0,null],[4,"BitDepth","","Bit depth of the png file",null,null],[13,"One","","",1,null],[13,"Two","","",1,null],[13,"Four","","",1,null],[13,"Eight","","",1,null],[13,"Sixteen","","",1,null],[3,"PixelDimensions","","Pixel dimensions information",null,null],[12,"xppu","","Pixels per unit, X axis",2,null],[12,"yppu","","Pixels per unit, Y axis",2,null],[12,"unit","","Either <em>Meter</em> or <em>Unspecified</em>",2,null],[4,"Unit","","Physical unit of the pixel dimensions",null,null],[13,"Unspecified","","",3,null],[13,"Meter","","",3,null],[3,"FrameControl","","Frame control information",null,null],[12,"sequence_number","","Sequence number of the animation chunk, starting from 0",4,null],[12,"width","","Width of the following frame",4,null],[12,"height","","Height of the following frame",4,null],[12,"x_offset","","X position at which to render the following frame",4,null],[12,"y_offset","","Y position at which to render the following frame",4,null],[12,"delay_num","","Frame delay fraction numerator",4,null],[12,"delay_den","","Frame delay fraction denominator",4,null],[12,"dispose_op","","Type of frame area disposal to be done after rendering …",4,null],[12,"blend_op","","Type of frame area rendering for this frame",4,null],[3,"AnimationControl","","Animation control information",null,null],[12,"num_frames","","Number of frames",5,null],[12,"num_plays","","Number of times to loop this APNG.  0 indicates infinite …",5,null],[3,"Info","","PNG info struct",null,null],[12,"width","","",6,null],[12,"height","","",6,null],[12,"bit_depth","","",6,null],[12,"color_type","","",6,null],[12,"interlaced","","",6,null],[12,"trns","","",6,null],[12,"pixel_dims","","",6,null],[12,"palette","","",6,null],[12,"frame_control","","",6,null],[12,"animation_control","","",6,null],[3,"Transformations","","Output transformationsOnly <code>IDENTITY</code> and …",null,null],[3,"Decoder","","PNG Decoder",null,null],[3,"Reader","","PNG reader (mostly high-level interface)",null,null],[3,"OutputInfo","","Output info",null,null],[12,"width","","",7,null],[12,"height","","",7,null],[12,"color_type","","",7,null],[12,"bit_depth","","",7,null],[12,"line_size","","",7,null],[3,"StreamingDecoder","","PNG StreamingDecoder (low-level interface)",null,null],[4,"Decoded","","Result of the decoding process",null,null],[13,"Nothing","","Nothing decoded yet",8,null],[13,"Header","","",8,null],[13,"ChunkBegin","","",8,null],[13,"ChunkComplete","","",8,null],[13,"PixelDimensions","","",8,null],[13,"AnimationControl","","",8,null],[13,"FrameControl","","",8,null],[13,"ImageData","","Decoded raw image data.",8,null],[13,"PartialChunk","","",8,null],[13,"ImageEnd","","",8,null],[4,"DecodingError","","",null,null],[13,"IoError","","",9,null],[13,"Format","","",9,null],[13,"InvalidSignature","","",9,null],[13,"CrcMismatch","","",9,null],[12,"recover","png::DecodingError","bytes to skip to try to recover from this error",10,null],[12,"crc_val","","Stored CRC32 value",10,null],[12,"crc_sum","","Calculated CRC32 sum",10,null],[12,"chunk","","",10,null],[13,"Other","png","",9,null],[13,"CorruptFlateStream","","",9,null],[3,"Encoder","","PNG Encoder",null,null],[3,"Writer","","PNG writer",null,null],[4,"EncodingError","","",null,null],[13,"IoError","","",11,null],[13,"Format","","",11,null],[8,"Parameter","","Configuration parameter trait",null,null],[10,"set_param","","",12,[[]]],[8,"HasParameters","","Object has parameters",null,null],[11,"set","","",13,[[["parameter",8]]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_string","","",9,[[],["string",3]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_string","","",11,[[],["string",3]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"set_param","","",19,[[["decoder",3]]]],[11,"set_param","","",0,[[["encoder",3]]]],[11,"set_param","","",1,[[["encoder",3]]]],[11,"drop","","",18,[[]]],[11,"from","","",9,[[["error",3]],["decodingerror",4]]],[11,"from","","",9,[[["string",3]],["decodingerror",4]]],[11,"from","","",11,[[["error",3]],["encodingerror",4]]],[11,"extend","","",19,[[["intoiterator",8]]]],[11,"clone","","",0,[[],["colortype",4]]],[11,"clone","","",1,[[],["bitdepth",4]]],[11,"clone","","",2,[[],["pixeldimensions",3]]],[11,"clone","","",3,[[],["unit",4]]],[11,"clone","","",5,[[],["animationcontrol",3]]],[11,"clone","","",19,[[],["transformations",3]]],[11,"default","","",6,[[],["info",3]]],[11,"cmp","","",19,[[["transformations",3]],["ordering",4]]],[11,"eq","","",0,[[["colortype",4]],["bool",15]]],[11,"eq","","",1,[[["bitdepth",4]],["bool",15]]],[11,"eq","","",3,[[["unit",4]],["bool",15]]],[11,"eq","","",19,[[["transformations",3]],["bool",15]]],[11,"ne","","",19,[[["transformations",3]],["bool",15]]],[11,"partial_cmp","","",19,[[["transformations",3]],[["ordering",4],["option",4]]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",11,[[["formatter",3]],[["result",4],["error",3]]]],[11,"sub","","Returns the set difference of the two sets of flags.",19,[[["transformations",3]],["transformations",3]]],[11,"sub_assign","","Disables all flags enabled in the set.",19,[[["transformations",3]]]],[11,"not","","Returns the complement of this set of flags.",19,[[],["transformations",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",19,[[["transformations",3]],["transformations",3]]],[11,"bitor","","Returns the union of the two sets of flags.",19,[[["transformations",3]],["transformations",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags …",19,[[["transformations",3]],["transformations",3]]],[11,"bitand_assign","","Disables all flags disabled in the set.",19,[[["transformations",3]]]],[11,"bitor_assign","","Adds the set of flags.",19,[[["transformations",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",19,[[["transformations",3]]]],[11,"hash","","",19,[[]]],[11,"from_iter","","",19,[[["intoiterator",8]],["transformations",3]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"description","","",9,[[],["str",15]]],[11,"description","","",11,[[],["str",15]]],[11,"new","","Creates a new StreamingDecoder",14,[[],["streamingdecoder",3]]],[11,"reset","","Resets the StreamingDecoder",14,[[]]],[11,"update","","Low level StreamingDecoder interface.",14,[[],[["decodingerror",4],["result",4]]]],[11,"buffer_size","","Returns the size needed to hold a decoded frame",7,[[],["usize",15]]],[11,"new","","",15,[[],["decoder",3]]],[11,"read_info","","Reads all meta data until the first IDAT chunk",15,[[],[["decodingerror",4],["result",4]]]],[11,"info","","",16,[[],["info",3]]],[11,"next_frame","","Decodes the next frame into <code>buf</code>",16,[[],[["decodingerror",4],["result",4]]]],[11,"next_row","","Returns the next processed row of the image",16,[[],[["result",4],["option",4],["decodingerror",4]]]],[11,"next_interlaced_row","","Returns the next processed row of the image",16,[[],[["result",4],["decodingerror",4],["option",4]]]],[11,"output_color_type","","Returns the color type and the number of bits per sample …",16,[[]]],[11,"output_buffer_size","","Returns the number of bytes required to hold a …",16,[[],["usize",15]]],[11,"output_line_size","","Returns the number of bytes required to hold a …",16,[[["u32",15]],["usize",15]]],[11,"new","","",17,[[["u32",15]],["encoder",3]]],[11,"write_header","","",17,[[],[["encodingerror",4],["result",4],["writer",3]]]],[11,"write_chunk","","",18,[[],[["encodingerror",4],["result",4]]]],[11,"write_image_data","","Writes the image data.",18,[[],[["encodingerror",4],["result",4]]]],[11,"set","","",13,[[["parameter",8]]]],[11,"samples","","Returns the number of samples used per pixel of <code>ColorType</code>",0,[[],["usize",15]]],[11,"from_u8","","u8 -> Self. Temporary solution until Rust provides a …",0,[[["u8",15]],[["colortype",4],["option",4]]]],[11,"from_u8","","u8 -> Self. Temporary solution until Rust provides a …",1,[[["u8",15]],[["option",4],["bitdepth",4]]]],[11,"from_u8","","u8 -> Self. Temporary solution until Rust provides a …",3,[[["u8",15]],[["option",4],["unit",4]]]],[11,"size","","Size of the image",6,[[]]],[11,"is_animated","","Returns true if the image is an APNG image.",6,[[],["bool",15]]],[11,"animation_control","","Returns the frame control information of the image",6,[[],[["animationcontrol",3],["option",4]]]],[11,"frame_control","","Returns the frame control information of the current frame",6,[[],[["option",4],["framecontrol",3]]]],[11,"bits_per_pixel","","Returns the bits per pixel",6,[[],["usize",15]]],[11,"bytes_per_pixel","","Returns the bytes per pixel",6,[[],["usize",15]]],[11,"raw_bytes","","Returns the number of bytes needed for one deinterlaced …",6,[[],["usize",15]]],[11,"raw_row_length","","Returns the number of bytes needed for one deinterlaced …",6,[[],["usize",15]]],[11,"raw_row_length_from_width","","Returns the number of bytes needed for one deinterlaced …",6,[[["u32",15]],["usize",15]]],[18,"IDENTITY","","No transformation",19,null],[18,"STRIP_16","","Strip 16-bit samples to 8 bits",19,null],[18,"STRIP_ALPHA","","Discard the alpha channel",19,null],[18,"PACKING","","Expand 1; 2 and 4-bit samples to bytes",19,null],[18,"PACKSWAP","","Change order of packed pixels to LSB first",19,null],[18,"EXPAND","","Expand paletted images to RGB; expand grayscale images of …",19,null],[18,"INVERT_MONO","","Invert monochrome images",19,null],[18,"SHIFT","","Normalize pixels to the sBIT depth",19,null],[18,"BGR","","Flip RGB to BGR; RGBA to BGRA",19,null],[18,"SWAP_ALPHA","","Flip RGBA to ARGB or GA to AG",19,null],[18,"SWAP_ENDIAN","","Byte-swap 16-bit samples",19,null],[18,"INVERT_ALPHA","","Change alpha from opacity to transparency",19,null],[18,"STRIP_FILLER","","",19,null],[18,"STRIP_FILLER_BEFORE","","",19,null],[18,"STRIP_FILLER_AFTER","","",19,null],[18,"GRAY_TO_RGB","","",19,null],[18,"EXPAND_16","","",19,null],[18,"SCALE_16","","",19,null],[11,"empty","","Returns an empty set of flags",19,[[],["transformations",3]]],[11,"all","","Returns the set containing all flags.",19,[[],["transformations",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",19,[[],["u32",15]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",19,[[["u32",15]],[["option",4],["transformations",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",19,[[["u32",15]],["transformations",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",19,[[["u32",15]],["transformations",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",19,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",19,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",19,[[["transformations",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",19,[[["transformations",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",19,[[["transformations",3]]]],[11,"remove","","Removes the specified flags in-place.",19,[[["transformations",3]]]],[11,"toggle","","Toggles the specified flags in-place.",19,[[["transformations",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",19,[[["transformations",3],["bool",15]]]]],"p":[[4,"ColorType"],[4,"BitDepth"],[3,"PixelDimensions"],[4,"Unit"],[3,"FrameControl"],[3,"AnimationControl"],[3,"Info"],[3,"OutputInfo"],[4,"Decoded"],[4,"DecodingError"],[13,"CrcMismatch"],[4,"EncodingError"],[8,"Parameter"],[8,"HasParameters"],[3,"StreamingDecoder"],[3,"Decoder"],[3,"Reader"],[3,"Encoder"],[3,"Writer"],[3,"Transformations"]]},\
"rand":{"doc":"Utilities for random number generation","i":[[0,"distributions","rand","Generating random samples from probability distributions.",null,null],[0,"uniform","rand::distributions","A distribution uniformly sampling numbers within a given …",null,null],[3,"Uniform","rand::distributions::uniform","Sample values uniformly between two bounds.",null,null],[11,"new","","Create a new <code>Uniform</code> instance which samples uniformly …",0,[[],["uniform",3]]],[11,"new_inclusive","","Create a new <code>Uniform</code> instance which samples uniformly …",0,[[],["uniform",3]]],[8,"SampleUniform","","Helper trait for creating objects using the correct …",null,null],[16,"Sampler","","The <code>UniformSampler</code> implementation supporting type <code>X</code>.",1,null],[8,"UniformSampler","","Helper trait handling actual uniform sampling.",null,null],[16,"X","","The type sampled by this implementation.",2,null],[10,"new","","Construct self, with inclusive lower bound and exclusive …",2,[[]]],[10,"new_inclusive","","Construct self, with inclusive bounds <code>[low, high]</code>.",2,[[]]],[10,"sample","","Sample a value.",2,[[]]],[11,"sample_single","","Sample a single value uniformly from a range with …",2,[[]]],[3,"UniformInt","","The back-end implementing <code>UniformSampler</code> for integer …",null,null],[3,"UniformFloat","","The back-end implementing <code>UniformSampler</code> for …",null,null],[3,"UniformDuration","","The back-end implementing <code>UniformSampler</code> for <code>Duration</code>.",null,null],[0,"range","rand::distributions","DEPRECATED: Use <code>distributions::uniform</code> instead.",null,null],[3,"Alphanumeric","","Sample a <code>char</code>, uniformly distributed over ASCII letters …",null,null],[3,"Uniform","","Sample values uniformly between two bounds.",null,null],[3,"OpenClosed01","","A distribution to sample floating point numbers uniformly …",null,null],[3,"Open01","","A distribution to sample floating point numbers uniformly …",null,null],[3,"Gamma","","The Gamma distribution <code>Gamma(shape, scale)</code> distribution.",null,null],[3,"ChiSquared","","The chi-squared distribution <code>χ²(k)</code>, where <code>k</code> is the …",null,null],[3,"FisherF","","The Fisher F distribution <code>F(m, n)</code>.",null,null],[3,"StudentT","","The Student t distribution, <code>t(nu)</code>, where <code>nu</code> is the …",null,null],[3,"Normal","","The normal distribution <code>N(mean, std_dev**2)</code>.",null,null],[3,"LogNormal","","The log-normal distribution <code>ln N(mean, std_dev**2)</code>.",null,null],[3,"StandardNormal","","Samples floating-point numbers according to the normal …",null,null],[3,"Exp","","The exponential distribution <code>Exp(lambda)</code>.",null,null],[3,"Exp1","","Samples floating-point numbers according to the …",null,null],[3,"Pareto","","Samples floating-point numbers according to the Pareto …",null,null],[3,"Poisson","","The Poisson distribution <code>Poisson(lambda)</code>.",null,null],[3,"Binomial","","The binomial distribution <code>Binomial(n, p)</code>.",null,null],[3,"Bernoulli","","The Bernoulli distribution.",null,null],[3,"Cauchy","","The Cauchy distribution <code>Cauchy(median, scale)</code>.",null,null],[8,"Sample","","Types that can be used to create a random instance of …",null,null],[10,"sample","","Generate a random value of <code>Support</code>, using <code>rng</code> as the …",3,[[]]],[8,"IndependentSample","","<code>Sample</code>s that do not require keeping track of state.",null,null],[10,"ind_sample","","Generate a random value.",4,[[]]],[8,"Distribution","","Types (distributions) that can be used to create a random …",null,null],[10,"sample","","Generate a random value of <code>T</code>, using <code>rng</code> as the source of …",5,[[]]],[11,"sample_iter","","Create an iterator that generates random values of <code>T</code>, …",5,[[],["distiter",3]]],[3,"DistIter","","An iterator that generates random values of <code>T</code> with …",null,null],[3,"Standard","","A generic random value distribution, implemented for many …",null,null],[3,"Weighted","","A value with a particular weight for use with …",null,null],[12,"weight","","The numerical weight of this item",6,null],[12,"item","","The actual item which is being weighted",6,null],[3,"WeightedChoice","","A distribution that selects from a finite collection of …",null,null],[11,"new","","Create a new <code>WeightedChoice</code>.",7,[[],["weightedchoice",3]]],[0,"prelude","rand","Convenience re-export of common members",null,null],[0,"prng","","Pseudo-random number generators.",null,null],[0,"chacha","rand::prng","The ChaCha random number generator.",null,null],[3,"ChaChaRng","rand::prng::chacha","A cryptographically secure random number generator that …",null,null],[11,"new_unseeded","","Create an ChaCha random number generator using the default…",8,[[],["chacharng",3]]],[11,"set_stream","","Set the stream number.",8,[[["u64",15]]]],[3,"ChaChaCore","","The core of <code>ChaChaRng</code>, used with <code>BlockRng</code>.",null,null],[0,"hc128","rand::prng","The HC-128 random number generator.",null,null],[3,"Hc128Rng","rand::prng::hc128","A cryptographically secure random number generator that …",null,null],[3,"Hc128Core","","The core of <code>Hc128Rng</code>, used with <code>BlockRng</code>.",null,null],[0,"isaac","rand::prng","The ISAAC random number generator.",null,null],[3,"IsaacRng","rand::prng::isaac","A random number generator that uses the ISAAC algorithm.",null,null],[11,"new_unseeded","","Create an ISAAC random number generator using the default …",9,[[]]],[11,"new_from_u64","","Create an ISAAC random number generator using an <code>u64</code> as …",9,[[["u64",15]]]],[3,"IsaacCore","","The core of <code>IsaacRng</code>, used with <code>BlockRng</code>.",null,null],[0,"isaac64","rand::prng","The ISAAC-64 random number generator.",null,null],[3,"Isaac64Rng","rand::prng::isaac64","A random number generator that uses ISAAC-64, the 64-bit …",null,null],[11,"new_unseeded","","Create a 64-bit ISAAC random number generator using the …",10,[[]]],[11,"new_from_u64","","Create an ISAAC-64 random number generator using an <code>u64</code> …",10,[[["u64",15]]]],[3,"Isaac64Core","","The core of <code>Isaac64Rng</code>, used with <code>BlockRng</code>.",null,null],[11,"new_from_u64","","Create an ISAAC-64 random number generator using an <code>u64</code> …",11,[[["u64",15]]]],[3,"XorShiftRng","rand::prng","An Xorshift random number generator.",null,null],[0,"rngs","rand","Random number generators and adapters for common usage:",null,null],[0,"adapter","rand::rngs","Wrappers / adapters forming RNGs",null,null],[3,"ReadRng","rand::rngs::adapter","An RNG that reads random bytes straight from any type …",null,null],[3,"ReseedingRng","","A wrapper around any PRNG which reseeds the underlying …",null,null],[0,"mock","rand::rngs","Mock random number generator",null,null],[3,"StepRng","rand::rngs::mock","A simple implementation of <code>RngCore</code> for testing purposes.",null,null],[11,"new","","Create a <code>StepRng</code>, yielding an arithmetic sequence …",12,[[["u64",15]]]],[3,"JitterRng","rand::rngs","A true random number generator based on jitter in the CPU …",null,null],[4,"TimerError","","An error that can occur when <code>JitterRng::test_timer</code> fails.",null,null],[13,"NoTimer","","No timer available.",13,null],[13,"CoarseTimer","","Timer too coarse to use as an entropy source.",13,null],[13,"NotMonotonic","","Timer is not monotonically increasing.",13,null],[13,"TinyVariantions","","Variations of deltas of time too small.",13,null],[13,"TooManyStuck","","Too many stuck results (indicating no added entropy).",13,null],[3,"EntropyRng","","An interface returning random data from external …",null,null],[3,"SmallRng","","An RNG recommended when small state, cheap initialization …",null,null],[3,"StdRng","","The standard RNG. The PRNG algorithm in <code>StdRng</code> is chosen …",null,null],[3,"ThreadRng","","The type returned by <code>thread_rng</code>, essentially just a …",null,null],[3,"OsRng","","A random number generator that retrieves randomness …",null,null],[0,"seq","rand","Functions for randomly accessing and sampling sequences.",null,null],[5,"sample_iter","rand::seq","Randomly sample <code>amount</code> elements from a finite iterator.",null,[[["usize",15]],[["result",4],["vec",3]]]],[5,"sample_slice","","Randomly sample exactly <code>amount</code> values from <code>slice</code>.",null,[[["usize",15]],["vec",3]]],[5,"sample_slice_ref","","Randomly sample exactly <code>amount</code> references from <code>slice</code>.",null,[[["usize",15]],["vec",3]]],[5,"sample_indices","","Randomly sample exactly <code>amount</code> indices from <code>0..length</code>.",null,[[["usize",15]],[["vec",3],["usize",15]]]],[8,"RngCore","rand","The core of a random number generator.",null,null],[10,"next_u32","","Return the next random <code>u32</code>.",14,[[],["u32",15]]],[10,"next_u64","","Return the next random <code>u64</code>.",14,[[],["u64",15]]],[10,"fill_bytes","","Fill <code>dest</code> with random data.",14,[[]]],[10,"try_fill_bytes","","Fill <code>dest</code> entirely with random data.",14,[[],[["error",3],["result",4]]]],[8,"CryptoRng","","A marker trait used to indicate that an [<code>RngCore</code>] or …",null,null],[8,"SeedableRng","","A random number generator that can be explicitly seeded.",null,null],[16,"Seed","","Seed type, which is restricted to types …",15,null],[10,"from_seed","","Create a new PRNG using the given seed.",15,[[]]],[11,"seed_from_u64","","Create a new PRNG using a <code>u64</code> seed.",15,[[["u64",15]]]],[11,"from_rng","","Create a new PRNG seeded from another <code>Rng</code>.",15,[[],[["result",4],["error",3]]]],[4,"ErrorKind","","Error kind which can be matched over.",null,null],[13,"Unavailable","","Feature is not available; not recoverable.",16,null],[13,"Unexpected","","General failure; there may be a chance of recovery on …",16,null],[13,"Transient","","A transient failure which likely can be resolved or …",16,null],[13,"NotReady","","Not ready yet: recommended to try again a little later.",16,null],[3,"Error","","Error type of random number generators",null,null],[12,"kind","","The error kind",17,null],[12,"msg","","The error message",17,null],[5,"thread_rng","","Retrieve the lazily-initialized thread-local random number…",null,[[],["threadrng",3]]],[8,"Rand","","A type that can be randomly generated using an <code>Rng</code>.",null,null],[10,"rand","","Generates a random instance of this type using the …",18,[[]]],[8,"Rng","","An automatically-implemented extension trait on <code>RngCore</code> …",null,null],[11,"gen","","Return a random value supporting the <code>Standard</code> …",19,[[]]],[11,"gen_range","","Generate a random value in the range [<code>low</code>, <code>high</code>), i.e. …",19,[[["sampleuniform",8],["partialord",8]],[["sampleuniform",8],["partialord",8]]]],[11,"sample","","Sample a new value, using the given distribution.",19,[[["distribution",8]]]],[11,"sample_iter","","Create an iterator that generates values using the given …",19,[[],[["distribution",8],["distiter",3]]]],[11,"fill","","Fill <code>dest</code> entirely with random bytes (uniform value …",19,[[]]],[11,"try_fill","","Fill <code>dest</code> entirely with random bytes (uniform value …",19,[[],[["result",4],["error",3]]]],[11,"gen_bool","","Return a bool with a probability <code>p</code> of being true.",19,[[["f64",15]],["bool",15]]],[11,"choose","","Return a random element from <code>values</code>.",19,[[],["option",4]]],[11,"choose_mut","","Return a mutable pointer to a random element from <code>values</code>.",19,[[],["option",4]]],[11,"shuffle","","Shuffle a mutable slice in place.",19,[[]]],[11,"gen_iter","","Return an iterator that will yield an infinite number of …",19,[[],["generator",3]]],[11,"gen_weighted_bool","","Return a bool with a 1 in n chance of true",19,[[["u32",15]],["bool",15]]],[11,"gen_ascii_chars","","Return an iterator of random characters from the set …",19,[[],["asciigenerator",3]]],[8,"AsByteSliceMut","","Trait for casting types to byte slices",null,null],[10,"as_byte_slice_mut","","Return a mutable reference to self as a byte slice",20,[[]]],[10,"to_le","","Call <code>to_le</code> on each element (i.e. byte-swap on Big Endian …",20,[[]]],[3,"Generator","","Iterator which will generate a stream of random items.",null,null],[3,"AsciiGenerator","","Iterator which will continuously generate random ascii …",null,null],[8,"FromEntropy","","A convenience extension to <code>SeedableRng</code> allowing …",null,null],[10,"from_entropy","","Creates a new instance, automatically seeded with fresh …",21,[[]]],[5,"weak_rng","","DEPRECATED: use <code>SmallRng</code> instead.",null,[[],["xorshiftrng",3]]],[5,"random","","Generates a random value using the thread-local random …",null,[[]]],[5,"sample","","DEPRECATED: use <code>seq::sample_iter</code> instead.",null,[[["usize",15]],["vec",3]]],[11,"from","rand::distributions","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","rand::distributions::uniform","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","rand::distributions","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"into_iter","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from_entropy","rand::prng::chacha","",8,[[]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from_entropy","","",44,[[]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_owned","","",44,[[]]],[11,"clone_into","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"from_entropy","rand::prng::hc128","",45,[[]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"to_owned","","",45,[[]]],[11,"clone_into","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"from_entropy","","",46,[[]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"to_owned","","",46,[[]]],[11,"clone_into","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"from_entropy","rand::prng::isaac","",9,[[]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from_entropy","","",47,[[]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"from_entropy","rand::prng::isaac64","",10,[[]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from_entropy","","",11,[[]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from_entropy","rand::prng","",48,[[]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"to_owned","","",48,[[]]],[11,"clone_into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"from","rand::rngs::adapter","",49,[[]]],[11,"into","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"to_owned","","",50,[[]]],[11,"clone_into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"from","rand::rngs","",51,[[]]],[11,"into","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"to_owned","","",52,[[]]],[11,"clone_into","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"to_string","","",13,[[],["string",3]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","rand::rngs::mock","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from_entropy","rand::rngs","",53,[[]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"to_owned","","",53,[[]]],[11,"clone_into","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"from_entropy","","",54,[[]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"to_owned","","",54,[[]]],[11,"clone_into","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"to_owned","","",55,[[]]],[11,"clone_into","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"to_owned","","",56,[[]]],[11,"clone_into","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"from","rand","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_string","","",17,[[],["string",3]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"into_iter","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"into_iter","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"description","","",17,[[],["str",15]]],[11,"cause","","",17,[[],[["option",4],["error",8]]]],[11,"read","","",14,[[],[["usize",15],["error",3],["result",4]]]],[11,"fmt","","",17,[[["formatter",3]],[["error",3],["result",4]]]],[11,"clone","","",16,[[],["errorkind",4]]],[11,"fmt","","",17,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",16,[[["formatter",3]],[["error",3],["result",4]]]],[11,"eq","","",16,[[["errorkind",4]],["bool",15]]],[11,"new","rand::distributions::uniform","",22,[[]]],[11,"new_inclusive","","",22,[[]]],[11,"sample","","",22,[[]]],[11,"sample_single","","",22,[[]]],[11,"new","","",22,[[]]],[11,"new_inclusive","","",22,[[]]],[11,"sample","","",22,[[]]],[11,"sample_single","","",22,[[]]],[11,"new","","",22,[[]]],[11,"new_inclusive","","",22,[[]]],[11,"sample","","",22,[[]]],[11,"sample_single","","",22,[[]]],[11,"new","","",22,[[]]],[11,"new_inclusive","","",22,[[]]],[11,"sample","","",22,[[]]],[11,"sample_single","","",22,[[]]],[11,"new","","",22,[[]]],[11,"new_inclusive","","",22,[[]]],[11,"sample","","",22,[[]]],[11,"sample_single","","",22,[[]]],[11,"new","","",22,[[]]],[11,"new_inclusive","","",22,[[]]],[11,"sample","","",22,[[]]],[11,"sample_single","","",22,[[]]],[11,"new","","",22,[[]]],[11,"new_inclusive","","",22,[[]]],[11,"sample","","",22,[[]]],[11,"sample_single","","",22,[[]]],[11,"new","","",22,[[]]],[11,"new_inclusive","","",22,[[]]],[11,"sample","","",22,[[]]],[11,"sample_single","","",22,[[]]],[11,"new","","",22,[[]]],[11,"new_inclusive","","",22,[[]]],[11,"sample","","",22,[[]]],[11,"sample_single","","",22,[[]]],[11,"new","","",22,[[]]],[11,"new_inclusive","","",22,[[]]],[11,"sample","","",22,[[]]],[11,"sample_single","","",22,[[]]],[11,"new","","",23,[[]]],[11,"new_inclusive","","",23,[[]]],[11,"sample","","",23,[[]]],[11,"sample_single","","",23,[[]]],[11,"new","","",23,[[]]],[11,"new_inclusive","","",23,[[]]],[11,"sample","","",23,[[]]],[11,"sample_single","","",23,[[]]],[11,"new","","",24,[[["duration",3]],["uniformduration",3]]],[11,"new_inclusive","","",24,[[["duration",3]],["uniformduration",3]]],[11,"sample","","",24,[[],["duration",3]]],[11,"sample","rand::distributions","",7,[[]]],[11,"sample","","",0,[[]]],[11,"sample","","",33,[[],["f64",15]]],[11,"sample","","",25,[[],["f64",15]]],[11,"sample","","",26,[[],["f64",15]]],[11,"sample","","",27,[[],["f64",15]]],[11,"sample","","",28,[[],["f64",15]]],[11,"sample","","",30,[[],["f64",15]]],[11,"sample","","",31,[[],["f64",15]]],[11,"ind_sample","","",7,[[]]],[11,"ind_sample","","",0,[[]]],[11,"ind_sample","","",33,[[],["f64",15]]],[11,"ind_sample","","",25,[[],["f64",15]]],[11,"ind_sample","","",26,[[],["f64",15]]],[11,"ind_sample","","",27,[[],["f64",15]]],[11,"ind_sample","","",28,[[],["f64",15]]],[11,"ind_sample","","",30,[[],["f64",15]]],[11,"ind_sample","","",31,[[],["f64",15]]],[11,"sample","","",0,[[]]],[11,"sample","","",25,[[],["f64",15]]],[11,"sample","","",26,[[],["f64",15]]],[11,"sample","","",27,[[],["f64",15]]],[11,"sample","","",28,[[],["f64",15]]],[11,"sample","","",29,[[],["f64",15]]],[11,"sample","","",30,[[],["f64",15]]],[11,"sample","","",31,[[],["f64",15]]],[11,"sample","","",32,[[],["f64",15]]],[11,"sample","","",33,[[],["f64",15]]],[11,"sample","","",34,[[],["f64",15]]],[11,"sample","","",35,[[],["u64",15]]],[11,"sample","","",36,[[],["u64",15]]],[11,"sample","","",37,[[],["bool",15]]],[11,"sample","","",38,[[],["f64",15]]],[11,"sample","","",43,[[],["f32",15]]],[11,"sample","","",39,[[],["f32",15]]],[11,"sample","","",40,[[],["f32",15]]],[11,"sample","","",43,[[],["f64",15]]],[11,"sample","","",39,[[],["f64",15]]],[11,"sample","","",40,[[],["f64",15]]],[11,"sample","","",43,[[],["u8",15]]],[11,"sample","","",43,[[],["u16",15]]],[11,"sample","","",43,[[],["u32",15]]],[11,"sample","","",43,[[],["u64",15]]],[11,"sample","","",43,[[],["usize",15]]],[11,"sample","","",43,[[],["i8",15]]],[11,"sample","","",43,[[],["i16",15]]],[11,"sample","","",43,[[],["i32",15]]],[11,"sample","","",43,[[],["i64",15]]],[11,"sample","","",43,[[],["isize",15]]],[11,"sample","","",43,[[],["char",15]]],[11,"sample","","",41,[[],["char",15]]],[11,"sample","","",43,[[],["bool",15]]],[11,"sample","","",43,[[]]],[11,"sample","","",43,[[]]],[11,"sample","","",43,[[]]],[11,"sample","","",43,[[]]],[11,"sample","","",43,[[]]],[11,"sample","","",43,[[]]],[11,"sample","","",43,[[]]],[11,"sample","","",43,[[]]],[11,"sample","","",43,[[]]],[11,"sample","","",43,[[]]],[11,"sample","","",43,[[]]],[11,"sample","","",43,[[]]],[11,"sample","","",43,[[]]],[11,"sample","","",43,[[]]],[11,"sample","","",43,[[]]],[11,"sample","","",43,[[]]],[11,"sample","","",43,[[]]],[11,"sample","","",43,[[]]],[11,"sample","","",43,[[]]],[11,"sample","","",43,[[]]],[11,"sample","","",43,[[]]],[11,"sample","","",43,[[]]],[11,"sample","","",43,[[]]],[11,"sample","","",43,[[]]],[11,"sample","","",43,[[]]],[11,"sample","","",43,[[]]],[11,"sample","","",43,[[]]],[11,"sample","","",43,[[]]],[11,"sample","","",43,[[]]],[11,"sample","","",43,[[]]],[11,"sample","","",43,[[]]],[11,"sample","","",43,[[]]],[11,"sample","","",43,[[]]],[11,"sample","","",43,[[]]],[11,"sample","","",43,[[]]],[11,"sample","","",43,[[]]],[11,"sample","","",43,[[]]],[11,"sample","","",43,[[]]],[11,"sample","","",43,[[]]],[11,"sample","","",43,[[]]],[11,"sample","","",43,[[]]],[11,"sample","","",43,[[]]],[11,"sample","","",43,[[]]],[11,"sample","","",43,[[]]],[11,"sample","","",43,[[]]],[11,"sample","","",43,[[]]],[11,"sample","","",43,[[],["option",4]]],[11,"sample","","",43,[[],["wrapping",3]]],[11,"sample","","",7,[[]]],[11,"from","","",0,[[["range",3]],["uniform",3]]],[11,"from","rand::prng::chacha","",8,[[["chachacore",3]]]],[11,"from","rand","",17,[[["timererror",4]],["error",3]]],[11,"next","rand::distributions","",42,[[],["option",4]]],[11,"size_hint","","",42,[[]]],[11,"next","rand","",57,[[],["option",4]]],[11,"next","","",58,[[],[["option",4],["char",15]]]],[11,"clone","rand::distributions","",0,[[],["uniform",3]]],[11,"clone","rand::distributions::uniform","",22,[[],["uniformint",3]]],[11,"clone","","",23,[[],["uniformfloat",3]]],[11,"clone","","",24,[[],["uniformduration",3]]],[11,"clone","rand::distributions","",25,[[],["gamma",3]]],[11,"clone","","",26,[[],["chisquared",3]]],[11,"clone","","",27,[[],["fisherf",3]]],[11,"clone","","",28,[[],["studentt",3]]],[11,"clone","","",29,[[],["standardnormal",3]]],[11,"clone","","",30,[[],["normal",3]]],[11,"clone","","",31,[[],["lognormal",3]]],[11,"clone","","",32,[[],["exp1",3]]],[11,"clone","","",33,[[],["exp",3]]],[11,"clone","","",34,[[],["pareto",3]]],[11,"clone","","",35,[[],["poisson",3]]],[11,"clone","","",36,[[],["binomial",3]]],[11,"clone","","",37,[[],["bernoulli",3]]],[11,"clone","","",38,[[],["cauchy",3]]],[11,"clone","","",39,[[],["openclosed01",3]]],[11,"clone","","",40,[[],["open01",3]]],[11,"clone","","",43,[[],["standard",3]]],[11,"clone","","",6,[[],["weighted",3]]],[11,"clone","rand::prng::chacha","",8,[[],["chacharng",3]]],[11,"clone","","",44,[[],["chachacore",3]]],[11,"clone","rand::prng::hc128","",45,[[],["hc128rng",3]]],[11,"clone","","",46,[[],["hc128core",3]]],[11,"clone","rand::prng::isaac","",9,[[],["isaacrng",3]]],[11,"clone","","",47,[[],["isaaccore",3]]],[11,"clone","rand::prng::isaac64","",10,[[],["isaac64rng",3]]],[11,"clone","","",11,[[],["isaac64core",3]]],[11,"clone","rand::prng","",48,[[],["xorshiftrng",3]]],[11,"clone","rand::rngs::adapter","",50,[[],["reseedingrng",3]]],[11,"clone","rand::rngs","",52,[[],["jitterrng",3]]],[11,"clone","","",13,[[],["timererror",4]]],[11,"clone","rand::rngs::mock","",12,[[],["steprng",3]]],[11,"clone","rand::rngs","",53,[[],["smallrng",3]]],[11,"clone","","",54,[[],["stdrng",3]]],[11,"clone","","",55,[[],["threadrng",3]]],[11,"clone","","",56,[[],["osrng",3]]],[11,"default","","",51,[[]]],[11,"eq","","",13,[[["timererror",4]],["bool",15]]],[11,"fmt","rand::distributions","",0,[[["formatter",3]],["result",6]]],[11,"fmt","rand::distributions::uniform","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","rand::distributions","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","","",39,[[["formatter",3]],["result",6]]],[11,"fmt","","",40,[[["formatter",3]],["result",6]]],[11,"fmt","","",41,[[["formatter",3]],["result",6]]],[11,"fmt","","",42,[[["formatter",3]],["result",6]]],[11,"fmt","","",43,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","rand::prng::chacha","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",44,[[["formatter",3]],["result",6]]],[11,"fmt","rand::prng::hc128","",45,[[["formatter",3]],["result",6]]],[11,"fmt","","",46,[[["formatter",3]],["result",6]]],[11,"fmt","rand::prng::isaac","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",47,[[["formatter",3]],["result",6]]],[11,"fmt","rand::prng::isaac64","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","rand::prng","",48,[[["formatter",3]],["result",6]]],[11,"fmt","rand::rngs::adapter","",49,[[["formatter",3]],["result",6]]],[11,"fmt","","",50,[[["formatter",3]],["result",6]]],[11,"fmt","rand::rngs","",51,[[["formatter",3]],["result",6]]],[11,"fmt","","",52,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","rand::rngs::mock","",12,[[["formatter",3]],["result",6]]],[11,"fmt","rand::rngs","",53,[[["formatter",3]],["result",6]]],[11,"fmt","","",54,[[["formatter",3]],["result",6]]],[11,"fmt","","",55,[[["formatter",3]],["result",6]]],[11,"fmt","","",56,[[["formatter",3]],["result",6]]],[11,"fmt","rand","",57,[[["formatter",3]],["result",6]]],[11,"fmt","","",58,[[["formatter",3]],["result",6]]],[11,"fmt","rand::rngs","",13,[[["formatter",3]],["result",6]]],[11,"description","","",13,[[],["str",15]]],[11,"generate","rand::prng::chacha","",44,[[]]],[11,"generate","rand::prng::hc128","",46,[[]]],[11,"generate","rand::prng::isaac","Refills the output buffer, <code>results</code>. See also the …",47,[[["isaacarray",3]]]],[11,"generate","rand::prng::isaac64","Refills the output buffer, <code>results</code>. See also the …",11,[[["isaacarray",3]]]],[11,"next_u32","rand::prng::chacha","",8,[[],["u32",15]]],[11,"next_u64","","",8,[[],["u64",15]]],[11,"fill_bytes","","",8,[[]]],[11,"try_fill_bytes","","",8,[[],[["result",4],["error",3]]]],[11,"next_u32","rand::prng::hc128","",45,[[],["u32",15]]],[11,"next_u64","","",45,[[],["u64",15]]],[11,"fill_bytes","","",45,[[]]],[11,"try_fill_bytes","","",45,[[],[["result",4],["error",3]]]],[11,"next_u32","rand::prng::isaac","",9,[[],["u32",15]]],[11,"next_u64","","",9,[[],["u64",15]]],[11,"fill_bytes","","",9,[[]]],[11,"try_fill_bytes","","",9,[[],[["result",4],["error",3]]]],[11,"next_u32","rand::prng::isaac64","",10,[[],["u32",15]]],[11,"next_u64","","",10,[[],["u64",15]]],[11,"fill_bytes","","",10,[[]]],[11,"try_fill_bytes","","",10,[[],[["result",4],["error",3]]]],[11,"next_u32","rand::prng","",48,[[],["u32",15]]],[11,"next_u64","","",48,[[],["u64",15]]],[11,"fill_bytes","","",48,[[]]],[11,"try_fill_bytes","","",48,[[],[["result",4],["error",3]]]],[11,"next_u32","rand::rngs::adapter","",49,[[],["u32",15]]],[11,"next_u64","","",49,[[],["u64",15]]],[11,"fill_bytes","","",49,[[]]],[11,"try_fill_bytes","","",49,[[],[["result",4],["error",3]]]],[11,"next_u32","","",50,[[],["u32",15]]],[11,"next_u64","","",50,[[],["u64",15]]],[11,"fill_bytes","","",50,[[]]],[11,"try_fill_bytes","","",50,[[],[["result",4],["error",3]]]],[11,"next_u32","rand::rngs","",51,[[],["u32",15]]],[11,"next_u64","","",51,[[],["u64",15]]],[11,"fill_bytes","","",51,[[]]],[11,"try_fill_bytes","","",51,[[],[["result",4],["error",3]]]],[11,"next_u32","","",52,[[],["u32",15]]],[11,"next_u64","","",52,[[],["u64",15]]],[11,"fill_bytes","","",52,[[]]],[11,"try_fill_bytes","","",52,[[],[["result",4],["error",3]]]],[11,"next_u32","rand::rngs::mock","",12,[[],["u32",15]]],[11,"next_u64","","",12,[[],["u64",15]]],[11,"fill_bytes","","",12,[[]]],[11,"try_fill_bytes","","",12,[[],[["result",4],["error",3]]]],[11,"next_u32","rand::rngs","",53,[[],["u32",15]]],[11,"next_u64","","",53,[[],["u64",15]]],[11,"fill_bytes","","",53,[[]]],[11,"try_fill_bytes","","",53,[[],[["result",4],["error",3]]]],[11,"next_u32","","",54,[[],["u32",15]]],[11,"next_u64","","",54,[[],["u64",15]]],[11,"fill_bytes","","",54,[[]]],[11,"try_fill_bytes","","",54,[[],[["result",4],["error",3]]]],[11,"next_u32","","",55,[[],["u32",15]]],[11,"next_u64","","",55,[[],["u64",15]]],[11,"fill_bytes","","",55,[[]]],[11,"try_fill_bytes","","",55,[[],[["result",4],["error",3]]]],[11,"next_u32","","",56,[[],["u32",15]]],[11,"next_u64","","",56,[[],["u64",15]]],[11,"fill_bytes","","",56,[[]]],[11,"try_fill_bytes","","",56,[[],[["result",4],["error",3]]]],[11,"from_seed","rand::prng::chacha","",8,[[]]],[11,"from_rng","","",8,[[["rngcore",8]],[["result",4],["error",3]]]],[11,"from_seed","","",44,[[]]],[11,"from_seed","rand::prng::hc128","",45,[[]]],[11,"from_rng","","",45,[[["rngcore",8]],[["result",4],["error",3]]]],[11,"from_seed","","Create an HC-128 random number generator with a seed. The …",46,[[]]],[11,"from_seed","rand::prng::isaac","",9,[[]]],[11,"seed_from_u64","","Create an ISAAC random number generator using an <code>u64</code> as …",9,[[["u64",15]]]],[11,"from_rng","","",9,[[["rngcore",8]],[["result",4],["error",3]]]],[11,"from_seed","","",47,[[]]],[11,"seed_from_u64","","Create an ISAAC random number generator using an <code>u64</code> as …",47,[[["u64",15]]]],[11,"from_rng","","",47,[[["rngcore",8]],[["result",4],["error",3]]]],[11,"from_seed","rand::prng::isaac64","",10,[[]]],[11,"seed_from_u64","","Create an ISAAC random number generator using an <code>u64</code> as …",10,[[["u64",15]]]],[11,"from_rng","","",10,[[["rngcore",8]],[["result",4],["error",3]]]],[11,"from_seed","","",11,[[]]],[11,"seed_from_u64","","",11,[[["u64",15]]]],[11,"from_rng","","",11,[[["rngcore",8]],[["result",4],["error",3]]]],[11,"from_seed","rand::prng","",48,[[]]],[11,"from_rng","","",48,[[["rngcore",8]],[["result",4],["error",3]]]],[11,"from_seed","rand::rngs","",53,[[]]],[11,"from_rng","","",53,[[["rngcore",8]],[["result",4],["error",3]]]],[11,"from_seed","","",54,[[]]],[11,"from_rng","","",54,[[["rngcore",8]],[["result",4],["error",3]]]],[11,"new","rand::distributions","Construct an object representing the <code>Gamma(shape, scale)</code> …",25,[[["f64",15]],["gamma",3]]],[11,"new","","Create a new chi-squared distribution with …",26,[[["f64",15]],["chisquared",3]]],[11,"new","","Create a new <code>FisherF</code> distribution, with the given …",27,[[["f64",15]],["fisherf",3]]],[11,"new","","Create a new Student t distribution with <code>n</code> degrees of …",28,[[["f64",15]],["studentt",3]]],[11,"new","","Construct a new <code>Normal</code> distribution with the given mean …",30,[[["f64",15]],["normal",3]]],[11,"new","","Construct a new <code>LogNormal</code> distribution with the given mean…",31,[[["f64",15]],["lognormal",3]]],[11,"new","","Construct a new <code>Exp</code> with the given shape parameter <code>lambda</code>…",33,[[["f64",15]],["exp",3]]],[11,"new","","Construct a new Pareto distribution with given <code>scale</code> and …",34,[[["f64",15]],["pareto",3]]],[11,"new","","Construct a new <code>Poisson</code> with the given shape parameter …",35,[[["f64",15]],["poisson",3]]],[11,"new","","Construct a new <code>Binomial</code> with the given shape parameters <code>n</code>…",36,[[["f64",15],["u64",15]],["binomial",3]]],[11,"new","","Construct a new <code>Bernoulli</code> with the given probability of …",37,[[["f64",15]],["bernoulli",3]]],[11,"new","","Construct a new <code>Cauchy</code> with the given shape parameters …",38,[[["f64",15]],["cauchy",3]]],[11,"new_unseeded","rand::prng","Creates a new XorShiftRng instance which is not seeded.",48,[[],["xorshiftrng",3]]],[11,"new","rand::rngs::adapter","Create a new <code>ReadRng</code> from a <code>Read</code>.",49,[[],["readrng",3]]],[11,"new","","Create a new <code>ReseedingRng</code> with the given parameters.",50,[[["u64",15]]]],[11,"reseed","","Reseed the internal PRNG.",50,[[],[["result",4],["error",3]]]],[11,"new","rand::rngs","Create a new <code>EntropyRng</code>.",51,[[]]],[11,"new","","Create a new <code>JitterRng</code>. Makes use of <code>std::time</code> for a …",52,[[],[["timererror",4],["jitterrng",3],["result",4]]]],[11,"new_with_timer","","Create a new <code>JitterRng</code>. A custom timer can be supplied, …",52,[[],["jitterrng",3]]],[11,"set_rounds","","Configures how many rounds are used to generate each …",52,[[["u8",15]]]],[11,"test_timer","","Basic quality tests on the timer, by measuring CPU timing …",52,[[],[["timererror",4],["result",4],["u8",15]]]],[11,"timer_stats","","Statistical test: return the timer delta of one normal …",52,[[["bool",15]],["i64",15]]],[11,"new","","Create a new <code>OsRng</code>.",56,[[],[["osrng",3],["result",4],["error",3]]]],[11,"should_retry","rand","True if this kind of error may resolve itself on retry.",16,[[],["bool",15]]],[11,"should_wait","","True if we should retry but wait before retrying",16,[[],["bool",15]]],[11,"description","","A description of this error kind",16,[[],["str",15]]],[11,"new","","Create a new instance, with specified kind and a message.",17,[[["str",15],["errorkind",4]],["error",3]]],[11,"with_cause","","Create a new instance, with specified kind, message, and a…",17,[[["str",15],["errorkind",4]],["error",3]]],[11,"take_cause","","Take the cause, if any. This allows the embedded cause to …",17,[[],[["option",4],["box",3]]]]],"p":[[3,"Uniform"],[8,"SampleUniform"],[8,"UniformSampler"],[8,"Sample"],[8,"IndependentSample"],[8,"Distribution"],[3,"Weighted"],[3,"WeightedChoice"],[3,"ChaChaRng"],[3,"IsaacRng"],[3,"Isaac64Rng"],[3,"Isaac64Core"],[3,"StepRng"],[4,"TimerError"],[8,"RngCore"],[8,"SeedableRng"],[4,"ErrorKind"],[3,"Error"],[8,"Rand"],[8,"Rng"],[8,"AsByteSliceMut"],[8,"FromEntropy"],[3,"UniformInt"],[3,"UniformFloat"],[3,"UniformDuration"],[3,"Gamma"],[3,"ChiSquared"],[3,"FisherF"],[3,"StudentT"],[3,"StandardNormal"],[3,"Normal"],[3,"LogNormal"],[3,"Exp1"],[3,"Exp"],[3,"Pareto"],[3,"Poisson"],[3,"Binomial"],[3,"Bernoulli"],[3,"Cauchy"],[3,"OpenClosed01"],[3,"Open01"],[3,"Alphanumeric"],[3,"DistIter"],[3,"Standard"],[3,"ChaChaCore"],[3,"Hc128Rng"],[3,"Hc128Core"],[3,"IsaacCore"],[3,"XorShiftRng"],[3,"ReadRng"],[3,"ReseedingRng"],[3,"EntropyRng"],[3,"JitterRng"],[3,"SmallRng"],[3,"StdRng"],[3,"ThreadRng"],[3,"OsRng"],[3,"Generator"],[3,"AsciiGenerator"]]},\
"rayon":{"doc":"Data-parallelism library that makes it easy to convert …","i":[[0,"collections","rayon","Parallel iterator types for standard collections",null,null],[0,"binary_heap","rayon::collections","This module contains the parallel iterator types for heaps…",null,null],[3,"IntoIter","rayon::collections::binary_heap","Parallel iterator over a binary heap",null,null],[3,"Iter","","Parallel iterator over an immutable reference to a binary …",null,null],[0,"btree_map","rayon::collections","This module contains the parallel iterator types for …",null,null],[3,"IntoIter","rayon::collections::btree_map","Parallel iterator over a B-Tree map",null,null],[3,"Iter","","Parallel iterator over an immutable reference to a B-Tree …",null,null],[3,"IterMut","","Parallel iterator over a mutable reference to a B-Tree map",null,null],[0,"btree_set","rayon::collections","This module contains the parallel iterator types for …",null,null],[3,"IntoIter","rayon::collections::btree_set","Parallel iterator over a B-Tree set",null,null],[3,"Iter","","Parallel iterator over an immutable reference to a B-Tree …",null,null],[0,"hash_map","rayon::collections","This module contains the parallel iterator types for hash …",null,null],[3,"IntoIter","rayon::collections::hash_map","Parallel iterator over a hash map",null,null],[3,"Iter","","Parallel iterator over an immutable reference to a hash …",null,null],[3,"IterMut","","Parallel iterator over a mutable reference to a hash map",null,null],[0,"hash_set","rayon::collections","This module contains the parallel iterator types for hash …",null,null],[3,"IntoIter","rayon::collections::hash_set","Parallel iterator over a hash set",null,null],[3,"Iter","","Parallel iterator over an immutable reference to a hash …",null,null],[0,"linked_list","rayon::collections","This module contains the parallel iterator types for …",null,null],[3,"IntoIter","rayon::collections::linked_list","Parallel iterator over a linked list",null,null],[3,"Iter","","Parallel iterator over an immutable reference to a linked …",null,null],[3,"IterMut","","Parallel iterator over a mutable reference to a linked …",null,null],[0,"vec_deque","rayon::collections","This module contains the parallel iterator types for …",null,null],[3,"IntoIter","rayon::collections::vec_deque","Parallel iterator over a double-ended queue",null,null],[3,"Iter","","Parallel iterator over an immutable reference to a …",null,null],[3,"IterMut","","Parallel iterator over a mutable reference to a …",null,null],[0,"iter","rayon","Traits for writing parallel programs using an …",null,null],[0,"plumbing","rayon::iter","Traits and functions used to implement parallel …",null,null],[8,"ProducerCallback","rayon::iter::plumbing","The <code>ProducerCallback</code> trait is a kind of generic closure, …",null,null],[16,"Output","","The type of value returned by this callback. Analogous to …",0,null],[10,"callback","","Invokes the callback with the given producer as argument. …",0,[[]]],[8,"Producer","","A <code>Producer</code> is effectively a \\\"splittable <code>IntoIterator</code>\\\". …",null,null],[16,"Item","","The type of item that will be produced by this producer …",1,null],[16,"IntoIter","","The type of iterator we will become.",1,null],[10,"into_iter","","Convert <code>self</code> into an iterator; at this point, no more …",1,[[]]],[11,"min_len","","The minimum number of items that we will process …",1,[[],["usize",15]]],[11,"max_len","","The maximum number of items that we will process …",1,[[],["usize",15]]],[10,"split_at","","Split into two producers; one produces items <code>0..index</code>, the…",1,[[["usize",15]]]],[11,"fold_with","","Iterate the producer, feeding each element to <code>folder</code>, and …",1,[[]]],[8,"Consumer","","A consumer is effectively a generalized \\\"fold\\\" operation, …",null,null],[16,"Folder","","The type of folder that this consumer can be converted …",2,null],[16,"Reducer","","The type of reducer that is produced if this consumer is …",2,null],[16,"Result","","The type of result that this consumer will ultimately …",2,null],[10,"split_at","","Divide the consumer into two consumers, one processing …",2,[[["usize",15]]]],[10,"into_folder","","Convert the consumer into a folder that can consume items …",2,[[]]],[10,"full","","Hint whether this <code>Consumer</code> would like to stop processing …",2,[[],["bool",15]]],[8,"Folder","","The <code>Folder</code> trait encapsulates the standard fold operation…",null,null],[16,"Result","","The type of result that will ultimately be produced by …",3,null],[10,"consume","","Consume next item and return new sequential state.",3,[[]]],[11,"consume_iter","","Consume items from the iterator until full, and return …",3,[[]]],[10,"complete","","Finish consuming items, produce final result.",3,[[]]],[10,"full","","Hint whether this <code>Folder</code> would like to stop processing …",3,[[],["bool",15]]],[8,"Reducer","","The reducer is the final step of a <code>Consumer</code> -- after a …",null,null],[10,"reduce","","Reduce two final results into one; this is executed after …",4,[[]]],[8,"UnindexedConsumer","","A stateless consumer can be freely copied. These …",null,null],[10,"split_off_left","","Splits off a \\\"left\\\" consumer and returns it. The <code>self</code> …",5,[[]]],[10,"to_reducer","","Creates a reducer that can be used to combine the results …",5,[[]]],[8,"UnindexedProducer","","A variant on <code>Producer</code> which does not know its exact …",null,null],[16,"Item","","The type of item returned by this producer.",6,null],[10,"split","","Split midway into a new producer if possible, otherwise …",6,[[]]],[10,"fold_with","","Iterate the producer, feeding each element to <code>folder</code>, and …",6,[[]]],[5,"bridge","","This helper function is used to \\\"connect\\\" a parallel …",null,[[]]],[5,"bridge_producer_consumer","","This helper function is used to \\\"connect\\\" a producer and a…",null,[[["usize",15]]]],[5,"bridge_unindexed","","A variant of <code>bridge_producer_consumer</code> where the producer …",null,[[]]],[4,"Either","rayon::iter","The enum <code>Either</code> with variants <code>Left</code> and <code>Right</code> is a general …",null,null],[13,"Left","","A value of type <code>L</code>.",7,null],[13,"Right","","A value of type <code>R</code>.",7,null],[3,"IterBridge","","<code>IterBridge</code> is a parallel iterator that wraps a sequential …",null,null],[8,"ParallelBridge","","Conversion trait to convert an <code>Iterator</code> to a …",null,null],[10,"par_bridge","","Create a bridge from this type to a <code>ParallelIterator</code>.",8,[[],["iterbridge",3]]],[3,"Chain","","<code>Chain</code> is an iterator that joins <code>b</code> after <code>a</code> in one …",null,null],[3,"Chunks","","<code>Chunks</code> is an iterator that groups elements of an …",null,null],[3,"Enumerate","","<code>Enumerate</code> is an iterator that returns the current count …",null,null],[3,"Filter","","<code>Filter</code> takes a predicate <code>filter_op</code> and filters out …",null,null],[3,"FilterMap","","<code>FilterMap</code> creates an iterator that uses <code>filter_op</code> to both …",null,null],[3,"FlatMap","","<code>FlatMap</code> maps each element to an iterator, then flattens …",null,null],[3,"Flatten","","<code>Flatten</code> turns each element to an iterator, then flattens …",null,null],[3,"Fold","","<code>Fold</code> is an iterator that applies a function over an …",null,null],[3,"FoldWith","","<code>FoldWith</code> is an iterator that applies a function over an …",null,null],[3,"TryFold","","<code>TryFold</code> is an iterator that applies a function over an …",null,null],[3,"TryFoldWith","","<code>TryFoldWith</code> is an iterator that applies a function over …",null,null],[3,"Skip","","<code>Skip</code> is an iterator that skips over the first <code>n</code> elements. …",null,null],[5,"split","","The <code>split</code> function takes arbitrary data and a closure …",null,[[],["split",3]]],[3,"Split","","<code>Split</code> is a parallel iterator using arbitrary data and a …",null,null],[3,"Take","","<code>Take</code> is an iterator that iterates over the first <code>n</code> …",null,null],[3,"Map","","<code>Map</code> is an iterator that transforms the elements of an …",null,null],[3,"MapInit","","<code>MapInit</code> is an iterator that transforms the elements of an …",null,null],[3,"MapWith","","<code>MapWith</code> is an iterator that transforms the elements of an …",null,null],[3,"Zip","","<code>Zip</code> is an iterator that zips up <code>a</code> and <code>b</code> into a single …",null,null],[3,"ZipEq","","An <code>IndexedParallelIterator</code> that iterates over two …",null,null],[3,"MultiZip","","<code>MultiZip</code> is an iterator that zips up a tuple of parallel …",null,null],[3,"Interleave","","<code>Interleave</code> is an iterator that interleaves elements of …",null,null],[3,"InterleaveShortest","","<code>InterleaveShortest</code> is an iterator that works similarly to …",null,null],[3,"Intersperse","","<code>Intersperse</code> is an iterator that inserts a particular item …",null,null],[3,"Update","","<code>Update</code> is an iterator that mutates the elements of an …",null,null],[3,"Rev","","<code>Rev</code> is an iterator that produces elements in reverse …",null,null],[3,"MaxLen","","<code>MaxLen</code> is an iterator that imposes a maximum length on …",null,null],[3,"MinLen","","<code>MinLen</code> is an iterator that imposes a minimum length on …",null,null],[3,"Cloned","","<code>Cloned</code> is an iterator that clones the elements of an …",null,null],[3,"Copied","","<code>Copied</code> is an iterator that copies the elements of an …",null,null],[3,"Inspect","","<code>Inspect</code> is an iterator that calls a function with a …",null,null],[3,"PanicFuse","","<code>PanicFuse</code> is an adaptor that wraps an iterator with a …",null,null],[3,"WhileSome","","<code>WhileSome</code> is an iterator that yields the <code>Some</code> elements of …",null,null],[5,"repeat","","Creates a parallel iterator that endlessly repeats <code>elt</code> (by…",null,[[["clone",8],["send",8]],[["clone",8],["send",8],["repeat",3]]]],[3,"Repeat","","Iterator adaptor for the <code>repeat()</code> function.",null,null],[5,"repeatn","","Creates a parallel iterator that produces <code>n</code> repeats of <code>elt</code>…",null,[[["clone",8],["usize",15],["send",8]],[["send",8],["repeatn",3],["clone",8]]]],[3,"RepeatN","","Iterator adaptor for the <code>repeatn()</code> function.",null,null],[5,"empty","","Creates a parallel iterator that produces nothing.",null,[[],[["empty",3],["send",8]]]],[3,"Empty","","Iterator adaptor for the <code>empty()</code> function.",null,null],[5,"once","","Creates a parallel iterator that produces an element …",null,[[["send",8]],[["send",8],["once",3]]]],[3,"Once","","Iterator adaptor for the <code>once()</code> function.",null,null],[8,"IntoParallelIterator","","<code>IntoParallelIterator</code> implements the conversion to a …",null,null],[16,"Iter","","The parallel iterator type that will be created.",9,null],[16,"Item","","The type of item that the parallel iterator will produce.",9,null],[10,"into_par_iter","","Converts <code>self</code> into a parallel iterator.",9,[[]]],[8,"IntoParallelRefIterator","","<code>IntoParallelRefIterator</code> implements the conversion to a …",null,null],[16,"Iter","","The type of the parallel iterator that will be returned.",10,null],[16,"Item","","The type of item that the parallel iterator will produce. …",10,null],[10,"par_iter","","Converts <code>self</code> into a parallel iterator.",10,[[]]],[8,"IntoParallelRefMutIterator","","<code>IntoParallelRefMutIterator</code> implements the conversion to a …",null,null],[16,"Iter","","The type of iterator that will be created.",11,null],[16,"Item","","The type of item that will be produced; this is typically …",11,null],[10,"par_iter_mut","","Creates the parallel iterator from <code>self</code>.",11,[[]]],[8,"ParallelIterator","","Parallel version of the standard iterator trait.",null,null],[16,"Item","","The type of item that this parallel iterator produces. …",12,null],[11,"for_each","","Executes <code>OP</code> on each item produced by the iterator, in …",12,[[]]],[11,"for_each_with","","Executes <code>OP</code> on the given <code>init</code> value with each item …",12,[[]]],[11,"for_each_init","","Executes <code>OP</code> on a value returned by <code>init</code> with each item …",12,[[]]],[11,"try_for_each","","Executes a fallible <code>OP</code> on each item produced by the …",12,[[]]],[11,"try_for_each_with","","Executes a fallible <code>OP</code> on the given <code>init</code> value with each …",12,[[]]],[11,"try_for_each_init","","Executes a fallible <code>OP</code> on a value returned by <code>init</code> with …",12,[[]]],[11,"count","","Counts the number of items in this parallel iterator.",12,[[],["usize",15]]],[11,"map","","Applies <code>map_op</code> to each item of this iterator, producing a …",12,[[],["map",3]]],[11,"map_with","","Applies <code>map_op</code> to the given <code>init</code> value with each item of …",12,[[],["mapwith",3]]],[11,"map_init","","Applies <code>map_op</code> to a value returned by <code>init</code> with each item …",12,[[],["mapinit",3]]],[11,"cloned","","Creates an iterator which clones all of its elements.  …",12,[[],["cloned",3]]],[11,"copied","","Creates an iterator which copies all of its elements.  …",12,[[],["copied",3]]],[11,"inspect","","Applies <code>inspect_op</code> to a reference to each item of this …",12,[[],["inspect",3]]],[11,"update","","Mutates each item of this iterator before yielding it.",12,[[],["update",3]]],[11,"filter","","Applies <code>filter_op</code> to each item of this iterator, …",12,[[],["filter",3]]],[11,"filter_map","","Applies <code>filter_op</code> to each item of this iterator to get an …",12,[[],["filtermap",3]]],[11,"flat_map","","Applies <code>map_op</code> to each item of this iterator to get …",12,[[],["flatmap",3]]],[11,"flatten","","An adaptor that flattens iterable <code>Item</code>s into one large …",12,[[],["flatten",3]]],[11,"reduce","","Reduces the items in the iterator into one item using <code>op</code>. …",12,[[]]],[11,"reduce_with","","Reduces the items in the iterator into one item using <code>op</code>. …",12,[[],["option",4]]],[11,"try_reduce","","Reduces the items in the iterator into one item using a …",12,[[]]],[11,"try_reduce_with","","Reduces the items in the iterator into one item using a …",12,[[],["option",4]]],[11,"fold","","Parallel fold is similar to sequential fold except that …",12,[[],["fold",3]]],[11,"fold_with","","Applies <code>fold_op</code> to the given <code>init</code> value with each item of …",12,[[],["foldwith",3]]],[11,"try_fold","","Perform a fallible parallel fold.",12,[[],["tryfold",3]]],[11,"try_fold_with","","Perform a fallible parallel fold with a cloneable <code>init</code> …",12,[[],["tryfoldwith",3]]],[11,"sum","","Sums up the items in the iterator.",12,[[]]],[11,"product","","Multiplies all the items in the iterator.",12,[[]]],[11,"min","","Computes the minimum of all the items in the iterator. If …",12,[[],["option",4]]],[11,"min_by","","Computes the minimum of all the items in the iterator …",12,[[],["option",4]]],[11,"min_by_key","","Computes the item that yields the minimum value for the …",12,[[],["option",4]]],[11,"max","","Computes the maximum of all the items in the iterator. If …",12,[[],["option",4]]],[11,"max_by","","Computes the maximum of all the items in the iterator …",12,[[],["option",4]]],[11,"max_by_key","","Computes the item that yields the maximum value for the …",12,[[],["option",4]]],[11,"chain","","Takes two iterators and creates a new iterator over both.",12,[[],["chain",3]]],[11,"find_any","","Searches for <strong>some</strong> item in the parallel iterator that …",12,[[],["option",4]]],[11,"find_first","","Searches for the sequentially <strong>first</strong> item in the parallel …",12,[[],["option",4]]],[11,"find_last","","Searches for the sequentially <strong>last</strong> item in the parallel …",12,[[],["option",4]]],[11,"find_map_any","","Applies the given predicate to the items in the parallel …",12,[[],["option",4]]],[11,"find_map_first","","Applies the given predicate to the items in the parallel …",12,[[],["option",4]]],[11,"find_map_last","","Applies the given predicate to the items in the parallel …",12,[[],["option",4]]],[11,"any","","Searches for <strong>some</strong> item in the parallel iterator that …",12,[[],["bool",15]]],[11,"all","","Tests that every item in the parallel iterator matches …",12,[[],["bool",15]]],[11,"while_some","","Creates an iterator over the <code>Some</code> items of this iterator, …",12,[[],["whilesome",3]]],[11,"panic_fuse","","Wraps an iterator with a fuse in case of panics, to halt …",12,[[],["panicfuse",3]]],[11,"collect","","Create a fresh collection containing all the element …",12,[[]]],[11,"unzip","","Unzips the items of a parallel iterator into a pair of …",12,[[]]],[11,"partition","","Partitions the items of a parallel iterator into a pair …",12,[[]]],[11,"partition_map","","Partitions and maps the items of a parallel iterator into …",12,[[]]],[11,"intersperse","","Intersperses clones of an element between items of this …",12,[[],["intersperse",3]]],[10,"drive_unindexed","","Internal method used to define the behavior of this …",12,[[]]],[11,"opt_len","","Internal method used to define the behavior of this …",12,[[],[["option",4],["usize",15]]]],[8,"IndexedParallelIterator","","An iterator that supports \\\"random access\\\" to its data, …",null,null],[11,"collect_into_vec","","Collects the results of the iterator into the specified …",13,[[["vec",3]]]],[11,"unzip_into_vecs","","Unzips the results of the iterator into the specified …",13,[[["vec",3],["vec",3]]]],[11,"zip","","Iterate over tuples <code>(A, B)</code>, where the items <code>A</code> are from …",13,[[],["zip",3]]],[11,"zip_eq","","The same as <code>Zip</code>, but requires that both iterators have …",13,[[],["zipeq",3]]],[11,"interleave","","Interleave elements of this iterator and the other given …",13,[[],["interleave",3]]],[11,"interleave_shortest","","Interleave elements of this iterator and the other given …",13,[[],["interleaveshortest",3]]],[11,"chunks","","Split an iterator up into fixed-size chunks.",13,[[["usize",15]],["chunks",3]]],[11,"cmp","","Lexicographically compares the elements of this …",13,[[],["ordering",4]]],[11,"partial_cmp","","Lexicographically compares the elements of this …",13,[[],[["option",4],["ordering",4]]]],[11,"eq","","Determines if the elements of this <code>ParallelIterator</code> are …",13,[[],["bool",15]]],[11,"ne","","Determines if the elements of this <code>ParallelIterator</code> are …",13,[[],["bool",15]]],[11,"lt","","Determines if the elements of this <code>ParallelIterator</code> are …",13,[[],["bool",15]]],[11,"le","","Determines if the elements of this <code>ParallelIterator</code> are …",13,[[],["bool",15]]],[11,"gt","","Determines if the elements of this <code>ParallelIterator</code> are …",13,[[],["bool",15]]],[11,"ge","","Determines if the elements of this <code>ParallelIterator</code> are …",13,[[],["bool",15]]],[11,"enumerate","","Yields an index along with each item.",13,[[],["enumerate",3]]],[11,"skip","","Creates an iterator that skips the first <code>n</code> elements.",13,[[["usize",15]],["skip",3]]],[11,"take","","Creates an iterator that yields the first <code>n</code> elements.",13,[[["usize",15]],["take",3]]],[11,"position_any","","Searches for <strong>some</strong> item in the parallel iterator that …",13,[[],[["option",4],["usize",15]]]],[11,"position_first","","Searches for the sequentially <strong>first</strong> item in the parallel …",13,[[],[["option",4],["usize",15]]]],[11,"position_last","","Searches for the sequentially <strong>last</strong> item in the parallel …",13,[[],[["option",4],["usize",15]]]],[11,"rev","","Produces a new iterator with the elements of this …",13,[[],["rev",3]]],[11,"with_min_len","","Sets the minimum length of iterators desired to process …",13,[[["usize",15]],["minlen",3]]],[11,"with_max_len","","Sets the maximum length of iterators desired to process …",13,[[["usize",15]],["maxlen",3]]],[10,"len","","Produces an exact count of how many items this iterator …",13,[[],["usize",15]]],[10,"drive","","Internal method used to define the behavior of this …",13,[[["consumer",8]]]],[10,"with_producer","","Internal method used to define the behavior of this …",13,[[["producercallback",8]]]],[8,"FromParallelIterator","","<code>FromParallelIterator</code> implements the creation of a …",null,null],[10,"from_par_iter","","Creates an instance of the collection from the parallel …",14,[[]]],[8,"ParallelExtend","","<code>ParallelExtend</code> extends an existing collection with items …",null,null],[10,"par_extend","","Extends an instance of the collection with the elements …",15,[[]]],[0,"option","rayon","Parallel iterator types for options",null,null],[3,"IntoIter","rayon::option","A parallel iterator over the value in <code>Some</code> variant of an …",null,null],[3,"Iter","","A parallel iterator over a reference to the <code>Some</code> variant …",null,null],[3,"IterMut","","A parallel iterator over a mutable reference to the <code>Some</code> …",null,null],[0,"prelude","rayon","The rayon prelude imports the various <code>ParallelIterator</code> …",null,null],[8,"ParallelBridge","rayon::prelude","Conversion trait to convert an <code>Iterator</code> to a …",null,null],[10,"par_bridge","","Create a bridge from this type to a <code>ParallelIterator</code>.",8,[[],["iterbridge",3]]],[0,"range","rayon","Parallel iterator types for ranges, the type for values …",null,null],[3,"Iter","rayon::range","Parallel iterator over a range, implemented for all …",null,null],[0,"range_inclusive","rayon","Parallel iterator types for inclusive ranges, the type …",null,null],[3,"Iter","rayon::range_inclusive","Parallel iterator over an inclusive range, implemented …",null,null],[0,"result","rayon","Parallel iterator types for results",null,null],[3,"IntoIter","rayon::result","Parallel iterator over a result",null,null],[3,"Iter","","Parallel iterator over an immutable reference to a result",null,null],[3,"IterMut","","Parallel iterator over a mutable reference to a result",null,null],[0,"slice","rayon","Parallel iterator types for slices",null,null],[8,"ParallelSlice","rayon::slice","Parallel extensions for slices.",null,null],[10,"as_parallel_slice","","Returns a plain slice, which is used to implement the …",16,[[]]],[11,"par_split","","Returns a parallel iterator over subslices separated by …",16,[[],["split",3]]],[11,"par_windows","","Returns a parallel iterator over all contiguous windows …",16,[[["usize",15]],["windows",3]]],[11,"par_chunks","","Returns a parallel iterator over at most <code>chunk_size</code> …",16,[[["usize",15]],["chunks",3]]],[8,"ParallelSliceMut","","Parallel extensions for mutable slices.",null,null],[10,"as_parallel_slice_mut","","Returns a plain mutable slice, which is used to implement …",17,[[]]],[11,"par_split_mut","","Returns a parallel iterator over mutable subslices …",17,[[],["splitmut",3]]],[11,"par_chunks_mut","","Returns a parallel iterator over at most <code>chunk_size</code> …",17,[[["usize",15]],["chunksmut",3]]],[11,"par_sort","","Sorts the slice in parallel.",17,[[]]],[11,"par_sort_by","","Sorts the slice in parallel with a comparator function.",17,[[]]],[11,"par_sort_by_key","","Sorts the slice in parallel with a key extraction …",17,[[]]],[11,"par_sort_unstable","","Sorts the slice in parallel, but may not preserve the …",17,[[]]],[11,"par_sort_unstable_by","","Sorts the slice in parallel with a comparator function, …",17,[[]]],[11,"par_sort_unstable_by_key","","Sorts the slice in parallel with a key extraction …",17,[[]]],[3,"Iter","","Parallel iterator over immutable items in a slice",null,null],[3,"Chunks","","Parallel iterator over immutable non-overlapping chunks …",null,null],[3,"Windows","","Parallel iterator over immutable overlapping windows of a …",null,null],[3,"IterMut","","Parallel iterator over mutable items in a slice",null,null],[3,"ChunksMut","","Parallel iterator over mutable non-overlapping chunks of …",null,null],[3,"Split","","Parallel iterator over slices separated by a predicate",null,null],[3,"SplitMut","","Parallel iterator over mutable slices separated by a …",null,null],[0,"str","rayon","Parallel iterator types for strings",null,null],[8,"ParallelString","rayon::str","Parallel extensions for strings.",null,null],[10,"as_parallel_string","","Returns a plain string slice, which is used to implement …",18,[[],["str",15]]],[11,"par_chars","","Returns a parallel iterator over the characters of a …",18,[[],["chars",3]]],[11,"par_char_indices","","Returns a parallel iterator over the characters of a …",18,[[],["charindices",3]]],[11,"par_bytes","","Returns a parallel iterator over the bytes of a string.",18,[[],["bytes",3]]],[11,"par_encode_utf16","","Returns a parallel iterator over a string encoded as …",18,[[],["encodeutf16",3]]],[11,"par_split","","Returns a parallel iterator over substrings separated by a…",18,[[["pattern",8]],[["split",3],["pattern",8]]]],[11,"par_split_terminator","","Returns a parallel iterator over substrings terminated by …",18,[[["pattern",8]],[["pattern",8],["splitterminator",3]]]],[11,"par_lines","","Returns a parallel iterator over the lines of a string, …",18,[[],["lines",3]]],[11,"par_split_whitespace","","Returns a parallel iterator over the sub-slices of a …",18,[[],["splitwhitespace",3]]],[11,"par_matches","","Returns a parallel iterator over substrings that match a …",18,[[["pattern",8]],[["matches",3],["pattern",8]]]],[11,"par_match_indices","","Returns a parallel iterator over substrings that match a …",18,[[["pattern",8]],[["pattern",8],["matchindices",3]]]],[3,"Chars","","Parallel iterator over the characters of a string",null,null],[3,"CharIndices","","Parallel iterator over the characters of a string, with …",null,null],[3,"Bytes","","Parallel iterator over the bytes of a string",null,null],[3,"EncodeUtf16","","Parallel iterator over a string encoded as UTF-16",null,null],[3,"Split","","Parallel iterator over substrings separated by a pattern",null,null],[3,"SplitTerminator","","Parallel iterator over substrings separated by a …",null,null],[3,"Lines","","Parallel iterator over lines in a string",null,null],[3,"SplitWhitespace","","Parallel iterator over substrings separated by whitespace",null,null],[3,"Matches","","Parallel iterator over substrings that match a pattern",null,null],[3,"MatchIndices","","Parallel iterator over substrings that match a pattern, …",null,null],[0,"vec","rayon","Parallel iterator types for vectors (<code>Vec<T></code>)",null,null],[3,"IntoIter","rayon::vec","Parallel iterator that moves out of a vector.",null,null],[3,"FnContext","rayon","Provides the calling context to a closure called by …",null,null],[3,"ThreadBuilder","","Thread builder used for customization via …",null,null],[3,"ThreadPool","","Represents a user created thread-pool.",null,null],[3,"ThreadPoolBuildError","","Error when initializing a thread pool.",null,null],[3,"ThreadPoolBuilder","","Used to create a new <code>ThreadPool</code> or to configure the …",null,null],[5,"current_num_threads","","Returns the number of threads in the current registry. If …",null,[[],["usize",15]]],[5,"current_thread_index","","If called from a Rayon worker thread, returns the index …",null,[[],[["usize",15],["option",4]]]],[5,"join","","Takes two closures and <em>potentially</em> runs them in parallel. …",null,[[]]],[5,"join_context","","Identical to <code>join</code>, except that the closures have a …",null,[[]]],[5,"scope","","Create a \\\"fork-join\\\" scope <code>s</code> and invokes the closure with …",null,[[]]],[3,"Scope","","Represents a fork-join scope which can be used to spawn …",null,null],[5,"scope_fifo","","Create a \\\"fork-join\\\" scope <code>s</code> with FIFO order, and invokes …",null,[[]]],[3,"ScopeFifo","","Represents a fork-join scope which can be used to spawn …",null,null],[5,"spawn","","Fires off a task into the Rayon threadpool in the …",null,[[]]],[5,"spawn_fifo","","Fires off a task into the Rayon threadpool in the …",null,[[]]],[11,"into_par_iter","rayon::collections::binary_heap","",19,[[]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"into_par_iter","","",20,[[]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"into_par_iter","rayon::collections::btree_map","",21,[[]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"into_par_iter","","",22,[[]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"into_par_iter","","",23,[[]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"into_par_iter","rayon::collections::btree_set","",24,[[]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"into_par_iter","","",25,[[]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"into_par_iter","rayon::collections::hash_map","",26,[[]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"into_par_iter","","",27,[[]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"into_par_iter","","",28,[[]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"into_par_iter","rayon::collections::hash_set","",29,[[]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"into_par_iter","","",30,[[]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"into_par_iter","rayon::collections::linked_list","",31,[[]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"into_par_iter","","",32,[[]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"into_par_iter","","",33,[[]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"into_par_iter","rayon::collections::vec_deque","",34,[[]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"into_par_iter","","",35,[[]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"into_par_iter","","",36,[[]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"into_par_iter","rayon::iter","",37,[[]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"into_par_iter","","",38,[[]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"into_par_iter","","",39,[[]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"into_par_iter","","",40,[[]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"into_par_iter","","",41,[[]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"to_owned","","",41,[[]]],[11,"clone_into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"into_par_iter","","",42,[[]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"into_par_iter","","",43,[[]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"into_par_iter","","",44,[[]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_owned","","",44,[[]]],[11,"clone_into","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"into_par_iter","","",45,[[]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"to_owned","","",45,[[]]],[11,"clone_into","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"into_par_iter","","",46,[[]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"to_owned","","",46,[[]]],[11,"clone_into","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"into_par_iter","","",47,[[]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"into_par_iter","","",48,[[]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"to_owned","","",48,[[]]],[11,"clone_into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"into_par_iter","","",49,[[]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"to_owned","","",49,[[]]],[11,"clone_into","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"into_par_iter","","",50,[[]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"to_owned","","",50,[[]]],[11,"clone_into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"into_par_iter","","",51,[[]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"to_owned","","",51,[[]]],[11,"clone_into","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"into_par_iter","","",52,[[]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"to_owned","","",52,[[]]],[11,"clone_into","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"into_par_iter","","",53,[[]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"to_owned","","",53,[[]]],[11,"clone_into","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"into_par_iter","","",54,[[]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"to_owned","","",54,[[]]],[11,"clone_into","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"into_par_iter","","",55,[[]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"to_owned","","",55,[[]]],[11,"clone_into","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"into_par_iter","","",56,[[]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"to_owned","","",56,[[]]],[11,"clone_into","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"into_par_iter","","",57,[[]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"to_owned","","",57,[[]]],[11,"clone_into","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"into_par_iter","","",58,[[]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"to_owned","","",58,[[]]],[11,"clone_into","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"into_par_iter","","",59,[[]]],[11,"from","","",59,[[]]],[11,"into","","",59,[[]]],[11,"to_owned","","",59,[[]]],[11,"clone_into","","",59,[[]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"into_par_iter","","",60,[[]]],[11,"from","","",60,[[]]],[11,"into","","",60,[[]]],[11,"to_owned","","",60,[[]]],[11,"clone_into","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"into_par_iter","","",61,[[]]],[11,"from","","",61,[[]]],[11,"into","","",61,[[]]],[11,"to_owned","","",61,[[]]],[11,"clone_into","","",61,[[]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"into_par_iter","","",62,[[]]],[11,"from","","",62,[[]]],[11,"into","","",62,[[]]],[11,"to_owned","","",62,[[]]],[11,"clone_into","","",62,[[]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"into_par_iter","","",63,[[]]],[11,"from","","",63,[[]]],[11,"into","","",63,[[]]],[11,"to_owned","","",63,[[]]],[11,"clone_into","","",63,[[]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"into_par_iter","","",64,[[]]],[11,"from","","",64,[[]]],[11,"into","","",64,[[]]],[11,"to_owned","","",64,[[]]],[11,"clone_into","","",64,[[]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"into_par_iter","","",65,[[]]],[11,"from","","",65,[[]]],[11,"into","","",65,[[]]],[11,"to_owned","","",65,[[]]],[11,"clone_into","","",65,[[]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"try_into","","",65,[[],["result",4]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"into_par_iter","","",66,[[]]],[11,"from","","",66,[[]]],[11,"into","","",66,[[]]],[11,"to_owned","","",66,[[]]],[11,"clone_into","","",66,[[]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"into_par_iter","","",67,[[]]],[11,"from","","",67,[[]]],[11,"into","","",67,[[]]],[11,"to_owned","","",67,[[]]],[11,"clone_into","","",67,[[]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"try_into","","",67,[[],["result",4]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"into_par_iter","","",68,[[]]],[11,"from","","",68,[[]]],[11,"into","","",68,[[]]],[11,"to_owned","","",68,[[]]],[11,"clone_into","","",68,[[]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"try_into","","",68,[[],["result",4]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"into_par_iter","","",69,[[]]],[11,"from","","",69,[[]]],[11,"into","","",69,[[]]],[11,"to_owned","","",69,[[]]],[11,"clone_into","","",69,[[]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"try_into","","",69,[[],["result",4]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"into_par_iter","","",70,[[]]],[11,"from","","",70,[[]]],[11,"into","","",70,[[]]],[11,"to_owned","","",70,[[]]],[11,"clone_into","","",70,[[]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"try_into","","",70,[[],["result",4]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"into_par_iter","","",71,[[]]],[11,"from","","",71,[[]]],[11,"into","","",71,[[]]],[11,"to_owned","","",71,[[]]],[11,"clone_into","","",71,[[]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"try_into","","",71,[[],["result",4]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"into_par_iter","","",72,[[]]],[11,"from","","",72,[[]]],[11,"into","","",72,[[]]],[11,"to_owned","","",72,[[]]],[11,"clone_into","","",72,[[]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"try_into","","",72,[[],["result",4]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"into_par_iter","","",73,[[]]],[11,"from","","",73,[[]]],[11,"into","","",73,[[]]],[11,"to_owned","","",73,[[]]],[11,"clone_into","","",73,[[]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"try_into","","",73,[[],["result",4]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"into_par_iter","","",7,[[]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"into_iter","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"to_string","","",7,[[],["string",3]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"into_par_iter","rayon::option","",74,[[]]],[11,"from","","",74,[[]]],[11,"into","","",74,[[]]],[11,"to_owned","","",74,[[]]],[11,"clone_into","","",74,[[]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"try_into","","",74,[[],["result",4]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"into_par_iter","","",75,[[]]],[11,"from","","",75,[[]]],[11,"into","","",75,[[]]],[11,"to_owned","","",75,[[]]],[11,"clone_into","","",75,[[]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"try_into","","",75,[[],["result",4]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"into_par_iter","","",76,[[]]],[11,"from","","",76,[[]]],[11,"into","","",76,[[]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"try_into","","",76,[[],["result",4]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"into_par_iter","rayon::range","",77,[[]]],[11,"from","","",77,[[]]],[11,"into","","",77,[[]]],[11,"to_owned","","",77,[[]]],[11,"clone_into","","",77,[[]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"try_into","","",77,[[],["result",4]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"into_par_iter","rayon::range_inclusive","",78,[[]]],[11,"from","","",78,[[]]],[11,"into","","",78,[[]]],[11,"to_owned","","",78,[[]]],[11,"clone_into","","",78,[[]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"try_into","","",78,[[],["result",4]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"into_par_iter","rayon::result","",79,[[]]],[11,"from","","",79,[[]]],[11,"into","","",79,[[]]],[11,"to_owned","","",79,[[]]],[11,"clone_into","","",79,[[]]],[11,"borrow","","",79,[[]]],[11,"borrow_mut","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"try_into","","",79,[[],["result",4]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"into_par_iter","","",80,[[]]],[11,"from","","",80,[[]]],[11,"into","","",80,[[]]],[11,"to_owned","","",80,[[]]],[11,"clone_into","","",80,[[]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"try_into","","",80,[[],["result",4]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"into_par_iter","","",81,[[]]],[11,"from","","",81,[[]]],[11,"into","","",81,[[]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"try_into","","",81,[[],["result",4]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"into_par_iter","rayon::slice","",82,[[]]],[11,"from","","",82,[[]]],[11,"into","","",82,[[]]],[11,"to_owned","","",82,[[]]],[11,"clone_into","","",82,[[]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"try_into","","",82,[[],["result",4]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"into_par_iter","","",83,[[]]],[11,"from","","",83,[[]]],[11,"into","","",83,[[]]],[11,"to_owned","","",83,[[]]],[11,"clone_into","","",83,[[]]],[11,"borrow","","",83,[[]]],[11,"borrow_mut","","",83,[[]]],[11,"try_from","","",83,[[],["result",4]]],[11,"try_into","","",83,[[],["result",4]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"into_par_iter","","",84,[[]]],[11,"from","","",84,[[]]],[11,"into","","",84,[[]]],[11,"to_owned","","",84,[[]]],[11,"clone_into","","",84,[[]]],[11,"borrow","","",84,[[]]],[11,"borrow_mut","","",84,[[]]],[11,"try_from","","",84,[[],["result",4]]],[11,"try_into","","",84,[[],["result",4]]],[11,"type_id","","",84,[[],["typeid",3]]],[11,"into_par_iter","","",85,[[]]],[11,"from","","",85,[[]]],[11,"into","","",85,[[]]],[11,"borrow","","",85,[[]]],[11,"borrow_mut","","",85,[[]]],[11,"try_from","","",85,[[],["result",4]]],[11,"try_into","","",85,[[],["result",4]]],[11,"type_id","","",85,[[],["typeid",3]]],[11,"into_par_iter","","",86,[[]]],[11,"from","","",86,[[]]],[11,"into","","",86,[[]]],[11,"borrow","","",86,[[]]],[11,"borrow_mut","","",86,[[]]],[11,"try_from","","",86,[[],["result",4]]],[11,"try_into","","",86,[[],["result",4]]],[11,"type_id","","",86,[[],["typeid",3]]],[11,"into_par_iter","","",87,[[]]],[11,"from","","",87,[[]]],[11,"into","","",87,[[]]],[11,"to_owned","","",87,[[]]],[11,"clone_into","","",87,[[]]],[11,"borrow","","",87,[[]]],[11,"borrow_mut","","",87,[[]]],[11,"try_from","","",87,[[],["result",4]]],[11,"try_into","","",87,[[],["result",4]]],[11,"type_id","","",87,[[],["typeid",3]]],[11,"into_par_iter","","",88,[[]]],[11,"from","","",88,[[]]],[11,"into","","",88,[[]]],[11,"borrow","","",88,[[]]],[11,"borrow_mut","","",88,[[]]],[11,"try_from","","",88,[[],["result",4]]],[11,"try_into","","",88,[[],["result",4]]],[11,"type_id","","",88,[[],["typeid",3]]],[11,"into_par_iter","rayon::str","",89,[[]]],[11,"from","","",89,[[]]],[11,"into","","",89,[[]]],[11,"to_owned","","",89,[[]]],[11,"clone_into","","",89,[[]]],[11,"borrow","","",89,[[]]],[11,"borrow_mut","","",89,[[]]],[11,"try_from","","",89,[[],["result",4]]],[11,"try_into","","",89,[[],["result",4]]],[11,"type_id","","",89,[[],["typeid",3]]],[11,"into_par_iter","","",90,[[]]],[11,"from","","",90,[[]]],[11,"into","","",90,[[]]],[11,"to_owned","","",90,[[]]],[11,"clone_into","","",90,[[]]],[11,"borrow","","",90,[[]]],[11,"borrow_mut","","",90,[[]]],[11,"try_from","","",90,[[],["result",4]]],[11,"try_into","","",90,[[],["result",4]]],[11,"type_id","","",90,[[],["typeid",3]]],[11,"into_par_iter","","",91,[[]]],[11,"from","","",91,[[]]],[11,"into","","",91,[[]]],[11,"to_owned","","",91,[[]]],[11,"clone_into","","",91,[[]]],[11,"borrow","","",91,[[]]],[11,"borrow_mut","","",91,[[]]],[11,"try_from","","",91,[[],["result",4]]],[11,"try_into","","",91,[[],["result",4]]],[11,"type_id","","",91,[[],["typeid",3]]],[11,"into_par_iter","","",92,[[]]],[11,"from","","",92,[[]]],[11,"into","","",92,[[]]],[11,"to_owned","","",92,[[]]],[11,"clone_into","","",92,[[]]],[11,"borrow","","",92,[[]]],[11,"borrow_mut","","",92,[[]]],[11,"try_from","","",92,[[],["result",4]]],[11,"try_into","","",92,[[],["result",4]]],[11,"type_id","","",92,[[],["typeid",3]]],[11,"into_par_iter","","",93,[[]]],[11,"from","","",93,[[]]],[11,"into","","",93,[[]]],[11,"to_owned","","",93,[[]]],[11,"clone_into","","",93,[[]]],[11,"borrow","","",93,[[]]],[11,"borrow_mut","","",93,[[]]],[11,"try_from","","",93,[[],["result",4]]],[11,"try_into","","",93,[[],["result",4]]],[11,"type_id","","",93,[[],["typeid",3]]],[11,"into_par_iter","","",94,[[]]],[11,"from","","",94,[[]]],[11,"into","","",94,[[]]],[11,"to_owned","","",94,[[]]],[11,"clone_into","","",94,[[]]],[11,"borrow","","",94,[[]]],[11,"borrow_mut","","",94,[[]]],[11,"try_from","","",94,[[],["result",4]]],[11,"try_into","","",94,[[],["result",4]]],[11,"type_id","","",94,[[],["typeid",3]]],[11,"into_par_iter","","",95,[[]]],[11,"from","","",95,[[]]],[11,"into","","",95,[[]]],[11,"to_owned","","",95,[[]]],[11,"clone_into","","",95,[[]]],[11,"borrow","","",95,[[]]],[11,"borrow_mut","","",95,[[]]],[11,"try_from","","",95,[[],["result",4]]],[11,"try_into","","",95,[[],["result",4]]],[11,"type_id","","",95,[[],["typeid",3]]],[11,"into_par_iter","","",96,[[]]],[11,"from","","",96,[[]]],[11,"into","","",96,[[]]],[11,"to_owned","","",96,[[]]],[11,"clone_into","","",96,[[]]],[11,"borrow","","",96,[[]]],[11,"borrow_mut","","",96,[[]]],[11,"try_from","","",96,[[],["result",4]]],[11,"try_into","","",96,[[],["result",4]]],[11,"type_id","","",96,[[],["typeid",3]]],[11,"into_par_iter","","",97,[[]]],[11,"from","","",97,[[]]],[11,"into","","",97,[[]]],[11,"to_owned","","",97,[[]]],[11,"clone_into","","",97,[[]]],[11,"borrow","","",97,[[]]],[11,"borrow_mut","","",97,[[]]],[11,"try_from","","",97,[[],["result",4]]],[11,"try_into","","",97,[[],["result",4]]],[11,"type_id","","",97,[[],["typeid",3]]],[11,"into_par_iter","","",98,[[]]],[11,"from","","",98,[[]]],[11,"into","","",98,[[]]],[11,"to_owned","","",98,[[]]],[11,"clone_into","","",98,[[]]],[11,"borrow","","",98,[[]]],[11,"borrow_mut","","",98,[[]]],[11,"try_from","","",98,[[],["result",4]]],[11,"try_into","","",98,[[],["result",4]]],[11,"type_id","","",98,[[],["typeid",3]]],[11,"into_par_iter","rayon::vec","",99,[[]]],[11,"from","","",99,[[]]],[11,"into","","",99,[[]]],[11,"to_owned","","",99,[[]]],[11,"clone_into","","",99,[[]]],[11,"borrow","","",99,[[]]],[11,"borrow_mut","","",99,[[]]],[11,"try_from","","",99,[[],["result",4]]],[11,"try_into","","",99,[[],["result",4]]],[11,"type_id","","",99,[[],["typeid",3]]],[11,"from","rayon","",100,[[]]],[11,"into","","",100,[[]]],[11,"borrow","","",100,[[]]],[11,"borrow_mut","","",100,[[]]],[11,"try_from","","",100,[[],["result",4]]],[11,"try_into","","",100,[[],["result",4]]],[11,"type_id","","",100,[[],["typeid",3]]],[11,"from","","",101,[[]]],[11,"into","","",101,[[]]],[11,"borrow","","",101,[[]]],[11,"borrow_mut","","",101,[[]]],[11,"try_from","","",101,[[],["result",4]]],[11,"try_into","","",101,[[],["result",4]]],[11,"type_id","","",101,[[],["typeid",3]]],[11,"from","","",102,[[]]],[11,"into","","",102,[[]]],[11,"borrow","","",102,[[]]],[11,"borrow_mut","","",102,[[]]],[11,"try_from","","",102,[[],["result",4]]],[11,"try_into","","",102,[[],["result",4]]],[11,"type_id","","",102,[[],["typeid",3]]],[11,"from","","",103,[[]]],[11,"into","","",103,[[]]],[11,"to_string","","",103,[[],["string",3]]],[11,"borrow","","",103,[[]]],[11,"borrow_mut","","",103,[[]]],[11,"try_from","","",103,[[],["result",4]]],[11,"try_into","","",103,[[],["result",4]]],[11,"type_id","","",103,[[],["typeid",3]]],[11,"from","","",104,[[]]],[11,"into","","",104,[[]]],[11,"borrow","","",104,[[]]],[11,"borrow_mut","","",104,[[]]],[11,"try_from","","",104,[[],["result",4]]],[11,"try_into","","",104,[[],["result",4]]],[11,"type_id","","",104,[[],["typeid",3]]],[11,"from","","",105,[[]]],[11,"into","","",105,[[]]],[11,"borrow","","",105,[[]]],[11,"borrow_mut","","",105,[[]]],[11,"try_from","","",105,[[],["result",4]]],[11,"try_into","","",105,[[],["result",4]]],[11,"type_id","","",105,[[],["typeid",3]]],[11,"from","","",106,[[]]],[11,"into","","",106,[[]]],[11,"borrow","","",106,[[]]],[11,"borrow_mut","","",106,[[]]],[11,"try_from","","",106,[[],["result",4]]],[11,"try_into","","",106,[[],["result",4]]],[11,"type_id","","",106,[[],["typeid",3]]],[11,"into","rayon::iter","",7,[[],["result",4]]],[11,"clone","","",7,[[],["either",4]]],[11,"fmt","","",7,[[["formatter",3]],[["error",3],["result",4]]]],[11,"next","","",7,[[],["option",4]]],[11,"size_hint","","",7,[[]]],[11,"fold","","",7,[[]]],[11,"count","","",7,[[],["usize",15]]],[11,"last","","",7,[[],["option",4]]],[11,"nth","","",7,[[["usize",15]],["option",4]]],[11,"collect","","",7,[[]]],[11,"all","","",7,[[],["bool",15]]],[11,"extend","","",7,[[]]],[11,"from","","",7,[[["result",4]],["either",4]]],[11,"eq","","",7,[[["either",4]],["bool",15]]],[11,"ne","","",7,[[["either",4]],["bool",15]]],[11,"cmp","","",7,[[["either",4]],["ordering",4]]],[11,"partial_cmp","","",7,[[["either",4]],[["option",4],["ordering",4]]]],[11,"hash","","",7,[[]]],[11,"fmt","","",7,[[["formatter",3]],[["error",3],["result",4]]]],[11,"next_back","","",7,[[],["option",4]]],[11,"deref","","",7,[[]]],[11,"deref_mut","","",7,[[]]],[11,"as_ref","","",7,[[]]],[11,"as_ref","","",7,[[],["str",15]]],[11,"as_ref","","",7,[[]]],[11,"as_mut","","",7,[[],["str",15]]],[11,"as_mut","","",7,[[]]],[11,"as_mut","","",7,[[]]],[11,"description","rayon","",103,[[],["str",15]]],[11,"drop","","",102,[[]]],[11,"fmt","","",101,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",106,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",100,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",105,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",102,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",104,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",103,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",103,[[["formatter",3]],[["error",3],["result",4]]]],[11,"default","","",104,[[],[["threadpoolbuilder",3],["defaultspawn",3]]]],[11,"drive_unindexed","rayon::collections::binary_heap","",19,[[]]],[11,"opt_len","","",19,[[],[["option",4],["usize",15]]]],[11,"drive_unindexed","","",20,[[]]],[11,"opt_len","","",20,[[],[["option",4],["usize",15]]]],[11,"drive_unindexed","rayon::collections::btree_map","",21,[[]]],[11,"opt_len","","",21,[[],[["option",4],["usize",15]]]],[11,"drive_unindexed","","",22,[[]]],[11,"opt_len","","",22,[[],[["option",4],["usize",15]]]],[11,"drive_unindexed","","",23,[[]]],[11,"opt_len","","",23,[[],[["option",4],["usize",15]]]],[11,"drive_unindexed","rayon::collections::btree_set","",24,[[]]],[11,"opt_len","","",24,[[],[["option",4],["usize",15]]]],[11,"drive_unindexed","","",25,[[]]],[11,"opt_len","","",25,[[],[["option",4],["usize",15]]]],[11,"drive_unindexed","rayon::collections::hash_map","",26,[[]]],[11,"opt_len","","",26,[[],[["option",4],["usize",15]]]],[11,"drive_unindexed","","",27,[[]]],[11,"opt_len","","",27,[[],[["option",4],["usize",15]]]],[11,"drive_unindexed","","",28,[[]]],[11,"opt_len","","",28,[[],[["option",4],["usize",15]]]],[11,"drive_unindexed","rayon::collections::hash_set","",29,[[]]],[11,"opt_len","","",29,[[],[["option",4],["usize",15]]]],[11,"drive_unindexed","","",30,[[]]],[11,"opt_len","","",30,[[],[["option",4],["usize",15]]]],[11,"drive_unindexed","rayon::collections::linked_list","",31,[[]]],[11,"opt_len","","",31,[[],[["option",4],["usize",15]]]],[11,"drive_unindexed","","",32,[[]]],[11,"opt_len","","",32,[[],[["option",4],["usize",15]]]],[11,"drive_unindexed","","",33,[[]]],[11,"opt_len","","",33,[[],[["option",4],["usize",15]]]],[11,"drive_unindexed","rayon::collections::vec_deque","",34,[[]]],[11,"opt_len","","",34,[[],[["option",4],["usize",15]]]],[11,"drive_unindexed","","",35,[[]]],[11,"opt_len","","",35,[[],[["option",4],["usize",15]]]],[11,"drive_unindexed","","",36,[[]]],[11,"opt_len","","",36,[[],[["option",4],["usize",15]]]],[11,"drive_unindexed","rayon::iter","",37,[[]]],[11,"drive_unindexed","","",38,[[]]],[11,"opt_len","","",38,[[],[["option",4],["usize",15]]]],[11,"drive_unindexed","","",39,[[]]],[11,"opt_len","","",39,[[],[["option",4],["usize",15]]]],[11,"drive_unindexed","","",40,[[]]],[11,"opt_len","","",40,[[],[["option",4],["usize",15]]]],[11,"drive_unindexed","","",41,[[]]],[11,"drive_unindexed","","",42,[[]]],[11,"drive_unindexed","","",43,[[]]],[11,"drive_unindexed","","",44,[[]]],[11,"drive_unindexed","","",45,[[]]],[11,"drive_unindexed","","",46,[[]]],[11,"drive_unindexed","","",47,[[]]],[11,"drive_unindexed","","",48,[[]]],[11,"drive_unindexed","","",49,[[]]],[11,"opt_len","","",49,[[],[["option",4],["usize",15]]]],[11,"drive_unindexed","","",50,[[]]],[11,"drive_unindexed","","",51,[[]]],[11,"opt_len","","",51,[[],[["option",4],["usize",15]]]],[11,"drive_unindexed","","",52,[[]]],[11,"opt_len","","",52,[[],[["option",4],["usize",15]]]],[11,"drive_unindexed","","",53,[[]]],[11,"opt_len","","",53,[[],[["option",4],["usize",15]]]],[11,"drive_unindexed","","",54,[[]]],[11,"opt_len","","",54,[[],[["option",4],["usize",15]]]],[11,"drive_unindexed","","",55,[[]]],[11,"opt_len","","",55,[[],[["option",4],["usize",15]]]],[11,"drive_unindexed","","",56,[[]]],[11,"opt_len","","",56,[[],[["option",4],["usize",15]]]],[11,"drive_unindexed","","",57,[[]]],[11,"opt_len","","",57,[[],[["option",4],["usize",15]]]],[11,"drive_unindexed","","",57,[[]]],[11,"opt_len","","",57,[[],[["option",4],["usize",15]]]],[11,"drive_unindexed","","",57,[[]]],[11,"opt_len","","",57,[[],[["option",4],["usize",15]]]],[11,"drive_unindexed","","",57,[[]]],[11,"opt_len","","",57,[[],[["option",4],["usize",15]]]],[11,"drive_unindexed","","",57,[[]]],[11,"opt_len","","",57,[[],[["option",4],["usize",15]]]],[11,"drive_unindexed","","",57,[[]]],[11,"opt_len","","",57,[[],[["option",4],["usize",15]]]],[11,"drive_unindexed","","",57,[[]]],[11,"opt_len","","",57,[[],[["option",4],["usize",15]]]],[11,"drive_unindexed","","",57,[[]]],[11,"opt_len","","",57,[[],[["option",4],["usize",15]]]],[11,"drive_unindexed","","",57,[[]]],[11,"opt_len","","",57,[[],[["option",4],["usize",15]]]],[11,"drive_unindexed","","",57,[[]]],[11,"opt_len","","",57,[[],[["option",4],["usize",15]]]],[11,"drive_unindexed","","",57,[[]]],[11,"opt_len","","",57,[[],[["option",4],["usize",15]]]],[11,"drive_unindexed","","",57,[[]]],[11,"opt_len","","",57,[[],[["option",4],["usize",15]]]],[11,"drive_unindexed","","",58,[[]]],[11,"opt_len","","",58,[[],[["option",4],["usize",15]]]],[11,"drive_unindexed","","",59,[[]]],[11,"opt_len","","",59,[[],[["option",4],["usize",15]]]],[11,"drive_unindexed","","",60,[[]]],[11,"opt_len","","",60,[[],[["option",4],["usize",15]]]],[11,"drive_unindexed","","",61,[[]]],[11,"opt_len","","",61,[[],[["option",4],["usize",15]]]],[11,"drive_unindexed","","",62,[[]]],[11,"opt_len","","",62,[[],[["option",4],["usize",15]]]],[11,"drive_unindexed","","",63,[[]]],[11,"opt_len","","",63,[[],[["option",4],["usize",15]]]],[11,"drive_unindexed","","",64,[[]]],[11,"opt_len","","",64,[[],[["option",4],["usize",15]]]],[11,"drive_unindexed","","",65,[[]]],[11,"opt_len","","",65,[[],[["option",4],["usize",15]]]],[11,"drive_unindexed","","",66,[[]]],[11,"opt_len","","",66,[[],[["option",4],["usize",15]]]],[11,"drive_unindexed","","",67,[[]]],[11,"opt_len","","",67,[[],[["option",4],["usize",15]]]],[11,"drive_unindexed","","",68,[[]]],[11,"opt_len","","",68,[[],[["option",4],["usize",15]]]],[11,"drive_unindexed","","",69,[[]]],[11,"drive_unindexed","","",70,[[]]],[11,"drive_unindexed","","",71,[[]]],[11,"opt_len","","",71,[[],[["option",4],["usize",15]]]],[11,"drive_unindexed","","",72,[[]]],[11,"opt_len","","",72,[[],[["option",4],["usize",15]]]],[11,"drive_unindexed","","",73,[[]]],[11,"opt_len","","",73,[[],[["option",4],["usize",15]]]],[11,"drive_unindexed","rayon::option","",74,[[]]],[11,"opt_len","","",74,[[],[["option",4],["usize",15]]]],[11,"drive_unindexed","","",75,[[]]],[11,"opt_len","","",75,[[],[["option",4],["usize",15]]]],[11,"drive_unindexed","","",76,[[]]],[11,"opt_len","","",76,[[],[["option",4],["usize",15]]]],[11,"drive_unindexed","rayon::range","",77,[[]]],[11,"opt_len","","",77,[[],[["option",4],["usize",15]]]],[11,"drive_unindexed","","",77,[[]]],[11,"opt_len","","",77,[[],[["option",4],["usize",15]]]],[11,"drive_unindexed","","",77,[[]]],[11,"opt_len","","",77,[[],[["option",4],["usize",15]]]],[11,"drive_unindexed","","",77,[[]]],[11,"opt_len","","",77,[[],[["option",4],["usize",15]]]],[11,"drive_unindexed","","",77,[[]]],[11,"opt_len","","",77,[[],[["option",4],["usize",15]]]],[11,"drive_unindexed","","",77,[[]]],[11,"opt_len","","",77,[[],[["option",4],["usize",15]]]],[11,"drive_unindexed","","",77,[[]]],[11,"opt_len","","",77,[[],[["option",4],["usize",15]]]],[11,"drive_unindexed","","",77,[[]]],[11,"opt_len","","",77,[[],[["option",4],["usize",15]]]],[11,"drive_unindexed","","",77,[[]]],[11,"opt_len","","",77,[[],[["option",4],["usize",15]]]],[11,"drive_unindexed","","",77,[[]]],[11,"opt_len","","",77,[[],[["option",4],["usize",15]]]],[11,"drive_unindexed","","",77,[[]]],[11,"opt_len","","",77,[[],[["option",4],["usize",15]]]],[11,"drive_unindexed","","",77,[[]]],[11,"opt_len","","",77,[[],[["option",4],["usize",15]]]],[11,"drive_unindexed","rayon::range_inclusive","",78,[[]]],[11,"opt_len","","",78,[[],[["option",4],["usize",15]]]],[11,"drive_unindexed","","",78,[[]]],[11,"opt_len","","",78,[[],[["option",4],["usize",15]]]],[11,"drive_unindexed","","",78,[[]]],[11,"opt_len","","",78,[[],[["option",4],["usize",15]]]],[11,"drive_unindexed","","",78,[[]]],[11,"opt_len","","",78,[[],[["option",4],["usize",15]]]],[11,"drive_unindexed","","",78,[[]]],[11,"opt_len","","",78,[[],[["option",4],["usize",15]]]],[11,"drive_unindexed","","",78,[[]]],[11,"opt_len","","",78,[[],[["option",4],["usize",15]]]],[11,"drive_unindexed","","",78,[[]]],[11,"opt_len","","",78,[[],[["option",4],["usize",15]]]],[11,"drive_unindexed","","",78,[[]]],[11,"opt_len","","",78,[[],[["option",4],["usize",15]]]],[11,"drive_unindexed","","",78,[[]]],[11,"opt_len","","",78,[[],[["option",4],["usize",15]]]],[11,"drive_unindexed","","",78,[[]]],[11,"opt_len","","",78,[[],[["option",4],["usize",15]]]],[11,"drive_unindexed","","",78,[[]]],[11,"opt_len","","",78,[[],[["option",4],["usize",15]]]],[11,"drive_unindexed","","",78,[[]]],[11,"opt_len","","",78,[[],[["option",4],["usize",15]]]],[11,"drive_unindexed","rayon::result","",79,[[]]],[11,"opt_len","","",79,[[],[["option",4],["usize",15]]]],[11,"drive_unindexed","","",80,[[]]],[11,"opt_len","","",80,[[],[["option",4],["usize",15]]]],[11,"drive_unindexed","","",81,[[]]],[11,"opt_len","","",81,[[],[["option",4],["usize",15]]]],[11,"drive_unindexed","rayon::slice","",82,[[]]],[11,"opt_len","","",82,[[],[["option",4],["usize",15]]]],[11,"drive_unindexed","","",83,[[]]],[11,"opt_len","","",83,[[],[["option",4],["usize",15]]]],[11,"drive_unindexed","","",84,[[]]],[11,"opt_len","","",84,[[],[["option",4],["usize",15]]]],[11,"drive_unindexed","","",85,[[]]],[11,"opt_len","","",85,[[],[["option",4],["usize",15]]]],[11,"drive_unindexed","","",86,[[]]],[11,"opt_len","","",86,[[],[["option",4],["usize",15]]]],[11,"drive_unindexed","","",87,[[]]],[11,"drive_unindexed","","",88,[[]]],[11,"drive_unindexed","rayon::str","",89,[[]]],[11,"drive_unindexed","","",90,[[]]],[11,"drive_unindexed","","",91,[[]]],[11,"drive_unindexed","","",92,[[]]],[11,"drive_unindexed","","",93,[[]]],[11,"drive_unindexed","","",94,[[]]],[11,"drive_unindexed","","",95,[[]]],[11,"drive_unindexed","","",96,[[]]],[11,"drive_unindexed","","",97,[[]]],[11,"drive_unindexed","","",98,[[]]],[11,"drive_unindexed","rayon::vec","",99,[[]]],[11,"opt_len","","",99,[[],[["option",4],["usize",15]]]],[11,"drive_unindexed","rayon::iter","",7,[[]]],[11,"opt_len","","",7,[[],[["option",4],["usize",15]]]],[11,"drive","rayon::collections::binary_heap","",19,[[]]],[11,"len","","",19,[[],["usize",15]]],[11,"with_producer","","",19,[[]]],[11,"drive","","",20,[[]]],[11,"len","","",20,[[],["usize",15]]],[11,"with_producer","","",20,[[]]],[11,"drive","rayon::collections::vec_deque","",34,[[]]],[11,"len","","",34,[[],["usize",15]]],[11,"with_producer","","",34,[[]]],[11,"drive","","",35,[[]]],[11,"len","","",35,[[],["usize",15]]],[11,"with_producer","","",35,[[]]],[11,"drive","","",36,[[]]],[11,"len","","",36,[[],["usize",15]]],[11,"with_producer","","",36,[[]]],[11,"drive","rayon::iter","",38,[[]]],[11,"len","","",38,[[],["usize",15]]],[11,"with_producer","","",38,[[]]],[11,"drive","","",39,[[]]],[11,"len","","",39,[[],["usize",15]]],[11,"with_producer","","",39,[[]]],[11,"drive","","",40,[[["consumer",8]]]],[11,"len","","",40,[[],["usize",15]]],[11,"with_producer","","",40,[[]]],[11,"len","","",49,[[],["usize",15]]],[11,"drive","","",49,[[["consumer",8]]]],[11,"with_producer","","",49,[[]]],[11,"len","","",51,[[],["usize",15]]],[11,"drive","","",51,[[["consumer",8]]]],[11,"with_producer","","",51,[[]]],[11,"drive","","",52,[[]]],[11,"len","","",52,[[],["usize",15]]],[11,"with_producer","","",52,[[]]],[11,"drive","","",53,[[]]],[11,"len","","",53,[[],["usize",15]]],[11,"with_producer","","",53,[[]]],[11,"drive","","",54,[[]]],[11,"len","","",54,[[],["usize",15]]],[11,"with_producer","","",54,[[]]],[11,"drive","","",55,[[]]],[11,"len","","",55,[[],["usize",15]]],[11,"with_producer","","",55,[[]]],[11,"drive","","",56,[[]]],[11,"len","","",56,[[],["usize",15]]],[11,"with_producer","","",56,[[]]],[11,"drive","","",57,[[]]],[11,"len","","",57,[[],["usize",15]]],[11,"with_producer","","",57,[[]]],[11,"drive","","",57,[[]]],[11,"len","","",57,[[],["usize",15]]],[11,"with_producer","","",57,[[]]],[11,"drive","","",57,[[]]],[11,"len","","",57,[[],["usize",15]]],[11,"with_producer","","",57,[[]]],[11,"drive","","",57,[[]]],[11,"len","","",57,[[],["usize",15]]],[11,"with_producer","","",57,[[]]],[11,"drive","","",57,[[]]],[11,"len","","",57,[[],["usize",15]]],[11,"with_producer","","",57,[[]]],[11,"drive","","",57,[[]]],[11,"len","","",57,[[],["usize",15]]],[11,"with_producer","","",57,[[]]],[11,"drive","","",57,[[]]],[11,"len","","",57,[[],["usize",15]]],[11,"with_producer","","",57,[[]]],[11,"drive","","",57,[[]]],[11,"len","","",57,[[],["usize",15]]],[11,"with_producer","","",57,[[]]],[11,"drive","","",57,[[]]],[11,"len","","",57,[[],["usize",15]]],[11,"with_producer","","",57,[[]]],[11,"drive","","",57,[[]]],[11,"len","","",57,[[],["usize",15]]],[11,"with_producer","","",57,[[]]],[11,"drive","","",57,[[]]],[11,"len","","",57,[[],["usize",15]]],[11,"with_producer","","",57,[[]]],[11,"drive","","",57,[[]]],[11,"len","","",57,[[],["usize",15]]],[11,"with_producer","","",57,[[]]],[11,"drive","","",58,[[]]],[11,"len","","",58,[[],["usize",15]]],[11,"with_producer","","",58,[[]]],[11,"drive","","",59,[[]]],[11,"len","","",59,[[],["usize",15]]],[11,"with_producer","","",59,[[]]],[11,"drive","","",60,[[]]],[11,"len","","",60,[[],["usize",15]]],[11,"with_producer","","",60,[[]]],[11,"drive","","",61,[[]]],[11,"len","","",61,[[],["usize",15]]],[11,"with_producer","","",61,[[]]],[11,"drive","","",62,[[["consumer",8]]]],[11,"len","","",62,[[],["usize",15]]],[11,"with_producer","","",62,[[]]],[11,"drive","","",63,[[["consumer",8]]]],[11,"len","","",63,[[],["usize",15]]],[11,"with_producer","","",63,[[]]],[11,"drive","","",64,[[["consumer",8]]]],[11,"len","","",64,[[],["usize",15]]],[11,"with_producer","","",64,[[]]],[11,"drive","","",65,[[]]],[11,"len","","",65,[[],["usize",15]]],[11,"with_producer","","",65,[[]]],[11,"drive","","",66,[[]]],[11,"len","","",66,[[],["usize",15]]],[11,"with_producer","","",66,[[]]],[11,"drive","","",67,[[]]],[11,"len","","",67,[[],["usize",15]]],[11,"with_producer","","",67,[[]]],[11,"drive","","",68,[[]]],[11,"len","","",68,[[],["usize",15]]],[11,"with_producer","","",68,[[]]],[11,"drive","","",71,[[]]],[11,"with_producer","","",71,[[]]],[11,"len","","",71,[[],["usize",15]]],[11,"drive","","",72,[[]]],[11,"len","","",72,[[],["usize",15]]],[11,"with_producer","","",72,[[]]],[11,"drive","","",73,[[]]],[11,"len","","",73,[[],["usize",15]]],[11,"with_producer","","",73,[[]]],[11,"drive","rayon::option","",74,[[]]],[11,"len","","",74,[[],["usize",15]]],[11,"with_producer","","",74,[[]]],[11,"drive","","",75,[[]]],[11,"len","","",75,[[],["usize",15]]],[11,"with_producer","","",75,[[]]],[11,"drive","","",76,[[]]],[11,"len","","",76,[[],["usize",15]]],[11,"with_producer","","",76,[[]]],[11,"drive","rayon::range","",77,[[]]],[11,"len","","",77,[[],["usize",15]]],[11,"with_producer","","",77,[[]]],[11,"drive","","",77,[[]]],[11,"len","","",77,[[],["usize",15]]],[11,"with_producer","","",77,[[]]],[11,"drive","","",77,[[]]],[11,"len","","",77,[[],["usize",15]]],[11,"with_producer","","",77,[[]]],[11,"drive","","",77,[[]]],[11,"len","","",77,[[],["usize",15]]],[11,"with_producer","","",77,[[]]],[11,"drive","","",77,[[]]],[11,"len","","",77,[[],["usize",15]]],[11,"with_producer","","",77,[[]]],[11,"drive","","",77,[[]]],[11,"len","","",77,[[],["usize",15]]],[11,"with_producer","","",77,[[]]],[11,"drive","","",77,[[]]],[11,"len","","",77,[[],["usize",15]]],[11,"with_producer","","",77,[[]]],[11,"drive","","",77,[[]]],[11,"len","","",77,[[],["usize",15]]],[11,"with_producer","","",77,[[]]],[11,"drive","rayon::range_inclusive","",78,[[]]],[11,"len","","",78,[[],["usize",15]]],[11,"with_producer","","",78,[[]]],[11,"drive","","",78,[[]]],[11,"len","","",78,[[],["usize",15]]],[11,"with_producer","","",78,[[]]],[11,"drive","","",78,[[]]],[11,"len","","",78,[[],["usize",15]]],[11,"with_producer","","",78,[[]]],[11,"drive","","",78,[[]]],[11,"len","","",78,[[],["usize",15]]],[11,"with_producer","","",78,[[]]],[11,"drive","rayon::result","",79,[[]]],[11,"len","","",79,[[],["usize",15]]],[11,"with_producer","","",79,[[]]],[11,"drive","","",80,[[]]],[11,"len","","",80,[[],["usize",15]]],[11,"with_producer","","",80,[[]]],[11,"drive","","",81,[[]]],[11,"len","","",81,[[],["usize",15]]],[11,"with_producer","","",81,[[]]],[11,"drive","rayon::slice","",82,[[]]],[11,"len","","",82,[[],["usize",15]]],[11,"with_producer","","",82,[[]]],[11,"drive","","",83,[[]]],[11,"len","","",83,[[],["usize",15]]],[11,"with_producer","","",83,[[]]],[11,"drive","","",84,[[]]],[11,"len","","",84,[[],["usize",15]]],[11,"with_producer","","",84,[[]]],[11,"drive","","",85,[[]]],[11,"len","","",85,[[],["usize",15]]],[11,"with_producer","","",85,[[]]],[11,"drive","","",86,[[]]],[11,"len","","",86,[[],["usize",15]]],[11,"with_producer","","",86,[[]]],[11,"drive","rayon::vec","",99,[[]]],[11,"len","","",99,[[],["usize",15]]],[11,"with_producer","","",99,[[]]],[11,"drive","rayon::iter","",7,[[]]],[11,"len","","",7,[[],["usize",15]]],[11,"with_producer","","",7,[[]]],[11,"par_extend","","",7,[[]]],[11,"clone","rayon::collections::binary_heap","",19,[[],["intoiter",3]]],[11,"clone","","",20,[[]]],[11,"clone","rayon::collections::btree_map","",22,[[]]],[11,"clone","rayon::collections::btree_set","",25,[[]]],[11,"clone","rayon::collections::hash_map","",27,[[]]],[11,"clone","rayon::collections::hash_set","",30,[[]]],[11,"clone","rayon::collections::linked_list","",31,[[],["intoiter",3]]],[11,"clone","","",32,[[]]],[11,"clone","rayon::collections::vec_deque","",34,[[],["intoiter",3]]],[11,"clone","","",35,[[]]],[11,"clone","rayon::iter","",37,[[],["iterbridge",3]]],[11,"clone","","",38,[[],["chain",3]]],[11,"clone","","",39,[[],["chunks",3]]],[11,"clone","","",40,[[],["enumerate",3]]],[11,"clone","","",41,[[],["filter",3]]],[11,"clone","","",42,[[],["filtermap",3]]],[11,"clone","","",43,[[],["flatmap",3]]],[11,"clone","","",44,[[],["flatten",3]]],[11,"clone","","",45,[[],["fold",3]]],[11,"clone","","",46,[[],["foldwith",3]]],[11,"clone","","",47,[[],["tryfold",3]]],[11,"clone","","",48,[[],["tryfoldwith",3]]],[11,"clone","","",49,[[],["skip",3]]],[11,"clone","","",50,[[],["split",3]]],[11,"clone","","",51,[[],["take",3]]],[11,"clone","","",52,[[],["map",3]]],[11,"clone","","",53,[[],["mapwith",3]]],[11,"clone","","",54,[[],["mapinit",3]]],[11,"clone","","",55,[[],["zip",3]]],[11,"clone","","",56,[[],["zipeq",3]]],[11,"clone","","",57,[[],["multizip",3]]],[11,"clone","","",58,[[],["interleave",3]]],[11,"clone","","",59,[[],["interleaveshortest",3]]],[11,"clone","","",60,[[],["intersperse",3]]],[11,"clone","","",61,[[],["update",3]]],[11,"clone","","",62,[[],["rev",3]]],[11,"clone","","",63,[[],["minlen",3]]],[11,"clone","","",64,[[],["maxlen",3]]],[11,"clone","","",65,[[],["cloned",3]]],[11,"clone","","",66,[[],["copied",3]]],[11,"clone","","",67,[[],["inspect",3]]],[11,"clone","","",68,[[],["panicfuse",3]]],[11,"clone","","",69,[[],["whilesome",3]]],[11,"clone","","",70,[[],["repeat",3]]],[11,"clone","","",71,[[],["repeatn",3]]],[11,"clone","","",72,[[]]],[11,"clone","","",73,[[],["once",3]]],[11,"clone","rayon::option","",74,[[],["intoiter",3]]],[11,"clone","","",75,[[]]],[11,"clone","rayon::range","",77,[[],["iter",3]]],[11,"clone","rayon::range_inclusive","",78,[[],["iter",3]]],[11,"clone","rayon::result","",79,[[],["intoiter",3]]],[11,"clone","","",80,[[]]],[11,"clone","rayon::slice","",82,[[]]],[11,"clone","","",83,[[]]],[11,"clone","","",84,[[]]],[11,"clone","","",87,[[]]],[11,"clone","rayon::str","",89,[[],["chars",3]]],[11,"clone","","",90,[[],["charindices",3]]],[11,"clone","","",91,[[],["bytes",3]]],[11,"clone","","",92,[[],["encodeutf16",3]]],[11,"clone","","",93,[[],["split",3]]],[11,"clone","","",94,[[],["splitterminator",3]]],[11,"clone","","",95,[[],["lines",3]]],[11,"clone","","",96,[[],["splitwhitespace",3]]],[11,"clone","","",97,[[],["matches",3]]],[11,"clone","","",98,[[],["matchindices",3]]],[11,"clone","rayon::vec","",99,[[],["intoiter",3]]],[11,"fmt","rayon::collections::binary_heap","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","rayon::collections::btree_map","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","rayon::collections::btree_set","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","rayon::collections::hash_map","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","rayon::collections::hash_set","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","rayon::collections::linked_list","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","rayon::collections::vec_deque","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"fmt","rayon::iter","",37,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","","",39,[[["formatter",3]],["result",6]]],[11,"fmt","","",40,[[["formatter",3]],["result",6]]],[11,"fmt","","",41,[[["formatter",3]],["result",6]]],[11,"fmt","","",42,[[["formatter",3]],["result",6]]],[11,"fmt","","",43,[[["formatter",3]],["result",6]]],[11,"fmt","","",44,[[["formatter",3]],["result",6]]],[11,"fmt","","",45,[[["formatter",3]],["result",6]]],[11,"fmt","","",46,[[["formatter",3]],["result",6]]],[11,"fmt","","",47,[[["formatter",3]],["result",6]]],[11,"fmt","","",48,[[["formatter",3]],["result",6]]],[11,"fmt","","",49,[[["formatter",3]],["result",6]]],[11,"fmt","","",50,[[["formatter",3]],["result",6]]],[11,"fmt","","",51,[[["formatter",3]],["result",6]]],[11,"fmt","","",52,[[["formatter",3]],["result",6]]],[11,"fmt","","",53,[[["formatter",3]],["result",6]]],[11,"fmt","","",54,[[["formatter",3]],["result",6]]],[11,"fmt","","",55,[[["formatter",3]],["result",6]]],[11,"fmt","","",56,[[["formatter",3]],["result",6]]],[11,"fmt","","",57,[[["formatter",3]],["result",6]]],[11,"fmt","","",58,[[["formatter",3]],["result",6]]],[11,"fmt","","",59,[[["formatter",3]],["result",6]]],[11,"fmt","","",60,[[["formatter",3]],["result",6]]],[11,"fmt","","",61,[[["formatter",3]],["result",6]]],[11,"fmt","","",62,[[["formatter",3]],["result",6]]],[11,"fmt","","",63,[[["formatter",3]],["result",6]]],[11,"fmt","","",64,[[["formatter",3]],["result",6]]],[11,"fmt","","",65,[[["formatter",3]],["result",6]]],[11,"fmt","","",66,[[["formatter",3]],["result",6]]],[11,"fmt","","",67,[[["formatter",3]],["result",6]]],[11,"fmt","","",68,[[["formatter",3]],["result",6]]],[11,"fmt","","",69,[[["formatter",3]],["result",6]]],[11,"fmt","","",70,[[["formatter",3]],["result",6]]],[11,"fmt","","",71,[[["formatter",3]],["result",6]]],[11,"fmt","","",72,[[["formatter",3]],["result",6]]],[11,"fmt","","",73,[[["formatter",3]],["result",6]]],[11,"fmt","rayon::option","",74,[[["formatter",3]],["result",6]]],[11,"fmt","","",75,[[["formatter",3]],["result",6]]],[11,"fmt","","",76,[[["formatter",3]],["result",6]]],[11,"fmt","rayon::range","",77,[[["formatter",3]],["result",6]]],[11,"fmt","rayon::range_inclusive","",78,[[["formatter",3]],["result",6]]],[11,"fmt","rayon::result","",79,[[["formatter",3]],["result",6]]],[11,"fmt","","",80,[[["formatter",3]],["result",6]]],[11,"fmt","","",81,[[["formatter",3]],["result",6]]],[11,"fmt","rayon::slice","",82,[[["formatter",3]],["result",6]]],[11,"fmt","","",83,[[["formatter",3]],["result",6]]],[11,"fmt","","",84,[[["formatter",3]],["result",6]]],[11,"fmt","","",85,[[["formatter",3]],["result",6]]],[11,"fmt","","",86,[[["formatter",3]],["result",6]]],[11,"fmt","","",87,[[["formatter",3]],["result",6]]],[11,"fmt","","",88,[[["formatter",3]],["result",6]]],[11,"fmt","rayon::str","",89,[[["formatter",3]],["result",6]]],[11,"fmt","","",90,[[["formatter",3]],["result",6]]],[11,"fmt","","",91,[[["formatter",3]],["result",6]]],[11,"fmt","","",92,[[["formatter",3]],["result",6]]],[11,"fmt","","",93,[[["formatter",3]],["result",6]]],[11,"fmt","","",94,[[["formatter",3]],["result",6]]],[11,"fmt","","",95,[[["formatter",3]],["result",6]]],[11,"fmt","","",96,[[["formatter",3]],["result",6]]],[11,"fmt","","",97,[[["formatter",3]],["result",6]]],[11,"fmt","","",98,[[["formatter",3]],["result",6]]],[11,"fmt","rayon::vec","",99,[[["formatter",3]],["result",6]]],[11,"take","rayon::iter","Take only <code>n</code> repeats of the element, similar to the general…",70,[[["usize",15]],["repeatn",3]]],[11,"zip","","Iterate tuples repeating the element with items from …",70,[[],[["zip",3],["repeatn",3]]]],[11,"is_left","","Return true if the value is the <code>Left</code> variant.",7,[[],["bool",15]]],[11,"is_right","","Return true if the value is the <code>Right</code> variant.",7,[[],["bool",15]]],[11,"left","","Convert the left side of <code>Either<L, R></code> to an <code>Option<L></code>.",7,[[],["option",4]]],[11,"right","","Convert the right side of <code>Either<L, R></code> to an <code>Option<R></code>.",7,[[],["option",4]]],[11,"as_ref","","Convert <code>&Either<L, R></code> to <code>Either<&L, &R></code>.",7,[[],["either",4]]],[11,"as_mut","","Convert <code>&mut Either<L, R></code> to <code>Either<&mut L, &mut R></code>.",7,[[],["either",4]]],[11,"flip","","Convert <code>Either<L, R></code> to <code>Either<R, L></code>.",7,[[],["either",4]]],[11,"map_left","","Apply the function <code>f</code> on the value in the <code>Left</code> variant if …",7,[[],["either",4]]],[11,"map_right","","Apply the function <code>f</code> on the value in the <code>Right</code> variant if …",7,[[],["either",4]]],[11,"either","","Apply one of two functions depending on contents, …",7,[[]]],[11,"either_with","","Like <code>either</code>, but provide some context to whichever of the …",7,[[]]],[11,"left_and_then","","Apply the function <code>f</code> on the value in the <code>Left</code> variant if …",7,[[],["either",4]]],[11,"right_and_then","","Apply the function <code>f</code> on the value in the <code>Right</code> variant if …",7,[[],["either",4]]],[11,"into_iter","","Convert the inner value to an iterator.",7,[[],["either",4]]],[11,"left_or","","Return left value or given value",7,[[]]],[11,"left_or_default","","Return left or a default",7,[[]]],[11,"left_or_else","","Returns left value or computes it from a closure",7,[[]]],[11,"right_or","","Return right value or given value",7,[[]]],[11,"right_or_default","","Return right or a default",7,[[]]],[11,"right_or_else","","Returns right value or computes it from a closure",7,[[]]],[11,"factor_first","","Factor out a homogeneous type from an either of pairs.",7,[[]]],[11,"factor_second","","Factor out a homogeneous type from an either of pairs.",7,[[]]],[11,"into_inner","","Extract the value of an either over two equivalent types.",7,[[]]],[11,"map","","Map <code>f</code> over the contained value and return the result in …",7,[[],["either",4]]],[11,"migrated","rayon","Returns <code>true</code> if the closure was called from a different …",100,[[],["bool",15]]],[11,"index","","Get the index of this thread in the pool, within …",101,[[],["usize",15]]],[11,"name","","Get the string that was specified by …",101,[[],[["option",4],["str",15]]]],[11,"stack_size","","Get the value that was specified by …",101,[[],[["usize",15],["option",4]]]],[11,"run","","Execute the main loop for this thread. This will not …",101,[[]]],[11,"new","","Deprecated in favor of <code>ThreadPoolBuilder::build</code>.",102,[[["configuration",3]],[["box",3],["threadpool",3],["result",4]]]],[11,"install","","Executes <code>op</code> within the threadpool. Any attempts to use …",102,[[]]],[11,"current_num_threads","","Returns the (current) number of threads in the thread …",102,[[],["usize",15]]],[11,"current_thread_index","","If called from a Rayon worker thread in this thread-pool, …",102,[[],[["usize",15],["option",4]]]],[11,"current_thread_has_pending_tasks","","Returns true if the current worker thread currently has …",102,[[],[["option",4],["bool",15]]]],[11,"join","","Execute <code>oper_a</code> and <code>oper_b</code> in the thread-pool and return …",102,[[]]],[11,"scope","","Creates a scope that executes within this thread-pool. …",102,[[]]],[11,"scope_fifo","","Creates a scope that executes within this thread-pool. …",102,[[]]],[11,"spawn","","Spawns an asynchronous task in this thread-pool. This …",102,[[]]],[11,"spawn_fifo","","Spawns an asynchronous task in this thread-pool. This …",102,[[]]],[11,"new","","Creates and returns a valid rayon thread pool builder, …",104,[[],[["threadpoolbuilder",3],["defaultspawn",3]]]],[11,"build","","Create a new <code>ThreadPool</code> initialized using this …",104,[[],[["result",4],["threadpool",3],["threadpoolbuilderror",3]]]],[11,"build_global","","Initializes the global thread pool. This initialization is…",104,[[],[["threadpoolbuilderror",3],["result",4]]]],[11,"build_scoped","","Create a scoped <code>ThreadPool</code> initialized using this …",104,[[],[["threadpoolbuilderror",3],["result",4]]]],[11,"spawn_handler","","Set a custom function for spawning threads.",104,[[],[["threadpoolbuilder",3],["customspawn",3]]]],[11,"thread_name","","Set a closure which takes a thread index and returns the …",104,[[],["threadpoolbuilder",3]]],[11,"num_threads","","Set the number of threads to be used in the rayon …",104,[[["usize",15]],["threadpoolbuilder",3]]],[11,"panic_handler","","Normally, whenever Rayon catches a panic, it tries to …",104,[[],["threadpoolbuilder",3]]],[11,"stack_size","","Set the stack size of the worker threads",104,[[["usize",15]],["threadpoolbuilder",3]]],[11,"breadth_first","","<strong>(DEPRECATED)</strong> Suggest to worker threads that they execute …",104,[[],["threadpoolbuilder",3]]],[11,"start_handler","","Set a callback to be invoked on thread start.",104,[[],["threadpoolbuilder",3]]],[11,"exit_handler","","Set a callback to be invoked on thread exit.",104,[[],["threadpoolbuilder",3]]],[11,"spawn","","Spawns a job into the fork-join scope <code>self</code>. This job will …",105,[[]]],[11,"spawn_fifo","","Spawns a job into the fork-join scope <code>self</code>. This job will …",106,[[]]]],"p":[[8,"ProducerCallback"],[8,"Producer"],[8,"Consumer"],[8,"Folder"],[8,"Reducer"],[8,"UnindexedConsumer"],[8,"UnindexedProducer"],[4,"Either"],[8,"ParallelBridge"],[8,"IntoParallelIterator"],[8,"IntoParallelRefIterator"],[8,"IntoParallelRefMutIterator"],[8,"ParallelIterator"],[8,"IndexedParallelIterator"],[8,"FromParallelIterator"],[8,"ParallelExtend"],[8,"ParallelSlice"],[8,"ParallelSliceMut"],[8,"ParallelString"],[3,"IntoIter"],[3,"Iter"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Iter"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Iter"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"IterBridge"],[3,"Chain"],[3,"Chunks"],[3,"Enumerate"],[3,"Filter"],[3,"FilterMap"],[3,"FlatMap"],[3,"Flatten"],[3,"Fold"],[3,"FoldWith"],[3,"TryFold"],[3,"TryFoldWith"],[3,"Skip"],[3,"Split"],[3,"Take"],[3,"Map"],[3,"MapWith"],[3,"MapInit"],[3,"Zip"],[3,"ZipEq"],[3,"MultiZip"],[3,"Interleave"],[3,"InterleaveShortest"],[3,"Intersperse"],[3,"Update"],[3,"Rev"],[3,"MinLen"],[3,"MaxLen"],[3,"Cloned"],[3,"Copied"],[3,"Inspect"],[3,"PanicFuse"],[3,"WhileSome"],[3,"Repeat"],[3,"RepeatN"],[3,"Empty"],[3,"Once"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"Iter"],[3,"Iter"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"Iter"],[3,"Chunks"],[3,"Windows"],[3,"IterMut"],[3,"ChunksMut"],[3,"Split"],[3,"SplitMut"],[3,"Chars"],[3,"CharIndices"],[3,"Bytes"],[3,"EncodeUtf16"],[3,"Split"],[3,"SplitTerminator"],[3,"Lines"],[3,"SplitWhitespace"],[3,"Matches"],[3,"MatchIndices"],[3,"IntoIter"],[3,"FnContext"],[3,"ThreadBuilder"],[3,"ThreadPool"],[3,"ThreadPoolBuildError"],[3,"ThreadPoolBuilder"],[3,"Scope"],[3,"ScopeFifo"]]},\
"rayon_core":{"doc":"Under construction","i":[[5,"join","rayon_core","Takes two closures and <em>potentially</em> runs them in parallel. …",null,[[]]],[5,"join_context","","Identical to <code>join</code>, except that the closures have a …",null,[[]]],[3,"ThreadBuilder","","Thread builder used for customization via …",null,null],[5,"scope","","Create a \\\"fork-join\\\" scope <code>s</code> and invokes the closure with …",null,[[]]],[3,"Scope","","Represents a fork-join scope which can be used to spawn …",null,null],[5,"scope_fifo","","Create a \\\"fork-join\\\" scope <code>s</code> with FIFO order, and invokes …",null,[[]]],[3,"ScopeFifo","","Represents a fork-join scope which can be used to spawn …",null,null],[5,"spawn","","Fires off a task into the Rayon threadpool in the …",null,[[]]],[5,"spawn_fifo","","Fires off a task into the Rayon threadpool in the …",null,[[]]],[5,"current_thread_has_pending_tasks","","If called from a Rayon worker thread, indicates whether …",null,[[],[["bool",15],["option",4]]]],[5,"current_thread_index","","If called from a Rayon worker thread, returns the index …",null,[[],[["option",4],["usize",15]]]],[3,"ThreadPool","","Represents a user created thread-pool.",null,null],[5,"current_num_threads","","Returns the number of threads in the current registry. If …",null,[[],["usize",15]]],[3,"ThreadPoolBuildError","","Error when initializing a thread pool.",null,null],[3,"ThreadPoolBuilder","","Used to create a new <code>ThreadPool</code> or to configure the …",null,null],[3,"Configuration","","Contains the rayon thread pool configuration. Use …",null,null],[11,"new","","Creates and returns a valid rayon thread pool builder, …",0,[[]]],[11,"build","","Create a new <code>ThreadPool</code> initialized using this …",0,[[],[["threadpoolbuilderror",3],["result",4],["threadpool",3]]]],[11,"build_global","","Initializes the global thread pool. This initialization is…",0,[[],[["result",4],["threadpoolbuilderror",3]]]],[11,"build_scoped","","Create a scoped <code>ThreadPool</code> initialized using this …",0,[[],[["threadpoolbuilderror",3],["result",4]]]],[11,"spawn_handler","","Set a custom function for spawning threads.",0,[[],[["threadpoolbuilder",3],["customspawn",3]]]],[11,"thread_name","","Set a closure which takes a thread index and returns the …",0,[[]]],[11,"num_threads","","Set the number of threads to be used in the rayon …",0,[[["usize",15]]]],[11,"panic_handler","","Normally, whenever Rayon catches a panic, it tries to …",0,[[]]],[11,"stack_size","","Set the stack size of the worker threads",0,[[["usize",15]]]],[11,"breadth_first","","<strong>(DEPRECATED)</strong> Suggest to worker threads that they execute …",0,[[]]],[11,"start_handler","","Set a callback to be invoked on thread start.",0,[[]]],[11,"exit_handler","","Set a callback to be invoked on thread exit.",0,[[]]],[11,"new","","Creates and return a valid rayon thread pool …",1,[[],["configuration",3]]],[11,"build","","Deprecated in favor of <code>ThreadPoolBuilder::build</code>.",1,[[],[["box",3],["result",4],["threadpool",3]]]],[11,"thread_name","","Deprecated in favor of <code>ThreadPoolBuilder::thread_name</code>.",1,[[]]],[11,"num_threads","","Deprecated in favor of <code>ThreadPoolBuilder::num_threads</code>.",1,[[["usize",15]],["configuration",3]]],[11,"panic_handler","","Deprecated in favor of <code>ThreadPoolBuilder::panic_handler</code>.",1,[[],["configuration",3]]],[11,"stack_size","","Deprecated in favor of <code>ThreadPoolBuilder::stack_size</code>.",1,[[["usize",15]]]],[11,"breadth_first","","Deprecated in favor of <code>ThreadPoolBuilder::breadth_first</code>.",1,[[]]],[11,"start_handler","","Deprecated in favor of <code>ThreadPoolBuilder::start_handler</code>.",1,[[],["configuration",3]]],[11,"exit_handler","","Deprecated in favor of <code>ThreadPoolBuilder::exit_handler</code>.",1,[[],["configuration",3]]],[5,"initialize","","Deprecated in favor of <code>ThreadPoolBuilder::build_global</code>.",null,[[["configuration",3]],[["result",4],["box",3]]]],[3,"FnContext","","Provides the calling context to a closure called by …",null,null],[11,"migrated","","Returns <code>true</code> if the closure was called from a different …",2,[[],["bool",15]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_string","","",7,[[],["string",3]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"drop","","",6,[[]]],[11,"default","","",0,[[]]],[11,"default","","",1,[[]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"description","","",7,[[],["str",15]]],[11,"index","","Get the index of this thread in the pool, within …",3,[[],["usize",15]]],[11,"name","","Get the string that was specified by …",3,[[],[["str",15],["option",4]]]],[11,"stack_size","","Get the value that was specified by …",3,[[],[["option",4],["usize",15]]]],[11,"run","","Execute the main loop for this thread. This will not …",3,[[]]],[11,"spawn","","Spawns a job into the fork-join scope <code>self</code>. This job will …",4,[[]]],[11,"spawn_fifo","","Spawns a job into the fork-join scope <code>self</code>. This job will …",5,[[]]],[11,"new","","Deprecated in favor of <code>ThreadPoolBuilder::build</code>.",6,[[["configuration",3]],[["box",3],["result",4],["threadpool",3]]]],[11,"install","","Executes <code>op</code> within the threadpool. Any attempts to use …",6,[[]]],[11,"current_num_threads","","Returns the (current) number of threads in the thread …",6,[[],["usize",15]]],[11,"current_thread_index","","If called from a Rayon worker thread in this thread-pool, …",6,[[],[["option",4],["usize",15]]]],[11,"current_thread_has_pending_tasks","","Returns true if the current worker thread currently has …",6,[[],[["bool",15],["option",4]]]],[11,"join","","Execute <code>oper_a</code> and <code>oper_b</code> in the thread-pool and return …",6,[[]]],[11,"scope","","Creates a scope that executes within this thread-pool. …",6,[[]]],[11,"scope_fifo","","Creates a scope that executes within this thread-pool. …",6,[[]]],[11,"spawn","","Spawns an asynchronous task in this thread-pool. This …",6,[[]]],[11,"spawn_fifo","","Spawns an asynchronous task in this thread-pool. This …",6,[[]]]],"p":[[3,"ThreadPoolBuilder"],[3,"Configuration"],[3,"FnContext"],[3,"ThreadBuilder"],[3,"Scope"],[3,"ScopeFifo"],[3,"ThreadPool"],[3,"ThreadPoolBuildError"]]},\
"read_color":{"doc":"A simple library for reading hex colors.","i":[[5,"char_to_hex","read_color","Converts a character into a u8 value.",null,[[["char",15]],[["option",4],["u8",15]]]],[5,"hex","","Reads a hex value from an iterator of characters.",null,[[["chars",3]],[["option",4],["u8",15]]]],[5,"hex_pair","","Reads a pair of hex values, joining them in value range …",null,[[["chars",3]],[["option",4],["u8",15]]]],[5,"rgb","","Reads RGB colors from iterator of characters.",null,[[["chars",3]],["option",4]]],[5,"rgba","","Reads RGBA colors from iterator of characters.",null,[[["chars",3]],["option",4]]],[5,"rgb_maybe_a","","Reads RGB with optional alpha from iterator of characters.",null,[[["chars",3]],["option",4]]]],"p":[]},\
"rustc_demangle":{"doc":"Demangle Rust compiler symbol names.","i":[[3,"Demangle","rustc_demangle","Representation of a demangled symbol name.",null,null],[5,"demangle","","De-mangles a Rust symbol into a more readable version",null,[[["str",15]],["demangle",3]]],[3,"TryDemangleError","","Error returned from the <code>try_demangle</code> function below when …",null,null],[5,"try_demangle","","The same as <code>demangle</code>, except return an <code>Err</code> if the string …",null,[[["str",15]],[["result",4],["demangle",3],["trydemangleerror",3]]]],[11,"as_str","","Returns the underlying string that\'s being demangled.",0,[[],["str",15]]],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"clone","","",1,[[],["trydemangleerror",3]]]],"p":[[3,"Demangle"],[3,"TryDemangleError"]]},\
"scoped_threadpool":{"doc":"This crate provides a stable, safe and scoped threadpool.","i":[[3,"Pool","scoped_threadpool","A threadpool that acts as a handle to a number of threads …",null,null],[11,"new","","Construct a threadpool with the given number of threads. …",0,[[["u32",15]],["pool",3]]],[11,"scoped","","Borrows the pool and allows executing jobs on other …",0,[[]]],[11,"thread_count","","Returns the number of threads inside this pool.",0,[[],["u32",15]]],[3,"Scope","","Handle to the scope during which the threadpool is …",null,null],[11,"execute","","Execute a job on the threadpool.",1,[[]]],[11,"join_all","","Blocks until all currently queued jobs have run to …",1,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"drop","","",0,[[]]],[11,"drop","","",1,[[]]]],"p":[[3,"Pool"],[3,"Scope"]]},\
"scopeguard":{"doc":"A scope guard will run a given closure when it goes out …","i":[[8,"Strategy","scopeguard","Controls in which cases the associated code should be run",null,null],[10,"should_run","","Return <code>true</code> if the guard’s associated code should run …",0,[[],["bool",15]]],[4,"Always","","Always run on scope exit.",null,null],[3,"ScopeGuard","","<code>ScopeGuard</code> is a scope guard that may own a protected …",null,null],[11,"with_strategy","","Create a <code>ScopeGuard</code> that owns <code>v</code> (accessible through …",1,[[],["scopeguard",3]]],[11,"into_inner","","“Defuse” the guard and extract the value without …",1,[[]]],[5,"guard","","Create a new <code>ScopeGuard</code> owning <code>v</code> and with deferred …",null,[[],[["always",4],["scopeguard",3]]]],[14,"defer","","Macro to create a <code>ScopeGuard</code> (always run).",null,null],[11,"from","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"should_run","","",2,[[],["bool",15]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"drop","","",1,[[]]]],"p":[[8,"Strategy"],[3,"ScopeGuard"],[4,"Always"]]},\
"sdl2":{"doc":"","i":[[0,"clipboard","sdl2","",null,null],[3,"ClipboardUtil","sdl2::clipboard","Clipboard utility functions. Access with …",null,null],[11,"set_clipboard_text","","",0,[[["str",15]],[["result",4],["string",3]]]],[11,"clipboard_text","","",0,[[],[["result",4],["string",3]]]],[11,"has_clipboard_text","","",0,[[],["bool",15]]],[0,"cpuinfo","sdl2","",null,null],[17,"CACHELINESIZE","sdl2::cpuinfo","",null,null],[5,"cpu_count","","",null,[[],["i32",15]]],[5,"cpu_cache_line_size","","",null,[[],["i32",15]]],[5,"has_rdtsc","","",null,[[],["bool",15]]],[5,"has_alti_vec","","",null,[[],["bool",15]]],[5,"has_mmx","","",null,[[],["bool",15]]],[5,"has_3d_now","","",null,[[],["bool",15]]],[5,"has_sse","","",null,[[],["bool",15]]],[5,"has_sse2","","",null,[[],["bool",15]]],[5,"has_sse3","","",null,[[],["bool",15]]],[5,"has_sse41","","",null,[[],["bool",15]]],[5,"has_sse42","","",null,[[],["bool",15]]],[5,"has_avx","","",null,[[],["bool",15]]],[5,"system_ram","","",null,[[],["i32",15]]],[0,"macros","sdl2","",null,null],[0,"event","","Event Handling",null,null],[4,"EventType","sdl2::event","Types of events that can be delivered.",null,null],[13,"First","","",1,null],[13,"Quit","","",1,null],[13,"AppTerminating","","",1,null],[13,"AppLowMemory","","",1,null],[13,"AppWillEnterBackground","","",1,null],[13,"AppDidEnterBackground","","",1,null],[13,"AppWillEnterForeground","","",1,null],[13,"AppDidEnterForeground","","",1,null],[13,"Window","","",1,null],[13,"KeyDown","","",1,null],[13,"KeyUp","","",1,null],[13,"TextEditing","","",1,null],[13,"TextInput","","",1,null],[13,"MouseMotion","","",1,null],[13,"MouseButtonDown","","",1,null],[13,"MouseButtonUp","","",1,null],[13,"MouseWheel","","",1,null],[13,"JoyAxisMotion","","",1,null],[13,"JoyBallMotion","","",1,null],[13,"JoyHatMotion","","",1,null],[13,"JoyButtonDown","","",1,null],[13,"JoyButtonUp","","",1,null],[13,"JoyDeviceAdded","","",1,null],[13,"JoyDeviceRemoved","","",1,null],[13,"ControllerAxisMotion","","",1,null],[13,"ControllerButtonDown","","",1,null],[13,"ControllerButtonUp","","",1,null],[13,"ControllerDeviceAdded","","",1,null],[13,"ControllerDeviceRemoved","","",1,null],[13,"ControllerDeviceRemapped","","",1,null],[13,"FingerDown","","",1,null],[13,"FingerUp","","",1,null],[13,"FingerMotion","","",1,null],[13,"DollarGesture","","",1,null],[13,"DollarRecord","","",1,null],[13,"MultiGesture","","",1,null],[13,"ClipboardUpdate","","",1,null],[13,"DropFile","","",1,null],[13,"User","","",1,null],[13,"Last","","",1,null],[4,"WindowEvent","","An enum of window events.",null,null],[13,"None","","",2,null],[13,"Shown","","",2,null],[13,"Hidden","","",2,null],[13,"Exposed","","",2,null],[13,"Moved","","",2,null],[13,"Resized","","",2,null],[13,"SizeChanged","","",2,null],[13,"Minimized","","",2,null],[13,"Maximized","","",2,null],[13,"Restored","","",2,null],[13,"Enter","","",2,null],[13,"Leave","","",2,null],[13,"FocusGained","","",2,null],[13,"FocusLost","","",2,null],[13,"Close","","",2,null],[13,"TakeFocus","","",2,null],[13,"HitTest","","",2,null],[4,"Event","","Different event types.",null,null],[13,"Quit","","",3,null],[12,"timestamp","sdl2::event::Event","",4,null],[13,"AppTerminating","sdl2::event","",3,null],[12,"timestamp","sdl2::event::Event","",5,null],[13,"AppLowMemory","sdl2::event","",3,null],[12,"timestamp","sdl2::event::Event","",6,null],[13,"AppWillEnterBackground","sdl2::event","",3,null],[12,"timestamp","sdl2::event::Event","",7,null],[13,"AppDidEnterBackground","sdl2::event","",3,null],[12,"timestamp","sdl2::event::Event","",8,null],[13,"AppWillEnterForeground","sdl2::event","",3,null],[12,"timestamp","sdl2::event::Event","",9,null],[13,"AppDidEnterForeground","sdl2::event","",3,null],[12,"timestamp","sdl2::event::Event","",10,null],[13,"Window","sdl2::event","",3,null],[12,"timestamp","sdl2::event::Event","",11,null],[12,"window_id","","",11,null],[12,"win_event","","",11,null],[13,"KeyDown","sdl2::event","",3,null],[12,"timestamp","sdl2::event::Event","",12,null],[12,"window_id","","",12,null],[12,"keycode","","",12,null],[12,"scancode","","",12,null],[12,"keymod","","",12,null],[12,"repeat","","",12,null],[13,"KeyUp","sdl2::event","",3,null],[12,"timestamp","sdl2::event::Event","",13,null],[12,"window_id","","",13,null],[12,"keycode","","",13,null],[12,"scancode","","",13,null],[12,"keymod","","",13,null],[12,"repeat","","",13,null],[13,"TextEditing","sdl2::event","",3,null],[12,"timestamp","sdl2::event::Event","",14,null],[12,"window_id","","",14,null],[12,"text","","",14,null],[12,"start","","",14,null],[12,"length","","",14,null],[13,"TextInput","sdl2::event","",3,null],[12,"timestamp","sdl2::event::Event","",15,null],[12,"window_id","","",15,null],[12,"text","","",15,null],[13,"MouseMotion","sdl2::event","",3,null],[12,"timestamp","sdl2::event::Event","",16,null],[12,"window_id","","",16,null],[12,"which","","",16,null],[12,"mousestate","","",16,null],[12,"x","","",16,null],[12,"y","","",16,null],[12,"xrel","","",16,null],[12,"yrel","","",16,null],[13,"MouseButtonDown","sdl2::event","",3,null],[12,"timestamp","sdl2::event::Event","",17,null],[12,"window_id","","",17,null],[12,"which","","",17,null],[12,"mouse_btn","","",17,null],[12,"clicks","","",17,null],[12,"x","","",17,null],[12,"y","","",17,null],[13,"MouseButtonUp","sdl2::event","",3,null],[12,"timestamp","sdl2::event::Event","",18,null],[12,"window_id","","",18,null],[12,"which","","",18,null],[12,"mouse_btn","","",18,null],[12,"clicks","","",18,null],[12,"x","","",18,null],[12,"y","","",18,null],[13,"MouseWheel","sdl2::event","",3,null],[12,"timestamp","sdl2::event::Event","",19,null],[12,"window_id","","",19,null],[12,"which","","",19,null],[12,"x","","",19,null],[12,"y","","",19,null],[12,"direction","","",19,null],[13,"JoyAxisMotion","sdl2::event","",3,null],[12,"timestamp","sdl2::event::Event","",20,null],[12,"which","","The joystick\'s <code>id</code>",20,null],[12,"axis_idx","","",20,null],[12,"value","","",20,null],[13,"JoyBallMotion","sdl2::event","",3,null],[12,"timestamp","sdl2::event::Event","",21,null],[12,"which","","The joystick\'s <code>id</code>",21,null],[12,"ball_idx","","",21,null],[12,"xrel","","",21,null],[12,"yrel","","",21,null],[13,"JoyHatMotion","sdl2::event","",3,null],[12,"timestamp","sdl2::event::Event","",22,null],[12,"which","","The joystick\'s <code>id</code>",22,null],[12,"hat_idx","","",22,null],[12,"state","","",22,null],[13,"JoyButtonDown","sdl2::event","",3,null],[12,"timestamp","sdl2::event::Event","",23,null],[12,"which","","The joystick\'s <code>id</code>",23,null],[12,"button_idx","","",23,null],[13,"JoyButtonUp","sdl2::event","",3,null],[12,"timestamp","sdl2::event::Event","",24,null],[12,"which","","The joystick\'s <code>id</code>",24,null],[12,"button_idx","","",24,null],[13,"JoyDeviceAdded","sdl2::event","",3,null],[12,"timestamp","sdl2::event::Event","",25,null],[12,"which","","The newly added joystick\'s <code>joystick_index</code>",25,null],[13,"JoyDeviceRemoved","sdl2::event","",3,null],[12,"timestamp","sdl2::event::Event","",26,null],[12,"which","","The joystick\'s <code>id</code>",26,null],[13,"ControllerAxisMotion","sdl2::event","",3,null],[12,"timestamp","sdl2::event::Event","",27,null],[12,"which","","The controller\'s joystick <code>id</code>",27,null],[12,"axis","","",27,null],[12,"value","","",27,null],[13,"ControllerButtonDown","sdl2::event","",3,null],[12,"timestamp","sdl2::event::Event","",28,null],[12,"which","","The controller\'s joystick <code>id</code>",28,null],[12,"button","","",28,null],[13,"ControllerButtonUp","sdl2::event","",3,null],[12,"timestamp","sdl2::event::Event","",29,null],[12,"which","","The controller\'s joystick <code>id</code>",29,null],[12,"button","","",29,null],[13,"ControllerDeviceAdded","sdl2::event","",3,null],[12,"timestamp","sdl2::event::Event","",30,null],[12,"which","","The newly added controller\'s <code>joystick_index</code>",30,null],[13,"ControllerDeviceRemoved","sdl2::event","",3,null],[12,"timestamp","sdl2::event::Event","",31,null],[12,"which","","The controller\'s joystick <code>id</code>",31,null],[13,"ControllerDeviceRemapped","sdl2::event","",3,null],[12,"timestamp","sdl2::event::Event","",32,null],[12,"which","","The controller\'s joystick <code>id</code>",32,null],[13,"FingerDown","sdl2::event","",3,null],[12,"timestamp","sdl2::event::Event","",33,null],[12,"touch_id","","",33,null],[12,"finger_id","","",33,null],[12,"x","","",33,null],[12,"y","","",33,null],[12,"dx","","",33,null],[12,"dy","","",33,null],[12,"pressure","","",33,null],[13,"FingerUp","sdl2::event","",3,null],[12,"timestamp","sdl2::event::Event","",34,null],[12,"touch_id","","",34,null],[12,"finger_id","","",34,null],[12,"x","","",34,null],[12,"y","","",34,null],[12,"dx","","",34,null],[12,"dy","","",34,null],[12,"pressure","","",34,null],[13,"FingerMotion","sdl2::event","",3,null],[12,"timestamp","sdl2::event::Event","",35,null],[12,"touch_id","","",35,null],[12,"finger_id","","",35,null],[12,"x","","",35,null],[12,"y","","",35,null],[12,"dx","","",35,null],[12,"dy","","",35,null],[12,"pressure","","",35,null],[13,"DollarGesture","sdl2::event","",3,null],[12,"timestamp","sdl2::event::Event","",36,null],[12,"touch_id","","",36,null],[12,"gesture_id","","",36,null],[12,"num_fingers","","",36,null],[12,"error","","",36,null],[12,"x","","",36,null],[12,"y","","",36,null],[13,"DollarRecord","sdl2::event","",3,null],[12,"timestamp","sdl2::event::Event","",37,null],[12,"touch_id","","",37,null],[12,"gesture_id","","",37,null],[12,"num_fingers","","",37,null],[12,"error","","",37,null],[12,"x","","",37,null],[12,"y","","",37,null],[13,"MultiGesture","sdl2::event","",3,null],[12,"timestamp","sdl2::event::Event","",38,null],[12,"touch_id","","",38,null],[12,"d_theta","","",38,null],[12,"d_dist","","",38,null],[12,"x","","",38,null],[12,"y","","",38,null],[12,"num_fingers","","",38,null],[13,"ClipboardUpdate","sdl2::event","",3,null],[12,"timestamp","sdl2::event::Event","",39,null],[13,"DropFile","sdl2::event","",3,null],[12,"timestamp","sdl2::event::Event","",40,null],[12,"filename","","",40,null],[13,"User","sdl2::event","",3,null],[12,"timestamp","sdl2::event::Event","",41,null],[12,"window_id","","",41,null],[12,"type_","","",41,null],[12,"code","","",41,null],[12,"data1","","",41,null],[12,"data2","","",41,null],[13,"Unknown","sdl2::event","",3,null],[12,"timestamp","sdl2::event::Event","",42,null],[12,"type_","","",42,null],[11,"is_user_event","sdl2::event","",3,[[],["bool",15]]],[11,"as_user_event_type","","",3,[[],[["any",8],["option",4]]]],[3,"EventPollIterator","","An iterator that calls <code>EventPump::poll_event()</code>.",null,null],[3,"EventWaitIterator","","An iterator that calls <code>EventPump::wait_event()</code>.",null,null],[3,"EventWaitTimeoutIterator","","An iterator that calls <code>EventPump::wait_event_timeout()</code>.",null,null],[0,"filesystem","sdl2","",null,null],[5,"base_path","sdl2::filesystem","",null,[[],[["result",4],["string",3]]]],[4,"PrefPathError","","",null,null],[13,"InvalidOrganizationName","","",43,null],[13,"InvalidApplicationName","","",43,null],[13,"SdlError","","",43,null],[5,"pref_path","","Return the preferred directory for the application to …",null,[[["str",15]],[["string",3],["prefpatherror",4],["result",4]]]],[0,"gesture","sdl2","",null,null],[0,"touch","","",null,null],[6,"Finger","sdl2::touch","",null,null],[6,"TouchDevice","","",null,null],[5,"num_touch_devices","","",null,[[],["i32",15]]],[5,"touch_device","","",null,[[["i32",15]],["touchdevice",6]]],[5,"num_touch_fingers","","",null,[[["touchdevice",6]],["i32",15]]],[5,"touch_finger","","",null,[[["i32",15],["touchdevice",6]],[["finger",6],["option",4]]]],[0,"joystick","sdl2","",null,null],[3,"Joystick","sdl2::joystick","Wrapper around the <code>SDL_Joystick</code> object",null,null],[11,"subsystem","","",44,[[],["joysticksubsystem",3]]],[11,"name","","Return the name of the joystick or an empty string if no …",44,[[],["string",3]]],[11,"attached","","Return true if the joystick has been opened and currently …",44,[[],["bool",15]]],[11,"instance_id","","",44,[[],["i32",15]]],[11,"guid","","Retreive the joystick\'s GUID",44,[[],["guid",3]]],[11,"num_axes","","Retreive the number of axes for this joystick",44,[[],["u32",15]]],[11,"axis","","Gets the position of the given <code>axis</code>.",44,[[["u32",15]],[["result",4],["i16",15],["integerorsdlerror",4]]]],[11,"num_buttons","","Retreive the number of buttons for this joystick",44,[[],["u32",15]]],[11,"button","","Return <code>Ok(true)</code> if <code>button</code> is pressed.",44,[[["u32",15]],[["bool",15],["result",4],["integerorsdlerror",4]]]],[11,"num_balls","","Retreive the number of balls for this joystick",44,[[],["u32",15]]],[11,"ball","","Return a pair <code>(dx, dy)</code> containing the difference in axis …",44,[[["u32",15]],[["integerorsdlerror",4],["result",4]]]],[11,"num_hats","","Retreive the number of balls for this joystick",44,[[],["u32",15]]],[11,"hat","","Return the position of <code>hat</code> for this joystick",44,[[["u32",15]],[["hatstate",4],["result",4],["integerorsdlerror",4]]]],[3,"Guid","","Wrapper around a <code>SDL_JoystickGUID</code>, a globally unique …",null,null],[11,"from_string","","Create a GUID from a string representation.",45,[[["str",15]],[["result",4],["nulerror",3],["guid",3]]]],[11,"is_zero","","Return <code>true</code> if GUID is full 0s",45,[[],["bool",15]]],[11,"string","","Return a String representation of GUID",45,[[],["string",3]]],[11,"raw","","Return a copy of the internal SDL_JoystickGUID",45,[[],["sdl_joystickguid",3]]],[4,"HatState","","This is represented in SDL2 as a bitfield but obviously …",null,null],[13,"Centered","","",46,null],[13,"Up","","",46,null],[13,"Right","","",46,null],[13,"Down","","",46,null],[13,"Left","","",46,null],[13,"RightUp","","",46,null],[13,"RightDown","","",46,null],[13,"LeftUp","","",46,null],[13,"LeftDown","","",46,null],[11,"from_raw","","",46,[[["u8",15]],["hatstate",4]]],[11,"to_raw","","",46,[[],["u8",15]]],[0,"controller","sdl2","",null,null],[4,"AddMappingError","sdl2::controller","",null,null],[13,"InvalidMapping","","",47,null],[13,"InvalidFilePath","","",47,null],[13,"SdlError","","",47,null],[4,"Axis","","",null,null],[13,"LeftX","","",48,null],[13,"LeftY","","",48,null],[13,"RightX","","",48,null],[13,"RightY","","",48,null],[13,"TriggerLeft","","",48,null],[13,"TriggerRight","","",48,null],[11,"from_string","","Return the Axis from a string description in the same …",48,[[["str",15]],[["option",4],["axis",4]]]],[11,"string","","Return a string for a given axis in the same format using …",48,[[],["string",3]]],[11,"from_ll","","",48,[[["sdl_gamecontrolleraxis",4]],[["option",4],["axis",4]]]],[11,"to_ll","","",48,[[],["sdl_gamecontrolleraxis",4]]],[4,"Button","","",null,null],[13,"A","","",49,null],[13,"B","","",49,null],[13,"X","","",49,null],[13,"Y","","",49,null],[13,"Back","","",49,null],[13,"Guide","","",49,null],[13,"Start","","",49,null],[13,"LeftStick","","",49,null],[13,"RightStick","","",49,null],[13,"LeftShoulder","","",49,null],[13,"RightShoulder","","",49,null],[13,"DPadUp","","",49,null],[13,"DPadDown","","",49,null],[13,"DPadLeft","","",49,null],[13,"DPadRight","","",49,null],[11,"from_string","","Return the Button from a string description in the same …",49,[[["str",15]],[["button",4],["option",4]]]],[11,"string","","Return a string for a given button in the same format …",49,[[],["string",3]]],[11,"from_ll","","",49,[[["sdl_gamecontrollerbutton",4]],[["button",4],["option",4]]]],[11,"to_ll","","",49,[[],["sdl_gamecontrollerbutton",4]]],[4,"MappingStatus","","Possible return values for <code>add_mapping</code>",null,null],[13,"Added","","",50,null],[13,"Updated","","",50,null],[3,"GameController","","Wrapper around the <code>SDL_GameController</code> object",null,null],[11,"subsystem","","",51,[[],["gamecontrollersubsystem",3]]],[11,"name","","Return the name of the controller or an empty string if no…",51,[[],["string",3]]],[11,"mapping","","Return a String describing the controller\'s button and …",51,[[],["string",3]]],[11,"attached","","Return true if the controller has been opened and …",51,[[],["bool",15]]],[11,"instance_id","","Return the joystick instance id of this controller",51,[[],["i32",15]]],[11,"axis","","Get the position of the given <code>axis</code>",51,[[["axis",4]],["i16",15]]],[11,"button","","Returns <code>true</code> if <code>button</code> is pressed.",51,[[["button",4]],["bool",15]]],[0,"haptic","sdl2","Haptic Functions",null,null],[3,"Haptic","sdl2::haptic","Wrapper around the <code>SDL_Haptic</code> object",null,null],[11,"subsystem","","",52,[[],["hapticsubsystem",3]]],[11,"rumble_play","","Run a simple rumble effect on the haptic device.",52,[[["u32",15],["f32",15]]]],[11,"rumble_stop","","Stop the simple rumble on the haptic device.",52,[[]]],[0,"keyboard","sdl2","",null,null],[4,"Keycode","sdl2::keyboard","",null,null],[13,"Backspace","","",53,null],[13,"Tab","","",53,null],[13,"Return","","",53,null],[13,"Escape","","",53,null],[13,"Space","","",53,null],[13,"Exclaim","","",53,null],[13,"Quotedbl","","",53,null],[13,"Hash","","",53,null],[13,"Dollar","","",53,null],[13,"Percent","","",53,null],[13,"Ampersand","","",53,null],[13,"Quote","","",53,null],[13,"LeftParen","","",53,null],[13,"RightParen","","",53,null],[13,"Asterisk","","",53,null],[13,"Plus","","",53,null],[13,"Comma","","",53,null],[13,"Minus","","",53,null],[13,"Period","","",53,null],[13,"Slash","","",53,null],[13,"Num0","","",53,null],[13,"Num1","","",53,null],[13,"Num2","","",53,null],[13,"Num3","","",53,null],[13,"Num4","","",53,null],[13,"Num5","","",53,null],[13,"Num6","","",53,null],[13,"Num7","","",53,null],[13,"Num8","","",53,null],[13,"Num9","","",53,null],[13,"Colon","","",53,null],[13,"Semicolon","","",53,null],[13,"Less","","",53,null],[13,"Equals","","",53,null],[13,"Greater","","",53,null],[13,"Question","","",53,null],[13,"At","","",53,null],[13,"LeftBracket","","",53,null],[13,"Backslash","","",53,null],[13,"RightBracket","","",53,null],[13,"Caret","","",53,null],[13,"Underscore","","",53,null],[13,"Backquote","","",53,null],[13,"A","","",53,null],[13,"B","","",53,null],[13,"C","","",53,null],[13,"D","","",53,null],[13,"E","","",53,null],[13,"F","","",53,null],[13,"G","","",53,null],[13,"H","","",53,null],[13,"I","","",53,null],[13,"J","","",53,null],[13,"K","","",53,null],[13,"L","","",53,null],[13,"M","","",53,null],[13,"N","","",53,null],[13,"O","","",53,null],[13,"P","","",53,null],[13,"Q","","",53,null],[13,"R","","",53,null],[13,"S","","",53,null],[13,"T","","",53,null],[13,"U","","",53,null],[13,"V","","",53,null],[13,"W","","",53,null],[13,"X","","",53,null],[13,"Y","","",53,null],[13,"Z","","",53,null],[13,"Delete","","",53,null],[13,"CapsLock","","",53,null],[13,"F1","","",53,null],[13,"F2","","",53,null],[13,"F3","","",53,null],[13,"F4","","",53,null],[13,"F5","","",53,null],[13,"F6","","",53,null],[13,"F7","","",53,null],[13,"F8","","",53,null],[13,"F9","","",53,null],[13,"F10","","",53,null],[13,"F11","","",53,null],[13,"F12","","",53,null],[13,"PrintScreen","","",53,null],[13,"ScrollLock","","",53,null],[13,"Pause","","",53,null],[13,"Insert","","",53,null],[13,"Home","","",53,null],[13,"PageUp","","",53,null],[13,"End","","",53,null],[13,"PageDown","","",53,null],[13,"Right","","",53,null],[13,"Left","","",53,null],[13,"Down","","",53,null],[13,"Up","","",53,null],[13,"NumLockClear","","",53,null],[13,"KpDivide","","",53,null],[13,"KpMultiply","","",53,null],[13,"KpMinus","","",53,null],[13,"KpPlus","","",53,null],[13,"KpEnter","","",53,null],[13,"Kp1","","",53,null],[13,"Kp2","","",53,null],[13,"Kp3","","",53,null],[13,"Kp4","","",53,null],[13,"Kp5","","",53,null],[13,"Kp6","","",53,null],[13,"Kp7","","",53,null],[13,"Kp8","","",53,null],[13,"Kp9","","",53,null],[13,"Kp0","","",53,null],[13,"KpPeriod","","",53,null],[13,"Application","","",53,null],[13,"Power","","",53,null],[13,"KpEquals","","",53,null],[13,"F13","","",53,null],[13,"F14","","",53,null],[13,"F15","","",53,null],[13,"F16","","",53,null],[13,"F17","","",53,null],[13,"F18","","",53,null],[13,"F19","","",53,null],[13,"F20","","",53,null],[13,"F21","","",53,null],[13,"F22","","",53,null],[13,"F23","","",53,null],[13,"F24","","",53,null],[13,"Execute","","",53,null],[13,"Help","","",53,null],[13,"Menu","","",53,null],[13,"Select","","",53,null],[13,"Stop","","",53,null],[13,"Again","","",53,null],[13,"Undo","","",53,null],[13,"Cut","","",53,null],[13,"Copy","","",53,null],[13,"Paste","","",53,null],[13,"Find","","",53,null],[13,"Mute","","",53,null],[13,"VolumeUp","","",53,null],[13,"VolumeDown","","",53,null],[13,"KpComma","","",53,null],[13,"KpEqualsAS400","","",53,null],[13,"AltErase","","",53,null],[13,"Sysreq","","",53,null],[13,"Cancel","","",53,null],[13,"Clear","","",53,null],[13,"Prior","","",53,null],[13,"Return2","","",53,null],[13,"Separator","","",53,null],[13,"Out","","",53,null],[13,"Oper","","",53,null],[13,"ClearAgain","","",53,null],[13,"CrSel","","",53,null],[13,"ExSel","","",53,null],[13,"Kp00","","",53,null],[13,"Kp000","","",53,null],[13,"ThousandsSeparator","","",53,null],[13,"DecimalSeparator","","",53,null],[13,"CurrencyUnit","","",53,null],[13,"CurrencySubUnit","","",53,null],[13,"KpLeftParen","","",53,null],[13,"KpRightParen","","",53,null],[13,"KpLeftBrace","","",53,null],[13,"KpRightBrace","","",53,null],[13,"KpTab","","",53,null],[13,"KpBackspace","","",53,null],[13,"KpA","","",53,null],[13,"KpB","","",53,null],[13,"KpC","","",53,null],[13,"KpD","","",53,null],[13,"KpE","","",53,null],[13,"KpF","","",53,null],[13,"KpXor","","",53,null],[13,"KpPower","","",53,null],[13,"KpPercent","","",53,null],[13,"KpLess","","",53,null],[13,"KpGreater","","",53,null],[13,"KpAmpersand","","",53,null],[13,"KpDblAmpersand","","",53,null],[13,"KpVerticalBar","","",53,null],[13,"KpDblVerticalBar","","",53,null],[13,"KpColon","","",53,null],[13,"KpHash","","",53,null],[13,"KpSpace","","",53,null],[13,"KpAt","","",53,null],[13,"KpExclam","","",53,null],[13,"KpMemStore","","",53,null],[13,"KpMemRecall","","",53,null],[13,"KpMemClear","","",53,null],[13,"KpMemAdd","","",53,null],[13,"KpMemSubtract","","",53,null],[13,"KpMemMultiply","","",53,null],[13,"KpMemDivide","","",53,null],[13,"KpPlusMinus","","",53,null],[13,"KpClear","","",53,null],[13,"KpClearEntry","","",53,null],[13,"KpBinary","","",53,null],[13,"KpOctal","","",53,null],[13,"KpDecimal","","",53,null],[13,"KpHexadecimal","","",53,null],[13,"LCtrl","","",53,null],[13,"LShift","","",53,null],[13,"LAlt","","",53,null],[13,"LGui","","",53,null],[13,"RCtrl","","",53,null],[13,"RShift","","",53,null],[13,"RAlt","","",53,null],[13,"RGui","","",53,null],[13,"Mode","","",53,null],[13,"AudioNext","","",53,null],[13,"AudioPrev","","",53,null],[13,"AudioStop","","",53,null],[13,"AudioPlay","","",53,null],[13,"AudioMute","","",53,null],[13,"MediaSelect","","",53,null],[13,"Www","","",53,null],[13,"Mail","","",53,null],[13,"Calculator","","",53,null],[13,"Computer","","",53,null],[13,"AcSearch","","",53,null],[13,"AcHome","","",53,null],[13,"AcBack","","",53,null],[13,"AcForward","","",53,null],[13,"AcStop","","",53,null],[13,"AcRefresh","","",53,null],[13,"AcBookmarks","","",53,null],[13,"BrightnessDown","","",53,null],[13,"BrightnessUp","","",53,null],[13,"DisplaySwitch","","",53,null],[13,"KbdIllumToggle","","",53,null],[13,"KbdIllumDown","","",53,null],[13,"KbdIllumUp","","",53,null],[13,"Eject","","",53,null],[13,"Sleep","","",53,null],[4,"Scancode","","",null,null],[13,"A","","",54,null],[13,"B","","",54,null],[13,"C","","",54,null],[13,"D","","",54,null],[13,"E","","",54,null],[13,"F","","",54,null],[13,"G","","",54,null],[13,"H","","",54,null],[13,"I","","",54,null],[13,"J","","",54,null],[13,"K","","",54,null],[13,"L","","",54,null],[13,"M","","",54,null],[13,"N","","",54,null],[13,"O","","",54,null],[13,"P","","",54,null],[13,"Q","","",54,null],[13,"R","","",54,null],[13,"S","","",54,null],[13,"T","","",54,null],[13,"U","","",54,null],[13,"V","","",54,null],[13,"W","","",54,null],[13,"X","","",54,null],[13,"Y","","",54,null],[13,"Z","","",54,null],[13,"Num1","","",54,null],[13,"Num2","","",54,null],[13,"Num3","","",54,null],[13,"Num4","","",54,null],[13,"Num5","","",54,null],[13,"Num6","","",54,null],[13,"Num7","","",54,null],[13,"Num8","","",54,null],[13,"Num9","","",54,null],[13,"Num0","","",54,null],[13,"Return","","",54,null],[13,"Escape","","",54,null],[13,"Backspace","","",54,null],[13,"Tab","","",54,null],[13,"Space","","",54,null],[13,"Minus","","",54,null],[13,"Equals","","",54,null],[13,"LeftBracket","","",54,null],[13,"RightBracket","","",54,null],[13,"Backslash","","",54,null],[13,"NonUsHash","","",54,null],[13,"Semicolon","","",54,null],[13,"Apostrophe","","",54,null],[13,"Grave","","",54,null],[13,"Comma","","",54,null],[13,"Period","","",54,null],[13,"Slash","","",54,null],[13,"CapsLock","","",54,null],[13,"F1","","",54,null],[13,"F2","","",54,null],[13,"F3","","",54,null],[13,"F4","","",54,null],[13,"F5","","",54,null],[13,"F6","","",54,null],[13,"F7","","",54,null],[13,"F8","","",54,null],[13,"F9","","",54,null],[13,"F10","","",54,null],[13,"F11","","",54,null],[13,"F12","","",54,null],[13,"PrintScreen","","",54,null],[13,"ScrollLock","","",54,null],[13,"Pause","","",54,null],[13,"Insert","","",54,null],[13,"Home","","",54,null],[13,"PageUp","","",54,null],[13,"Delete","","",54,null],[13,"End","","",54,null],[13,"PageDown","","",54,null],[13,"Right","","",54,null],[13,"Left","","",54,null],[13,"Down","","",54,null],[13,"Up","","",54,null],[13,"NumLockClear","","",54,null],[13,"KpDivide","","",54,null],[13,"KpMultiply","","",54,null],[13,"KpMinus","","",54,null],[13,"KpPlus","","",54,null],[13,"KpEnter","","",54,null],[13,"Kp1","","",54,null],[13,"Kp2","","",54,null],[13,"Kp3","","",54,null],[13,"Kp4","","",54,null],[13,"Kp5","","",54,null],[13,"Kp6","","",54,null],[13,"Kp7","","",54,null],[13,"Kp8","","",54,null],[13,"Kp9","","",54,null],[13,"Kp0","","",54,null],[13,"KpPeriod","","",54,null],[13,"NonUsBackslash","","",54,null],[13,"Application","","",54,null],[13,"Power","","",54,null],[13,"KpEquals","","",54,null],[13,"F13","","",54,null],[13,"F14","","",54,null],[13,"F15","","",54,null],[13,"F16","","",54,null],[13,"F17","","",54,null],[13,"F18","","",54,null],[13,"F19","","",54,null],[13,"F20","","",54,null],[13,"F21","","",54,null],[13,"F22","","",54,null],[13,"F23","","",54,null],[13,"F24","","",54,null],[13,"Execute","","",54,null],[13,"Help","","",54,null],[13,"Menu","","",54,null],[13,"Select","","",54,null],[13,"Stop","","",54,null],[13,"Again","","",54,null],[13,"Undo","","",54,null],[13,"Cut","","",54,null],[13,"Copy","","",54,null],[13,"Paste","","",54,null],[13,"Find","","",54,null],[13,"Mute","","",54,null],[13,"VolumeUp","","",54,null],[13,"VolumeDown","","",54,null],[13,"KpComma","","",54,null],[13,"KpEqualsAS400","","",54,null],[13,"International1","","",54,null],[13,"International2","","",54,null],[13,"International3","","",54,null],[13,"International4","","",54,null],[13,"International5","","",54,null],[13,"International6","","",54,null],[13,"International7","","",54,null],[13,"International8","","",54,null],[13,"International9","","",54,null],[13,"Lang1","","",54,null],[13,"Lang2","","",54,null],[13,"Lang3","","",54,null],[13,"Lang4","","",54,null],[13,"Lang5","","",54,null],[13,"Lang6","","",54,null],[13,"Lang7","","",54,null],[13,"Lang8","","",54,null],[13,"Lang9","","",54,null],[13,"AltErase","","",54,null],[13,"SysReq","","",54,null],[13,"Cancel","","",54,null],[13,"Clear","","",54,null],[13,"Prior","","",54,null],[13,"Return2","","",54,null],[13,"Separator","","",54,null],[13,"Out","","",54,null],[13,"Oper","","",54,null],[13,"ClearAgain","","",54,null],[13,"CrSel","","",54,null],[13,"ExSel","","",54,null],[13,"Kp00","","",54,null],[13,"Kp000","","",54,null],[13,"ThousandsSeparator","","",54,null],[13,"DecimalSeparator","","",54,null],[13,"CurrencyUnit","","",54,null],[13,"CurrencySubUnit","","",54,null],[13,"KpLeftParen","","",54,null],[13,"KpRightParen","","",54,null],[13,"KpLeftBrace","","",54,null],[13,"KpRightBrace","","",54,null],[13,"KpTab","","",54,null],[13,"KpBackspace","","",54,null],[13,"KpA","","",54,null],[13,"KpB","","",54,null],[13,"KpC","","",54,null],[13,"KpD","","",54,null],[13,"KpE","","",54,null],[13,"KpF","","",54,null],[13,"KpXor","","",54,null],[13,"KpPower","","",54,null],[13,"KpPercent","","",54,null],[13,"KpLess","","",54,null],[13,"KpGreater","","",54,null],[13,"KpAmpersand","","",54,null],[13,"KpDblAmpersand","","",54,null],[13,"KpVerticalBar","","",54,null],[13,"KpDblVerticalBar","","",54,null],[13,"KpColon","","",54,null],[13,"KpHash","","",54,null],[13,"KpSpace","","",54,null],[13,"KpAt","","",54,null],[13,"KpExclam","","",54,null],[13,"KpMemStore","","",54,null],[13,"KpMemRecall","","",54,null],[13,"KpMemClear","","",54,null],[13,"KpMemAdd","","",54,null],[13,"KpMemSubtract","","",54,null],[13,"KpMemMultiply","","",54,null],[13,"KpMemDivide","","",54,null],[13,"KpPlusMinus","","",54,null],[13,"KpClear","","",54,null],[13,"KpClearEntry","","",54,null],[13,"KpBinary","","",54,null],[13,"KpOctal","","",54,null],[13,"KpDecimal","","",54,null],[13,"KpHexadecimal","","",54,null],[13,"LCtrl","","",54,null],[13,"LShift","","",54,null],[13,"LAlt","","",54,null],[13,"LGui","","",54,null],[13,"RCtrl","","",54,null],[13,"RShift","","",54,null],[13,"RAlt","","",54,null],[13,"RGui","","",54,null],[13,"Mode","","",54,null],[13,"AudioNext","","",54,null],[13,"AudioPrev","","",54,null],[13,"AudioStop","","",54,null],[13,"AudioPlay","","",54,null],[13,"AudioMute","","",54,null],[13,"MediaSelect","","",54,null],[13,"Www","","",54,null],[13,"Mail","","",54,null],[13,"Calculator","","",54,null],[13,"Computer","","",54,null],[13,"AcSearch","","",54,null],[13,"AcHome","","",54,null],[13,"AcBack","","",54,null],[13,"AcForward","","",54,null],[13,"AcStop","","",54,null],[13,"AcRefresh","","",54,null],[13,"AcBookmarks","","",54,null],[13,"BrightnessDown","","",54,null],[13,"BrightnessUp","","",54,null],[13,"DisplaySwitch","","",54,null],[13,"KbdIllumToggle","","",54,null],[13,"KbdIllumDown","","",54,null],[13,"KbdIllumUp","","",54,null],[13,"Eject","","",54,null],[13,"Sleep","","",54,null],[13,"App1","","",54,null],[13,"App2","","",54,null],[13,"Num","","",54,null],[3,"Mod","","",null,null],[17,"NOMOD","","",null,null],[17,"LSHIFTMOD","","",null,null],[17,"RSHIFTMOD","","",null,null],[17,"LCTRLMOD","","",null,null],[17,"RCTRLMOD","","",null,null],[17,"LALTMOD","","",null,null],[17,"RALTMOD","","",null,null],[17,"LGUIMOD","","",null,null],[17,"RGUIMOD","","",null,null],[17,"NUMMOD","","",null,null],[17,"CAPSMOD","","",null,null],[17,"MODEMOD","","",null,null],[17,"RESERVEDMOD","","",null,null],[11,"empty","","Returns an empty set of flags.",55,[[],["mod",3]]],[11,"all","","Returns the set containing all flags.",55,[[],["mod",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",55,[[],["u16",15]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",55,[[["u16",15]],[["option",4],["mod",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",55,[[["u16",15]],["mod",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",55,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",55,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",55,[[["mod",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",55,[[["mod",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",55,[[["mod",3]]]],[11,"remove","","Removes the specified flags in-place.",55,[[["mod",3]]]],[11,"toggle","","Toggles the specified flags in-place.",55,[[["mod",3]]]],[3,"KeyboardState","","",null,null],[11,"new","","",56,[[["eventpump",3]],["keyboardstate",3]]],[11,"is_scancode_pressed","","Returns true if the scancode is pressed.",56,[[["scancode",4]],["bool",15]]],[11,"scancodes","","Returns an iterator all scancodes with a boolean …",56,[[],["scancodeiterator",3]]],[11,"pressed_scancodes","","Returns an iterator of pressed scancodes.",56,[[],["pressedscancodeiterator",3]]],[3,"ScancodeIterator","","",null,null],[3,"PressedScancodeIterator","","",null,null],[3,"KeyboardUtil","","Keyboard utility functions. Access with <code>Sdl::keyboard()</code>.",null,null],[11,"focused_window_id","","Gets the id of the window which currently has keyboard …",57,[[],[["option",4],["u32",15]]]],[11,"mod_state","","",57,[[],["mod",3]]],[11,"set_mod_state","","",57,[[["mod",3]]]],[3,"TextInputUtil","","Text input utility functions. Access with …",null,null],[11,"start","","",58,[[]]],[11,"is_active","","",58,[[],["bool",15]]],[11,"stop","","",58,[[]]],[11,"set_rect","","",58,[[["rect",3]]]],[11,"has_screen_keyboard_support","","",58,[[],["bool",15]]],[11,"is_screen_keyboard_shown","","",58,[[["window",3]],["bool",15]]],[0,"mouse","sdl2","",null,null],[3,"RelativeMouseState","sdl2::mouse","",null,null],[4,"SystemCursor","","",null,null],[13,"Arrow","","",59,null],[13,"IBeam","","",59,null],[13,"Wait","","",59,null],[13,"Crosshair","","",59,null],[13,"WaitArrow","","",59,null],[13,"SizeNWSE","","",59,null],[13,"SizeNESW","","",59,null],[13,"SizeWE","","",59,null],[13,"SizeNS","","",59,null],[13,"SizeAll","","",59,null],[13,"No","","",59,null],[13,"Hand","","",59,null],[3,"Cursor","","",null,null],[11,"new","","",60,[[["i32",15]],[["result",4],["string",3],["cursor",3]]]],[11,"from_surface","","",60,[[["i32",15],["asref",8],["surfaceref",3]],[["result",4],["string",3],["cursor",3]]]],[11,"from_system","","",60,[[["systemcursor",4]],[["result",4],["string",3],["cursor",3]]]],[11,"set","","",60,[[]]],[4,"MouseWheelDirection","","",null,null],[13,"Normal","","",61,null],[13,"Flipped","","",61,null],[13,"Unknown","","",61,null],[11,"from_ll","","",61,[[["u32",15]],["mousewheeldirection",4]]],[11,"to_ll","","",61,[[],["u32",15]]],[4,"MouseButton","","",null,null],[13,"Unknown","","",62,null],[13,"Left","","",62,null],[13,"Middle","","",62,null],[13,"Right","","",62,null],[13,"X1","","",62,null],[13,"X2","","",62,null],[11,"from_ll","","",62,[[["u8",15]],["mousebutton",4]]],[3,"MouseState","","",null,null],[11,"new","","",63,[[["eventpump",3]],["mousestate",3]]],[11,"from_sdl_state","","",63,[[["u32",15]],["mousestate",3]]],[11,"to_sdl_state","","",63,[[],["u32",15]]],[11,"left","","Returns true if the left mouse button is pressed.",63,[[],["bool",15]]],[11,"middle","","Tests if the middle mouse button was pressed.",63,[[],["bool",15]]],[11,"right","","Tests if the right mouse button was pressed.",63,[[],["bool",15]]],[11,"x1","","Tests if the X1 mouse button was pressed.",63,[[],["bool",15]]],[11,"x2","","Tests if the X2 mouse button was pressed.",63,[[],["bool",15]]],[11,"x","","Returns the x coordinate of the state",63,[[],["i32",15]]],[11,"y","","Returns the y coordinate of the state",63,[[],["i32",15]]],[11,"is_mouse_button_pressed","","Returns true if the mouse button is pressed.",63,[[["mousebutton",4]],["bool",15]]],[11,"mouse_buttons","","Returns an iterator all mouse buttons with a boolean …",63,[[],["mousebuttoniterator",3]]],[11,"pressed_mouse_buttons","","Returns an iterator of pressed mouse buttons.",63,[[],["pressedmousebuttoniterator",3]]],[3,"MouseButtonIterator","","",null,null],[3,"PressedMouseButtonIterator","","",null,null],[3,"MouseUtil","","Mouse utility functions. Access with <code>Sdl::mouse()</code>.",null,null],[11,"focused_window_id","","Gets the id of the window which currently has mouse focus.",64,[[],[["option",4],["u32",15]]]],[11,"warp_mouse_in_window","","",64,[[["window",3],["i32",15]]]],[11,"set_relative_mouse_mode","","",64,[[["bool",15]]]],[11,"relative_mouse_mode","","",64,[[],["bool",15]]],[11,"is_cursor_showing","","",64,[[],["bool",15]]],[11,"show_cursor","","",64,[[["bool",15]]]],[11,"capture","","",64,[[["bool",15]]]],[0,"rect","sdl2","Rectangles and points.",null,null],[5,"max_int_value","sdl2::rect","The maximal integer value that can be used for rectangles.",null,[[],["u32",15]]],[5,"min_int_value","","The minimal integer value that can be used for rectangle …",null,[[],["i32",15]]],[3,"Rect","","A (non-empty) rectangle.",null,null],[11,"new","","Creates a new rectangle from the given values.",65,[[["u32",15],["i32",15]],["rect",3]]],[11,"from_center","","Creates a new rectangle centered on the given position.",65,[[["u32",15]],["rect",3]]],[11,"x","","The horizontal position of this rectangle.",65,[[],["i32",15]]],[11,"y","","The vertical position of this rectangle.",65,[[],["i32",15]]],[11,"width","","The width of this rectangle.",65,[[],["u32",15]]],[11,"height","","The height of this rectangle.",65,[[],["u32",15]]],[11,"size","","Returns the width and height of this rectangle.",65,[[]]],[11,"set_x","","Sets the horizontal position of this rectangle to the …",65,[[["i32",15]]]],[11,"set_y","","Sets the vertical position of this rectangle to the given …",65,[[["i32",15]]]],[11,"set_width","","Sets the width of this rectangle to the given value, …",65,[[["u32",15]]]],[11,"set_height","","Sets the height of this rectangle to the given value, …",65,[[["u32",15]]]],[11,"left","","Returns the x-position of the left side of this rectangle.",65,[[],["i32",15]]],[11,"right","","Returns the x-position of the right side of this …",65,[[],["i32",15]]],[11,"top","","Returns the y-position of the top side of this rectangle.",65,[[],["i32",15]]],[11,"bottom","","Returns the y-position of the bottom side of this …",65,[[],["i32",15]]],[11,"center","","Returns the center position of this rectangle.",65,[[],["point",3]]],[11,"top_left","","Returns the top-left corner of this rectangle.",65,[[],["point",3]]],[11,"top_right","","Returns the top-right corner of this rectangle.",65,[[],["point",3]]],[11,"bottom_left","","Returns the bottom-left corner of this rectangle.",65,[[],["point",3]]],[11,"bottom_right","","Returns the bottom-right corner of this rectangle.",65,[[],["point",3]]],[11,"set_right","","Sets the position of the right side of this rectangle to …",65,[[["i32",15]]]],[11,"set_bottom","","Sets the position of the bottom side of this rectangle to …",65,[[["i32",15]]]],[11,"center_on","","Centers the rectangle on the given point.",65,[[]]],[11,"offset","","Move this rect and clamp the positions to prevent …",65,[[["i32",15]]]],[11,"reposition","","Moves this rect to the given position after clamping the …",65,[[]]],[11,"resize","","Resizes this rect to the given size after clamping the …",65,[[["u32",15]]]],[11,"contains","","Checks whether this rect contains a given point, or …",65,[[],["bool",15]]],[11,"contains_point","","Checks whether this rectangle contains a given point.",65,[[],["bool",15]]],[11,"contains_rect","","Checks whether this rectangle completely contains another …",65,[[["rect",3]],["bool",15]]],[11,"raw","","Returns the underlying C Rect.",65,[[]]],[11,"raw_mut","","",65,[[]]],[11,"raw_slice","","",65,[[]]],[11,"from_ll","","",65,[[["sdl_rect",3]],["rect",3]]],[11,"from_enclose_points","","Calculate a minimal rectangle enclosing a set of points. …",65,[[["into",8],["option",4]],[["rect",3],["option",4]]]],[11,"has_intersection","","Determines whether two rectangles intersect.",65,[[["rect",3]],["bool",15]]],[11,"intersection","","Calculates the intersection of two rectangles.",65,[[["rect",3]],[["rect",3],["option",4]]]],[11,"union","","Calculates the union of two rectangles (i.e. the smallest …",65,[[["rect",3]],["rect",3]]],[11,"intersect_line","","Calculates the intersection of a rectangle and a line …",65,[[["point",3]],["option",4]]],[3,"Point","","Immutable point type, consisting of x and y.",null,null],[11,"new","","Creates a new point from the given coordinates.",66,[[["i32",15]],["point",3]]],[11,"from_ll","","",66,[[["sdl_point",3]],["point",3]]],[11,"raw_slice","","",66,[[]]],[11,"raw","","",66,[[]]],[11,"offset","","Returns a new point by shifting this point\'s coordinates …",66,[[["i32",15]],["point",3]]],[11,"scale","","Returns a new point by multiplying this point\'s …",66,[[["i32",15]],["point",3]]],[11,"x","","Returns the x-coordinate of this point.",66,[[],["i32",15]]],[11,"y","","Returns the y-coordinate of this point.",66,[[],["i32",15]]],[0,"surface","sdl2","",null,null],[3,"SurfaceContext","sdl2::surface","Holds a <code>SDL_Surface</code>",null,null],[3,"Surface","","Holds a <code>Rc<SurfaceContext></code>.",null,null],[3,"SurfaceRef","","An unsized Surface reference.",null,null],[11,"from_ll","","",67,[[],["surface",3]]],[11,"new","","Creates a new surface using a pixel format.",67,[[["u32",15],["pixelformatenum",4]],[["result",4],["surface",3],["string",3]]]],[11,"from_pixelmasks","","Creates a new surface using pixel masks.",67,[[["u32",15],["pixelmasks",3]],[["result",4],["surface",3],["string",3]]]],[11,"from_data","","Creates a new surface from an existing buffer, using a …",67,[[["u32",15],["pixelformatenum",4]],[["string",3],["result",4],["surface",3]]]],[11,"from_data_pixelmasks","","Creates a new surface from an existing buffer, using …",67,[[["u32",15],["pixelmasks",3]],[["string",3],["result",4],["surface",3]]]],[11,"load_bmp_rw","","",67,[[["rwops",3]],[["result",4],["surface",3],["string",3]]]],[11,"load_bmp","","",67,[[["asref",8],["path",3]],[["result",4],["surface",3],["string",3]]]],[11,"into_canvas","","Creates a Software Canvas to allow rendering in the …",67,[[],[["string",3],["canvas",3],["result",4]]]],[11,"context","","",67,[[],[["rc",3],["surfacecontext",3]]]],[11,"from_ll","","",68,[[],["surfaceref",3]]],[11,"from_ll_mut","","",68,[[],["surfaceref",3]]],[11,"raw","","",68,[[]]],[11,"width","","",68,[[],["u32",15]]],[11,"height","","",68,[[],["u32",15]]],[11,"pitch","","",68,[[],["u32",15]]],[11,"size","","",68,[[]]],[11,"rect","","",68,[[],["rect",3]]],[11,"pixel_format","","",68,[[],["pixelformat",3]]],[11,"pixel_format_enum","","",68,[[],["pixelformatenum",4]]],[11,"with_lock","","Locks a surface so that the pixels can be directly …",68,[[["fnonce",8]]]],[11,"with_lock_mut","","Locks a surface so that the pixels can be directly …",68,[[["fnonce",8]]]],[11,"without_lock","","Returns the Surface\'s pixel buffer if the Surface doesn\'t …",68,[[],["option",4]]],[11,"without_lock_mut","","Returns the Surface\'s pixel buffer if the Surface doesn\'t …",68,[[],["option",4]]],[11,"must_lock","","Returns true if the Surface needs to be locked before …",68,[[],["bool",15]]],[11,"save_bmp_rw","","",68,[[["rwops",3]],[["result",4],["string",3]]]],[11,"save_bmp","","",68,[[["asref",8],["path",3]],[["result",4],["string",3]]]],[11,"set_palette","","",68,[[["palette",3]],[["result",4],["string",3]]]],[11,"enable_RLE","","",68,[[]]],[11,"disable_RLE","","",68,[[]]],[11,"set_color_key","","",68,[[["bool",15],["color",3]],[["result",4],["string",3]]]],[11,"color_key","","The function will fail if the surface doesn\'t have color …",68,[[],[["result",4],["color",3],["string",3]]]],[11,"set_color_mod","","",68,[[["color",3]]]],[11,"color_mod","","",68,[[],["color",3]]],[11,"fill_rect","","",68,[[["color",3]],[["result",4],["string",3]]]],[11,"fill_rects","","",68,[[["color",3]],[["result",4],["string",3]]]],[11,"set_alpha_mod","","",68,[[["u8",15]]]],[11,"alpha_mod","","",68,[[],["u8",15]]],[11,"set_blend_mode","","The function will fail if the blend mode is not supported …",68,[[["blendmode",4]],[["result",4],["string",3]]]],[11,"blend_mode","","",68,[[],["blendmode",4]]],[11,"set_clip_rect","","Sets the clip rectangle for the surface.",68,[[],["bool",15]]],[11,"clip_rect","","Gets the clip rectangle for the surface.",68,[[],[["rect",3],["option",4]]]],[11,"convert","","Copies the surface into a new one that is optimized for …",68,[[["pixelformat",3]],[["result",4],["surface",3],["string",3]]]],[11,"blit","","Performs surface blitting (surface copying).",68,[[["surfaceref",3]],[["result",4],["option",4],["string",3]]]],[11,"lower_blit","","Performs low-level surface blitting.",68,[[["surfaceref",3]],[["result",4],["string",3]]]],[11,"blit_scaled","","Performs scaled surface bliting (surface copying).",68,[[["surfaceref",3]],[["result",4],["option",4],["string",3]]]],[11,"lower_blit_scaled","","Performs low-level scaled surface blitting.",68,[[["surfaceref",3]],[["result",4],["string",3]]]],[0,"pixels","sdl2","",null,null],[3,"Palette","sdl2::pixels","",null,null],[11,"new","","Creates a new, uninitialized palette",69,[[["usize",15]],[["string",3],["result",4]]]],[11,"with_colors","","Creates a palette from the provided colors",69,[[],[["string",3],["result",4]]]],[11,"len","","",69,[[],["usize",15]]],[11,"is_empty","","",69,[[],["bool",15]]],[11,"raw","","",69,[[]]],[3,"Color","","",null,null],[12,"r","","",70,null],[12,"g","","",70,null],[12,"b","","",70,null],[12,"a","","",70,null],[11,"RGB","","",70,[[["u8",15]],["color",3]]],[11,"RGBA","","",70,[[["u8",15]],["color",3]]],[11,"to_u32","","",70,[[["pixelformat",3]],["u32",15]]],[11,"from_u32","","",70,[[["u32",15],["pixelformat",3]],["color",3]]],[11,"rgb","","",70,[[]]],[11,"rgba","","",70,[[]]],[3,"PixelMasks","","",null,null],[12,"bpp","","Bits per pixel; usually 15, 16, or 32",71,null],[12,"rmask","","The red mask",71,null],[12,"gmask","","The green mask",71,null],[12,"bmask","","The blue mask",71,null],[12,"amask","","The alpha mask",71,null],[3,"PixelFormat","","",null,null],[11,"raw","","",72,[[]]],[11,"from_ll","","",72,[[],["pixelformat",3]]],[4,"PixelFormatEnum","","",null,null],[13,"Unknown","","",73,null],[13,"Index1LSB","","",73,null],[13,"Index1MSB","","",73,null],[13,"Index4LSB","","",73,null],[13,"Index4MSB","","",73,null],[13,"Index8","","",73,null],[13,"RGB332","","",73,null],[13,"RGB444","","",73,null],[13,"RGB555","","",73,null],[13,"BGR555","","",73,null],[13,"ARGB4444","","",73,null],[13,"RGBA4444","","",73,null],[13,"ABGR4444","","",73,null],[13,"BGRA4444","","",73,null],[13,"ARGB1555","","",73,null],[13,"RGBA5551","","",73,null],[13,"ABGR1555","","",73,null],[13,"BGRA5551","","",73,null],[13,"RGB565","","",73,null],[13,"BGR565","","",73,null],[13,"RGB24","","",73,null],[13,"BGR24","","",73,null],[13,"RGB888","","",73,null],[13,"RGBX8888","","",73,null],[13,"BGR888","","",73,null],[13,"BGRX8888","","",73,null],[13,"ARGB8888","","",73,null],[13,"RGBA8888","","",73,null],[13,"ABGR8888","","",73,null],[13,"BGRA8888","","",73,null],[13,"ARGB2101010","","",73,null],[13,"YV12","","",73,null],[13,"IYUV","","",73,null],[13,"YUY2","","",73,null],[13,"UYVY","","",73,null],[13,"YVYU","","",73,null],[11,"from_masks","","",73,[[["pixelmasks",3]],["pixelformatenum",4]]],[11,"into_masks","","",73,[[],[["pixelmasks",3],["string",3],["result",4]]]],[11,"byte_size_from_pitch_and_height","","Calculates the total byte size of an image buffer, given …",73,[[["usize",15]],["usize",15]]],[11,"byte_size_of_pixels","","",73,[[["usize",15]],["usize",15]]],[11,"byte_size_per_pixel","","",73,[[],["usize",15]]],[11,"supports_alpha","","",73,[[],["bool",15]]],[0,"video","sdl2","",null,null],[0,"gl_attr","sdl2::video","OpenGL context getters and setters",null,null],[3,"GLAttr","sdl2::video::gl_attr","OpenGL context getters and setters. Obtain with …",null,null],[11,"set_red_size","","<strong>Sets</strong> the attribute:  the minimum number of bits for the …",74,[[["u8",15]]]],[11,"red_size","","<strong>Gets</strong> the attribute:  the minimum number of bits for the …",74,[[],["u8",15]]],[11,"set_green_size","","<strong>Sets</strong> the attribute:  the minimum number of bits for the …",74,[[["u8",15]]]],[11,"green_size","","<strong>Gets</strong> the attribute:  the minimum number of bits for the …",74,[[],["u8",15]]],[11,"set_blue_size","","<strong>Sets</strong> the attribute:  the minimum number of bits for the …",74,[[["u8",15]]]],[11,"blue_size","","<strong>Gets</strong> the attribute:  the minimum number of bits for the …",74,[[],["u8",15]]],[11,"set_alpha_size","","<strong>Sets</strong> the attribute:  the minimum number of bits for the …",74,[[["u8",15]]]],[11,"alpha_size","","<strong>Gets</strong> the attribute:  the minimum number of bits for the …",74,[[],["u8",15]]],[11,"set_buffer_size","","<strong>Sets</strong> the attribute:  the minimum number of bits for frame …",74,[[["u8",15]]]],[11,"buffer_size","","<strong>Gets</strong> the attribute:  the minimum number of bits for frame …",74,[[],["u8",15]]],[11,"set_double_buffer","","<strong>Sets</strong> the attribute:  whether the output is single or …",74,[[["bool",15]]]],[11,"double_buffer","","<strong>Gets</strong> the attribute:  whether the output is single or …",74,[[],["bool",15]]],[11,"set_depth_size","","<strong>Sets</strong> the attribute:  the minimum number of bits in the …",74,[[["u8",15]]]],[11,"depth_size","","<strong>Gets</strong> the attribute:  the minimum number of bits in the …",74,[[],["u8",15]]],[11,"set_stencil_size","","<strong>Sets</strong> the attribute:  the minimum number of bits in the …",74,[[["u8",15]]]],[11,"stencil_size","","<strong>Gets</strong> the attribute:  the minimum number of bits in the …",74,[[],["u8",15]]],[11,"set_accum_red_size","","<strong>Sets</strong> the attribute:  the minimum number of bits for the …",74,[[["u8",15]]]],[11,"accum_red_size","","<strong>Gets</strong> the attribute:  the minimum number of bits for the …",74,[[],["u8",15]]],[11,"set_accum_green_size","","<strong>Sets</strong> the attribute:  the minimum number of bits for the …",74,[[["u8",15]]]],[11,"accum_green_size","","<strong>Gets</strong> the attribute:  the minimum number of bits for the …",74,[[],["u8",15]]],[11,"set_accum_blue_size","","<strong>Sets</strong> the attribute:  the minimum number of bits for the …",74,[[["u8",15]]]],[11,"accum_blue_size","","<strong>Gets</strong> the attribute:  the minimum number of bits for the …",74,[[],["u8",15]]],[11,"set_accum_alpha_size","","<strong>Sets</strong> the attribute:  the minimum number of bits for the …",74,[[["u8",15]]]],[11,"accum_alpha_size","","<strong>Gets</strong> the attribute:  the minimum number of bits for the …",74,[[],["u8",15]]],[11,"set_stereo","","<strong>Sets</strong> the attribute:  whether the output is stereo 3D; …",74,[[["bool",15]]]],[11,"stereo","","<strong>Gets</strong> the attribute:  whether the output is stereo 3D; …",74,[[],["bool",15]]],[11,"set_multisample_buffers","","<strong>Sets</strong> the attribute:  the number of buffers used for …",74,[[["u8",15]]]],[11,"multisample_buffers","","<strong>Gets</strong> the attribute:  the number of buffers used for …",74,[[],["u8",15]]],[11,"set_multisample_samples","","<strong>Sets</strong> the attribute:  the number of samples used around …",74,[[["u8",15]]]],[11,"multisample_samples","","<strong>Gets</strong> the attribute:  the number of samples used around …",74,[[],["u8",15]]],[11,"set_accelerated_visual","","<strong>Sets</strong> the attribute:  whether to require hardware …",74,[[["bool",15]]]],[11,"accelerated_visual","","<strong>Gets</strong> the attribute:  whether to require hardware …",74,[[],["bool",15]]],[11,"set_context_major_version","","<strong>Sets</strong> the attribute:  OpenGL context major version",74,[[["u8",15]]]],[11,"context_major_version","","<strong>Gets</strong> the attribute:  OpenGL context major version",74,[[],["u8",15]]],[11,"set_context_minor_version","","<strong>Sets</strong> the attribute:  OpenGL context minor version",74,[[["u8",15]]]],[11,"context_minor_version","","<strong>Gets</strong> the attribute:  OpenGL context minor version",74,[[],["u8",15]]],[11,"set_context_profile","","<strong>Sets</strong> the attribute:  type of GL context (Core, …",74,[[["glprofile",4]]]],[11,"context_profile","","<strong>Gets</strong> the attribute:  type of GL context (Core, …",74,[[],["glprofile",4]]],[11,"set_share_with_current_context","","<strong>Sets</strong> the attribute:  OpenGL context sharing; defaults to …",74,[[["bool",15]]]],[11,"share_with_current_context","","<strong>Gets</strong> the attribute:  OpenGL context sharing; defaults to …",74,[[],["bool",15]]],[11,"set_framebuffer_srgb_compatible","","<strong>Sets</strong> the attribute:  requests sRGB capable visual; …",74,[[["bool",15]]]],[11,"framebuffer_srgb_compatible","","<strong>Gets</strong> the attribute:  requests sRGB capable visual; …",74,[[],["bool",15]]],[11,"set_context_version","","<strong>Sets</strong> the OpenGL context major and minor versions.",74,[[["u8",15]]]],[11,"context_version","","<strong>Gets</strong> the OpenGL context major and minor versions as a …",74,[[]]],[3,"ContextFlagsBuilder","","The type that allows you to build a OpenGL context …",null,null],[11,"set","","Finishes the builder and applies the GL context flags to …",75,[[]]],[11,"debug","","Sets the context into \\\"debug\\\" mode.",75,[[],["contextflagsbuilder",3]]],[11,"forward_compatible","","Sets the context into \\\"forward compatible\\\" mode.",75,[[],["contextflagsbuilder",3]]],[11,"robust_access","","",75,[[],["contextflagsbuilder",3]]],[11,"reset_isolation","","",75,[[],["contextflagsbuilder",3]]],[3,"ContextFlags","","",null,null],[11,"has_debug","","",76,[[],["bool",15]]],[11,"has_forward_compatible","","",76,[[],["bool",15]]],[11,"has_robust_access","","",76,[[],["bool",15]]],[11,"has_reset_isolation","","",76,[[],["bool",15]]],[11,"set_context_flags","","<strong>Sets</strong> any combination of OpenGL context configuration …",74,[[],["contextflagsbuilder",3]]],[11,"context_flags","","<strong>Gets</strong> the applied OpenGL context configuration flags.",74,[[],["contextflags",3]]],[3,"WindowSurfaceRef","sdl2::video","",null,null],[11,"update_window","","Updates the change made to the inner Surface to the …",77,[[],[["result",4],["string",3]]]],[11,"update_window_rects","","Same as <code>update_window</code>, but only update the parts included …",77,[[],[["result",4],["string",3]]]],[11,"finish","","Gives up this WindowSurfaceRef, allowing to use the …",77,[[],[["result",4],["string",3]]]],[4,"GLProfile","","",null,null],[13,"Core","","OpenGL core profile - deprecated functions are disabled",78,null],[13,"Compatibility","","OpenGL compatibility profile - deprecated functions are …",78,null],[13,"GLES","","OpenGL ES profile - only a subset of the base OpenGL …",78,null],[13,"Unknown","","Unknown profile - SDL will tend to return 0 if you ask …",78,null],[3,"DisplayMode","","",null,null],[12,"format","","",79,null],[12,"w","","",79,null],[12,"h","","",79,null],[12,"refresh_rate","","",79,null],[11,"new","","",79,[[["pixelformatenum",4],["i32",15]],["displaymode",3]]],[11,"from_ll","","",79,[[["sdl_displaymode",3]],["displaymode",3]]],[11,"to_ll","","",79,[[],["sdl_displaymode",3]]],[4,"FullscreenType","","",null,null],[13,"Off","","",80,null],[13,"True","","",80,null],[13,"Desktop","","",80,null],[11,"from_window_flags","","",80,[[["u32",15]],["fullscreentype",4]]],[4,"WindowPos","","",null,null],[13,"Undefined","","",81,null],[13,"Centered","","",81,null],[13,"Positioned","","",81,null],[3,"GLContext","","",null,null],[11,"is_current","","Returns true if the OpenGL context is the current one in …",82,[[],["bool",15]]],[3,"WindowContext","","Holds a <code>SDL_Window</code>",null,null],[11,"from_ll","","Unsafe if the <code>*mut SDL_Window</code> is used after the …",83,[[["videosubsystem",3]],["windowcontext",3]]],[4,"SwapInterval","","Represents a setting for vsync/swap interval.",null,null],[13,"Immediate","","",84,null],[13,"VSync","","",84,null],[13,"LateSwapTearing","","",84,null],[3,"Window","","Represents the \\\"shell\\\" of a <code>Window</code>.",null,null],[11,"raw","","",82,[[],["sdl_glcontext",6]]],[4,"WindowBuildError","","",null,null],[13,"HeightOverflows","","",85,null],[13,"WidthOverflows","","",85,null],[13,"InvalidTitle","","",85,null],[13,"SdlError","","",85,null],[3,"WindowBuilder","","The type that allows you to build windows.",null,null],[11,"new","","Initializes a new <code>WindowBuilder</code>.",86,[[["u32",15],["videosubsystem",3],["str",15]],["windowbuilder",3]]],[11,"build","","Builds the window.",86,[[],[["result",4],["window",3],["windowbuilderror",4]]]],[11,"window_flags","","Gets the underlying window flags.",86,[[],["u32",15]]],[11,"set_window_flags","","Sets the underlying window flags. This will effectively …",86,[[["u32",15]],["windowbuilder",3]]],[11,"position","","Sets the window position.",86,[[["i32",15]],["windowbuilder",3]]],[11,"position_centered","","Centers the window.",86,[[],["windowbuilder",3]]],[11,"fullscreen","","Sets the window to fullscreen.",86,[[],["windowbuilder",3]]],[11,"fullscreen_desktop","","Sets the window to fullscreen at the current desktop …",86,[[],["windowbuilder",3]]],[11,"opengl","","Sets the window to be usable with an OpenGL context",86,[[],["windowbuilder",3]]],[11,"vulkan","","Sets the window to be usable with a Vulkan instance",86,[[],["windowbuilder",3]]],[11,"hidden","","Hides the window.",86,[[],["windowbuilder",3]]],[11,"borderless","","Removes the window decoration.",86,[[],["windowbuilder",3]]],[11,"resizable","","Sets the window to be resizable.",86,[[],["windowbuilder",3]]],[11,"minimized","","Minimizes the window.",86,[[],["windowbuilder",3]]],[11,"maximized","","Maximizes the window.",86,[[],["windowbuilder",3]]],[11,"input_grabbed","","Sets the window to have grabbed input focus.",86,[[],["windowbuilder",3]]],[11,"allow_highdpi","","Creates the window in high-DPI mode if supported (>= SDL …",86,[[],["windowbuilder",3]]],[11,"raw","","",87,[[]]],[11,"from_ll","","",87,[[["videosubsystem",3]],["window",3]]],[11,"from_ref","","Create a new <code>Window</code> without taking ownership of the …",87,[[["windowcontext",3],["rc",3]],["window",3]]],[11,"subsystem","","",87,[[],["videosubsystem",3]]],[11,"into_canvas","","Initializes a new <code>CanvasBuilder</code>; a convenience method …",87,[[],["canvasbuilder",3]]],[11,"context","","",87,[[],[["windowcontext",3],["rc",3]]]],[11,"id","","",87,[[],["u32",15]]],[11,"gl_create_context","","",87,[[],[["glcontext",3],["string",3],["result",4]]]],[11,"gl_set_context_to_current","","Set the window\'s OpenGL context to the current context on …",87,[[],[["result",4],["string",3]]]],[11,"gl_make_current","","",87,[[["glcontext",3]],[["result",4],["string",3]]]],[11,"gl_swap_window","","",87,[[]]],[11,"display_index","","",87,[[],[["result",4],["string",3],["i32",15]]]],[11,"set_display_mode","","",87,[[],[["result",4],["string",3]]]],[11,"display_mode","","",87,[[],[["result",4],["displaymode",3],["string",3]]]],[11,"window_pixel_format","","",87,[[],["pixelformatenum",4]]],[11,"window_flags","","",87,[[],["u32",15]]],[11,"set_title","","",87,[[["str",15]],[["nulerror",3],["result",4]]]],[11,"title","","",87,[[],["str",15]]],[11,"set_icon","","",87,[[["asref",8],["surfaceref",3]]]],[11,"set_position","","",87,[[["windowpos",4]]]],[11,"position","","",87,[[]]],[11,"set_size","","",87,[[["u32",15]],[["result",4],["integerorsdlerror",4]]]],[11,"size","","",87,[[]]],[11,"drawable_size","","",87,[[]]],[11,"set_minimum_size","","",87,[[["u32",15]],[["result",4],["integerorsdlerror",4]]]],[11,"minimum_size","","",87,[[]]],[11,"set_maximum_size","","",87,[[["u32",15]],[["result",4],["integerorsdlerror",4]]]],[11,"maximum_size","","",87,[[]]],[11,"set_bordered","","",87,[[["bool",15]]]],[11,"show","","",87,[[]]],[11,"hide","","",87,[[]]],[11,"raise","","",87,[[]]],[11,"maximize","","",87,[[]]],[11,"minimize","","",87,[[]]],[11,"restore","","",87,[[]]],[11,"fullscreen_state","","",87,[[],["fullscreentype",4]]],[11,"set_fullscreen","","",87,[[["fullscreentype",4]],[["result",4],["string",3]]]],[11,"surface","","Returns a WindowSurfaceRef, which can be used like a …",87,[[["eventpump",3]],[["result",4],["string",3],["windowsurfaceref",3]]]],[11,"set_grab","","",87,[[["bool",15]]]],[11,"grab","","",87,[[],["bool",15]]],[11,"set_brightness","","",87,[[["f64",15]],[["result",4],["string",3]]]],[11,"brightness","","",87,[[],["f64",15]]],[11,"set_gamma_ramp","","",87,[[],[["result",4],["string",3]]]],[11,"gamma_ramp","","",87,[[],[["result",4],["string",3]]]],[3,"DriverIterator","","",null,null],[5,"drivers","","Gets an iterator of all video drivers compiled into the …",null,[[],["driveriterator",3]]],[0,"timer","sdl2","",null,null],[6,"TimerCallback","sdl2::timer","",null,null],[3,"Timer","","",null,null],[11,"into_inner","","Returns the closure as a trait-object and cancels the …",88,[[],["timercallback",6]]],[0,"render","sdl2","2D accelerated rendering",null,null],[3,"SdlError","sdl2::render","Contains the description of an error returned by SDL",null,null],[4,"TargetRenderError","","Possible errors returned by targeting a <code>Canvas</code> to render …",null,null],[13,"SdlError","","",89,null],[13,"NotSupported","","",89,null],[4,"TextureAccess","","",null,null],[13,"Static","","",90,null],[13,"Streaming","","",90,null],[13,"Target","","",90,null],[3,"RendererInfo","","A structure that contains information on the capabilities …",null,null],[12,"name","","",91,null],[12,"flags","","",91,null],[12,"texture_formats","","",91,null],[12,"max_texture_width","","",91,null],[12,"max_texture_height","","",91,null],[4,"BlendMode","","",null,null],[13,"None","","",92,null],[13,"Blend","","",92,null],[13,"Add","","",92,null],[13,"Mod","","",92,null],[13,"Invalid","","",92,null],[11,"from_ll","","",91,[[["sdl_rendererinfo",3]],["rendererinfo",3]]],[3,"RendererContext","","Manages what keeps a <code>SDL_Renderer</code> alive",null,null],[11,"info","","Gets information about the rendering context.",93,[[],["rendererinfo",3]]],[11,"raw","","Gets the raw pointer to the SDL_Renderer",93,[[]]],[11,"from_ll","","",93,[[["rc",3]]]],[8,"RenderTarget","","Represents structs which can be the target of a …",null,null],[16,"Context","","",94,null],[3,"Canvas","","Manages and owns a target (<code>Surface</code> or <code>Window</code>) and allows …",null,null],[6,"SurfaceCanvas","","Alias for a <code>Canvas</code> that was created out of a <code>Surface</code>",null,null],[11,"from_surface","","Creates a 2D software rendering context for a surface.",95,[[["surface",3]],[["string",3],["result",4]]]],[11,"surface","","Gets a reference to the associated surface of the Canvas",95,[[],["surfaceref",3]]],[11,"surface_mut","","Gets a mutable reference to the associated surface of the …",95,[[],["surfaceref",3]]],[11,"into_surface","","Gets the associated surface of the Canvas and destroys …",95,[[],["surface",3]]],[11,"texture_creator","","Returns a <code>TextureCreator</code> that can create Textures to be …",95,[[],[["surfacecontext",3],["texturecreator",3]]]],[6,"WindowCanvas","","",null,null],[11,"window","","Gets a reference to the associated window of the Canvas",95,[[],["window",3]]],[11,"window_mut","","Gets a mutable reference to the associated window of the …",95,[[],["window",3]]],[11,"into_window","","Gets the associated window of the Canvas and destroys the …",95,[[],["window",3]]],[11,"default_pixel_format","","",95,[[],["pixelformatenum",4]]],[11,"texture_creator","","Returns a <code>TextureCreator</code> that can create Textures to be …",95,[[],[["texturecreator",3],["windowcontext",3]]]],[11,"render_target_supported","","Determine whether a window supports the use of render …",95,[[],["bool",15]]],[11,"with_texture_canvas","","Temporarily sets the target of <code>Canvas</code> to a <code>Texture</code>. This …",95,[[["texture",3]],[["result",4],["targetrendererror",4]]]],[11,"with_multiple_texture_canvas","","Same as <code>with_texture_canvas</code>, but allows to change …",95,[[],[["result",4],["targetrendererror",4]]]],[3,"TextureCreator","","Creates Textures that cannot outlive the creator",null,null],[3,"CanvasBuilder","","The type that allows you to build Window-based renderers.",null,null],[11,"new","","Initializes a new <code>CanvasBuilder</code>.",96,[[["window",3]],["canvasbuilder",3]]],[11,"build","","Builds the renderer.",96,[[],[["integerorsdlerror",4],["result",4],["windowcanvas",6]]]],[11,"index","","Sets the index of the rendering driver to initialize. If …",96,[[["u32",15]],["canvasbuilder",3]]],[11,"software","","Set the renderer to a software fallback. This flag is …",96,[[],["canvasbuilder",3]]],[11,"accelerated","","Set the renderer to use hardware acceleration. This flag …",96,[[],["canvasbuilder",3]]],[11,"present_vsync","","Synchronize renderer <code>present</code> method calls with the …",96,[[],["canvasbuilder",3]]],[11,"target_texture","","Set the renderer to support rendering to a texture. This …",96,[[],["canvasbuilder",3]]],[4,"TextureValueError","","",null,null],[13,"WidthOverflows","","",97,null],[13,"HeightOverflows","","",97,null],[13,"WidthMustBeMultipleOfTwoForFormat","","",97,null],[13,"SdlError","","",97,null],[11,"raw","","",98,[[]]],[11,"default_pixel_format","","",98,[[],["pixelformatenum",4]]],[11,"create_texture","","Creates a texture for a rendering context.",98,[[["u32",15],["textureaccess",4]],[["result",4],["texture",3],["texturevalueerror",4]]]],[11,"create_texture_static","","Shorthand for …",98,[[["u32",15]],[["result",4],["texture",3],["texturevalueerror",4]]]],[11,"create_texture_streaming","","Shorthand for …",98,[[["u32",15]],[["result",4],["texture",3],["texturevalueerror",4]]]],[11,"create_texture_target","","Shorthand for …",98,[[["u32",15]],[["result",4],["texture",3],["texturevalueerror",4]]]],[11,"create_texture_from_surface","","Creates a texture from an existing surface.",98,[[["asref",8],["surfaceref",3]],[["result",4],["texture",3],["texturevalueerror",4]]]],[11,"raw_create_texture","","Create a texture from its raw <code>SDL_Texture</code>.",98,[[],["texture",3]]],[11,"raw","","",95,[[]]],[11,"set_draw_color","","Sets the color used for drawing operations (Rect, Line …",95,[[["color",3]]]],[11,"draw_color","","Gets the color used for drawing operations (Rect, Line …",95,[[],["color",3]]],[11,"set_blend_mode","","Sets the blend mode used for drawing operations (Fill and …",95,[[["blendmode",4]]]],[11,"blend_mode","","Gets the blend mode used for drawing operations.",95,[[],["blendmode",4]]],[11,"clear","","Clears the current rendering target with the drawing …",95,[[]]],[11,"present","","Updates the screen with any rendering performed since the …",95,[[]]],[11,"output_size","","Gets the output size of a rendering context.",95,[[],[["result",4],["string",3]]]],[11,"set_logical_size","","Sets a device independent resolution for rendering.",95,[[["u32",15]],[["result",4],["integerorsdlerror",4]]]],[11,"logical_size","","Gets device independent resolution for rendering.",95,[[]]],[11,"set_viewport","","Sets the drawing area for rendering on the current target.",95,[[["into",8],["option",4]]]],[11,"viewport","","Gets the drawing area for the current target.",95,[[],["rect",3]]],[11,"set_clip_rect","","Sets the clip rectangle for rendering on the specified …",95,[[["into",8],["option",4]]]],[11,"clip_rect","","Gets the clip rectangle for the current target.",95,[[],[["rect",3],["option",4]]]],[11,"set_scale","","Sets the drawing scale for rendering on the current …",95,[[["f32",15]],[["result",4],["string",3]]]],[11,"scale","","Gets the drawing scale for the current target.",95,[[]]],[11,"draw_point","","Draws a point on the current rendering target. Errors if …",95,[[["point",3],["into",8]],[["result",4],["string",3]]]],[11,"draw_points","","Draws multiple points on the current rendering target. …",95,[[["into",8]],[["result",4],["string",3]]]],[11,"draw_line","","Draws a line on the current rendering target. Errors if …",95,[[["point",3],["into",8]],[["result",4],["string",3]]]],[11,"draw_lines","","Draws a series of connected lines on the current …",95,[[["into",8]],[["result",4],["string",3]]]],[11,"draw_rect","","Draws a rectangle on the current rendering target. Errors …",95,[[["rect",3]],[["result",4],["string",3]]]],[11,"draw_rects","","Draws some number of rectangles on the current rendering …",95,[[],[["result",4],["string",3]]]],[11,"fill_rect","","Fills a rectangle on the current rendering target with …",95,[[["into",8],["option",4]],[["result",4],["string",3]]]],[11,"fill_rects","","Fills some number of rectangles on the current rendering …",95,[[],[["result",4],["string",3]]]],[11,"copy","","Copies a portion of the texture to the current rendering …",95,[[["texture",3]],[["result",4],["string",3]]]],[11,"copy_ex","","Copies a portion of the texture to the current rendering …",95,[[["f64",15],["texture",3],["bool",15]],[["result",4],["string",3]]]],[11,"read_pixels","","Reads pixels from the current rendering target.",95,[[["into",8],["option",4],["pixelformatenum",4]],[["vec",3],["result",4],["string",3]]]],[3,"TextureQuery","","",null,null],[12,"format","","",99,null],[12,"access","","",99,null],[12,"width","","",99,null],[12,"height","","",99,null],[3,"Texture","","A texture for a rendering context.",null,null],[4,"UpdateTextureError","","",null,null],[13,"PitchOverflows","","",100,null],[13,"PitchMustBeMultipleOfTwoForFormat","","",100,null],[13,"XMustBeMultipleOfTwoForFormat","","",100,null],[13,"YMustBeMultipleOfTwoForFormat","","",100,null],[13,"WidthMustBeMultipleOfTwoForFormat","","",100,null],[13,"HeightMustBeMultipleOfTwoForFormat","","",100,null],[13,"SdlError","","",100,null],[4,"UpdateTextureYUVError","","",null,null],[13,"PitchOverflows","","",101,null],[12,"plane","sdl2::render::UpdateTextureYUVError","",102,null],[12,"value","","",102,null],[13,"InvalidPlaneLength","sdl2::render","",101,null],[12,"plane","sdl2::render::UpdateTextureYUVError","",103,null],[12,"length","","",103,null],[12,"pitch","","",103,null],[12,"height","","",103,null],[13,"XMustBeMultipleOfTwoForFormat","sdl2::render","",101,null],[13,"YMustBeMultipleOfTwoForFormat","","",101,null],[13,"WidthMustBeMultipleOfTwoForFormat","","",101,null],[13,"HeightMustBeMultipleOfTwoForFormat","","",101,null],[13,"RectNotInsideTexture","","",101,null],[13,"SdlError","","",101,null],[11,"query","","Queries the attributes of the texture.",104,[[],["texturequery",3]]],[11,"set_color_mod","","Sets an additional color value multiplied into render …",104,[[["u8",15]]]],[11,"color_mod","","Gets the additional color value multiplied into render …",104,[[]]],[11,"set_alpha_mod","","Sets an additional alpha value multiplied into render …",104,[[["u8",15]]]],[11,"alpha_mod","","Gets the additional alpha value multiplied into render …",104,[[],["u8",15]]],[11,"set_blend_mode","","Sets the blend mode used for drawing operations (Fill and …",104,[[["blendmode",4]]]],[11,"blend_mode","","Gets the blend mode used for texture copy operations.",104,[[],["blendmode",4]]],[11,"update","","Updates the given texture rectangle with new pixel data.",104,[[["usize",15]],[["updatetextureerror",4],["result",4]]]],[11,"update_yuv","","Updates a rectangle within a planar YV12 or IYUV texture …",104,[[["usize",15]],[["updatetextureyuverror",4],["result",4]]]],[11,"with_lock","","Locks the texture for <strong>write-only</strong> pixel access. The …",104,[[],[["string",3],["result",4]]]],[11,"gl_bind_texture","","Binds an OpenGL/ES/ES2 texture to the current context for …",104,[[]]],[11,"gl_unbind_texture","","Unbinds an OpenGL/ES/ES2 texture from the current context.",104,[[]]],[11,"gl_with_bind","","Binds and unbinds an OpenGL/ES/ES2 texture from the …",104,[[["fnonce",8]]]],[11,"raw","","",104,[[]]],[3,"DriverIterator","","",null,null],[5,"drivers","","Gets an iterator of all render drivers compiled into the …",null,[[],["driveriterator",3]]],[0,"rwops","sdl2","",null,null],[3,"RWops","sdl2::rwops","A structure that provides an abstract interface to stream …",null,null],[11,"raw","","",105,[[]]],[11,"from_ll","","",105,[[],["rwops",3]]],[11,"from_file","","Creates an SDL file stream.",105,[[["str",15],["asref",8],["path",3]],[["result",4],["string",3],["rwops",3]]]],[11,"from_bytes","","Prepares a read-only memory buffer for use with <code>RWops</code>.",105,[[],[["result",4],["rwops",3],["string",3]]]],[11,"from_read","","Reads a <code>Read</code> object into a buffer and then passes it to …",105,[[["vec",3]],[["result",4],["rwops",3],["string",3]]]],[11,"from_bytes_mut","","Prepares a read-write memory buffer for use with <code>RWops</code>.",105,[[],[["result",4],["rwops",3],["string",3]]]],[11,"len","","Gets the stream\'s total size in bytes.",105,[[],[["option",4],["usize",15]]]],[11,"is_empty","","",105,[[],["bool",15]]],[0,"log","sdl2","",null,null],[4,"Category","sdl2::log","",null,null],[13,"Application","","",106,null],[13,"Error","","",106,null],[13,"Assert","","",106,null],[13,"System","","",106,null],[13,"Audio","","",106,null],[13,"Video","","",106,null],[13,"Render","","",106,null],[13,"Input","","",106,null],[13,"Test","","",106,null],[13,"Custom","","",106,null],[13,"Unknown","","",106,null],[4,"Priority","","",null,null],[13,"Verbose","","",107,null],[13,"Debug","","",107,null],[13,"Info","","",107,null],[13,"Warn","","",107,null],[13,"Error","","",107,null],[13,"Critical","","",107,null],[5,"set_output_function","","",null,[[]]],[5,"log","","Standard log function which takes as priority INFO and as …",null,[[["str",15]]]],[0,"audio","sdl2","Audio Functions",null,null],[4,"AudioFormat","sdl2::audio","",null,null],[13,"U8","","Unsigned 8-bit samples",108,null],[13,"S8","","Signed 8-bit samples",108,null],[13,"U16LSB","","Unsigned 16-bit samples, little-endian",108,null],[13,"U16MSB","","Unsigned 16-bit samples, big-endian",108,null],[13,"S16LSB","","Signed 16-bit samples, little-endian",108,null],[13,"S16MSB","","Signed 16-bit samples, big-endian",108,null],[13,"S32LSB","","Signed 32-bit samples, little-endian",108,null],[13,"S32MSB","","Signed 32-bit samples, big-endian",108,null],[13,"F32LSB","","32-bit floating point samples, little-endian",108,null],[13,"F32MSB","","32-bit floating point samples, big-endian",108,null],[11,"u16_sys","","Unsigned 16-bit samples, native endian",108,[[],["audioformat",4]]],[11,"s16_sys","","Signed 16-bit samples, native endian",108,[[],["audioformat",4]]],[11,"s32_sys","","Signed 32-bit samples, native endian",108,[[],["audioformat",4]]],[11,"f32_sys","","32-bit floating point samples, native endian",108,[[],["audioformat",4]]],[4,"AudioStatus","","",null,null],[13,"Stopped","","",109,null],[13,"Playing","","",109,null],[13,"Paused","","",109,null],[3,"DriverIterator","","",null,null],[5,"drivers","","Gets an iterator of all audio drivers compiled into the …",null,[[],["driveriterator",3]]],[3,"AudioSpecWAV","","",null,null],[12,"freq","","",110,null],[12,"format","","",110,null],[12,"channels","","",110,null],[11,"load_wav","","Loads a WAVE from the file path.",110,[[["asref",8],["path",3]],[["string",3],["result",4],["audiospecwav",3]]]],[11,"load_wav_rw","","Loads a WAVE from the data source.",110,[[["rwops",3]],[["string",3],["result",4],["audiospecwav",3]]]],[11,"buffer","","",110,[[]]],[8,"AudioCallback","","",null,null],[16,"Channel","","",111,null],[10,"callback","","",111,[[]]],[8,"AudioFormatNum","","A phantom type for retreiving the <code>SDL_AudioFormat</code> of a …",null,null],[10,"audio_format","","",112,[[],["audioformat",4]]],[10,"zero","","",112,[[]]],[3,"AudioSpecDesired","","",null,null],[12,"freq","","DSP frequency (samples per second). Set to None for the …",113,null],[12,"channels","","Number of separate audio channels. Set to None for the …",113,null],[12,"samples","","Audio buffer size in samples (power of 2). Set to None …",113,null],[3,"AudioSpec","","",null,null],[12,"freq","","",114,null],[12,"format","","",114,null],[12,"channels","","",114,null],[12,"silence","","",114,null],[12,"samples","","",114,null],[12,"size","","",114,null],[3,"AudioQueue","","Wraps <code>SDL_AudioDeviceID</code> and owns the callback data used …",null,null],[11,"open_queue","","Opens a new audio device given the desired parameters and …",115,[[["into",8],["option",4],["audiospecdesired",3],["audiosubsystem",3]],[["string",3],["audioqueue",3],["result",4]]]],[11,"subsystem","","",115,[[],["audiosubsystem",3]]],[11,"spec","","",115,[[],["audiospec",3]]],[11,"status","","",115,[[],["audiostatus",4]]],[11,"pause","","Pauses playback of the audio device.",115,[[]]],[11,"resume","","Starts playback of the audio device.",115,[[]]],[11,"queue","","Adds data to the audio queue.",115,[[],["bool",15]]],[11,"size","","",115,[[],["u32",15]]],[11,"clear","","Clears all data from the current audio queue.",115,[[]]],[3,"AudioDevice","","Wraps <code>SDL_AudioDeviceID</code> and owns the callback data used …",null,null],[11,"open_playback","","Opens a new audio device for playback (given the desired …",116,[[["audiospecdesired",3],["audiosubsystem",3]],[["result",4],["string",3],["audiodevice",3]]]],[11,"open_capture","","Opens a new audio device for capture (given the desired …",116,[[["audiospecdesired",3],["audiosubsystem",3]],[["result",4],["string",3],["audiodevice",3]]]],[11,"subsystem","","",116,[[],["audiosubsystem",3]]],[11,"spec","","",116,[[],["audiospec",3]]],[11,"status","","",116,[[],["audiostatus",4]]],[11,"pause","","Pauses playback of the audio device.",116,[[]]],[11,"resume","","Starts playback of the audio device.",116,[[]]],[11,"lock","","Locks the audio device using <code>SDL_LockAudioDevice</code>.",116,[[],["audiodevicelockguard",3]]],[11,"close_and_get_callback","","Closes the audio device and saves the callback data from …",116,[[]]],[3,"AudioDeviceLockGuard","","Similar to <code>std::sync::MutexGuard</code>, but for use with …",null,null],[3,"AudioCVT","","",null,null],[11,"new","","",117,[[["i32",15],["audioformat",4],["u8",15]],[["result",4],["audiocvt",3],["string",3]]]],[11,"convert","","Convert audio data to a desired audio format.",117,[[["vec",3],["u8",15]],[["vec",3],["u8",15]]]],[11,"is_conversion_needed","","Checks if any conversion is needed. i.e. if the buffer …",117,[[],["bool",15]]],[11,"capacity","","Gets the buffer capacity that can contain both the …",117,[[["usize",15]],["usize",15]]],[0,"version","sdl2","Querying SDL Version",null,null],[3,"Version","sdl2::version","A structure that contains information about the version …",null,null],[12,"major","","major version",118,null],[12,"minor","","minor version",118,null],[12,"patch","","update version (patchlevel)",118,null],[11,"from_ll","","Convert a raw *SDL_version to Version.",118,[[["sdl_version",3]],["version",3]]],[5,"version","","Get the version of SDL that is linked against your …",null,[[],["version",3]]],[5,"revision","","Get the code revision of SDL that is linked against your …",null,[[],["string",3]]],[5,"revision_number","","Get the revision number of SDL that is linked against …",null,[[],["i32",15]]],[0,"messagebox","sdl2","",null,null],[3,"MessageBoxFlag","sdl2::messagebox","",null,null],[17,"MESSAGEBOX_ERROR","","",null,null],[17,"MESSAGEBOX_WARNING","","",null,null],[17,"MESSAGEBOX_INFORMATION","","",null,null],[11,"empty","","Returns an empty set of flags.",119,[[],["messageboxflag",3]]],[11,"all","","Returns the set containing all flags.",119,[[],["messageboxflag",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",119,[[],["u32",15]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",119,[[["u32",15]],[["messageboxflag",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",119,[[["u32",15]],["messageboxflag",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",119,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",119,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",119,[[["messageboxflag",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",119,[[["messageboxflag",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",119,[[["messageboxflag",3]]]],[11,"remove","","Removes the specified flags in-place.",119,[[["messageboxflag",3]]]],[11,"toggle","","Toggles the specified flags in-place.",119,[[["messageboxflag",3]]]],[3,"MessageBoxButtonFlag","","",null,null],[17,"MESSAGEBOX_BUTTON_ESCAPEKEY_DEFAULT","","",null,null],[17,"MESSAGEBOX_BUTTON_RETURNKEY_DEFAULT","","",null,null],[17,"MESSAGEBOX_BUTTON_NOTHING","","",null,null],[11,"empty","","Returns an empty set of flags.",120,[[],["messageboxbuttonflag",3]]],[11,"all","","Returns the set containing all flags.",120,[[],["messageboxbuttonflag",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",120,[[],["u32",15]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",120,[[["u32",15]],[["messageboxbuttonflag",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",120,[[["u32",15]],["messageboxbuttonflag",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",120,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",120,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",120,[[["messageboxbuttonflag",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",120,[[["messageboxbuttonflag",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",120,[[["messageboxbuttonflag",3]]]],[11,"remove","","Removes the specified flags in-place.",120,[[["messageboxbuttonflag",3]]]],[11,"toggle","","Toggles the specified flags in-place.",120,[[["messageboxbuttonflag",3]]]],[3,"MessageBoxColorScheme","","",null,null],[12,"background","","",121,null],[12,"text","","",121,null],[12,"button_border","","",121,null],[12,"button_background","","",121,null],[12,"button_selected","","",121,null],[3,"ButtonData","","<code>button_id</code> is the integer that will be returned by …",null,null],[12,"flags","","",122,null],[12,"button_id","","",122,null],[12,"text","","",122,null],[4,"ClickedButton","","",null,null],[13,"CloseButton","","",123,null],[13,"CustomButton","","",123,null],[4,"ShowMessageError","","",null,null],[13,"InvalidTitle","","",124,null],[13,"InvalidMessage","","",124,null],[13,"InvalidButton","","Second argument of the tuple (i32) corresponds to the …",124,null],[13,"SdlError","","",124,null],[5,"show_simple_message_box","","Show a simple message box, meant to be informative only.",null,[[["messageboxflag",3],["str",15]],[["result",4],["showmessageerror",4]]]],[5,"show_message_box","","Show a customizable message box.",null,[[["messageboxflag",3],["str",15]],[["result",4],["clickedbutton",4],["showmessageerror",4]]]],[0,"hint","sdl2","",null,null],[4,"Hint","sdl2::hint","",null,null],[13,"Default","","",125,null],[13,"Normal","","",125,null],[13,"Override","","",125,null],[5,"set_video_minimize_on_focus_lost","","A hint that specifies whether a fullscreen Window will be …",null,[[["bool",15]],["bool",15]]],[5,"set_video_minimize_on_focus_lost_with_priority","","A hint that specifies whether a fullscreen Window will be …",null,[[["bool",15],["hint",4]],["bool",15]]],[5,"get_video_minimize_on_focus_lost","","A hint that specifies whether a fullscreen Window will be …",null,[[],["bool",15]]],[5,"set","","",null,[[["str",15]],["bool",15]]],[5,"get","","",null,[[["str",15]],[["option",4],["string",3]]]],[5,"set_with_priority","","",null,[[["hint",4],["str",15]],["bool",15]]],[4,"Error","sdl2","",null,null],[13,"NoMemError","","",126,null],[13,"ReadError","","",126,null],[13,"WriteError","","",126,null],[13,"SeekError","","",126,null],[13,"UnsupportedError","","",126,null],[3,"Sdl","","The SDL context type. Initialize with <code>sdl2::init()</code>.",null,null],[3,"AudioSubsystem","","",null,null],[3,"GameControllerSubsystem","","",null,null],[3,"HapticSubsystem","","",null,null],[3,"JoystickSubsystem","","",null,null],[3,"VideoSubsystem","","",null,null],[3,"TimerSubsystem","","",null,null],[3,"EventSubsystem","","",null,null],[3,"EventPump","","A thread-safe type that encapsulates SDL event-pumping …",null,null],[5,"init","","Initializes the SDL library. This must be called before …",null,[[],[["string",3],["result",4],["sdl",3]]]],[5,"get_error","","",null,[[],["string",3]]],[5,"set_error","","",null,[[["str",15]],[["nulerror",3],["result",4]]]],[5,"set_error_from_code","","",null,[[["error",4]]]],[5,"clear_error","","",null,[[]]],[4,"IntegerOrSdlError","","A given integer was so big that its representation as a C …",null,null],[13,"IntegerOverflows","","",127,null],[13,"SdlError","","",127,null],[11,"from","sdl2::clipboard","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","sdl2::event","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",128,[[]]],[11,"into","","",128,[[]]],[11,"into_iter","","",128,[[]]],[11,"borrow","","",128,[[]]],[11,"borrow_mut","","",128,[[]]],[11,"try_from","","",128,[[],["result",4]]],[11,"try_into","","",128,[[],["result",4]]],[11,"type_id","","",128,[[],["typeid",3]]],[11,"from","","",129,[[]]],[11,"into","","",129,[[]]],[11,"into_iter","","",129,[[]]],[11,"borrow","","",129,[[]]],[11,"borrow_mut","","",129,[[]]],[11,"try_from","","",129,[[],["result",4]]],[11,"try_into","","",129,[[],["result",4]]],[11,"type_id","","",129,[[],["typeid",3]]],[11,"from","","",130,[[]]],[11,"into","","",130,[[]]],[11,"into_iter","","",130,[[]]],[11,"borrow","","",130,[[]]],[11,"borrow_mut","","",130,[[]]],[11,"try_from","","",130,[[],["result",4]]],[11,"try_into","","",130,[[],["result",4]]],[11,"type_id","","",130,[[],["typeid",3]]],[11,"from","sdl2::filesystem","",43,[[]]],[11,"into","","",43,[[]]],[11,"to_string","","",43,[[],["string",3]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"from","sdl2::joystick","",44,[[]]],[11,"into","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"to_owned","","",45,[[]]],[11,"clone_into","","",45,[[]]],[11,"to_string","","",45,[[],["string",3]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"to_owned","","",46,[[]]],[11,"clone_into","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"from","sdl2::controller","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_string","","",47,[[],["string",3]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"to_owned","","",48,[[]]],[11,"clone_into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"to_owned","","",49,[[]]],[11,"clone_into","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"to_owned","","",50,[[]]],[11,"clone_into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"from","sdl2::haptic","",52,[[]]],[11,"into","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"from","sdl2::keyboard","",53,[[]]],[11,"into","","",53,[[]]],[11,"to_owned","","",53,[[]]],[11,"clone_into","","",53,[[]]],[11,"to_string","","",53,[[],["string",3]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"to_owned","","",54,[[]]],[11,"clone_into","","",54,[[]]],[11,"to_string","","",54,[[],["string",3]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"to_owned","","",55,[[]]],[11,"clone_into","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"from","","",131,[[]]],[11,"into","","",131,[[]]],[11,"into_iter","","",131,[[]]],[11,"borrow","","",131,[[]]],[11,"borrow_mut","","",131,[[]]],[11,"try_from","","",131,[[],["result",4]]],[11,"try_into","","",131,[[],["result",4]]],[11,"type_id","","",131,[[],["typeid",3]]],[11,"from","","",132,[[]]],[11,"into","","",132,[[]]],[11,"into_iter","","",132,[[]]],[11,"borrow","","",132,[[]]],[11,"borrow_mut","","",132,[[]]],[11,"try_from","","",132,[[],["result",4]]],[11,"try_into","","",132,[[],["result",4]]],[11,"type_id","","",132,[[],["typeid",3]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"from","sdl2::mouse","",133,[[]]],[11,"into","","",133,[[]]],[11,"to_owned","","",133,[[]]],[11,"clone_into","","",133,[[]]],[11,"borrow","","",133,[[]]],[11,"borrow_mut","","",133,[[]]],[11,"try_from","","",133,[[],["result",4]]],[11,"try_into","","",133,[[],["result",4]]],[11,"type_id","","",133,[[],["typeid",3]]],[11,"from","","",59,[[]]],[11,"into","","",59,[[]]],[11,"to_owned","","",59,[[]]],[11,"clone_into","","",59,[[]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"from","","",60,[[]]],[11,"into","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"from","","",61,[[]]],[11,"into","","",61,[[]]],[11,"to_owned","","",61,[[]]],[11,"clone_into","","",61,[[]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"from","","",62,[[]]],[11,"into","","",62,[[]]],[11,"to_owned","","",62,[[]]],[11,"clone_into","","",62,[[]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"from","","",63,[[]]],[11,"into","","",63,[[]]],[11,"to_owned","","",63,[[]]],[11,"clone_into","","",63,[[]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"from","","",134,[[]]],[11,"into","","",134,[[]]],[11,"into_iter","","",134,[[]]],[11,"borrow","","",134,[[]]],[11,"borrow_mut","","",134,[[]]],[11,"try_from","","",134,[[],["result",4]]],[11,"try_into","","",134,[[],["result",4]]],[11,"type_id","","",134,[[],["typeid",3]]],[11,"from","","",135,[[]]],[11,"into","","",135,[[]]],[11,"into_iter","","",135,[[]]],[11,"borrow","","",135,[[]]],[11,"borrow_mut","","",135,[[]]],[11,"try_from","","",135,[[],["result",4]]],[11,"try_into","","",135,[[],["result",4]]],[11,"type_id","","",135,[[],["typeid",3]]],[11,"from","","",64,[[]]],[11,"into","","",64,[[]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"from","sdl2::rect","",65,[[]]],[11,"into","","",65,[[]]],[11,"to_owned","","",65,[[]]],[11,"clone_into","","",65,[[]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"try_into","","",65,[[],["result",4]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"from","","",66,[[]]],[11,"into","","",66,[[]]],[11,"to_owned","","",66,[[]]],[11,"clone_into","","",66,[[]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"from","sdl2::surface","",136,[[]]],[11,"into","","",136,[[]]],[11,"borrow","","",136,[[]]],[11,"borrow_mut","","",136,[[]]],[11,"try_from","","",136,[[],["result",4]]],[11,"try_into","","",136,[[],["result",4]]],[11,"type_id","","",136,[[],["typeid",3]]],[11,"from","","",67,[[]]],[11,"into","","",67,[[]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"try_into","","",67,[[],["result",4]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"from","","",68,[[]]],[11,"into","","",68,[[]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"try_into","","",68,[[],["result",4]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"from","sdl2::pixels","",69,[[]]],[11,"into","","",69,[[]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"try_into","","",69,[[],["result",4]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"from","","",70,[[]]],[11,"into","","",70,[[]]],[11,"to_owned","","",70,[[]]],[11,"clone_into","","",70,[[]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"try_into","","",70,[[],["result",4]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"from","","",71,[[]]],[11,"into","","",71,[[]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"try_into","","",71,[[],["result",4]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"from","","",72,[[]]],[11,"into","","",72,[[]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"try_into","","",72,[[],["result",4]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"from","","",73,[[]]],[11,"into","","",73,[[]]],[11,"to_owned","","",73,[[]]],[11,"clone_into","","",73,[[]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"try_into","","",73,[[],["result",4]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"from","sdl2::video::gl_attr","",74,[[]]],[11,"into","","",74,[[]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"try_into","","",74,[[],["result",4]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"from","","",75,[[]]],[11,"into","","",75,[[]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"try_into","","",75,[[],["result",4]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"from","","",76,[[]]],[11,"into","","",76,[[]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"try_into","","",76,[[],["result",4]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"from","sdl2::video","",77,[[]]],[11,"into","","",77,[[]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"try_into","","",77,[[],["result",4]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"from","","",78,[[]]],[11,"into","","",78,[[]]],[11,"to_owned","","",78,[[]]],[11,"clone_into","","",78,[[]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"try_into","","",78,[[],["result",4]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"from","","",79,[[]]],[11,"into","","",79,[[]]],[11,"to_owned","","",79,[[]]],[11,"clone_into","","",79,[[]]],[11,"borrow","","",79,[[]]],[11,"borrow_mut","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"try_into","","",79,[[],["result",4]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"from","","",80,[[]]],[11,"into","","",80,[[]]],[11,"to_owned","","",80,[[]]],[11,"clone_into","","",80,[[]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"try_into","","",80,[[],["result",4]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"from","","",81,[[]]],[11,"into","","",81,[[]]],[11,"to_owned","","",81,[[]]],[11,"clone_into","","",81,[[]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"try_into","","",81,[[],["result",4]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"from","","",82,[[]]],[11,"into","","",82,[[]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"try_into","","",82,[[],["result",4]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"from","","",83,[[]]],[11,"into","","",83,[[]]],[11,"borrow","","",83,[[]]],[11,"borrow_mut","","",83,[[]]],[11,"try_from","","",83,[[],["result",4]]],[11,"try_into","","",83,[[],["result",4]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"from","","",84,[[]]],[11,"into","","",84,[[]]],[11,"to_owned","","",84,[[]]],[11,"clone_into","","",84,[[]]],[11,"borrow","","",84,[[]]],[11,"borrow_mut","","",84,[[]]],[11,"try_from","","",84,[[],["result",4]]],[11,"try_into","","",84,[[],["result",4]]],[11,"type_id","","",84,[[],["typeid",3]]],[11,"from","","",87,[[]]],[11,"into","","",87,[[]]],[11,"borrow","","",87,[[]]],[11,"borrow_mut","","",87,[[]]],[11,"try_from","","",87,[[],["result",4]]],[11,"try_into","","",87,[[],["result",4]]],[11,"type_id","","",87,[[],["typeid",3]]],[11,"from","","",85,[[]]],[11,"into","","",85,[[]]],[11,"to_string","","",85,[[],["string",3]]],[11,"borrow","","",85,[[]]],[11,"borrow_mut","","",85,[[]]],[11,"try_from","","",85,[[],["result",4]]],[11,"try_into","","",85,[[],["result",4]]],[11,"type_id","","",85,[[],["typeid",3]]],[11,"from","","",86,[[]]],[11,"into","","",86,[[]]],[11,"borrow","","",86,[[]]],[11,"borrow_mut","","",86,[[]]],[11,"try_from","","",86,[[],["result",4]]],[11,"try_into","","",86,[[],["result",4]]],[11,"type_id","","",86,[[],["typeid",3]]],[11,"from","","",137,[[]]],[11,"into","","",137,[[]]],[11,"into_iter","","",137,[[]]],[11,"to_owned","","",137,[[]]],[11,"clone_into","","",137,[[]]],[11,"borrow","","",137,[[]]],[11,"borrow_mut","","",137,[[]]],[11,"try_from","","",137,[[],["result",4]]],[11,"try_into","","",137,[[],["result",4]]],[11,"type_id","","",137,[[],["typeid",3]]],[11,"from","sdl2::timer","",88,[[]]],[11,"into","","",88,[[]]],[11,"borrow","","",88,[[]]],[11,"borrow_mut","","",88,[[]]],[11,"try_from","","",88,[[],["result",4]]],[11,"try_into","","",88,[[],["result",4]]],[11,"type_id","","",88,[[],["typeid",3]]],[11,"from","sdl2::render","",138,[[]]],[11,"into","","",138,[[]]],[11,"to_string","","",138,[[],["string",3]]],[11,"borrow","","",138,[[]]],[11,"borrow_mut","","",138,[[]]],[11,"try_from","","",138,[[],["result",4]]],[11,"try_into","","",138,[[],["result",4]]],[11,"type_id","","",138,[[],["typeid",3]]],[11,"from","","",89,[[]]],[11,"into","","",89,[[]]],[11,"to_string","","",89,[[],["string",3]]],[11,"borrow","","",89,[[]]],[11,"borrow_mut","","",89,[[]]],[11,"try_from","","",89,[[],["result",4]]],[11,"try_into","","",89,[[],["result",4]]],[11,"type_id","","",89,[[],["typeid",3]]],[11,"from","","",90,[[]]],[11,"into","","",90,[[]]],[11,"to_owned","","",90,[[]]],[11,"clone_into","","",90,[[]]],[11,"borrow","","",90,[[]]],[11,"borrow_mut","","",90,[[]]],[11,"try_from","","",90,[[],["result",4]]],[11,"try_into","","",90,[[],["result",4]]],[11,"type_id","","",90,[[],["typeid",3]]],[11,"from","","",91,[[]]],[11,"into","","",91,[[]]],[11,"to_owned","","",91,[[]]],[11,"clone_into","","",91,[[]]],[11,"borrow","","",91,[[]]],[11,"borrow_mut","","",91,[[]]],[11,"try_from","","",91,[[],["result",4]]],[11,"try_into","","",91,[[],["result",4]]],[11,"type_id","","",91,[[],["typeid",3]]],[11,"from","","",92,[[]]],[11,"into","","",92,[[]]],[11,"to_owned","","",92,[[]]],[11,"clone_into","","",92,[[]]],[11,"borrow","","",92,[[]]],[11,"borrow_mut","","",92,[[]]],[11,"try_from","","",92,[[],["result",4]]],[11,"try_into","","",92,[[],["result",4]]],[11,"type_id","","",92,[[],["typeid",3]]],[11,"from","","",93,[[]]],[11,"into","","",93,[[]]],[11,"borrow","","",93,[[]]],[11,"borrow_mut","","",93,[[]]],[11,"try_from","","",93,[[],["result",4]]],[11,"try_into","","",93,[[],["result",4]]],[11,"type_id","","",93,[[],["typeid",3]]],[11,"from","","",95,[[]]],[11,"into","","",95,[[]]],[11,"borrow","","",95,[[]]],[11,"borrow_mut","","",95,[[]]],[11,"try_from","","",95,[[],["result",4]]],[11,"try_into","","",95,[[],["result",4]]],[11,"type_id","","",95,[[],["typeid",3]]],[11,"from","","",98,[[]]],[11,"into","","",98,[[]]],[11,"borrow","","",98,[[]]],[11,"borrow_mut","","",98,[[]]],[11,"try_from","","",98,[[],["result",4]]],[11,"try_into","","",98,[[],["result",4]]],[11,"type_id","","",98,[[],["typeid",3]]],[11,"from","","",96,[[]]],[11,"into","","",96,[[]]],[11,"borrow","","",96,[[]]],[11,"borrow_mut","","",96,[[]]],[11,"try_from","","",96,[[],["result",4]]],[11,"try_into","","",96,[[],["result",4]]],[11,"type_id","","",96,[[],["typeid",3]]],[11,"from","","",97,[[]]],[11,"into","","",97,[[]]],[11,"to_string","","",97,[[],["string",3]]],[11,"borrow","","",97,[[]]],[11,"borrow_mut","","",97,[[]]],[11,"try_from","","",97,[[],["result",4]]],[11,"try_into","","",97,[[],["result",4]]],[11,"type_id","","",97,[[],["typeid",3]]],[11,"from","","",99,[[]]],[11,"into","","",99,[[]]],[11,"to_owned","","",99,[[]]],[11,"clone_into","","",99,[[]]],[11,"borrow","","",99,[[]]],[11,"borrow_mut","","",99,[[]]],[11,"try_from","","",99,[[],["result",4]]],[11,"try_into","","",99,[[],["result",4]]],[11,"type_id","","",99,[[],["typeid",3]]],[11,"from","","",104,[[]]],[11,"into","","",104,[[]]],[11,"borrow","","",104,[[]]],[11,"borrow_mut","","",104,[[]]],[11,"try_from","","",104,[[],["result",4]]],[11,"try_into","","",104,[[],["result",4]]],[11,"type_id","","",104,[[],["typeid",3]]],[11,"from","","",100,[[]]],[11,"into","","",100,[[]]],[11,"to_string","","",100,[[],["string",3]]],[11,"borrow","","",100,[[]]],[11,"borrow_mut","","",100,[[]]],[11,"try_from","","",100,[[],["result",4]]],[11,"try_into","","",100,[[],["result",4]]],[11,"type_id","","",100,[[],["typeid",3]]],[11,"from","","",101,[[]]],[11,"into","","",101,[[]]],[11,"to_string","","",101,[[],["string",3]]],[11,"borrow","","",101,[[]]],[11,"borrow_mut","","",101,[[]]],[11,"try_from","","",101,[[],["result",4]]],[11,"try_into","","",101,[[],["result",4]]],[11,"type_id","","",101,[[],["typeid",3]]],[11,"from","","",139,[[]]],[11,"into","","",139,[[]]],[11,"into_iter","","",139,[[]]],[11,"to_owned","","",139,[[]]],[11,"clone_into","","",139,[[]]],[11,"borrow","","",139,[[]]],[11,"borrow_mut","","",139,[[]]],[11,"try_from","","",139,[[],["result",4]]],[11,"try_into","","",139,[[],["result",4]]],[11,"type_id","","",139,[[],["typeid",3]]],[11,"from","sdl2::rwops","",105,[[]]],[11,"into","","",105,[[]]],[11,"borrow","","",105,[[]]],[11,"borrow_mut","","",105,[[]]],[11,"try_from","","",105,[[],["result",4]]],[11,"try_into","","",105,[[],["result",4]]],[11,"type_id","","",105,[[],["typeid",3]]],[11,"from","sdl2::log","",106,[[]]],[11,"into","","",106,[[]]],[11,"to_owned","","",106,[[]]],[11,"clone_into","","",106,[[]]],[11,"borrow","","",106,[[]]],[11,"borrow_mut","","",106,[[]]],[11,"try_from","","",106,[[],["result",4]]],[11,"try_into","","",106,[[],["result",4]]],[11,"type_id","","",106,[[],["typeid",3]]],[11,"from","","",107,[[]]],[11,"into","","",107,[[]]],[11,"to_owned","","",107,[[]]],[11,"clone_into","","",107,[[]]],[11,"borrow","","",107,[[]]],[11,"borrow_mut","","",107,[[]]],[11,"try_from","","",107,[[],["result",4]]],[11,"try_into","","",107,[[],["result",4]]],[11,"type_id","","",107,[[],["typeid",3]]],[11,"from","sdl2","",126,[[]]],[11,"into","","",126,[[]]],[11,"to_owned","","",126,[[]]],[11,"clone_into","","",126,[[]]],[11,"to_string","","",126,[[],["string",3]]],[11,"borrow","","",126,[[]]],[11,"borrow_mut","","",126,[[]]],[11,"try_from","","",126,[[],["result",4]]],[11,"try_into","","",126,[[],["result",4]]],[11,"type_id","","",126,[[],["typeid",3]]],[11,"from","","",140,[[]]],[11,"into","","",140,[[]]],[11,"to_owned","","",140,[[]]],[11,"clone_into","","",140,[[]]],[11,"borrow","","",140,[[]]],[11,"borrow_mut","","",140,[[]]],[11,"try_from","","",140,[[],["result",4]]],[11,"try_into","","",140,[[],["result",4]]],[11,"type_id","","",140,[[],["typeid",3]]],[11,"from","","",141,[[]]],[11,"into","","",141,[[]]],[11,"to_owned","","",141,[[]]],[11,"clone_into","","",141,[[]]],[11,"borrow","","",141,[[]]],[11,"borrow_mut","","",141,[[]]],[11,"try_from","","",141,[[],["result",4]]],[11,"try_into","","",141,[[],["result",4]]],[11,"type_id","","",141,[[],["typeid",3]]],[11,"from","","",142,[[]]],[11,"into","","",142,[[]]],[11,"to_owned","","",142,[[]]],[11,"clone_into","","",142,[[]]],[11,"borrow","","",142,[[]]],[11,"borrow_mut","","",142,[[]]],[11,"try_from","","",142,[[],["result",4]]],[11,"try_into","","",142,[[],["result",4]]],[11,"type_id","","",142,[[],["typeid",3]]],[11,"from","","",143,[[]]],[11,"into","","",143,[[]]],[11,"to_owned","","",143,[[]]],[11,"clone_into","","",143,[[]]],[11,"borrow","","",143,[[]]],[11,"borrow_mut","","",143,[[]]],[11,"try_from","","",143,[[],["result",4]]],[11,"try_into","","",143,[[],["result",4]]],[11,"type_id","","",143,[[],["typeid",3]]],[11,"from","","",144,[[]]],[11,"into","","",144,[[]]],[11,"to_owned","","",144,[[]]],[11,"clone_into","","",144,[[]]],[11,"borrow","","",144,[[]]],[11,"borrow_mut","","",144,[[]]],[11,"try_from","","",144,[[],["result",4]]],[11,"try_into","","",144,[[],["result",4]]],[11,"type_id","","",144,[[],["typeid",3]]],[11,"from","","",145,[[]]],[11,"into","","",145,[[]]],[11,"to_owned","","",145,[[]]],[11,"clone_into","","",145,[[]]],[11,"borrow","","",145,[[]]],[11,"borrow_mut","","",145,[[]]],[11,"try_from","","",145,[[],["result",4]]],[11,"try_into","","",145,[[],["result",4]]],[11,"type_id","","",145,[[],["typeid",3]]],[11,"from","","",146,[[]]],[11,"into","","",146,[[]]],[11,"borrow","","",146,[[]]],[11,"borrow_mut","","",146,[[]]],[11,"try_from","","",146,[[],["result",4]]],[11,"try_into","","",146,[[],["result",4]]],[11,"type_id","","",146,[[],["typeid",3]]],[11,"from","","",147,[[]]],[11,"into","","",147,[[]]],[11,"borrow","","",147,[[]]],[11,"borrow_mut","","",147,[[]]],[11,"try_from","","",147,[[],["result",4]]],[11,"try_into","","",147,[[],["result",4]]],[11,"type_id","","",147,[[],["typeid",3]]],[11,"from","","",148,[[]]],[11,"into","","",148,[[]]],[11,"borrow","","",148,[[]]],[11,"borrow_mut","","",148,[[]]],[11,"try_from","","",148,[[],["result",4]]],[11,"try_into","","",148,[[],["result",4]]],[11,"type_id","","",148,[[],["typeid",3]]],[11,"from","sdl2::audio","",108,[[]]],[11,"into","","",108,[[]]],[11,"to_owned","","",108,[[]]],[11,"clone_into","","",108,[[]]],[11,"borrow","","",108,[[]]],[11,"borrow_mut","","",108,[[]]],[11,"try_from","","",108,[[],["result",4]]],[11,"try_into","","",108,[[],["result",4]]],[11,"type_id","","",108,[[],["typeid",3]]],[11,"from","","",109,[[]]],[11,"into","","",109,[[]]],[11,"to_owned","","",109,[[]]],[11,"clone_into","","",109,[[]]],[11,"borrow","","",109,[[]]],[11,"borrow_mut","","",109,[[]]],[11,"try_from","","",109,[[],["result",4]]],[11,"try_into","","",109,[[],["result",4]]],[11,"type_id","","",109,[[],["typeid",3]]],[11,"from","","",149,[[]]],[11,"into","","",149,[[]]],[11,"into_iter","","",149,[[]]],[11,"to_owned","","",149,[[]]],[11,"clone_into","","",149,[[]]],[11,"borrow","","",149,[[]]],[11,"borrow_mut","","",149,[[]]],[11,"try_from","","",149,[[],["result",4]]],[11,"try_into","","",149,[[],["result",4]]],[11,"type_id","","",149,[[],["typeid",3]]],[11,"from","","",110,[[]]],[11,"into","","",110,[[]]],[11,"borrow","","",110,[[]]],[11,"borrow_mut","","",110,[[]]],[11,"try_from","","",110,[[],["result",4]]],[11,"try_into","","",110,[[],["result",4]]],[11,"type_id","","",110,[[],["typeid",3]]],[11,"from","","",113,[[]]],[11,"into","","",113,[[]]],[11,"to_owned","","",113,[[]]],[11,"clone_into","","",113,[[]]],[11,"borrow","","",113,[[]]],[11,"borrow_mut","","",113,[[]]],[11,"try_from","","",113,[[],["result",4]]],[11,"try_into","","",113,[[],["result",4]]],[11,"type_id","","",113,[[],["typeid",3]]],[11,"from","","",114,[[]]],[11,"into","","",114,[[]]],[11,"to_owned","","",114,[[]]],[11,"clone_into","","",114,[[]]],[11,"borrow","","",114,[[]]],[11,"borrow_mut","","",114,[[]]],[11,"try_from","","",114,[[],["result",4]]],[11,"try_into","","",114,[[],["result",4]]],[11,"type_id","","",114,[[],["typeid",3]]],[11,"from","","",115,[[]]],[11,"into","","",115,[[]]],[11,"borrow","","",115,[[]]],[11,"borrow_mut","","",115,[[]]],[11,"try_from","","",115,[[],["result",4]]],[11,"try_into","","",115,[[],["result",4]]],[11,"type_id","","",115,[[],["typeid",3]]],[11,"from","","",116,[[]]],[11,"into","","",116,[[]]],[11,"borrow","","",116,[[]]],[11,"borrow_mut","","",116,[[]]],[11,"try_from","","",116,[[],["result",4]]],[11,"try_into","","",116,[[],["result",4]]],[11,"type_id","","",116,[[],["typeid",3]]],[11,"from","","",150,[[]]],[11,"into","","",150,[[]]],[11,"borrow","","",150,[[]]],[11,"borrow_mut","","",150,[[]]],[11,"try_from","","",150,[[],["result",4]]],[11,"try_into","","",150,[[],["result",4]]],[11,"type_id","","",150,[[],["typeid",3]]],[11,"from","","",117,[[]]],[11,"into","","",117,[[]]],[11,"to_owned","","",117,[[]]],[11,"clone_into","","",117,[[]]],[11,"borrow","","",117,[[]]],[11,"borrow_mut","","",117,[[]]],[11,"try_from","","",117,[[],["result",4]]],[11,"try_into","","",117,[[],["result",4]]],[11,"type_id","","",117,[[],["typeid",3]]],[11,"from","sdl2::version","",118,[[]]],[11,"into","","",118,[[]]],[11,"to_owned","","",118,[[]]],[11,"clone_into","","",118,[[]]],[11,"to_string","","",118,[[],["string",3]]],[11,"borrow","","",118,[[]]],[11,"borrow_mut","","",118,[[]]],[11,"try_from","","",118,[[],["result",4]]],[11,"try_into","","",118,[[],["result",4]]],[11,"type_id","","",118,[[],["typeid",3]]],[11,"from","sdl2::messagebox","",119,[[]]],[11,"into","","",119,[[]]],[11,"to_owned","","",119,[[]]],[11,"clone_into","","",119,[[]]],[11,"borrow","","",119,[[]]],[11,"borrow_mut","","",119,[[]]],[11,"try_from","","",119,[[],["result",4]]],[11,"try_into","","",119,[[],["result",4]]],[11,"type_id","","",119,[[],["typeid",3]]],[11,"from","","",120,[[]]],[11,"into","","",120,[[]]],[11,"to_owned","","",120,[[]]],[11,"clone_into","","",120,[[]]],[11,"borrow","","",120,[[]]],[11,"borrow_mut","","",120,[[]]],[11,"try_from","","",120,[[],["result",4]]],[11,"try_into","","",120,[[],["result",4]]],[11,"type_id","","",120,[[],["typeid",3]]],[11,"from","","",121,[[]]],[11,"into","","",121,[[]]],[11,"borrow","","",121,[[]]],[11,"borrow_mut","","",121,[[]]],[11,"try_from","","",121,[[],["result",4]]],[11,"try_into","","",121,[[],["result",4]]],[11,"type_id","","",121,[[],["typeid",3]]],[11,"from","","",122,[[]]],[11,"into","","",122,[[]]],[11,"borrow","","",122,[[]]],[11,"borrow_mut","","",122,[[]]],[11,"try_from","","",122,[[],["result",4]]],[11,"try_into","","",122,[[],["result",4]]],[11,"type_id","","",122,[[],["typeid",3]]],[11,"from","","",123,[[]]],[11,"into","","",123,[[]]],[11,"borrow","","",123,[[]]],[11,"borrow_mut","","",123,[[]]],[11,"try_from","","",123,[[],["result",4]]],[11,"try_into","","",123,[[],["result",4]]],[11,"type_id","","",123,[[],["typeid",3]]],[11,"from","","",124,[[]]],[11,"into","","",124,[[]]],[11,"to_string","","",124,[[],["string",3]]],[11,"borrow","","",124,[[]]],[11,"borrow_mut","","",124,[[]]],[11,"try_from","","",124,[[],["result",4]]],[11,"try_into","","",124,[[],["result",4]]],[11,"type_id","","",124,[[],["typeid",3]]],[11,"from","sdl2::hint","",125,[[]]],[11,"into","","",125,[[]]],[11,"borrow","","",125,[[]]],[11,"borrow_mut","","",125,[[]]],[11,"try_from","","",125,[[],["result",4]]],[11,"try_into","","",125,[[],["result",4]]],[11,"type_id","","",125,[[],["typeid",3]]],[11,"from","sdl2","",127,[[]]],[11,"into","","",127,[[]]],[11,"to_string","","",127,[[],["string",3]]],[11,"borrow","","",127,[[]]],[11,"borrow_mut","","",127,[[]]],[11,"try_from","","",127,[[],["result",4]]],[11,"try_into","","",127,[[],["result",4]]],[11,"type_id","","",127,[[],["typeid",3]]],[11,"drop","sdl2::joystick","",44,[[]]],[11,"drop","sdl2::controller","",51,[[]]],[11,"drop","sdl2::haptic","",52,[[]]],[11,"drop","sdl2::mouse","",60,[[]]],[11,"drop","sdl2::surface","",136,[[]]],[11,"drop","sdl2::pixels","",69,[[]]],[11,"drop","sdl2::video","",82,[[]]],[11,"drop","","",83,[[]]],[11,"drop","sdl2::timer","",88,[[]]],[11,"drop","sdl2::render","",93,[[]]],[11,"drop","","",104,[[]]],[11,"drop","sdl2::rwops","",105,[[]]],[11,"drop","sdl2","",148,[[]]],[11,"drop","sdl2::audio","",110,[[]]],[11,"drop","","",150,[[]]],[11,"as_mut","sdl2::rect","",65,[[],["sdl_rect",3]]],[11,"as_mut","","",66,[[],["sdl_point",3]]],[11,"as_mut","sdl2::surface","",67,[[],["surfaceref",3]]],[11,"as_ref","sdl2::rect","",65,[[],["sdl_rect",3]]],[11,"as_ref","","",66,[[],["sdl_point",3]]],[11,"as_ref","sdl2::surface","",68,[[],["surfaceref",3]]],[11,"as_ref","","",67,[[],["surfaceref",3]]],[11,"from","sdl2::rect","",65,[[["sdl_rect",3]],["rect",3]]],[11,"from","","",65,[[],["rect",3]]],[11,"from","","",66,[[["sdl_point",3]],["point",3]]],[11,"from","","",66,[[],["point",3]]],[11,"from","sdl2::pixels","",70,[[["sdl_color",3]],["color",3]]],[11,"from","","",73,[[["pixelformat",3]],["pixelformatenum",4]]],[11,"from","sdl2::video","",84,[[["i32",15]]]],[11,"from","","",87,[[["windowcontext",3]],["window",3]]],[11,"from","sdl2::render","",96,[[["window",3]],["canvasbuilder",3]]],[11,"from","sdl2::messagebox","",121,[[["sdl_messageboxcolorscheme",3]],["messageboxcolorscheme",3]]],[11,"into","sdl2::rect","",65,[[],["sdl_rect",3]]],[11,"into","","",65,[[]]],[11,"into","","",66,[[],["sdl_point",3]]],[11,"into","","",66,[[]]],[11,"into","sdl2::pixels","",70,[[],["sdl_color",3]]],[11,"into","","",73,[[],["uint32_t",6]]],[11,"into","sdl2::messagebox","",121,[[],["sdl_messageboxcolorscheme",3]]],[11,"extend","sdl2::keyboard","",55,[[["intoiterator",8]]]],[11,"extend","sdl2::messagebox","",119,[[["intoiterator",8]]]],[11,"extend","","",120,[[["intoiterator",8]]]],[11,"next","sdl2::event","",128,[[],[["option",4],["event",4]]]],[11,"next","","",129,[[],[["option",4],["event",4]]]],[11,"next","","",130,[[],[["option",4],["event",4]]]],[11,"next","sdl2::keyboard","",131,[[],["option",4]]],[11,"next","","",132,[[],[["option",4],["scancode",4]]]],[11,"next","sdl2::mouse","",134,[[],["option",4]]],[11,"next","","",135,[[],[["mousebutton",4],["option",4]]]],[11,"next","sdl2::video","",137,[[],[["option",4],["str",15]]]],[11,"size_hint","","",137,[[]]],[11,"next","sdl2::render","",139,[[],[["option",4],["rendererinfo",3]]]],[11,"size_hint","","",139,[[]]],[11,"next","sdl2::audio","",149,[[],[["option",4],["str",15]]]],[11,"size_hint","","",149,[[]]],[11,"clone","sdl2::event","",1,[[],["eventtype",4]]],[11,"clone","","",2,[[],["windowevent",4]]],[11,"clone","","",3,[[],["event",4]]],[11,"clone","sdl2::joystick","",45,[[],["guid",3]]],[11,"clone","","",46,[[],["hatstate",4]]],[11,"clone","sdl2::controller","",48,[[],["axis",4]]],[11,"clone","","",49,[[],["button",4]]],[11,"clone","","",50,[[],["mappingstatus",4]]],[11,"clone","sdl2::keyboard","",53,[[],["keycode",4]]],[11,"clone","","",54,[[],["scancode",4]]],[11,"clone","","",55,[[],["mod",3]]],[11,"clone","sdl2::mouse","",133,[[],["relativemousestate",3]]],[11,"clone","","",59,[[],["systemcursor",4]]],[11,"clone","","",61,[[],["mousewheeldirection",4]]],[11,"clone","","",62,[[],["mousebutton",4]]],[11,"clone","","",63,[[],["mousestate",3]]],[11,"clone","sdl2::rect","",65,[[],["rect",3]]],[11,"clone","","",66,[[],["point",3]]],[11,"clone","sdl2::pixels","",70,[[],["color",3]]],[11,"clone","","",73,[[],["pixelformatenum",4]]],[11,"clone","sdl2::video","",78,[[],["glprofile",4]]],[11,"clone","","",79,[[],["displaymode",3]]],[11,"clone","","",80,[[],["fullscreentype",4]]],[11,"clone","","",81,[[],["windowpos",4]]],[11,"clone","","",84,[[],["swapinterval",4]]],[11,"clone","","",137,[[],["driveriterator",3]]],[11,"clone","sdl2::render","",90,[[],["textureaccess",4]]],[11,"clone","","",91,[[],["rendererinfo",3]]],[11,"clone","","",92,[[],["blendmode",4]]],[11,"clone","","",99,[[],["texturequery",3]]],[11,"clone","","",139,[[],["driveriterator",3]]],[11,"clone","sdl2::log","",106,[[],["category",4]]],[11,"clone","","",107,[[],["priority",4]]],[11,"clone","sdl2","",126,[[],["error",4]]],[11,"clone","","",140,[[],["sdl",3]]],[11,"clone","","",141,[[],["audiosubsystem",3]]],[11,"clone","","",142,[[],["gamecontrollersubsystem",3]]],[11,"clone","","",143,[[],["hapticsubsystem",3]]],[11,"clone","","",144,[[],["joysticksubsystem",3]]],[11,"clone","","",145,[[],["videosubsystem",3]]],[11,"clone","sdl2::audio","",108,[[],["audioformat",4]]],[11,"clone","","",109,[[],["audiostatus",4]]],[11,"clone","","",149,[[],["driveriterator",3]]],[11,"clone","","",113,[[],["audiospecdesired",3]]],[11,"clone","","",114,[[],["audiospec",3]]],[11,"clone","","",117,[[],["audiocvt",3]]],[11,"clone","sdl2::version","",118,[[],["version",3]]],[11,"clone","sdl2::messagebox","",119,[[],["messageboxflag",3]]],[11,"clone","","",120,[[],["messageboxbuttonflag",3]]],[11,"cmp","sdl2::keyboard","",55,[[["mod",3]],["ordering",4]]],[11,"cmp","sdl2::messagebox","",119,[[["messageboxflag",3]],["ordering",4]]],[11,"cmp","","",120,[[["messageboxbuttonflag",3]],["ordering",4]]],[11,"eq","sdl2::event","",1,[[["eventtype",4]],["bool",15]]],[11,"eq","","",2,[[["windowevent",4]],["bool",15]]],[11,"ne","","",2,[[["windowevent",4]],["bool",15]]],[11,"eq","","",3,[[["event",4]],["bool",15]]],[11,"ne","","",3,[[["event",4]],["bool",15]]],[11,"eq","sdl2::joystick","",45,[[["guid",3]],["bool",15]]],[11,"eq","","",46,[[["hatstate",4]],["bool",15]]],[11,"eq","sdl2::controller","",48,[[["axis",4]],["bool",15]]],[11,"eq","","",49,[[["button",4]],["bool",15]]],[11,"eq","","",50,[[["mappingstatus",4]],["bool",15]]],[11,"eq","sdl2::keyboard","",53,[[["keycode",4]],["bool",15]]],[11,"eq","","",54,[[["scancode",4]],["bool",15]]],[11,"eq","","",55,[[["mod",3]],["bool",15]]],[11,"ne","","",55,[[["mod",3]],["bool",15]]],[11,"eq","sdl2::mouse","",133,[[["relativemousestate",3]],["bool",15]]],[11,"ne","","",133,[[["relativemousestate",3]],["bool",15]]],[11,"eq","","",59,[[["systemcursor",4]],["bool",15]]],[11,"eq","","",61,[[["mousewheeldirection",4]],["bool",15]]],[11,"ne","","",61,[[["mousewheeldirection",4]],["bool",15]]],[11,"eq","","",62,[[["mousebutton",4]],["bool",15]]],[11,"eq","","",63,[[["mousestate",3]],["bool",15]]],[11,"ne","","",63,[[["mousestate",3]],["bool",15]]],[11,"eq","sdl2::rect","",65,[[["rect",3]],["bool",15]]],[11,"eq","","",66,[[["point",3]],["bool",15]]],[11,"eq","sdl2::pixels","",70,[[["color",3]],["bool",15]]],[11,"ne","","",70,[[["color",3]],["bool",15]]],[11,"eq","","",73,[[["pixelformatenum",4]],["bool",15]]],[11,"eq","sdl2::video","",78,[[["glprofile",4]],["bool",15]]],[11,"ne","","",78,[[["glprofile",4]],["bool",15]]],[11,"eq","","",79,[[["displaymode",3]],["bool",15]]],[11,"ne","","",79,[[["displaymode",3]],["bool",15]]],[11,"eq","","",80,[[["fullscreentype",4]],["bool",15]]],[11,"eq","","",81,[[["windowpos",4]],["bool",15]]],[11,"ne","","",81,[[["windowpos",4]],["bool",15]]],[11,"eq","","",84,[[["swapinterval",4]],["bool",15]]],[11,"eq","sdl2::render","",90,[[["textureaccess",4]],["bool",15]]],[11,"eq","","",91,[[["rendererinfo",3]],["bool",15]]],[11,"ne","","",91,[[["rendererinfo",3]],["bool",15]]],[11,"eq","","",92,[[["blendmode",4]],["bool",15]]],[11,"eq","","",99,[[["texturequery",3]],["bool",15]]],[11,"ne","","",99,[[["texturequery",3]],["bool",15]]],[11,"eq","sdl2::log","",106,[[["category",4]],["bool",15]]],[11,"eq","","",107,[[["priority",4]],["bool",15]]],[11,"eq","sdl2","",126,[[["error",4]],["bool",15]]],[11,"eq","sdl2::audio","",108,[[["audioformat",4]],["bool",15]]],[11,"eq","","",109,[[["audiostatus",4]],["bool",15]]],[11,"eq","","",114,[[["audiospec",3]],["bool",15]]],[11,"ne","","",114,[[["audiospec",3]],["bool",15]]],[11,"eq","sdl2::version","",118,[[["version",3]],["bool",15]]],[11,"ne","","",118,[[["version",3]],["bool",15]]],[11,"eq","sdl2::messagebox","",119,[[["messageboxflag",3]],["bool",15]]],[11,"ne","","",119,[[["messageboxflag",3]],["bool",15]]],[11,"eq","","",120,[[["messageboxbuttonflag",3]],["bool",15]]],[11,"ne","","",120,[[["messageboxbuttonflag",3]],["bool",15]]],[11,"partial_cmp","sdl2::keyboard","",55,[[["mod",3]],[["ordering",4],["option",4]]]],[11,"partial_cmp","sdl2::messagebox","",119,[[["messageboxflag",3]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",120,[[["messageboxbuttonflag",3]],[["ordering",4],["option",4]]]],[11,"deref","sdl2::rect","Example",65,[[],["sdl_rect",3]]],[11,"deref","","Example",66,[[],["sdl_point",3]]],[11,"deref","sdl2::surface","",67,[[],["surfaceref",3]]],[11,"deref","sdl2::video","",77,[[],["surfaceref",3]]],[11,"deref","sdl2::render","",95,[[],["renderercontext",3]]],[11,"deref","sdl2::audio","",150,[[]]],[11,"deref_mut","sdl2::rect","Example",65,[[],["sdl_rect",3]]],[11,"deref_mut","","Example",66,[[],["sdl_point",3]]],[11,"deref_mut","sdl2::surface","",67,[[],["surfaceref",3]]],[11,"deref_mut","sdl2::video","",77,[[],["surfaceref",3]]],[11,"deref_mut","sdl2::audio","",150,[[]]],[11,"fmt","sdl2::event","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","sdl2::filesystem","",43,[[["formatter",3]],["result",6]]],[11,"fmt","sdl2::joystick","",46,[[["formatter",3]],["result",6]]],[11,"fmt","sdl2::controller","",47,[[["formatter",3]],["result",6]]],[11,"fmt","","",48,[[["formatter",3]],["result",6]]],[11,"fmt","","",49,[[["formatter",3]],["result",6]]],[11,"fmt","","",50,[[["formatter",3]],["result",6]]],[11,"fmt","sdl2::keyboard","",53,[[["formatter",3]],["result",6]]],[11,"fmt","","",54,[[["formatter",3]],["result",6]]],[11,"fmt","","",55,[[["formatter",3]],["result",6]]],[11,"fmt","sdl2::mouse","",59,[[["formatter",3]],["result",6]]],[11,"fmt","","",61,[[["formatter",3]],["result",6]]],[11,"fmt","","",62,[[["formatter",3]],["result",6]]],[11,"fmt","sdl2::rect","",65,[[["formatter",3]],["result",6]]],[11,"fmt","","",66,[[["formatter",3]],["result",6]]],[11,"fmt","sdl2::pixels","",70,[[["formatter",3]],["result",6]]],[11,"fmt","","",73,[[["formatter",3]],["result",6]]],[11,"fmt","sdl2::video","",78,[[["formatter",3]],["result",6]]],[11,"fmt","","",79,[[["formatter",3]],["result",6]]],[11,"fmt","","",80,[[["formatter",3]],["result",6]]],[11,"fmt","","",81,[[["formatter",3]],["result",6]]],[11,"fmt","","",84,[[["formatter",3]],["result",6]]],[11,"fmt","","",85,[[["formatter",3]],["result",6]]],[11,"fmt","","",86,[[["formatter",3]],["result",6]]],[11,"fmt","sdl2::render","",138,[[["formatter",3]],["result",6]]],[11,"fmt","","",89,[[["formatter",3]],["result",6]]],[11,"fmt","","",90,[[["formatter",3]],["result",6]]],[11,"fmt","","",91,[[["formatter",3]],["result",6]]],[11,"fmt","","",92,[[["formatter",3]],["result",6]]],[11,"fmt","","",97,[[["formatter",3]],["result",6]]],[11,"fmt","","",99,[[["formatter",3]],["result",6]]],[11,"fmt","","",100,[[["formatter",3]],["result",6]]],[11,"fmt","","",101,[[["formatter",3]],["result",6]]],[11,"fmt","sdl2::log","",106,[[["formatter",3]],["result",6]]],[11,"fmt","","",107,[[["formatter",3]],["result",6]]],[11,"fmt","sdl2","",126,[[["formatter",3]],["result",6]]],[11,"fmt","","",141,[[["formatter",3]],["result",6]]],[11,"fmt","","",142,[[["formatter",3]],["result",6]]],[11,"fmt","","",143,[[["formatter",3]],["result",6]]],[11,"fmt","","",144,[[["formatter",3]],["result",6]]],[11,"fmt","","",145,[[["formatter",3]],["result",6]]],[11,"fmt","sdl2::audio","",108,[[["formatter",3]],["result",6]]],[11,"fmt","","",109,[[["formatter",3]],["result",6]]],[11,"fmt","","",114,[[["formatter",3]],["result",6]]],[11,"fmt","sdl2::version","",118,[[["formatter",3]],["result",6]]],[11,"fmt","sdl2::messagebox","",119,[[["formatter",3]],["result",6]]],[11,"fmt","","",120,[[["formatter",3]],["result",6]]],[11,"fmt","","",121,[[["formatter",3]],["result",6]]],[11,"fmt","","",122,[[["formatter",3]],["result",6]]],[11,"fmt","","",123,[[["formatter",3]],["result",6]]],[11,"fmt","","",124,[[["formatter",3]],["result",6]]],[11,"fmt","sdl2","",127,[[["formatter",3]],["result",6]]],[11,"fmt","sdl2::filesystem","",43,[[["formatter",3]],["result",6]]],[11,"fmt","sdl2::joystick","",45,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","sdl2::controller","",47,[[["formatter",3]],["result",6]]],[11,"fmt","sdl2::keyboard","",53,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",54,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","sdl2::video","",85,[[["formatter",3]],["result",6]]],[11,"fmt","sdl2::render","",138,[[["formatter",3]],["result",6]]],[11,"fmt","","",89,[[["formatter",3]],["result",6]]],[11,"fmt","","",97,[[["formatter",3]],["result",6]]],[11,"fmt","","",100,[[["formatter",3]],["result",6]]],[11,"fmt","","",101,[[["formatter",3]],["result",6]]],[11,"fmt","sdl2","",126,[[["formatter",3]],["result",6]]],[11,"fmt","sdl2::version","",118,[[["formatter",3]],["result",6]]],[11,"fmt","sdl2::messagebox","",124,[[["formatter",3]],["result",6]]],[11,"fmt","sdl2","",127,[[["formatter",3]],["result",6]]],[11,"div","sdl2::rect","",66,[[["i32",15]],["point",3]]],[11,"sub","sdl2::keyboard","Returns the set difference of the two sets of flags.",55,[[["mod",3]],["mod",3]]],[11,"sub","sdl2::rect","",66,[[["point",3]],["point",3]]],[11,"sub","sdl2::messagebox","Returns the set difference of the two sets of flags.",119,[[["messageboxflag",3]],["messageboxflag",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",120,[[["messageboxbuttonflag",3]],["messageboxbuttonflag",3]]],[11,"add","sdl2::rect","",66,[[["point",3]],["point",3]]],[11,"mul","","",66,[[["i32",15]],["point",3]]],[11,"neg","","",66,[[],["point",3]]],[11,"sub_assign","sdl2::keyboard","Disables all flags enabled in the set.",55,[[["mod",3]]]],[11,"sub_assign","sdl2::messagebox","Disables all flags enabled in the set.",119,[[["messageboxflag",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",120,[[["messageboxbuttonflag",3]]]],[11,"not","sdl2::keyboard","Returns the complement of this set of flags.",55,[[],["mod",3]]],[11,"not","sdl2::messagebox","Returns the complement of this set of flags.",119,[[],["messageboxflag",3]]],[11,"not","","Returns the complement of this set of flags.",120,[[],["messageboxbuttonflag",3]]],[11,"bitand","sdl2::keyboard","Returns the intersection between the two sets of flags.",55,[[["mod",3]],["mod",3]]],[11,"bitand","sdl2::rect","",65,[[["rect",3]],[["rect",3],["option",4]]]],[11,"bitand","sdl2::messagebox","Returns the intersection between the two sets of flags.",119,[[["messageboxflag",3]],["messageboxflag",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",120,[[["messageboxbuttonflag",3]],["messageboxbuttonflag",3]]],[11,"bitor","sdl2::keyboard","Returns the union of the two sets of flags.",55,[[["mod",3]],["mod",3]]],[11,"bitor","sdl2::rect","",65,[[["rect",3]],["rect",3]]],[11,"bitor","sdl2::messagebox","Returns the union of the two sets of flags.",119,[[["messageboxflag",3]],["messageboxflag",3]]],[11,"bitor","","Returns the union of the two sets of flags.",120,[[["messageboxbuttonflag",3]],["messageboxbuttonflag",3]]],[11,"bitxor","sdl2::keyboard","Returns the left flags, but with all the right flags …",55,[[["mod",3]],["mod",3]]],[11,"bitxor","sdl2::messagebox","Returns the left flags, but with all the right flags …",119,[[["messageboxflag",3]],["messageboxflag",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags …",120,[[["messageboxbuttonflag",3]],["messageboxbuttonflag",3]]],[11,"bitand_assign","sdl2::keyboard","Disables all flags disabled in the set.",55,[[["mod",3]]]],[11,"bitand_assign","sdl2::messagebox","Disables all flags disabled in the set.",119,[[["messageboxflag",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",120,[[["messageboxbuttonflag",3]]]],[11,"bitor_assign","sdl2::keyboard","Adds the set of flags.",55,[[["mod",3]]]],[11,"bitor_assign","sdl2::messagebox","Adds the set of flags.",119,[[["messageboxflag",3]]]],[11,"bitor_assign","","Adds the set of flags.",120,[[["messageboxbuttonflag",3]]]],[11,"bitxor_assign","sdl2::keyboard","Toggles the set of flags.",55,[[["mod",3]]]],[11,"bitxor_assign","sdl2::messagebox","Toggles the set of flags.",119,[[["messageboxflag",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",120,[[["messageboxbuttonflag",3]]]],[11,"hash","sdl2::event","",1,[[]]],[11,"hash","","",2,[[]]],[11,"hash","sdl2::joystick","",46,[[]]],[11,"hash","sdl2::controller","",48,[[]]],[11,"hash","","",49,[[]]],[11,"hash","","",50,[[]]],[11,"hash","sdl2::keyboard","",53,[[]]],[11,"hash","","",54,[[]]],[11,"hash","","",55,[[]]],[11,"hash","sdl2::mouse","",133,[[]]],[11,"hash","","",59,[[]]],[11,"hash","","",61,[[]]],[11,"hash","","",62,[[]]],[11,"hash","","",63,[[]]],[11,"hash","sdl2::pixels","",70,[[]]],[11,"hash","","",73,[[]]],[11,"hash","sdl2::video","",78,[[]]],[11,"hash","","",79,[[]]],[11,"hash","","",80,[[]]],[11,"hash","","",81,[[]]],[11,"hash","","",84,[[]]],[11,"hash","sdl2::render","",90,[[]]],[11,"hash","","",91,[[]]],[11,"hash","","",92,[[]]],[11,"hash","","",99,[[]]],[11,"hash","sdl2::log","",106,[[]]],[11,"hash","","",107,[[]]],[11,"hash","sdl2","",126,[[]]],[11,"hash","sdl2::audio","",108,[[]]],[11,"hash","","",109,[[]]],[11,"hash","","",114,[[]]],[11,"hash","sdl2::version","",118,[[]]],[11,"hash","sdl2::messagebox","",119,[[]]],[11,"hash","","",120,[[]]],[11,"from_iter","sdl2::keyboard","",55,[[["intoiterator",8]],["mod",3]]],[11,"from_iter","sdl2::messagebox","",119,[[["intoiterator",8]],["messageboxflag",3]]],[11,"from_iter","","",120,[[["intoiterator",8]],["messageboxbuttonflag",3]]],[11,"description","sdl2::filesystem","",43,[[],["str",15]]],[11,"description","sdl2::controller","",47,[[],["str",15]]],[11,"description","sdl2::video","",85,[[],["str",15]]],[11,"description","sdl2::render","",138,[[],["str",15]]],[11,"description","","",89,[[],["str",15]]],[11,"description","","",97,[[],["str",15]]],[11,"description","","",100,[[],["str",15]]],[11,"description","","",101,[[],["str",15]]],[11,"description","sdl2","",126,[[],["str",15]]],[11,"description","sdl2::messagebox","",124,[[],["str",15]]],[11,"description","sdl2","",127,[[],["str",15]]],[11,"read","sdl2::rwops","",105,[[],[["usize",15],["result",6]]]],[11,"seek","","",105,[[["seekfrom",4]],[["result",6],["u64",15]]]],[11,"write","","",105,[[],[["usize",15],["result",6]]]],[11,"flush","","",105,[[],["result",6]]],[11,"from_i64","sdl2::event","",1,[[["i64",15]],[["option",4],["eventtype",4]]]],[11,"from_u64","","",1,[[["u64",15]],[["option",4],["eventtype",4]]]],[11,"from_i64","sdl2::pixels","",73,[[["i64",15]],[["option",4],["pixelformatenum",4]]]],[11,"from_u64","","",73,[[["u64",15]],[["option",4],["pixelformatenum",4]]]],[11,"from_i64","sdl2::render","",90,[[["i64",15]],[["option",4],["textureaccess",4]]]],[11,"from_u64","","",90,[[["u64",15]],[["option",4],["textureaccess",4]]]],[11,"from_i64","","",92,[[["i64",15]],[["blendmode",4],["option",4]]]],[11,"from_u64","","",92,[[["u64",15]],[["blendmode",4],["option",4]]]],[11,"from_i64","sdl2::audio","",109,[[["i64",15]],[["option",4],["audiostatus",4]]]],[11,"from_u64","","",109,[[["u64",15]],[["option",4],["audiostatus",4]]]],[11,"rand","sdl2::pixels","",70,[[],["color",3]]],[11,"clipboard","sdl2","",145,[[],["clipboardutil",3]]],[11,"flush_event","","Removes all events in the event queue that match the …",147,[[["eventtype",4]]]],[11,"flush_events","","Removes all events in the event queue that match the …",147,[[["u32",15]]]],[11,"peek_events","","Reads the events at the front of the event queue, until …",147,[[["u32",15]]]],[11,"push_event","","Pushes an event to the event queue.",147,[[["event",4]],[["result",4],["string",3]]]],[11,"register_event","","Register a custom SDL event.",147,[[],[["u32",15],["string",3],["result",4]]]],[11,"register_events","","Registers custom SDL events.",147,[[["u32",15]],[["result",4],["string",3],["vec",3]]]],[11,"register_custom_event","","Register a custom event",147,[[],[["result",4],["string",3]]]],[11,"push_custom_event","","Push a custom event",147,[[["any",8]],[["result",4],["string",3]]]],[11,"is_event_enabled","","Query if an event type is enabled.",148,[[["eventtype",4]],["bool",15]]],[11,"enable_event","","Enable an event type. Returns if the event type was …",148,[[["eventtype",4]],["bool",15]]],[11,"disable_event","","Disable an event type. Returns if the event type was …",148,[[["eventtype",4]],["bool",15]]],[11,"poll_event","","Polls for currently pending events.",148,[[],[["option",4],["event",4]]]],[11,"poll_iter","","Returns a polling iterator that calls <code>poll_event()</code>. The …",148,[[],["eventpolliterator",3]]],[11,"pump_events","","Pumps the event loop, gathering events from the input …",148,[[]]],[11,"wait_event","","Waits indefinitely for the next available event.",148,[[],["event",4]]],[11,"wait_event_timeout","","Waits until the specified timeout (in milliseconds) for …",148,[[["u32",15]],[["option",4],["event",4]]]],[11,"wait_iter","","Returns a waiting iterator that calls <code>wait_event()</code>.",148,[[],["eventwaititerator",3]]],[11,"wait_timeout_iter","","Returns a waiting iterator that calls <code>wait_event_timeout()</code>…",148,[[["u32",15]],["eventwaittimeoutiterator",3]]],[11,"keyboard_state","","",148,[[],["keyboardstate",3]]],[11,"mouse_state","","",148,[[],["mousestate",3]]],[11,"relative_mouse_state","","",148,[[],["relativemousestate",3]]],[11,"num_joysticks","","Retreive the total number of attached joysticks <em>and</em> …",144,[[],[["u32",15],["string",3],["result",4]]]],[11,"open","","Attempt to open the joystick at index <code>joystick_index</code> and …",144,[[["u32",15]],[["result",4],["joystick",3],["integerorsdlerror",4]]]],[11,"name_for_index","","Return the name of the joystick at index <code>joystick_index</code>.",144,[[["u32",15]],[["string",3],["result",4],["integerorsdlerror",4]]]],[11,"device_guid","","Get the GUID for the joystick at index <code>joystick_index</code>",144,[[["u32",15]],[["integerorsdlerror",4],["result",4],["guid",3]]]],[11,"set_event_state","","If state is <code>true</code> joystick events are processed, otherwise …",144,[[["bool",15]]]],[11,"event_state","","Return <code>true</code> if joystick events are processed.",144,[[],["bool",15]]],[11,"update","","Force joystick update when not using the event loop",144,[[]]],[11,"num_joysticks","","Retreive the total number of attached joysticks <em>and</em> …",142,[[],[["u32",15],["string",3],["result",4]]]],[11,"is_game_controller","","Return true if the joystick at index <code>joystick_index</code> is a …",142,[[["u32",15]],["bool",15]]],[11,"open","","Attempt to open the controller ad index <code>joystick_index</code> …",142,[[["u32",15]],[["integerorsdlerror",4],["gamecontroller",3],["result",4]]]],[11,"name_for_index","","Return the name of the controller at index <code>joystick_index</code>.",142,[[["u32",15]],[["string",3],["result",4],["integerorsdlerror",4]]]],[11,"set_event_state","","If state is <code>true</code> controller events are processed, …",142,[[["bool",15]]]],[11,"event_state","","Return <code>true</code> if controller events are processed.",142,[[],["bool",15]]],[11,"add_mapping","","Add a new mapping from a mapping string",142,[[["str",15]],[["mappingstatus",4],["addmappingerror",4],["result",4]]]],[11,"load_mappings","","Load mappings from a file",142,[[["asref",8],["path",3]],[["i32",15],["addmappingerror",4],["result",4]]]],[11,"mapping_for_guid","","",142,[[["guid",3]],[["result",4],["string",3]]]],[11,"update","","Force controller update when not using the event loop",142,[[]]],[11,"open_from_joystick_id","","Attempt to open the joystick at index <code>joystick_index</code> and …",143,[[["u32",15]],[["integerorsdlerror",4],["result",4],["haptic",3]]]],[11,"from_i32","sdl2::keyboard","",53,[[["i32",15]],[["keycode",4],["option",4]]]],[11,"from_scancode","","Gets the virtual key from a scancode. Returns None if …",53,[[["scancode",4]],[["keycode",4],["option",4]]]],[11,"from_name","","",53,[[["str",15]],[["keycode",4],["option",4]]]],[11,"name","","",53,[[],["string",3]]],[11,"from_i32","","",54,[[["i32",15]],[["option",4],["scancode",4]]]],[11,"from_keycode","","Gets the scancode from a virtual key. Returns None if …",54,[[["keycode",4]],[["option",4],["scancode",4]]]],[11,"from_name","","",54,[[["str",15]],[["option",4],["scancode",4]]]],[11,"name","","",54,[[],["str",15]]],[11,"keyboard","sdl2","",140,[[],["keyboardutil",3]]],[11,"text_input","","",145,[[],["textinpututil",3]]],[11,"new","sdl2::mouse","",133,[[["eventpump",3]],["relativemousestate",3]]],[11,"from_sdl_state","","",133,[[["u32",15]],["relativemousestate",3]]],[11,"to_sdl_state","","",133,[[],["u32",15]]],[11,"left","","Returns true if the left mouse button is pressed.",133,[[],["bool",15]]],[11,"middle","","Tests if the middle mouse button was pressed.",133,[[],["bool",15]]],[11,"right","","Tests if the right mouse button was pressed.",133,[[],["bool",15]]],[11,"x1","","Tests if the X1 mouse button was pressed.",133,[[],["bool",15]]],[11,"x2","","Tests if the X2 mouse button was pressed.",133,[[],["bool",15]]],[11,"x","","Returns the x coordinate of the state",133,[[],["i32",15]]],[11,"y","","Returns the y coordinate of the state",133,[[],["i32",15]]],[11,"is_mouse_button_pressed","","Returns true if the mouse button is pressed.",133,[[["mousebutton",4]],["bool",15]]],[11,"mouse_buttons","","Returns an iterator all mouse buttons with a boolean …",133,[[],["mousebuttoniterator",3]]],[11,"pressed_mouse_buttons","","Returns an iterator of pressed mouse buttons.",133,[[],["pressedmousebuttoniterator",3]]],[11,"mouse","sdl2","",140,[[],["mouseutil",3]]],[11,"gl_attr","","Obtains access to the OpenGL window attributes.",145,[[],["glattr",3]]],[11,"window","","Initializes a new <code>WindowBuilder</code>; a convenience method …",145,[[["u32",15],["str",15]],["windowbuilder",3]]],[11,"current_video_driver","","",145,[[],["str",15]]],[11,"num_video_displays","","",145,[[],[["result",4],["string",3],["i32",15]]]],[11,"display_name","","Get the name of the display at the index <code>display_name</code>.",145,[[["i32",15]],[["result",4],["string",3]]]],[11,"display_bounds","","",145,[[["i32",15]],[["rect",3],["result",4],["string",3]]]],[11,"num_display_modes","","",145,[[["i32",15]],[["result",4],["string",3],["i32",15]]]],[11,"display_mode","","",145,[[["i32",15]],[["result",4],["displaymode",3],["string",3]]]],[11,"desktop_display_mode","","",145,[[["i32",15]],[["result",4],["displaymode",3],["string",3]]]],[11,"current_display_mode","","",145,[[["i32",15]],[["result",4],["displaymode",3],["string",3]]]],[11,"closest_display_mode","","",145,[[["displaymode",3],["i32",15]],[["result",4],["displaymode",3],["string",3]]]],[11,"display_dpi","","Return a triplet <code>(ddpi, hdpi, vdpi)</code> containing the …",145,[[["i32",15]],[["result",4],["string",3]]]],[11,"is_screen_saver_enabled","","",145,[[],["bool",15]]],[11,"enable_screen_saver","","",145,[[]]],[11,"disable_screen_saver","","",145,[[]]],[11,"gl_load_library_default","","Loads the default OpenGL library.",145,[[],[["result",4],["string",3]]]],[11,"gl_load_library","","Loads the OpenGL library using a platform-dependent …",145,[[["asref",8],["path",3]],[["result",4],["string",3]]]],[11,"gl_unload_library","","Unloads the current OpenGL library.",145,[[]]],[11,"gl_get_proc_address","","Gets the pointer to the named OpenGL function.",145,[[["str",15]]]],[11,"gl_extension_supported","","",145,[[["str",15]],["bool",15]]],[11,"gl_get_current_window_id","","",145,[[],[["u32",15],["string",3],["result",4]]]],[11,"gl_release_current_context","","Releases the thread\'s current OpenGL context, i.e. sets …",145,[[],[["result",4],["string",3]]]],[11,"gl_set_swap_interval","","",145,[[["into",8],["swapinterval",4]],["bool",15]]],[11,"gl_get_swap_interval","","",145,[[],["swapinterval",4]]],[11,"add_timer","","Constructs a new timer using the boxed closure <code>callback</code>.",146,[[["u32",15],["timercallback",6]],["timer",3]]],[11,"ticks","","Gets the number of milliseconds elapsed since the timer …",146,[[],["u32",15]]],[11,"delay","","Sleeps the current thread for the specified amount of …",146,[[["u32",15]]]],[11,"performance_counter","","",146,[[],["u64",15]]],[11,"performance_frequency","","",146,[[],["u64",15]]],[11,"audio","","Initializes the audio subsystem.",140,[[],[["result",4],["audiosubsystem",3],["string",3]]]],[11,"event","","Initializes the event subsystem.",140,[[],[["result",4],["eventsubsystem",3],["string",3]]]],[11,"joystick","","Initializes the joystick subsystem.",140,[[],[["result",4],["joysticksubsystem",3],["string",3]]]],[11,"haptic","","Initializes the haptic subsystem.",140,[[],[["result",4],["string",3],["hapticsubsystem",3]]]],[11,"game_controller","","Initializes the game controller subsystem.",140,[[],[["result",4],["gamecontrollersubsystem",3],["string",3]]]],[11,"timer","","Initializes the timer subsystem.",140,[[],[["timersubsystem",3],["string",3],["result",4]]]],[11,"video","","Initializes the video subsystem.",140,[[],[["videosubsystem",3],["result",4],["string",3]]]],[11,"event_pump","","Obtains the SDL event pump.",140,[[],[["eventpump",3],["result",4],["string",3]]]],[11,"sdl","","Obtain an SDL context.",141,[[],["sdl",3]]],[11,"sdl","","Obtain an SDL context.",142,[[],["sdl",3]]],[11,"sdl","","Obtain an SDL context.",143,[[],["sdl",3]]],[11,"sdl","","Obtain an SDL context.",144,[[],["sdl",3]]],[11,"sdl","","Obtain an SDL context.",145,[[],["sdl",3]]],[11,"clone","","",146,[[],["timersubsystem",3]]],[11,"sdl","","Obtain an SDL context.",146,[[],["sdl",3]]],[11,"clone","","",147,[[],["eventsubsystem",3]]],[11,"sdl","","Obtain an SDL context.",147,[[],["sdl",3]]],[11,"open_playback","","Opens a new audio device given the desired parameters and …",141,[[["audiospecdesired",3]],[["result",4],["string",3],["audiodevice",3]]]],[11,"open_capture","","Opens a new audio device for capture (given the desired …",141,[[["audiospecdesired",3]],[["result",4],["string",3],["audiodevice",3]]]],[11,"open_queue","","Opens a new audio device which uses queueing rather than …",141,[[["audiospecdesired",3]],[["string",3],["audioqueue",3],["result",4]]]],[11,"current_audio_driver","","",141,[[],["str",15]]],[11,"num_audio_playback_devices","","",141,[[],[["option",4],["u32",15]]]],[11,"audio_playback_device_name","","",141,[[["u32",15]],[["result",4],["string",3]]]]],"p":[[3,"ClipboardUtil"],[4,"EventType"],[4,"WindowEvent"],[4,"Event"],[13,"Quit"],[13,"AppTerminating"],[13,"AppLowMemory"],[13,"AppWillEnterBackground"],[13,"AppDidEnterBackground"],[13,"AppWillEnterForeground"],[13,"AppDidEnterForeground"],[13,"Window"],[13,"KeyDown"],[13,"KeyUp"],[13,"TextEditing"],[13,"TextInput"],[13,"MouseMotion"],[13,"MouseButtonDown"],[13,"MouseButtonUp"],[13,"MouseWheel"],[13,"JoyAxisMotion"],[13,"JoyBallMotion"],[13,"JoyHatMotion"],[13,"JoyButtonDown"],[13,"JoyButtonUp"],[13,"JoyDeviceAdded"],[13,"JoyDeviceRemoved"],[13,"ControllerAxisMotion"],[13,"ControllerButtonDown"],[13,"ControllerButtonUp"],[13,"ControllerDeviceAdded"],[13,"ControllerDeviceRemoved"],[13,"ControllerDeviceRemapped"],[13,"FingerDown"],[13,"FingerUp"],[13,"FingerMotion"],[13,"DollarGesture"],[13,"DollarRecord"],[13,"MultiGesture"],[13,"ClipboardUpdate"],[13,"DropFile"],[13,"User"],[13,"Unknown"],[4,"PrefPathError"],[3,"Joystick"],[3,"Guid"],[4,"HatState"],[4,"AddMappingError"],[4,"Axis"],[4,"Button"],[4,"MappingStatus"],[3,"GameController"],[3,"Haptic"],[4,"Keycode"],[4,"Scancode"],[3,"Mod"],[3,"KeyboardState"],[3,"KeyboardUtil"],[3,"TextInputUtil"],[4,"SystemCursor"],[3,"Cursor"],[4,"MouseWheelDirection"],[4,"MouseButton"],[3,"MouseState"],[3,"MouseUtil"],[3,"Rect"],[3,"Point"],[3,"Surface"],[3,"SurfaceRef"],[3,"Palette"],[3,"Color"],[3,"PixelMasks"],[3,"PixelFormat"],[4,"PixelFormatEnum"],[3,"GLAttr"],[3,"ContextFlagsBuilder"],[3,"ContextFlags"],[3,"WindowSurfaceRef"],[4,"GLProfile"],[3,"DisplayMode"],[4,"FullscreenType"],[4,"WindowPos"],[3,"GLContext"],[3,"WindowContext"],[4,"SwapInterval"],[4,"WindowBuildError"],[3,"WindowBuilder"],[3,"Window"],[3,"Timer"],[4,"TargetRenderError"],[4,"TextureAccess"],[3,"RendererInfo"],[4,"BlendMode"],[3,"RendererContext"],[8,"RenderTarget"],[3,"Canvas"],[3,"CanvasBuilder"],[4,"TextureValueError"],[3,"TextureCreator"],[3,"TextureQuery"],[4,"UpdateTextureError"],[4,"UpdateTextureYUVError"],[13,"PitchOverflows"],[13,"InvalidPlaneLength"],[3,"Texture"],[3,"RWops"],[4,"Category"],[4,"Priority"],[4,"AudioFormat"],[4,"AudioStatus"],[3,"AudioSpecWAV"],[8,"AudioCallback"],[8,"AudioFormatNum"],[3,"AudioSpecDesired"],[3,"AudioSpec"],[3,"AudioQueue"],[3,"AudioDevice"],[3,"AudioCVT"],[3,"Version"],[3,"MessageBoxFlag"],[3,"MessageBoxButtonFlag"],[3,"MessageBoxColorScheme"],[3,"ButtonData"],[4,"ClickedButton"],[4,"ShowMessageError"],[4,"Hint"],[4,"Error"],[4,"IntegerOrSdlError"],[3,"EventPollIterator"],[3,"EventWaitIterator"],[3,"EventWaitTimeoutIterator"],[3,"ScancodeIterator"],[3,"PressedScancodeIterator"],[3,"RelativeMouseState"],[3,"MouseButtonIterator"],[3,"PressedMouseButtonIterator"],[3,"SurfaceContext"],[3,"DriverIterator"],[3,"SdlError"],[3,"DriverIterator"],[3,"Sdl"],[3,"AudioSubsystem"],[3,"GameControllerSubsystem"],[3,"HapticSubsystem"],[3,"JoystickSubsystem"],[3,"VideoSubsystem"],[3,"TimerSubsystem"],[3,"EventSubsystem"],[3,"EventPump"],[3,"DriverIterator"],[3,"AudioDeviceLockGuard"]]},\
"sdl2_sys":{"doc":"","i":[[5,"SDL_GetPlatform","sdl2_sys","\\\\brief Gets the name of the platform.",null,null],[5,"SDL_malloc","","",null,null],[5,"SDL_calloc","","",null,null],[5,"SDL_realloc","","",null,null],[5,"SDL_free","","",null,null],[5,"SDL_getenv","","",null,null],[5,"SDL_setenv","","",null,null],[5,"SDL_qsort","","",null,null],[5,"SDL_abs","","",null,null],[5,"SDL_isdigit","","",null,null],[5,"SDL_isspace","","",null,null],[5,"SDL_toupper","","",null,null],[5,"SDL_tolower","","",null,null],[5,"SDL_memset","","",null,null],[5,"SDL_memcpy","","",null,null],[5,"SDL_memmove","","",null,null],[5,"SDL_memcmp","","",null,null],[5,"SDL_wcslen","","",null,null],[5,"SDL_wcslcpy","","",null,null],[5,"SDL_wcslcat","","",null,null],[5,"SDL_wcscmp","","",null,null],[5,"SDL_strlen","","",null,null],[5,"SDL_strlcpy","","",null,null],[5,"SDL_utf8strlcpy","","",null,null],[5,"SDL_strlcat","","",null,null],[5,"SDL_strdup","","",null,null],[5,"SDL_strrev","","",null,null],[5,"SDL_strupr","","",null,null],[5,"SDL_strlwr","","",null,null],[5,"SDL_strchr","","",null,null],[5,"SDL_strrchr","","",null,null],[5,"SDL_strstr","","",null,null],[5,"SDL_utf8strlen","","",null,null],[5,"SDL_itoa","","",null,null],[5,"SDL_uitoa","","",null,null],[5,"SDL_ltoa","","",null,null],[5,"SDL_ultoa","","",null,null],[5,"SDL_lltoa","","",null,null],[5,"SDL_ulltoa","","",null,null],[5,"SDL_atoi","","",null,null],[5,"SDL_atof","","",null,null],[5,"SDL_strtol","","",null,null],[5,"SDL_strtoul","","",null,null],[5,"SDL_strtoll","","",null,null],[5,"SDL_strtoull","","",null,null],[5,"SDL_strtod","","",null,null],[5,"SDL_strcmp","","",null,null],[5,"SDL_strncmp","","",null,null],[5,"SDL_strcasecmp","","",null,null],[5,"SDL_strncasecmp","","",null,null],[5,"SDL_sscanf","","",null,null],[5,"SDL_vsscanf","","",null,null],[5,"SDL_snprintf","","",null,null],[5,"SDL_vsnprintf","","",null,null],[5,"SDL_acos","","",null,null],[5,"SDL_asin","","",null,null],[5,"SDL_atan","","",null,null],[5,"SDL_atan2","","",null,null],[5,"SDL_ceil","","",null,null],[5,"SDL_copysign","","",null,null],[5,"SDL_cos","","",null,null],[5,"SDL_cosf","","",null,null],[5,"SDL_fabs","","",null,null],[5,"SDL_floor","","",null,null],[5,"SDL_log","","",null,null],[5,"SDL_pow","","",null,null],[5,"SDL_scalbn","","",null,null],[5,"SDL_sin","","",null,null],[5,"SDL_sinf","","",null,null],[5,"SDL_sqrt","","",null,null],[5,"SDL_sqrtf","","",null,null],[5,"SDL_tan","","",null,null],[5,"SDL_tanf","","",null,null],[5,"SDL_iconv_open","","",null,null],[5,"SDL_iconv_close","","",null,null],[5,"SDL_iconv","","",null,null],[5,"SDL_iconv_string","","This function converts a string between encodings in one …",null,null],[5,"SDL_main","","The prototype for the application\'s main() function",null,null],[5,"SDL_SetMainReady","","This is called by the real SDL main function to let the …",null,null],[5,"SDL_ReportAssertion","","",null,null],[5,"SDL_SetAssertionHandler","","\\\\brief Set an application-defined assertion handler.",null,null],[5,"SDL_GetDefaultAssertionHandler","","\\\\brief Get the default assertion handler.",null,null],[5,"SDL_GetAssertionHandler","","\\\\brief Get the current assertion handler.",null,null],[5,"SDL_GetAssertionReport","","\\\\brief Get a list of all assertion failures.",null,null],[5,"SDL_ResetAssertionReport","","\\\\brief Reset the list of all assertion failures.",null,null],[5,"SDL_AtomicTryLock","","\\\\brief Try to lock a spin lock by setting it to a …",null,null],[5,"SDL_AtomicLock","","\\\\brief Lock a spin lock by setting it to a non-zero value.",null,null],[5,"SDL_AtomicUnlock","","\\\\brief Unlock a spin lock by setting it to 0. Always …",null,null],[5,"SDL_MemoryBarrierReleaseFunction","","Memory barriers are designed to prevent reads and writes …",null,null],[5,"SDL_MemoryBarrierAcquireFunction","","",null,null],[5,"SDL_AtomicCAS","","\\\\brief Set an atomic variable to a new value if it is …",null,null],[5,"SDL_AtomicSet","","\\\\brief Set an atomic variable to a value.",null,null],[5,"SDL_AtomicGet","","\\\\brief Get the value of an atomic variable",null,null],[5,"SDL_AtomicAdd","","\\\\brief Add to an atomic variable.",null,null],[5,"SDL_AtomicCASPtr","","\\\\brief Set a pointer to a new value if it is currently an …",null,null],[5,"SDL_AtomicSetPtr","","\\\\brief Set a pointer to a value atomically.",null,null],[5,"SDL_AtomicGetPtr","","\\\\brief Get the value of a pointer atomically.",null,null],[5,"SDL_SetError","","",null,null],[5,"SDL_GetError","","",null,null],[5,"SDL_ClearError","","",null,null],[5,"SDL_Error","","",null,null],[5,"SDL_CreateMutex","","Create a mutex, initialized unlocked.",null,null],[5,"SDL_LockMutex","","",null,null],[5,"SDL_TryLockMutex","","Try to lock the mutex",null,null],[5,"SDL_UnlockMutex","","",null,null],[5,"SDL_DestroyMutex","","Destroy a mutex.",null,null],[5,"SDL_CreateSemaphore","","Create a semaphore, initialized with value, returns NULL …",null,null],[5,"SDL_DestroySemaphore","","Destroy a semaphore.",null,null],[5,"SDL_SemWait","","This function suspends the calling thread until the …",null,null],[5,"SDL_SemTryWait","","Non-blocking variant of SDL_SemWait().",null,null],[5,"SDL_SemWaitTimeout","","Variant of SDL_SemWait() with a timeout in milliseconds.",null,null],[5,"SDL_SemPost","","Atomically increases the semaphore\'s count (not blocking).",null,null],[5,"SDL_SemValue","","Returns the current count of the semaphore.",null,null],[5,"SDL_CreateCond","","Create a condition variable.",null,null],[5,"SDL_DestroyCond","","Destroy a condition variable.",null,null],[5,"SDL_CondSignal","","Restart one of the threads that are waiting on the …",null,null],[5,"SDL_CondBroadcast","","Restart all threads that are waiting on the condition …",null,null],[5,"SDL_CondWait","","Wait on the condition variable, unlocking the provided …",null,null],[5,"SDL_CondWaitTimeout","","Waits for at most \\\\c ms milliseconds, and returns 0 if …",null,null],[5,"SDL_CreateThread","","Create a thread.",null,null],[5,"SDL_GetThreadName","","Get the thread name, as it was specified in …",null,null],[5,"SDL_ThreadID","","Get the thread identifier for the current thread.",null,null],[5,"SDL_GetThreadID","","Get the thread identifier for the specified thread.",null,null],[5,"SDL_SetThreadPriority","","Set the priority for the current thread",null,null],[5,"SDL_WaitThread","","Wait for a thread to finish. Threads that haven\'t been …",null,null],[5,"SDL_DetachThread","","A thread may be \\\"detached\\\" to signify that it should not …",null,null],[5,"SDL_TLSCreate","","\\\\brief Create an identifier that is globally visible to …",null,null],[5,"SDL_TLSGet","","\\\\brief Get the value associated with a thread local …",null,null],[5,"SDL_TLSSet","","\\\\brief Set the value associated with a thread local …",null,null],[5,"SDL_RWFromFile","","",null,null],[5,"SDL_RWFromFP","","",null,null],[5,"SDL_RWFromMem","","",null,null],[5,"SDL_RWFromConstMem","","",null,null],[5,"SDL_AllocRW","","",null,null],[5,"SDL_FreeRW","","",null,null],[5,"SDL_LoadFile_RW","","Load all the data from an SDL data stream.",null,null],[5,"SDL_ReadU8","","",null,null],[5,"SDL_ReadLE16","","",null,null],[5,"SDL_ReadBE16","","",null,null],[5,"SDL_ReadLE32","","",null,null],[5,"SDL_ReadBE32","","",null,null],[5,"SDL_ReadLE64","","",null,null],[5,"SDL_ReadBE64","","",null,null],[5,"SDL_WriteU8","","",null,null],[5,"SDL_WriteLE16","","",null,null],[5,"SDL_WriteBE16","","",null,null],[5,"SDL_WriteLE32","","",null,null],[5,"SDL_WriteBE32","","",null,null],[5,"SDL_WriteLE64","","",null,null],[5,"SDL_WriteBE64","","",null,null],[5,"SDL_GetNumAudioDrivers","","",null,null],[5,"SDL_GetAudioDriver","","",null,null],[5,"SDL_AudioInit","","",null,null],[5,"SDL_AudioQuit","","",null,null],[5,"SDL_GetCurrentAudioDriver","","This function returns the name of the current audio …",null,null],[5,"SDL_OpenAudio","","This function opens the audio device with the desired …",null,null],[5,"SDL_GetNumAudioDevices","","Get the number of available devices exposed by the …",null,null],[5,"SDL_GetAudioDeviceName","","Get the human-readable name of a specific audio device. …",null,null],[5,"SDL_OpenAudioDevice","","Open a specific audio device. Passing in a device name of …",null,null],[5,"SDL_GetAudioStatus","","",null,null],[5,"SDL_GetAudioDeviceStatus","","",null,null],[5,"SDL_PauseAudio","","",null,null],[5,"SDL_PauseAudioDevice","","",null,null],[5,"SDL_LoadWAV_RW","","This function loads a WAVE from the data source, …",null,null],[5,"SDL_FreeWAV","","This function frees data previously allocated with …",null,null],[5,"SDL_BuildAudioCVT","","This function takes a source format and rate and a …",null,null],[5,"SDL_ConvertAudio","","Once you have initialized the \\\\c cvt structure using …",null,null],[5,"SDL_MixAudio","","This takes two audio buffers of the playing audio format …",null,null],[5,"SDL_MixAudioFormat","","This works like SDL_MixAudio(), but you specify the audio …",null,null],[5,"SDL_QueueAudio","","Queue more audio on non-callback devices.",null,null],[5,"SDL_DequeueAudio","","Dequeue more audio on non-callback devices.",null,null],[5,"SDL_GetQueuedAudioSize","","Get the number of bytes of still-queued audio.",null,null],[5,"SDL_ClearQueuedAudio","","Drop any queued audio data. For playback devices, this is …",null,null],[5,"SDL_LockAudio","","",null,null],[5,"SDL_LockAudioDevice","","",null,null],[5,"SDL_UnlockAudio","","",null,null],[5,"SDL_UnlockAudioDevice","","",null,null],[5,"SDL_CloseAudio","","This function shuts down audio processing and closes the …",null,null],[5,"SDL_CloseAudioDevice","","",null,null],[5,"SDL_SetClipboardText","","\\\\brief Put UTF-8 text into the clipboard",null,null],[5,"SDL_GetClipboardText","","\\\\brief Get UTF-8 text from the clipboard, which must be …",null,null],[5,"SDL_HasClipboardText","","\\\\brief Returns a flag indicating whether the clipboard …",null,null],[5,"__ctype_get_mb_cur_max","","",null,null],[5,"atof","","",null,null],[5,"atoi","","",null,null],[5,"atol","","",null,null],[5,"atoll","","",null,null],[5,"strtod","","",null,null],[5,"strtof","","",null,null],[5,"strtold","","",null,null],[5,"strtol","","",null,null],[5,"strtoul","","",null,null],[5,"strtoq","","",null,null],[5,"strtouq","","",null,null],[5,"strtoll","","",null,null],[5,"strtoull","","",null,null],[5,"l64a","","",null,null],[5,"a64l","","",null,null],[5,"select","","",null,null],[5,"pselect","","",null,null],[5,"gnu_dev_major","","",null,null],[5,"gnu_dev_minor","","",null,null],[5,"gnu_dev_makedev","","",null,null],[5,"random","","",null,null],[5,"srandom","","",null,null],[5,"initstate","","",null,null],[5,"setstate","","",null,null],[5,"random_r","","",null,null],[5,"srandom_r","","",null,null],[5,"initstate_r","","",null,null],[5,"setstate_r","","",null,null],[5,"rand","","",null,null],[5,"srand","","",null,null],[5,"rand_r","","",null,null],[5,"drand48","","",null,null],[5,"erand48","","",null,null],[5,"lrand48","","",null,null],[5,"nrand48","","",null,null],[5,"mrand48","","",null,null],[5,"jrand48","","",null,null],[5,"srand48","","",null,null],[5,"seed48","","",null,null],[5,"lcong48","","",null,null],[5,"drand48_r","","",null,null],[5,"erand48_r","","",null,null],[5,"lrand48_r","","",null,null],[5,"nrand48_r","","",null,null],[5,"mrand48_r","","",null,null],[5,"jrand48_r","","",null,null],[5,"srand48_r","","",null,null],[5,"seed48_r","","",null,null],[5,"lcong48_r","","",null,null],[5,"malloc","","",null,null],[5,"calloc","","",null,null],[5,"realloc","","",null,null],[5,"free","","",null,null],[5,"alloca","","",null,null],[5,"valloc","","",null,null],[5,"posix_memalign","","",null,null],[5,"aligned_alloc","","",null,null],[5,"abort","","",null,null],[5,"atexit","","",null,null],[5,"at_quick_exit","","",null,null],[5,"on_exit","","",null,null],[5,"exit","","",null,null],[5,"quick_exit","","",null,null],[5,"_Exit","","",null,null],[5,"getenv","","",null,null],[5,"putenv","","",null,null],[5,"setenv","","",null,null],[5,"unsetenv","","",null,null],[5,"clearenv","","",null,null],[5,"mktemp","","",null,null],[5,"mkstemp","","",null,null],[5,"mkstemps","","",null,null],[5,"mkdtemp","","",null,null],[5,"system","","",null,null],[5,"realpath","","",null,null],[5,"bsearch","","",null,null],[5,"qsort","","",null,null],[5,"abs","","",null,null],[5,"labs","","",null,null],[5,"llabs","","",null,null],[5,"div","","",null,null],[5,"ldiv","","",null,null],[5,"lldiv","","",null,null],[5,"ecvt","","",null,null],[5,"fcvt","","",null,null],[5,"gcvt","","",null,null],[5,"qecvt","","",null,null],[5,"qfcvt","","",null,null],[5,"qgcvt","","",null,null],[5,"ecvt_r","","",null,null],[5,"fcvt_r","","",null,null],[5,"qecvt_r","","",null,null],[5,"qfcvt_r","","",null,null],[5,"mblen","","",null,null],[5,"mbtowc","","",null,null],[5,"wctomb","","",null,null],[5,"mbstowcs","","",null,null],[5,"wcstombs","","",null,null],[5,"rpmatch","","",null,null],[5,"getsubopt","","",null,null],[5,"getloadavg","","",null,null],[5,"_mm_sfence","","",null,null],[5,"_mm_getcsr","","",null,null],[5,"_mm_setcsr","","",null,null],[5,"_mm_clflush","","",null,null],[5,"_mm_lfence","","",null,null],[5,"_mm_mfence","","",null,null],[5,"_mm_pause","","",null,null],[5,"SDL_GetCPUCount","","This function returns the number of CPU cores available.",null,null],[5,"SDL_GetCPUCacheLineSize","","This function returns the L1 cache line size of the CPU",null,null],[5,"SDL_HasRDTSC","","This function returns true if the CPU has the RDTSC …",null,null],[5,"SDL_HasAltiVec","","This function returns true if the CPU has AltiVec …",null,null],[5,"SDL_HasMMX","","This function returns true if the CPU has MMX features.",null,null],[5,"SDL_Has3DNow","","This function returns true if the CPU has 3DNow! features.",null,null],[5,"SDL_HasSSE","","This function returns true if the CPU has SSE features.",null,null],[5,"SDL_HasSSE2","","This function returns true if the CPU has SSE2 features.",null,null],[5,"SDL_HasSSE3","","This function returns true if the CPU has SSE3 features.",null,null],[5,"SDL_HasSSE41","","This function returns true if the CPU has SSE4.1 features.",null,null],[5,"SDL_HasSSE42","","This function returns true if the CPU has SSE4.2 features.",null,null],[5,"SDL_HasAVX","","This function returns true if the CPU has AVX features.",null,null],[5,"SDL_HasAVX2","","This function returns true if the CPU has AVX2 features.",null,null],[5,"SDL_HasNEON","","This function returns true if the CPU has NEON (ARM SIMD) …",null,null],[5,"SDL_GetSystemRAM","","This function returns the amount of RAM configured in the …",null,null],[5,"SDL_GetPixelFormatName","","\\\\brief Get the human readable name of a pixel format",null,null],[5,"SDL_PixelFormatEnumToMasks","","\\\\brief Convert one of the enumerated pixel formats to a …",null,null],[5,"SDL_MasksToPixelFormatEnum","","\\\\brief Convert a bpp and RGBA masks to an enumerated …",null,null],[5,"SDL_AllocFormat","","\\\\brief Create an SDL_PixelFormat structure from a pixel …",null,null],[5,"SDL_FreeFormat","","\\\\brief Free an SDL_PixelFormat structure.",null,null],[5,"SDL_AllocPalette","","\\\\brief Create a palette structure with the specified …",null,null],[5,"SDL_SetPixelFormatPalette","","\\\\brief Set the palette for a pixel format structure.",null,null],[5,"SDL_SetPaletteColors","","\\\\brief Set a range of colors in a palette.",null,null],[5,"SDL_FreePalette","","\\\\brief Free a palette created with SDL_AllocPalette().",null,null],[5,"SDL_MapRGB","","\\\\brief Maps an RGB triple to an opaque pixel value for a …",null,null],[5,"SDL_MapRGBA","","\\\\brief Maps an RGBA quadruple to a pixel value for a …",null,null],[5,"SDL_GetRGB","","\\\\brief Get the RGB components from a pixel of the …",null,null],[5,"SDL_GetRGBA","","\\\\brief Get the RGBA components from a pixel of the …",null,null],[5,"SDL_CalculateGammaRamp","","\\\\brief Calculate a 256 entry gamma ramp for a gamma value.",null,null],[5,"SDL_HasIntersection","","\\\\brief Determine whether two rectangles intersect.",null,null],[5,"SDL_IntersectRect","","\\\\brief Calculate the intersection of two rectangles.",null,null],[5,"SDL_UnionRect","","\\\\brief Calculate the union of two rectangles.",null,null],[5,"SDL_EnclosePoints","","\\\\brief Calculate a minimal rectangle enclosing a set of …",null,null],[5,"SDL_IntersectRectAndLine","","\\\\brief Calculate the intersection of a rectangle and line …",null,null],[5,"SDL_ComposeCustomBlendMode","","\\\\brief Create a custom blend mode, which may or may not …",null,null],[5,"SDL_CreateRGBSurface","","Allocate and free an RGB surface.",null,null],[5,"SDL_CreateRGBSurfaceWithFormat","","",null,null],[5,"SDL_CreateRGBSurfaceFrom","","",null,null],[5,"SDL_CreateRGBSurfaceWithFormatFrom","","",null,null],[5,"SDL_FreeSurface","","",null,null],[5,"SDL_SetSurfacePalette","","\\\\brief Set the palette used by a surface.",null,null],[5,"SDL_LockSurface","","\\\\brief Sets up a surface for directly accessing the …",null,null],[5,"SDL_UnlockSurface","","\\\\sa SDL_LockSurface()",null,null],[5,"SDL_LoadBMP_RW","","Load a surface from a seekable SDL data stream (memory or …",null,null],[5,"SDL_SaveBMP_RW","","Save a surface to a seekable SDL data stream (memory or …",null,null],[5,"SDL_SetSurfaceRLE","","\\\\brief Sets the RLE acceleration hint for a surface.",null,null],[5,"SDL_SetColorKey","","\\\\brief Sets the color key (transparent pixel) in a …",null,null],[5,"SDL_GetColorKey","","\\\\brief Gets the color key (transparent pixel) in a …",null,null],[5,"SDL_SetSurfaceColorMod","","\\\\brief Set an additional color value used in blit …",null,null],[5,"SDL_GetSurfaceColorMod","","\\\\brief Get the additional color value used in blit …",null,null],[5,"SDL_SetSurfaceAlphaMod","","\\\\brief Set an additional alpha value used in blit …",null,null],[5,"SDL_GetSurfaceAlphaMod","","\\\\brief Get the additional alpha value used in blit …",null,null],[5,"SDL_SetSurfaceBlendMode","","\\\\brief Set the blend mode used for blit operations.",null,null],[5,"SDL_GetSurfaceBlendMode","","\\\\brief Get the blend mode used for blit operations.",null,null],[5,"SDL_SetClipRect","","Sets the clipping rectangle for the destination surface …",null,null],[5,"SDL_GetClipRect","","Gets the clipping rectangle for the destination surface …",null,null],[5,"SDL_DuplicateSurface","","",null,null],[5,"SDL_ConvertSurface","","Creates a new surface of the specified format, and then …",null,null],[5,"SDL_ConvertSurfaceFormat","","",null,null],[5,"SDL_ConvertPixels","","\\\\brief Copy a block of pixels of one format to another …",null,null],[5,"SDL_FillRect","","Performs a fast fill of the given rectangle with \\\\c color.",null,null],[5,"SDL_FillRects","","",null,null],[5,"SDL_UpperBlit","","This is the public blit function, SDL_BlitSurface(), and …",null,null],[5,"SDL_LowerBlit","","This is a semi-private blit function and it performs …",null,null],[5,"SDL_SoftStretch","","\\\\brief Perform a fast, low quality, stretch blit between …",null,null],[5,"SDL_UpperBlitScaled","","This is the public scaled blit function, …",null,null],[5,"SDL_LowerBlitScaled","","This is a semi-private blit function and it performs …",null,null],[5,"SDL_GetNumVideoDrivers","","\\\\brief Get the number of video drivers compiled into SDL",null,null],[5,"SDL_GetVideoDriver","","\\\\brief Get the name of a built in video driver.",null,null],[5,"SDL_VideoInit","","\\\\brief Initialize the video subsystem, optionally …",null,null],[5,"SDL_VideoQuit","","\\\\brief Shuts down the video subsystem.",null,null],[5,"SDL_GetCurrentVideoDriver","","\\\\brief Returns the name of the currently initialized …",null,null],[5,"SDL_GetNumVideoDisplays","","\\\\brief Returns the number of available video displays.",null,null],[5,"SDL_GetDisplayName","","\\\\brief Get the name of a display in UTF-8 encoding",null,null],[5,"SDL_GetDisplayBounds","","\\\\brief Get the desktop area represented by a display, …",null,null],[5,"SDL_GetDisplayDPI","","\\\\brief Get the dots/pixels-per-inch for a display",null,null],[5,"SDL_GetDisplayUsableBounds","","\\\\brief Get the usable desktop area represented by a …",null,null],[5,"SDL_GetNumDisplayModes","","\\\\brief Returns the number of available display modes.",null,null],[5,"SDL_GetDisplayMode","","\\\\brief Fill in information about a specific display mode.",null,null],[5,"SDL_GetDesktopDisplayMode","","\\\\brief Fill in information about the desktop display mode.",null,null],[5,"SDL_GetCurrentDisplayMode","","\\\\brief Fill in information about the current display mode.",null,null],[5,"SDL_GetClosestDisplayMode","","\\\\brief Get the closest match to the requested display …",null,null],[5,"SDL_GetWindowDisplayIndex","","\\\\brief Get the display index associated with a window.",null,null],[5,"SDL_SetWindowDisplayMode","","\\\\brief Set the display mode used when a fullscreen window …",null,null],[5,"SDL_GetWindowDisplayMode","","\\\\brief Fill in information about the display mode used …",null,null],[5,"SDL_GetWindowPixelFormat","","\\\\brief Get the pixel format associated with the window.",null,null],[5,"SDL_CreateWindow","","\\\\brief Create a window with the specified position, …",null,null],[5,"SDL_CreateWindowFrom","","\\\\brief Create an SDL window from an existing native …",null,null],[5,"SDL_GetWindowID","","\\\\brief Get the numeric ID of a window, for logging …",null,null],[5,"SDL_GetWindowFromID","","\\\\brief Get a window from a stored ID, or NULL if it …",null,null],[5,"SDL_GetWindowFlags","","\\\\brief Get the window flags.",null,null],[5,"SDL_SetWindowTitle","","\\\\brief Set the title of a window, in UTF-8 format.",null,null],[5,"SDL_GetWindowTitle","","\\\\brief Get the title of a window, in UTF-8 format.",null,null],[5,"SDL_SetWindowIcon","","\\\\brief Set the icon for a window.",null,null],[5,"SDL_SetWindowData","","\\\\brief Associate an arbitrary named pointer with a window.",null,null],[5,"SDL_GetWindowData","","\\\\brief Retrieve the data pointer associated with a window.",null,null],[5,"SDL_SetWindowPosition","","\\\\brief Set the position of a window.",null,null],[5,"SDL_GetWindowPosition","","\\\\brief Get the position of a window.",null,null],[5,"SDL_SetWindowSize","","\\\\brief Set the size of a window\'s client area.",null,null],[5,"SDL_GetWindowSize","","\\\\brief Get the size of a window\'s client area.",null,null],[5,"SDL_GetWindowBordersSize","","\\\\brief Get the size of a window\'s borders (decorations) …",null,null],[5,"SDL_SetWindowMinimumSize","","\\\\brief Set the minimum size of a window\'s client area.",null,null],[5,"SDL_GetWindowMinimumSize","","\\\\brief Get the minimum size of a window\'s client area.",null,null],[5,"SDL_SetWindowMaximumSize","","\\\\brief Set the maximum size of a window\'s client area.",null,null],[5,"SDL_GetWindowMaximumSize","","\\\\brief Get the maximum size of a window\'s client area.",null,null],[5,"SDL_SetWindowBordered","","\\\\brief Set the border state of a window.",null,null],[5,"SDL_SetWindowResizable","","\\\\brief Set the user-resizable state of a window.",null,null],[5,"SDL_ShowWindow","","\\\\brief Show a window.",null,null],[5,"SDL_HideWindow","","\\\\brief Hide a window.",null,null],[5,"SDL_RaiseWindow","","\\\\brief Raise a window above other windows and set the …",null,null],[5,"SDL_MaximizeWindow","","\\\\brief Make a window as large as possible.",null,null],[5,"SDL_MinimizeWindow","","\\\\brief Minimize a window to an iconic representation.",null,null],[5,"SDL_RestoreWindow","","\\\\brief Restore the size and position of a minimized or …",null,null],[5,"SDL_SetWindowFullscreen","","\\\\brief Set a window\'s fullscreen state.",null,null],[5,"SDL_GetWindowSurface","","\\\\brief Get the SDL surface associated with the window.",null,null],[5,"SDL_UpdateWindowSurface","","\\\\brief Copy the window surface to the screen.",null,null],[5,"SDL_UpdateWindowSurfaceRects","","\\\\brief Copy a number of rectangles on the window surface …",null,null],[5,"SDL_SetWindowGrab","","\\\\brief Set a window\'s input grab mode.",null,null],[5,"SDL_GetWindowGrab","","\\\\brief Get a window\'s input grab mode.",null,null],[5,"SDL_GetGrabbedWindow","","\\\\brief Get the window that currently has an input grab …",null,null],[5,"SDL_SetWindowBrightness","","\\\\brief Set the brightness (gamma correction) for a window.",null,null],[5,"SDL_GetWindowBrightness","","\\\\brief Get the brightness (gamma correction) for a window.",null,null],[5,"SDL_SetWindowOpacity","","\\\\brief Set the opacity for a window",null,null],[5,"SDL_GetWindowOpacity","","\\\\brief Get the opacity of a window.",null,null],[5,"SDL_SetWindowModalFor","","\\\\brief Sets the window as a modal for another window …",null,null],[5,"SDL_SetWindowInputFocus","","\\\\brief Explicitly sets input focus to the window.",null,null],[5,"SDL_SetWindowGammaRamp","","\\\\brief Set the gamma ramp for a window.",null,null],[5,"SDL_GetWindowGammaRamp","","\\\\brief Get the gamma ramp for a window.",null,null],[5,"SDL_SetWindowHitTest","","\\\\brief Provide a callback that decides if a window region …",null,null],[5,"SDL_DestroyWindow","","\\\\brief Destroy a window.",null,null],[5,"SDL_IsScreenSaverEnabled","","\\\\brief Returns whether the screensaver is currently …",null,null],[5,"SDL_EnableScreenSaver","","\\\\brief Allow the screen to be blanked by a screensaver",null,null],[5,"SDL_DisableScreenSaver","","\\\\brief Prevent the screen from being blanked by a …",null,null],[5,"SDL_GL_LoadLibrary","","\\\\brief Dynamically load an OpenGL library.",null,null],[5,"SDL_GL_GetProcAddress","","\\\\brief Get the address of an OpenGL function.",null,null],[5,"SDL_GL_UnloadLibrary","","\\\\brief Unload the OpenGL library previously loaded by …",null,null],[5,"SDL_GL_ExtensionSupported","","\\\\brief Return true if an OpenGL extension is supported …",null,null],[5,"SDL_GL_ResetAttributes","","\\\\brief Reset all previously set OpenGL context attributes …",null,null],[5,"SDL_GL_SetAttribute","","\\\\brief Set an OpenGL window attribute before window …",null,null],[5,"SDL_GL_GetAttribute","","\\\\brief Get the actual value for an attribute from the …",null,null],[5,"SDL_GL_CreateContext","","\\\\brief Create an OpenGL context for use with an OpenGL …",null,null],[5,"SDL_GL_MakeCurrent","","\\\\brief Set up an OpenGL context for rendering into an …",null,null],[5,"SDL_GL_GetCurrentWindow","","\\\\brief Get the currently active OpenGL window.",null,null],[5,"SDL_GL_GetCurrentContext","","\\\\brief Get the currently active OpenGL context.",null,null],[5,"SDL_GL_GetDrawableSize","","\\\\brief Get the size of a window\'s underlying drawable in …",null,null],[5,"SDL_GL_SetSwapInterval","","\\\\brief Set the swap interval for the current OpenGL …",null,null],[5,"SDL_GL_GetSwapInterval","","\\\\brief Get the swap interval for the current OpenGL …",null,null],[5,"SDL_GL_SwapWindow","","\\\\brief Swap the OpenGL buffers for a window, if …",null,null],[5,"SDL_GL_DeleteContext","","\\\\brief Delete an OpenGL context.",null,null],[5,"SDL_GetKeyboardFocus","","\\\\brief Get the window which currently has keyboard focus.",null,null],[5,"SDL_GetKeyboardState","","\\\\brief Get a snapshot of the current state of the …",null,null],[5,"SDL_GetModState","","\\\\brief Get the current key modifier state for the …",null,null],[5,"SDL_SetModState","","\\\\brief Set the current key modifier state for the …",null,null],[5,"SDL_GetKeyFromScancode","","\\\\brief Get the key code corresponding to the given …",null,null],[5,"SDL_GetScancodeFromKey","","\\\\brief Get the scancode corresponding to the given key …",null,null],[5,"SDL_GetScancodeName","","\\\\brief Get a human-readable name for a scancode.",null,null],[5,"SDL_GetScancodeFromName","","\\\\brief Get a scancode from a human-readable name",null,null],[5,"SDL_GetKeyName","","\\\\brief Get a human-readable name for a key.",null,null],[5,"SDL_GetKeyFromName","","\\\\brief Get a key code from a human-readable name",null,null],[5,"SDL_StartTextInput","","\\\\brief Start accepting Unicode text input events. This …",null,null],[5,"SDL_IsTextInputActive","","\\\\brief Return whether or not Unicode text input events …",null,null],[5,"SDL_StopTextInput","","\\\\brief Stop receiving any text input events. This …",null,null],[5,"SDL_SetTextInputRect","","\\\\brief Set the rectangle used to type Unicode text inputs.…",null,null],[5,"SDL_HasScreenKeyboardSupport","","\\\\brief Returns whether the platform has some screen …",null,null],[5,"SDL_IsScreenKeyboardShown","","\\\\brief Returns whether the screen keyboard is shown for …",null,null],[5,"SDL_GetMouseFocus","","\\\\brief Get the window which currently has mouse focus.",null,null],[5,"SDL_GetMouseState","","\\\\brief Retrieve the current state of the mouse.",null,null],[5,"SDL_GetGlobalMouseState","","\\\\brief Get the current state of the mouse, in relation to …",null,null],[5,"SDL_GetRelativeMouseState","","\\\\brief Retrieve the relative state of the mouse.",null,null],[5,"SDL_WarpMouseInWindow","","\\\\brief Moves the mouse to the given position within the …",null,null],[5,"SDL_WarpMouseGlobal","","\\\\brief Moves the mouse to the given position in global …",null,null],[5,"SDL_SetRelativeMouseMode","","\\\\brief Set relative mouse mode.",null,null],[5,"SDL_CaptureMouse","","\\\\brief Capture the mouse, to track input outside an SDL …",null,null],[5,"SDL_GetRelativeMouseMode","","\\\\brief Query whether relative mouse mode is enabled.",null,null],[5,"SDL_CreateCursor","","\\\\brief Create a cursor, using the specified bitmap data …",null,null],[5,"SDL_CreateColorCursor","","\\\\brief Create a color cursor.",null,null],[5,"SDL_CreateSystemCursor","","\\\\brief Create a system cursor.",null,null],[5,"SDL_SetCursor","","\\\\brief Set the active cursor.",null,null],[5,"SDL_GetCursor","","\\\\brief Return the active cursor.",null,null],[5,"SDL_GetDefaultCursor","","\\\\brief Return the default cursor.",null,null],[5,"SDL_FreeCursor","","\\\\brief Frees a cursor created with SDL_CreateCursor() or …",null,null],[5,"SDL_ShowCursor","","\\\\brief Toggle whether or not the cursor is shown.",null,null],[5,"SDL_NumJoysticks","","Count the number of joysticks attached to the system …",null,null],[5,"SDL_JoystickNameForIndex","","Get the implementation dependent name of a joystick. This …",null,null],[5,"SDL_JoystickGetDeviceGUID","","Return the GUID for the joystick at this index This can …",null,null],[5,"SDL_JoystickGetDeviceVendor","","Get the USB vendor ID of a joystick, if available. This …",null,null],[5,"SDL_JoystickGetDeviceProduct","","Get the USB product ID of a joystick, if available. This …",null,null],[5,"SDL_JoystickGetDeviceProductVersion","","Get the product version of a joystick, if available. This …",null,null],[5,"SDL_JoystickGetDeviceType","","Get the type of a joystick, if available. This can be …",null,null],[5,"SDL_JoystickGetDeviceInstanceID","","Get the instance ID of a joystick. This can be called …",null,null],[5,"SDL_JoystickOpen","","Open a joystick for use. The index passed as an argument …",null,null],[5,"SDL_JoystickFromInstanceID","","Return the SDL_Joystick associated with an instance id.",null,null],[5,"SDL_JoystickName","","Return the name for this currently opened joystick. If no …",null,null],[5,"SDL_JoystickGetGUID","","Return the GUID for this opened joystick",null,null],[5,"SDL_JoystickGetVendor","","Get the USB vendor ID of an opened joystick, if available.…",null,null],[5,"SDL_JoystickGetProduct","","Get the USB product ID of an opened joystick, if …",null,null],[5,"SDL_JoystickGetProductVersion","","Get the product version of an opened joystick, if …",null,null],[5,"SDL_JoystickGetType","","Get the type of an opened joystick.",null,null],[5,"SDL_JoystickGetGUIDString","","Return a string representation for this guid. pszGUID …",null,null],[5,"SDL_JoystickGetGUIDFromString","","Convert a string into a joystick guid",null,null],[5,"SDL_JoystickGetAttached","","Returns SDL_TRUE if the joystick has been opened and …",null,null],[5,"SDL_JoystickInstanceID","","Get the instance ID of an opened joystick or -1 if the …",null,null],[5,"SDL_JoystickNumAxes","","Get the number of general axis controls on a joystick.",null,null],[5,"SDL_JoystickNumBalls","","Get the number of trackballs on a joystick.",null,null],[5,"SDL_JoystickNumHats","","Get the number of POV hats on a joystick.",null,null],[5,"SDL_JoystickNumButtons","","Get the number of buttons on a joystick.",null,null],[5,"SDL_JoystickUpdate","","Update the current state of the open joysticks.",null,null],[5,"SDL_JoystickEventState","","Enable/disable joystick event polling.",null,null],[5,"SDL_JoystickGetAxis","","Get the current state of an axis control on a joystick.",null,null],[5,"SDL_JoystickGetAxisInitialState","","Get the initial state of an axis control on a joystick.",null,null],[5,"SDL_JoystickGetHat","","Get the current state of a POV hat on a joystick.",null,null],[5,"SDL_JoystickGetBall","","Get the ball axis change since the last poll.",null,null],[5,"SDL_JoystickGetButton","","Get the current state of a button on a joystick.",null,null],[5,"SDL_JoystickClose","","Close a joystick previously opened with …",null,null],[5,"SDL_JoystickCurrentPowerLevel","","Return the battery level of this joystick",null,null],[5,"SDL_GameControllerAddMappingsFromRW","","Load a set of mappings from a seekable SDL data stream …",null,null],[5,"SDL_GameControllerAddMapping","","Add or update an existing mapping configuration",null,null],[5,"SDL_GameControllerNumMappings","","Get the number of mappings installed",null,null],[5,"SDL_GameControllerMappingForIndex","","Get the mapping at a particular index.",null,null],[5,"SDL_GameControllerMappingForGUID","","Get a mapping string for a GUID",null,null],[5,"SDL_GameControllerMapping","","Get a mapping string for an open GameController",null,null],[5,"SDL_IsGameController","","Is the joystick on this index supported by the game …",null,null],[5,"SDL_GameControllerNameForIndex","","Get the implementation dependent name of a game …",null,null],[5,"SDL_GameControllerOpen","","Open a game controller for use. The index passed as an …",null,null],[5,"SDL_GameControllerFromInstanceID","","Return the SDL_GameController associated with an instance …",null,null],[5,"SDL_GameControllerName","","Return the name for this currently opened controller",null,null],[5,"SDL_GameControllerGetVendor","","Get the USB vendor ID of an opened controller, if …",null,null],[5,"SDL_GameControllerGetProduct","","Get the USB product ID of an opened controller, if …",null,null],[5,"SDL_GameControllerGetProductVersion","","Get the product version of an opened controller, if …",null,null],[5,"SDL_GameControllerGetAttached","","Returns SDL_TRUE if the controller has been opened and …",null,null],[5,"SDL_GameControllerGetJoystick","","Get the underlying joystick object used by a controller",null,null],[5,"SDL_GameControllerEventState","","Enable/disable controller event polling.",null,null],[5,"SDL_GameControllerUpdate","","Update the current state of the open game controllers.",null,null],[5,"SDL_GameControllerGetAxisFromString","","turn this string into a axis mapping",null,null],[5,"SDL_GameControllerGetStringForAxis","","turn this axis enum into a string mapping",null,null],[5,"SDL_GameControllerGetBindForAxis","","Get the SDL joystick layer binding for this controller …",null,null],[5,"SDL_GameControllerGetAxis","","Get the current state of an axis control on a game …",null,null],[5,"SDL_GameControllerGetButtonFromString","","turn this string into a button mapping",null,null],[5,"SDL_GameControllerGetStringForButton","","turn this button enum into a string mapping",null,null],[5,"SDL_GameControllerGetBindForButton","","Get the SDL joystick layer binding for this controller …",null,null],[5,"SDL_GameControllerGetButton","","Get the current state of a button on a game controller.",null,null],[5,"SDL_GameControllerClose","","Close a controller previously opened with …",null,null],[5,"SDL_GetNumTouchDevices","","\\\\brief Get the number of registered touch devices.",null,null],[5,"SDL_GetTouchDevice","","\\\\brief Get the touch ID with the given index, or 0 if the …",null,null],[5,"SDL_GetNumTouchFingers","","\\\\brief Get the number of active fingers for a given touch …",null,null],[5,"SDL_GetTouchFinger","","\\\\brief Get the finger object of the given touch, with the …",null,null],[5,"SDL_RecordGesture","","\\\\brief Begin Recording a gesture on the specified touch, …",null,null],[5,"SDL_SaveAllDollarTemplates","","\\\\brief Save all currently loaded Dollar Gesture templates",null,null],[5,"SDL_SaveDollarTemplate","","\\\\brief Save a currently loaded Dollar Gesture template",null,null],[5,"SDL_LoadDollarTemplates","","\\\\brief Load Dollar Gesture templates from a file",null,null],[5,"SDL_PumpEvents","","Pumps the event loop, gathering events from the input …",null,null],[5,"SDL_PeepEvents","","Checks the event queue for messages and optionally …",null,null],[5,"SDL_HasEvent","","Checks to see if certain event types are in the event …",null,null],[5,"SDL_HasEvents","","",null,null],[5,"SDL_FlushEvent","","This function clears events from the event queue This …",null,null],[5,"SDL_FlushEvents","","",null,null],[5,"SDL_PollEvent","","\\\\brief Polls for currently pending events.",null,null],[5,"SDL_WaitEvent","","\\\\brief Waits indefinitely for the next available event.",null,null],[5,"SDL_WaitEventTimeout","","\\\\brief Waits until the specified timeout (in …",null,null],[5,"SDL_PushEvent","","\\\\brief Add an event to the event queue.",null,null],[5,"SDL_SetEventFilter","","Sets up a filter to process all events before they change …",null,null],[5,"SDL_GetEventFilter","","Return the current event filter - can be used to \\\"chain\\\" …",null,null],[5,"SDL_AddEventWatch","","Add a function which is called when an event is added to …",null,null],[5,"SDL_DelEventWatch","","Remove an event watch function added with …",null,null],[5,"SDL_FilterEvents","","Run the filter function on the current event queue, …",null,null],[5,"SDL_EventState","","This function allows you to set the state of processing …",null,null],[5,"SDL_RegisterEvents","","This function allocates a set of user-defined events, and …",null,null],[5,"SDL_GetBasePath","","\\\\brief Get the path where the application resides.",null,null],[5,"SDL_GetPrefPath","","\\\\brief Get the user-and-app-specific path where files can …",null,null],[5,"SDL_NumHaptics","","\\\\brief Count the number of haptic devices attached to the …",null,null],[5,"SDL_HapticName","","\\\\brief Get the implementation dependent name of a haptic …",null,null],[5,"SDL_HapticOpen","","\\\\brief Opens a haptic device for use.",null,null],[5,"SDL_HapticOpened","","\\\\brief Checks if the haptic device at index has been …",null,null],[5,"SDL_HapticIndex","","\\\\brief Gets the index of a haptic device.",null,null],[5,"SDL_MouseIsHaptic","","\\\\brief Gets whether or not the current mouse has haptic …",null,null],[5,"SDL_HapticOpenFromMouse","","\\\\brief Tries to open a haptic device from the current …",null,null],[5,"SDL_JoystickIsHaptic","","\\\\brief Checks to see if a joystick has haptic features.",null,null],[5,"SDL_HapticOpenFromJoystick","","\\\\brief Opens a haptic device for use from a joystick …",null,null],[5,"SDL_HapticClose","","\\\\brief Closes a haptic device previously opened with …",null,null],[5,"SDL_HapticNumEffects","","\\\\brief Returns the number of effects a haptic device can …",null,null],[5,"SDL_HapticNumEffectsPlaying","","\\\\brief Returns the number of effects a haptic device can …",null,null],[5,"SDL_HapticQuery","","\\\\brief Gets the haptic device\'s supported features in …",null,null],[5,"SDL_HapticNumAxes","","\\\\brief Gets the number of haptic axes the device has.",null,null],[5,"SDL_HapticEffectSupported","","\\\\brief Checks to see if effect is supported by haptic.",null,null],[5,"SDL_HapticNewEffect","","\\\\brief Creates a new haptic effect on the device.",null,null],[5,"SDL_HapticUpdateEffect","","\\\\brief Updates the properties of an effect.",null,null],[5,"SDL_HapticRunEffect","","\\\\brief Runs the haptic effect on its associated haptic …",null,null],[5,"SDL_HapticStopEffect","","\\\\brief Stops the haptic effect on its associated haptic …",null,null],[5,"SDL_HapticDestroyEffect","","\\\\brief Destroys a haptic effect on the device.",null,null],[5,"SDL_HapticGetEffectStatus","","\\\\brief Gets the status of the current effect on the …",null,null],[5,"SDL_HapticSetGain","","\\\\brief Sets the global gain of the device.",null,null],[5,"SDL_HapticSetAutocenter","","\\\\brief Sets the global autocenter of the device.",null,null],[5,"SDL_HapticPause","","\\\\brief Pauses a haptic device.",null,null],[5,"SDL_HapticUnpause","","\\\\brief Unpauses a haptic device.",null,null],[5,"SDL_HapticStopAll","","\\\\brief Stops all the currently playing effects on a …",null,null],[5,"SDL_HapticRumbleSupported","","\\\\brief Checks to see if rumble is supported on a haptic …",null,null],[5,"SDL_HapticRumbleInit","","\\\\brief Initializes the haptic device for simple rumble …",null,null],[5,"SDL_HapticRumblePlay","","\\\\brief Runs simple rumble on a haptic device",null,null],[5,"SDL_HapticRumbleStop","","\\\\brief Stops the simple rumble on a haptic device.",null,null],[5,"SDL_SetHintWithPriority","","\\\\brief Set a hint with a specific priority",null,null],[5,"SDL_SetHint","","\\\\brief Set a hint with normal priority",null,null],[5,"SDL_GetHint","","\\\\brief Get a hint",null,null],[5,"SDL_GetHintBoolean","","\\\\brief Get a hint",null,null],[5,"SDL_AddHintCallback","","\\\\brief Add a function to watch a particular hint",null,null],[5,"SDL_DelHintCallback","","\\\\brief Remove a function watching a particular hint",null,null],[5,"SDL_ClearHints","","\\\\brief  Clear all hints",null,null],[5,"SDL_LoadObject","","This function dynamically loads a shared object and …",null,null],[5,"SDL_LoadFunction","","Given an object handle, this function looks up the …",null,null],[5,"SDL_UnloadObject","","Unload a shared object from memory.",null,null],[5,"SDL_LogSetAllPriority","","\\\\brief Set the priority of all log categories",null,null],[5,"SDL_LogSetPriority","","\\\\brief Set the priority of a particular log category",null,null],[5,"SDL_LogGetPriority","","\\\\brief Get the priority of a particular log category",null,null],[5,"SDL_LogResetPriorities","","\\\\brief Reset all priorities to default.",null,null],[5,"SDL_Log","","\\\\brief Log a message with SDL_LOG_CATEGORY_APPLICATION …",null,null],[5,"SDL_LogVerbose","","\\\\brief Log a message with SDL_LOG_PRIORITY_VERBOSE",null,null],[5,"SDL_LogDebug","","\\\\brief Log a message with SDL_LOG_PRIORITY_DEBUG",null,null],[5,"SDL_LogInfo","","\\\\brief Log a message with SDL_LOG_PRIORITY_INFO",null,null],[5,"SDL_LogWarn","","\\\\brief Log a message with SDL_LOG_PRIORITY_WARN",null,null],[5,"SDL_LogError","","\\\\brief Log a message with SDL_LOG_PRIORITY_ERROR",null,null],[5,"SDL_LogCritical","","\\\\brief Log a message with SDL_LOG_PRIORITY_CRITICAL",null,null],[5,"SDL_LogMessage","","\\\\brief Log a message with the specified category and …",null,null],[5,"SDL_LogMessageV","","\\\\brief Log a message with the specified category and …",null,null],[5,"SDL_LogGetOutputFunction","","\\\\brief Get the current log output function.",null,null],[5,"SDL_LogSetOutputFunction","","\\\\brief This function allows you to replace the default …",null,null],[5,"SDL_ShowMessageBox","","\\\\brief Create a modal message box.",null,null],[5,"SDL_ShowSimpleMessageBox","","\\\\brief Create a simple modal message box",null,null],[5,"SDL_GetPowerInfo","","\\\\brief Get the current power supply details.",null,null],[5,"SDL_GetNumRenderDrivers","","\\\\brief Get the number of 2D rendering drivers available …",null,null],[5,"SDL_GetRenderDriverInfo","","\\\\brief Get information about a specific 2D rendering …",null,null],[5,"SDL_CreateWindowAndRenderer","","\\\\brief Create a window and default renderer",null,null],[5,"SDL_CreateRenderer","","\\\\brief Create a 2D rendering context for a window.",null,null],[5,"SDL_CreateSoftwareRenderer","","\\\\brief Create a 2D software rendering context for a …",null,null],[5,"SDL_GetRenderer","","\\\\brief Get the renderer associated with a window.",null,null],[5,"SDL_GetRendererInfo","","\\\\brief Get information about a rendering context.",null,null],[5,"SDL_GetRendererOutputSize","","\\\\brief Get the output size in pixels of a rendering …",null,null],[5,"SDL_CreateTexture","","\\\\brief Create a texture for a rendering context.",null,null],[5,"SDL_CreateTextureFromSurface","","\\\\brief Create a texture from an existing surface.",null,null],[5,"SDL_QueryTexture","","\\\\brief Query the attributes of a texture",null,null],[5,"SDL_SetTextureColorMod","","\\\\brief Set an additional color value used in render copy …",null,null],[5,"SDL_GetTextureColorMod","","\\\\brief Get the additional color value used in render copy …",null,null],[5,"SDL_SetTextureAlphaMod","","\\\\brief Set an additional alpha value used in render copy …",null,null],[5,"SDL_GetTextureAlphaMod","","\\\\brief Get the additional alpha value used in render copy …",null,null],[5,"SDL_SetTextureBlendMode","","\\\\brief Set the blend mode used for texture copy …",null,null],[5,"SDL_GetTextureBlendMode","","\\\\brief Get the blend mode used for texture copy …",null,null],[5,"SDL_UpdateTexture","","\\\\brief Update the given texture rectangle with new pixel …",null,null],[5,"SDL_UpdateYUVTexture","","\\\\brief Update a rectangle within a planar YV12 or IYUV …",null,null],[5,"SDL_LockTexture","","\\\\brief Lock a portion of the texture for write-only pixel …",null,null],[5,"SDL_UnlockTexture","","\\\\brief Unlock a texture, uploading the changes to video …",null,null],[5,"SDL_RenderTargetSupported","","\\\\brief Determines whether a window supports the use of …",null,null],[5,"SDL_SetRenderTarget","","\\\\brief Set a texture as the current rendering target.",null,null],[5,"SDL_GetRenderTarget","","\\\\brief Get the current render target or NULL for the …",null,null],[5,"SDL_RenderSetLogicalSize","","\\\\brief Set device independent resolution for rendering",null,null],[5,"SDL_RenderGetLogicalSize","","\\\\brief Get device independent resolution for rendering",null,null],[5,"SDL_RenderSetIntegerScale","","\\\\brief Set whether to force integer scales for …",null,null],[5,"SDL_RenderGetIntegerScale","","\\\\brief Get whether integer scales are forced for …",null,null],[5,"SDL_RenderSetViewport","","\\\\brief Set the drawing area for rendering on the current …",null,null],[5,"SDL_RenderGetViewport","","\\\\brief Get the drawing area for the current target.",null,null],[5,"SDL_RenderSetClipRect","","\\\\brief Set the clip rectangle for the current target.",null,null],[5,"SDL_RenderGetClipRect","","\\\\brief Get the clip rectangle for the current target.",null,null],[5,"SDL_RenderIsClipEnabled","","\\\\brief Get whether clipping is enabled on the given …",null,null],[5,"SDL_RenderSetScale","","\\\\brief Set the drawing scale for rendering on the current …",null,null],[5,"SDL_RenderGetScale","","\\\\brief Get the drawing scale for the current target.",null,null],[5,"SDL_SetRenderDrawColor","","\\\\brief Set the color used for drawing operations (Rect, …",null,null],[5,"SDL_GetRenderDrawColor","","\\\\brief Get the color used for drawing operations (Rect, …",null,null],[5,"SDL_SetRenderDrawBlendMode","","\\\\brief Set the blend mode used for drawing operations …",null,null],[5,"SDL_GetRenderDrawBlendMode","","\\\\brief Get the blend mode used for drawing operations.",null,null],[5,"SDL_RenderClear","","\\\\brief Clear the current rendering target with the …",null,null],[5,"SDL_RenderDrawPoint","","\\\\brief Draw a point on the current rendering target.",null,null],[5,"SDL_RenderDrawPoints","","\\\\brief Draw multiple points on the current rendering …",null,null],[5,"SDL_RenderDrawLine","","\\\\brief Draw a line on the current rendering target.",null,null],[5,"SDL_RenderDrawLines","","\\\\brief Draw a series of connected lines on the current …",null,null],[5,"SDL_RenderDrawRect","","\\\\brief Draw a rectangle on the current rendering target.",null,null],[5,"SDL_RenderDrawRects","","\\\\brief Draw some number of rectangles on the current …",null,null],[5,"SDL_RenderFillRect","","\\\\brief Fill a rectangle on the current rendering target …",null,null],[5,"SDL_RenderFillRects","","\\\\brief Fill some number of rectangles on the current …",null,null],[5,"SDL_RenderCopy","","\\\\brief Copy a portion of the texture to the current …",null,null],[5,"SDL_RenderCopyEx","","\\\\brief Copy a portion of the source texture to the …",null,null],[5,"SDL_RenderReadPixels","","\\\\brief Read pixels from the current rendering target.",null,null],[5,"SDL_RenderPresent","","\\\\brief Update the screen with rendering performed.",null,null],[5,"SDL_DestroyTexture","","\\\\brief Destroy the specified texture.",null,null],[5,"SDL_DestroyRenderer","","\\\\brief Destroy the rendering context for a window and …",null,null],[5,"SDL_GL_BindTexture","","\\\\brief Bind the texture to the current OpenGL/ES/ES2 …",null,null],[5,"SDL_GL_UnbindTexture","","\\\\brief Unbind a texture from the current OpenGL/ES/ES2 …",null,null],[5,"SDL_CreateShapedWindow","","\\\\brief Create a window that can be shaped with the …",null,null],[5,"SDL_IsShapedWindow","","\\\\brief Return whether the given window is a shaped window.",null,null],[5,"SDL_SetWindowShape","","\\\\brief Set the shape and parameters of a shaped window.",null,null],[5,"SDL_GetShapedWindowMode","","\\\\brief Get the shape parameters of a shaped window.",null,null],[5,"SDL_GetTicks","","\\\\brief Get the number of milliseconds since the SDL …",null,null],[5,"SDL_GetPerformanceCounter","","\\\\brief Get the current value of the high resolution …",null,null],[5,"SDL_GetPerformanceFrequency","","\\\\brief Get the count per second of the high resolution …",null,null],[5,"SDL_Delay","","\\\\brief Wait a specified number of milliseconds before …",null,null],[5,"SDL_AddTimer","","\\\\brief Add a new timer to the pool of timers already …",null,null],[5,"SDL_RemoveTimer","","\\\\brief Remove a timer knowing its ID.",null,null],[5,"SDL_GetVersion","","\\\\brief Get the version of SDL that is linked against your …",null,null],[5,"SDL_GetRevision","","\\\\brief Get the code revision of SDL that is linked …",null,null],[5,"SDL_GetRevisionNumber","","\\\\brief Get the revision number of SDL that is linked …",null,null],[5,"SDL_Init","","This function initializes  the subsystems specified by \\\\c …",null,null],[5,"SDL_InitSubSystem","","This function initializes specific SDL subsystems",null,null],[5,"SDL_QuitSubSystem","","This function cleans up specific SDL subsystems",null,null],[5,"SDL_WasInit","","This function returns a mask of the specified subsystems …",null,null],[5,"SDL_Quit","","This function cleans up all initialized subsystems. You …",null,null],[17,"__LINUX__","","",null,null],[17,"HAVE_STDARG_H","","",null,null],[17,"HAVE_STDDEF_H","","",null,null],[17,"HAVE_STDINT_H","","",null,null],[17,"HAVE_GCC_SYNC_LOCK_TEST_AND_SET","","",null,null],[17,"SDL_AUDIO_DRIVER_DUMMY","","",null,null],[17,"SDL_JOYSTICK_DISABLED","","",null,null],[17,"SDL_HAPTIC_DISABLED","","",null,null],[17,"SDL_LOADSO_DISABLED","","",null,null],[17,"SDL_THREADS_DISABLED","","",null,null],[17,"SDL_TIMERS_DISABLED","","",null,null],[17,"SDL_VIDEO_DRIVER_DUMMY","","",null,null],[17,"SDL_FILESYSTEM_DUMMY","","",null,null],[17,"__GNUC_VA_LIST","","",null,null],[17,"_STDINT_H","","",null,null],[17,"_FEATURES_H","","",null,null],[17,"_DEFAULT_SOURCE","","",null,null],[17,"__USE_ISOC11","","",null,null],[17,"__USE_ISOC99","","",null,null],[17,"__USE_ISOC95","","",null,null],[17,"__USE_POSIX_IMPLICITLY","","",null,null],[17,"_POSIX_SOURCE","","",null,null],[17,"_POSIX_C_SOURCE","","",null,null],[17,"__USE_POSIX","","",null,null],[17,"__USE_POSIX2","","",null,null],[17,"__USE_POSIX199309","","",null,null],[17,"__USE_POSIX199506","","",null,null],[17,"__USE_XOPEN2K","","",null,null],[17,"__USE_XOPEN2K8","","",null,null],[17,"_ATFILE_SOURCE","","",null,null],[17,"__USE_MISC","","",null,null],[17,"__USE_ATFILE","","",null,null],[17,"__USE_FORTIFY_LEVEL","","",null,null],[17,"__GLIBC_USE_DEPRECATED_GETS","","",null,null],[17,"_STDC_PREDEF_H","","",null,null],[17,"__STDC_IEC_559__","","",null,null],[17,"__STDC_IEC_559_COMPLEX__","","",null,null],[17,"__STDC_ISO_10646__","","",null,null],[17,"__STDC_NO_THREADS__","","",null,null],[17,"__GNU_LIBRARY__","","",null,null],[17,"__GLIBC__","","",null,null],[17,"__GLIBC_MINOR__","","",null,null],[17,"_SYS_CDEFS_H","","",null,null],[17,"__glibc_c99_flexarr_available","","",null,null],[17,"__WORDSIZE","","",null,null],[17,"__WORDSIZE_TIME64_COMPAT32","","",null,null],[17,"__SYSCALL_WORDSIZE","","",null,null],[17,"__HAVE_GENERIC_SELECTION","","",null,null],[17,"__GLIBC_USE_LIB_EXT2","","",null,null],[17,"__GLIBC_USE_IEC_60559_BFP_EXT","","",null,null],[17,"__GLIBC_USE_IEC_60559_FUNCS_EXT","","",null,null],[17,"__GLIBC_USE_IEC_60559_TYPES_EXT","","",null,null],[17,"_BITS_TYPES_H","","",null,null],[17,"_BITS_TYPESIZES_H","","",null,null],[17,"__OFF_T_MATCHES_OFF64_T","","",null,null],[17,"__INO_T_MATCHES_INO64_T","","",null,null],[17,"__RLIM_T_MATCHES_RLIM64_T","","",null,null],[17,"__FD_SETSIZE","","",null,null],[17,"_BITS_WCHAR_H","","",null,null],[17,"_BITS_STDINT_INTN_H","","",null,null],[17,"_BITS_STDINT_UINTN_H","","",null,null],[17,"INT8_MIN","","",null,null],[17,"INT16_MIN","","",null,null],[17,"INT32_MIN","","",null,null],[17,"INT8_MAX","","",null,null],[17,"INT16_MAX","","",null,null],[17,"INT32_MAX","","",null,null],[17,"UINT8_MAX","","",null,null],[17,"UINT16_MAX","","",null,null],[17,"UINT32_MAX","","",null,null],[17,"INT_LEAST8_MIN","","",null,null],[17,"INT_LEAST16_MIN","","",null,null],[17,"INT_LEAST32_MIN","","",null,null],[17,"INT_LEAST8_MAX","","",null,null],[17,"INT_LEAST16_MAX","","",null,null],[17,"INT_LEAST32_MAX","","",null,null],[17,"UINT_LEAST8_MAX","","",null,null],[17,"UINT_LEAST16_MAX","","",null,null],[17,"UINT_LEAST32_MAX","","",null,null],[17,"INT_FAST8_MIN","","",null,null],[17,"INT_FAST16_MIN","","",null,null],[17,"INT_FAST32_MIN","","",null,null],[17,"INT_FAST8_MAX","","",null,null],[17,"INT_FAST16_MAX","","",null,null],[17,"INT_FAST32_MAX","","",null,null],[17,"UINT_FAST8_MAX","","",null,null],[17,"UINT_FAST16_MAX","","",null,null],[17,"UINT_FAST32_MAX","","",null,null],[17,"INTPTR_MIN","","",null,null],[17,"INTPTR_MAX","","",null,null],[17,"UINTPTR_MAX","","",null,null],[17,"PTRDIFF_MIN","","",null,null],[17,"PTRDIFF_MAX","","",null,null],[17,"SIG_ATOMIC_MIN","","",null,null],[17,"SIG_ATOMIC_MAX","","",null,null],[17,"SIZE_MAX","","",null,null],[17,"WINT_MIN","","",null,null],[17,"WINT_MAX","","",null,null],[17,"SDL_PRIs64","","",null,null],[17,"SDL_PRIu64","","",null,null],[17,"SDL_PRIx64","","",null,null],[17,"SDL_PRIX64","","",null,null],[17,"M_PI","","",null,null],[17,"SDL_ASSERT_LEVEL","","",null,null],[17,"SDL_NULL_WHILE_LOOP_CONDITION","","",null,null],[17,"SDL_LIL_ENDIAN","","",null,null],[17,"SDL_BIG_ENDIAN","","",null,null],[17,"_ENDIAN_H","","",null,null],[17,"__LITTLE_ENDIAN","","",null,null],[17,"__BIG_ENDIAN","","",null,null],[17,"__PDP_ENDIAN","","",null,null],[17,"__BYTE_ORDER","","",null,null],[17,"__FLOAT_WORD_ORDER","","",null,null],[17,"LITTLE_ENDIAN","","",null,null],[17,"BIG_ENDIAN","","",null,null],[17,"PDP_ENDIAN","","",null,null],[17,"BYTE_ORDER","","",null,null],[17,"_BITS_BYTESWAP_H","","",null,null],[17,"_BITS_UINTN_IDENTITY_H","","",null,null],[17,"SDL_BYTEORDER","","",null,null],[17,"SDL_MUTEX_TIMEDOUT","","",null,null],[17,"SDL_RWOPS_UNKNOWN","","",null,null],[17,"SDL_RWOPS_WINFILE","","",null,null],[17,"SDL_RWOPS_STDFILE","","",null,null],[17,"SDL_RWOPS_JNIFILE","","",null,null],[17,"SDL_RWOPS_MEMORY","","",null,null],[17,"SDL_RWOPS_MEMORY_RO","","",null,null],[17,"RW_SEEK_SET","","",null,null],[17,"RW_SEEK_CUR","","",null,null],[17,"RW_SEEK_END","","",null,null],[17,"SDL_AUDIO_MASK_BITSIZE","","",null,null],[17,"SDL_AUDIO_MASK_DATATYPE","","",null,null],[17,"SDL_AUDIO_MASK_ENDIAN","","",null,null],[17,"SDL_AUDIO_MASK_SIGNED","","",null,null],[17,"AUDIO_U8","","",null,null],[17,"AUDIO_S8","","",null,null],[17,"AUDIO_U16LSB","","",null,null],[17,"AUDIO_S16LSB","","",null,null],[17,"AUDIO_U16MSB","","",null,null],[17,"AUDIO_S16MSB","","",null,null],[17,"AUDIO_U16","","",null,null],[17,"AUDIO_S16","","",null,null],[17,"AUDIO_S32LSB","","",null,null],[17,"AUDIO_S32MSB","","",null,null],[17,"AUDIO_S32","","",null,null],[17,"AUDIO_F32LSB","","",null,null],[17,"AUDIO_F32MSB","","",null,null],[17,"AUDIO_F32","","",null,null],[17,"AUDIO_U16SYS","","",null,null],[17,"AUDIO_S16SYS","","",null,null],[17,"AUDIO_S32SYS","","",null,null],[17,"AUDIO_F32SYS","","",null,null],[17,"SDL_AUDIO_ALLOW_FREQUENCY_CHANGE","","",null,null],[17,"SDL_AUDIO_ALLOW_FORMAT_CHANGE","","",null,null],[17,"SDL_AUDIO_ALLOW_CHANNELS_CHANGE","","",null,null],[17,"SDL_AUDIO_ALLOW_ANY_CHANGE","","",null,null],[17,"SDL_AUDIOCVT_MAX_FILTERS","","",null,null],[17,"SDL_MIX_MAXVOLUME","","",null,null],[17,"_STDLIB_H","","",null,null],[17,"WNOHANG","","",null,null],[17,"WUNTRACED","","",null,null],[17,"WSTOPPED","","",null,null],[17,"WEXITED","","",null,null],[17,"WCONTINUED","","",null,null],[17,"WNOWAIT","","",null,null],[17,"__WNOTHREAD","","",null,null],[17,"__WALL","","",null,null],[17,"__WCLONE","","",null,null],[17,"__W_CONTINUED","","",null,null],[17,"__WCOREFLAG","","",null,null],[17,"__HAVE_FLOAT128","","",null,null],[17,"__HAVE_DISTINCT_FLOAT128","","",null,null],[17,"__ldiv_t_defined","","",null,null],[17,"__lldiv_t_defined","","",null,null],[17,"RAND_MAX","","",null,null],[17,"EXIT_FAILURE","","",null,null],[17,"EXIT_SUCCESS","","",null,null],[17,"_SYS_TYPES_H","","",null,null],[17,"__clock_t_defined","","",null,null],[17,"__clockid_t_defined","","",null,null],[17,"__time_t_defined","","",null,null],[17,"__timer_t_defined","","",null,null],[17,"__BIT_TYPES_DEFINED__","","",null,null],[17,"_SYS_SELECT_H","","",null,null],[17,"__FD_ZERO_STOS","","",null,null],[17,"__sigset_t_defined","","",null,null],[17,"__timeval_defined","","",null,null],[17,"__timespec_defined","","",null,null],[17,"FD_SETSIZE","","",null,null],[17,"_SYS_SYSMACROS_H","","",null,null],[17,"_BITS_SYSMACROS_H","","",null,null],[17,"_BITS_PTHREADTYPES_COMMON_H","","",null,null],[17,"_THREAD_SHARED_TYPES_H","","",null,null],[17,"_BITS_PTHREADTYPES_ARCH_H","","",null,null],[17,"__SIZEOF_PTHREAD_MUTEX_T","","",null,null],[17,"__SIZEOF_PTHREAD_ATTR_T","","",null,null],[17,"__SIZEOF_PTHREAD_RWLOCK_T","","",null,null],[17,"__SIZEOF_PTHREAD_BARRIER_T","","",null,null],[17,"__SIZEOF_PTHREAD_MUTEXATTR_T","","",null,null],[17,"__SIZEOF_PTHREAD_COND_T","","",null,null],[17,"__SIZEOF_PTHREAD_CONDATTR_T","","",null,null],[17,"__SIZEOF_PTHREAD_RWLOCKATTR_T","","",null,null],[17,"__SIZEOF_PTHREAD_BARRIERATTR_T","","",null,null],[17,"__PTHREAD_MUTEX_LOCK_ELISION","","",null,null],[17,"__PTHREAD_RWLOCK_INT_FLAGS_SHARED","","",null,null],[17,"__PTHREAD_MUTEX_HAVE_PREV","","",null,null],[17,"__have_pthread_attr_t","","",null,null],[17,"_ALLOCA_H","","",null,null],[17,"_MM_HINT_T0","","",null,null],[17,"_MM_HINT_T1","","",null,null],[17,"_MM_HINT_T2","","",null,null],[17,"_MM_HINT_NTA","","",null,null],[17,"_MM_EXCEPT_INVALID","","",null,null],[17,"_MM_EXCEPT_DENORM","","",null,null],[17,"_MM_EXCEPT_DIV_ZERO","","",null,null],[17,"_MM_EXCEPT_OVERFLOW","","",null,null],[17,"_MM_EXCEPT_UNDERFLOW","","",null,null],[17,"_MM_EXCEPT_INEXACT","","",null,null],[17,"_MM_EXCEPT_MASK","","",null,null],[17,"_MM_MASK_INVALID","","",null,null],[17,"_MM_MASK_DENORM","","",null,null],[17,"_MM_MASK_DIV_ZERO","","",null,null],[17,"_MM_MASK_OVERFLOW","","",null,null],[17,"_MM_MASK_UNDERFLOW","","",null,null],[17,"_MM_MASK_INEXACT","","",null,null],[17,"_MM_MASK_MASK","","",null,null],[17,"_MM_ROUND_NEAREST","","",null,null],[17,"_MM_ROUND_DOWN","","",null,null],[17,"_MM_ROUND_UP","","",null,null],[17,"_MM_ROUND_TOWARD_ZERO","","",null,null],[17,"_MM_ROUND_MASK","","",null,null],[17,"_MM_FLUSH_ZERO_MASK","","",null,null],[17,"_MM_FLUSH_ZERO_ON","","",null,null],[17,"_MM_FLUSH_ZERO_OFF","","",null,null],[17,"_MM_DENORMALS_ZERO_ON","","",null,null],[17,"_MM_DENORMALS_ZERO_OFF","","",null,null],[17,"_MM_DENORMALS_ZERO_MASK","","",null,null],[17,"SDL_CACHELINE_SIZE","","",null,null],[17,"SDL_ALPHA_OPAQUE","","",null,null],[17,"SDL_ALPHA_TRANSPARENT","","",null,null],[17,"SDL_SWSURFACE","","",null,null],[17,"SDL_PREALLOC","","",null,null],[17,"SDL_RLEACCEL","","",null,null],[17,"SDL_DONTFREE","","",null,null],[17,"SDL_WINDOWPOS_UNDEFINED_MASK","","",null,null],[17,"SDL_WINDOWPOS_CENTERED_MASK","","",null,null],[17,"SDLK_SCANCODE_MASK","","",null,null],[17,"SDL_BUTTON_LEFT","","",null,null],[17,"SDL_BUTTON_MIDDLE","","",null,null],[17,"SDL_BUTTON_RIGHT","","",null,null],[17,"SDL_BUTTON_X1","","",null,null],[17,"SDL_BUTTON_X2","","",null,null],[17,"SDL_JOYSTICK_AXIS_MAX","","",null,null],[17,"SDL_JOYSTICK_AXIS_MIN","","",null,null],[17,"SDL_HAT_CENTERED","","",null,null],[17,"SDL_HAT_UP","","",null,null],[17,"SDL_HAT_RIGHT","","",null,null],[17,"SDL_HAT_DOWN","","",null,null],[17,"SDL_HAT_LEFT","","",null,null],[17,"SDL_HAT_RIGHTUP","","",null,null],[17,"SDL_HAT_RIGHTDOWN","","",null,null],[17,"SDL_HAT_LEFTUP","","",null,null],[17,"SDL_HAT_LEFTDOWN","","",null,null],[17,"SDL_RELEASED","","",null,null],[17,"SDL_PRESSED","","",null,null],[17,"SDL_TEXTEDITINGEVENT_TEXT_SIZE","","",null,null],[17,"SDL_TEXTINPUTEVENT_TEXT_SIZE","","",null,null],[17,"SDL_QUERY","","",null,null],[17,"SDL_IGNORE","","",null,null],[17,"SDL_DISABLE","","",null,null],[17,"SDL_ENABLE","","",null,null],[17,"SDL_HAPTIC_CONSTANT","","",null,null],[17,"SDL_HAPTIC_SINE","","",null,null],[17,"SDL_HAPTIC_LEFTRIGHT","","",null,null],[17,"SDL_HAPTIC_TRIANGLE","","",null,null],[17,"SDL_HAPTIC_SAWTOOTHUP","","",null,null],[17,"SDL_HAPTIC_SAWTOOTHDOWN","","",null,null],[17,"SDL_HAPTIC_RAMP","","",null,null],[17,"SDL_HAPTIC_SPRING","","",null,null],[17,"SDL_HAPTIC_DAMPER","","",null,null],[17,"SDL_HAPTIC_INERTIA","","",null,null],[17,"SDL_HAPTIC_FRICTION","","",null,null],[17,"SDL_HAPTIC_CUSTOM","","",null,null],[17,"SDL_HAPTIC_GAIN","","",null,null],[17,"SDL_HAPTIC_AUTOCENTER","","",null,null],[17,"SDL_HAPTIC_STATUS","","",null,null],[17,"SDL_HAPTIC_PAUSE","","",null,null],[17,"SDL_HAPTIC_POLAR","","",null,null],[17,"SDL_HAPTIC_CARTESIAN","","",null,null],[17,"SDL_HAPTIC_SPHERICAL","","",null,null],[17,"SDL_HAPTIC_INFINITY","","",null,null],[17,"SDL_HINT_FRAMEBUFFER_ACCELERATION","","",null,null],[17,"SDL_HINT_RENDER_DRIVER","","",null,null],[17,"SDL_HINT_RENDER_OPENGL_SHADERS","","",null,null],[17,"SDL_HINT_RENDER_DIRECT3D_THREADSAFE","","",null,null],[17,"SDL_HINT_RENDER_DIRECT3D11_DEBUG","","",null,null],[17,"SDL_HINT_RENDER_LOGICAL_SIZE_MODE","","",null,null],[17,"SDL_HINT_RENDER_SCALE_QUALITY","","",null,null],[17,"SDL_HINT_RENDER_VSYNC","","",null,null],[17,"SDL_HINT_VIDEO_ALLOW_SCREENSAVER","","",null,null],[17,"SDL_HINT_VIDEO_X11_XVIDMODE","","",null,null],[17,"SDL_HINT_VIDEO_X11_XINERAMA","","",null,null],[17,"SDL_HINT_VIDEO_X11_XRANDR","","",null,null],[17,"SDL_HINT_VIDEO_X11_NET_WM_PING","","",null,null],[17,"SDL_HINT_WINDOW_FRAME_USABLE_WHILE_CURSOR_HIDDEN","","",null,null],[17,"SDL_HINT_WINDOWS_INTRESOURCE_ICON","","",null,null],[17,"SDL_HINT_WINDOWS_INTRESOURCE_ICON_SMALL","","",null,null],[17,"SDL_HINT_WINDOWS_ENABLE_MESSAGELOOP","","",null,null],[17,"SDL_HINT_GRAB_KEYBOARD","","",null,null],[17,"SDL_HINT_MOUSE_NORMAL_SPEED_SCALE","","",null,null],[17,"SDL_HINT_MOUSE_RELATIVE_SPEED_SCALE","","",null,null],[17,"SDL_HINT_MOUSE_RELATIVE_MODE_WARP","","",null,null],[17,"SDL_HINT_MOUSE_FOCUS_CLICKTHROUGH","","",null,null],[17,"SDL_HINT_TOUCH_MOUSE_EVENTS","","",null,null],[17,"SDL_HINT_VIDEO_MINIMIZE_ON_FOCUS_LOSS","","",null,null],[17,"SDL_HINT_IDLE_TIMER_DISABLED","","",null,null],[17,"SDL_HINT_ORIENTATIONS","","",null,null],[17,"SDL_HINT_APPLE_TV_CONTROLLER_UI_EVENTS","","",null,null],[17,"SDL_HINT_APPLE_TV_REMOTE_ALLOW_ROTATION","","",null,null],[17,"SDL_HINT_ACCELEROMETER_AS_JOYSTICK","","",null,null],[17,"SDL_HINT_XINPUT_ENABLED","","",null,null],[17,"SDL_HINT_XINPUT_USE_OLD_JOYSTICK_MAPPING","","",null,null],[17,"SDL_HINT_GAMECONTROLLERCONFIG","","",null,null],[17,"SDL_HINT_GAMECONTROLLER_IGNORE_DEVICES","","",null,null],[17,"SDL_HINT_GAMECONTROLLER_IGNORE_DEVICES_EXCEPT","","",null,null],[17,"SDL_HINT_JOYSTICK_ALLOW_BACKGROUND_EVENTS","","",null,null],[17,"SDL_HINT_ALLOW_TOPMOST","","",null,null],[17,"SDL_HINT_TIMER_RESOLUTION","","",null,null],[17,"SDL_HINT_QTWAYLAND_CONTENT_ORIENTATION","","",null,null],[17,"SDL_HINT_QTWAYLAND_WINDOW_FLAGS","","",null,null],[17,"SDL_HINT_THREAD_STACK_SIZE","","",null,null],[17,"SDL_HINT_VIDEO_HIGHDPI_DISABLED","","",null,null],[17,"SDL_HINT_MAC_CTRL_CLICK_EMULATE_RIGHT_CLICK","","",null,null],[17,"SDL_HINT_VIDEO_WIN_D3DCOMPILER","","",null,null],[17,"SDL_HINT_VIDEO_WINDOW_SHARE_PIXEL_FORMAT","","",null,null],[17,"SDL_HINT_WINRT_PRIVACY_POLICY_URL","","",null,null],[17,"SDL_HINT_WINRT_PRIVACY_POLICY_LABEL","","",null,null],[17,"SDL_HINT_WINRT_HANDLE_BACK_BUTTON","","",null,null],[17,"SDL_HINT_VIDEO_MAC_FULLSCREEN_SPACES","","",null,null],[17,"SDL_HINT_MAC_BACKGROUND_APP","","",null,null],[17,"SDL_HINT_ANDROID_APK_EXPANSION_MAIN_FILE_VERSION","","",null,null],[17,"SDL_HINT_ANDROID_APK_EXPANSION_PATCH_FILE_VERSION","","",null,null],[17,"SDL_HINT_IME_INTERNAL_EDITING","","",null,null],[17,"SDL_HINT_ANDROID_SEPARATE_MOUSE_AND_TOUCH","","",null,null],[17,"SDL_HINT_EMSCRIPTEN_KEYBOARD_ELEMENT","","",null,null],[17,"SDL_HINT_NO_SIGNAL_HANDLERS","","",null,null],[17,"SDL_HINT_WINDOWS_NO_CLOSE_ON_ALT_F4","","",null,null],[17,"SDL_HINT_BMP_SAVE_LEGACY_FORMAT","","",null,null],[17,"SDL_HINT_WINDOWS_DISABLE_THREAD_NAMING","","",null,null],[17,"SDL_HINT_RPI_VIDEO_LAYER","","",null,null],[17,"SDL_HINT_OPENGL_ES_DRIVER","","",null,null],[17,"SDL_HINT_AUDIO_RESAMPLING_MODE","","",null,null],[17,"SDL_HINT_AUDIO_CATEGORY","","",null,null],[17,"SDL_MAX_LOG_MESSAGE","","",null,null],[17,"SDL_NONSHAPEABLE_WINDOW","","",null,null],[17,"SDL_INVALID_SHAPE_ARGUMENT","","",null,null],[17,"SDL_WINDOW_LACKS_SHAPE","","",null,null],[17,"SDL_MAJOR_VERSION","","",null,null],[17,"SDL_MINOR_VERSION","","",null,null],[17,"SDL_PATCHLEVEL","","",null,null],[17,"SDL_INIT_TIMER","","",null,null],[17,"SDL_INIT_AUDIO","","",null,null],[17,"SDL_INIT_VIDEO","","",null,null],[17,"SDL_INIT_JOYSTICK","","",null,null],[17,"SDL_INIT_HAPTIC","","",null,null],[17,"SDL_INIT_GAMECONTROLLER","","",null,null],[17,"SDL_INIT_EVENTS","","",null,null],[17,"SDL_INIT_NOPARACHUTE","","",null,null],[17,"SDL_INIT_EVERYTHING","","",null,null],[6,"wchar_t","","",null,null],[6,"va_list","","",null,null],[6,"__gnuc_va_list","","",null,null],[6,"__u_char","","",null,null],[6,"__u_short","","",null,null],[6,"__u_int","","",null,null],[6,"__u_long","","",null,null],[6,"__int8_t","","",null,null],[6,"__uint8_t","","",null,null],[6,"__int16_t","","",null,null],[6,"__uint16_t","","",null,null],[6,"__int32_t","","",null,null],[6,"__uint32_t","","",null,null],[6,"__int64_t","","",null,null],[6,"__uint64_t","","",null,null],[6,"__quad_t","","",null,null],[6,"__u_quad_t","","",null,null],[6,"__intmax_t","","",null,null],[6,"__uintmax_t","","",null,null],[6,"__dev_t","","",null,null],[6,"__uid_t","","",null,null],[6,"__gid_t","","",null,null],[6,"__ino_t","","",null,null],[6,"__ino64_t","","",null,null],[6,"__mode_t","","",null,null],[6,"__nlink_t","","",null,null],[6,"__off_t","","",null,null],[6,"__off64_t","","",null,null],[6,"__pid_t","","",null,null],[3,"__fsid_t","","",null,null],[12,"__val","","",0,null],[6,"__clock_t","","",null,null],[6,"__rlim_t","","",null,null],[6,"__rlim64_t","","",null,null],[6,"__id_t","","",null,null],[6,"__time_t","","",null,null],[6,"__useconds_t","","",null,null],[6,"__suseconds_t","","",null,null],[6,"__daddr_t","","",null,null],[6,"__key_t","","",null,null],[6,"__clockid_t","","",null,null],[6,"__timer_t","","",null,null],[6,"__blksize_t","","",null,null],[6,"__blkcnt_t","","",null,null],[6,"__blkcnt64_t","","",null,null],[6,"__fsblkcnt_t","","",null,null],[6,"__fsblkcnt64_t","","",null,null],[6,"__fsfilcnt_t","","",null,null],[6,"__fsfilcnt64_t","","",null,null],[6,"__fsword_t","","",null,null],[6,"__ssize_t","","",null,null],[6,"__syscall_slong_t","","",null,null],[6,"__syscall_ulong_t","","",null,null],[6,"__loff_t","","",null,null],[6,"__qaddr_t","","",null,null],[6,"__caddr_t","","",null,null],[6,"__intptr_t","","",null,null],[6,"__socklen_t","","",null,null],[6,"__sig_atomic_t","","",null,null],[6,"int_least8_t","","",null,null],[6,"int_least16_t","","",null,null],[6,"int_least32_t","","",null,null],[6,"int_least64_t","","",null,null],[6,"uint_least8_t","","",null,null],[6,"uint_least16_t","","",null,null],[6,"uint_least32_t","","",null,null],[6,"uint_least64_t","","",null,null],[6,"int_fast8_t","","",null,null],[6,"int_fast16_t","","",null,null],[6,"int_fast32_t","","",null,null],[6,"int_fast64_t","","",null,null],[6,"uint_fast8_t","","",null,null],[6,"uint_fast16_t","","",null,null],[6,"uint_fast32_t","","",null,null],[6,"uint_fast64_t","","",null,null],[6,"intmax_t","","",null,null],[6,"uintmax_t","","",null,null],[4,"SDL_bool","","",null,null],[13,"SDL_FALSE","","",1,null],[13,"SDL_TRUE","","",1,null],[6,"Sint8","","\\\\brief A signed 8-bit integer type.",null,null],[6,"Uint8","","\\\\brief An unsigned 8-bit integer type.",null,null],[6,"Sint16","","\\\\brief A signed 16-bit integer type.",null,null],[6,"Uint16","","\\\\brief An unsigned 16-bit integer type.",null,null],[6,"Sint32","","\\\\brief A signed 32-bit integer type.",null,null],[6,"Uint32","","\\\\brief An unsigned 32-bit integer type.",null,null],[6,"Sint64","","\\\\brief A signed 64-bit integer type.",null,null],[6,"Uint64","","\\\\brief An unsigned 64-bit integer type.",null,null],[6,"SDL_compile_time_assert_uint8","","",null,null],[6,"SDL_compile_time_assert_sint8","","",null,null],[6,"SDL_compile_time_assert_uint16","","",null,null],[6,"SDL_compile_time_assert_sint16","","",null,null],[6,"SDL_compile_time_assert_uint32","","",null,null],[6,"SDL_compile_time_assert_sint32","","",null,null],[6,"SDL_compile_time_assert_uint64","","",null,null],[6,"SDL_compile_time_assert_sint64","","",null,null],[4,"SDL_DUMMY_ENUM","","",null,null],[13,"DUMMY_ENUM_VALUE","","",2,null],[6,"SDL_compile_time_assert_enum","","",null,null],[3,"_SDL_iconv_t","","",null,null],[6,"SDL_iconv_t","","",null,null],[4,"SDL_AssertState","","",null,null],[13,"SDL_ASSERTION_RETRY","","",3,null],[13,"SDL_ASSERTION_BREAK","","",3,null],[13,"SDL_ASSERTION_ABORT","","",3,null],[13,"SDL_ASSERTION_IGNORE","","",3,null],[13,"SDL_ASSERTION_ALWAYS_IGNORE","","",3,null],[3,"SDL_AssertData","","",null,null],[12,"always_ignore","","",4,null],[12,"trigger_count","","",4,null],[12,"condition","","",4,null],[12,"filename","","",4,null],[12,"linenum","","",4,null],[12,"function","","",4,null],[12,"next","","",4,null],[6,"SDL_AssertionHandler","","",null,null],[6,"SDL_SpinLock","","",null,null],[3,"SDL_atomic_t","","\\\\brief A type representing an atomic integer value.  It …",null,null],[12,"value","","",5,null],[4,"SDL_errorcode","","",null,null],[13,"SDL_ENOMEM","","",6,null],[13,"SDL_EFREAD","","",6,null],[13,"SDL_EFWRITE","","",6,null],[13,"SDL_EFSEEK","","",6,null],[13,"SDL_UNSUPPORTED","","",6,null],[13,"SDL_LASTERROR","","",6,null],[3,"SDL_mutex","","",null,null],[3,"SDL_semaphore","","",null,null],[6,"SDL_sem","","",null,null],[3,"SDL_cond","","",null,null],[3,"SDL_Thread","","",null,null],[6,"SDL_threadID","","",null,null],[6,"SDL_TLSID","","",null,null],[4,"SDL_ThreadPriority","","The SDL thread priority.",null,null],[13,"SDL_THREAD_PRIORITY_LOW","","",7,null],[13,"SDL_THREAD_PRIORITY_NORMAL","","",7,null],[13,"SDL_THREAD_PRIORITY_HIGH","","",7,null],[6,"SDL_ThreadFunction","","The function passed to SDL_CreateThread(). It is passed a …",null,null],[3,"SDL_RWops","","This is the read/write operation structure -- very basic.",null,null],[12,"size","","Return the size of the file in this rwops, or -1 if …",8,null],[12,"seek","","Seek to \\\\c offset relative to \\\\c whence, one of stdio\'s …",8,null],[12,"read","","Read up to \\\\c maxnum objects each of size \\\\c size from …",8,null],[12,"write","","Write exactly \\\\c num objects each of size \\\\c size from …",8,null],[12,"close","","Close and free an allocated SDL_RWops structure.",8,null],[12,"type_","","",8,null],[12,"hidden","","",8,null],[19,"SDL_RWops__bindgen_ty_1","","",null,null],[12,"mem","","",9,null],[12,"unknown","","",9,null],[3,"SDL_RWops__bindgen_ty_1__bindgen_ty_1","","",null,null],[12,"base","","",10,null],[12,"here","","",10,null],[12,"stop","","",10,null],[3,"SDL_RWops__bindgen_ty_1__bindgen_ty_2","","",null,null],[12,"data1","","",11,null],[12,"data2","","",11,null],[6,"SDL_AudioFormat","","\\\\brief Audio format flags.",null,null],[6,"SDL_AudioCallback","","This function is called when the audio device needs more …",null,null],[3,"SDL_AudioSpec","","The calculated values in this structure are calculated by …",null,null],[12,"freq","","< DSP frequency -- samples per second",12,null],[12,"format","","< Audio data format",12,null],[12,"channels","","< Number of channels: 1 mono, 2 stereo",12,null],[12,"silence","","< Audio buffer silence value (calculated)",12,null],[12,"samples","","< Audio buffer size in sample FRAMES (total samples …",12,null],[12,"padding","","< Necessary for some compile environments",12,null],[12,"size","","< Audio buffer size in bytes (calculated)",12,null],[12,"callback","","< Callback that feeds the audio device (NULL to use …",12,null],[12,"userdata","","< Userdata passed to callback (ignored for NULL …",12,null],[3,"SDL_AudioCVT","","",null,null],[12,"needed","","< Set to 1 if conversion possible",13,null],[12,"src_format","","< Source audio format",13,null],[12,"dst_format","","< Target audio format",13,null],[12,"rate_incr","","< Rate conversion increment",13,null],[12,"buf","","< Buffer to hold entire audio data",13,null],[12,"len","","< Length of original audio buffer",13,null],[12,"len_cvt","","< Length of converted audio buffer",13,null],[12,"len_mult","","< buffer must be len*len_mult big",13,null],[12,"len_ratio","","< Given len, final size is len*len_ratio",13,null],[12,"filters","","< NULL-terminated list of filter functions",13,null],[12,"filter_index","","< Current audio conversion function",13,null],[6,"SDL_AudioFilter","","",null,null],[6,"SDL_AudioDeviceID","","SDL Audio Device IDs.",null,null],[4,"SDL_AudioStatus","","",null,null],[13,"SDL_AUDIO_STOPPED","","",14,null],[13,"SDL_AUDIO_PLAYING","","",14,null],[13,"SDL_AUDIO_PAUSED","","",14,null],[6,"__m64","","",null,null],[6,"__v1di","","",null,null],[6,"__v2si","","",null,null],[6,"__v4hi","","",null,null],[6,"__v8qi","","",null,null],[6,"__v4si","","",null,null],[6,"__v4sf","","",null,null],[6,"__m128","","",null,null],[6,"__v4su","","",null,null],[3,"div_t","","",null,null],[12,"quot","","",15,null],[12,"rem","","",15,null],[3,"ldiv_t","","",null,null],[12,"quot","","",16,null],[12,"rem","","",16,null],[3,"lldiv_t","","",null,null],[12,"quot","","",17,null],[12,"rem","","",17,null],[6,"u_char","","",null,null],[6,"u_short","","",null,null],[6,"u_int","","",null,null],[6,"u_long","","",null,null],[6,"quad_t","","",null,null],[6,"u_quad_t","","",null,null],[6,"fsid_t","","",null,null],[6,"loff_t","","",null,null],[6,"ino_t","","",null,null],[6,"dev_t","","",null,null],[6,"gid_t","","",null,null],[6,"mode_t","","",null,null],[6,"nlink_t","","",null,null],[6,"uid_t","","",null,null],[6,"off_t","","",null,null],[6,"pid_t","","",null,null],[6,"id_t","","",null,null],[6,"daddr_t","","",null,null],[6,"caddr_t","","",null,null],[6,"key_t","","",null,null],[6,"clock_t","","",null,null],[6,"clockid_t","","",null,null],[6,"time_t","","",null,null],[6,"timer_t","","",null,null],[6,"ulong","","",null,null],[6,"ushort","","",null,null],[6,"uint","","",null,null],[6,"u_int8_t","","",null,null],[6,"u_int16_t","","",null,null],[6,"u_int32_t","","",null,null],[6,"u_int64_t","","",null,null],[6,"register_t","","",null,null],[3,"__sigset_t","","",null,null],[12,"__val","","",18,null],[6,"sigset_t","","",null,null],[3,"timeval","","",null,null],[12,"tv_sec","","",19,null],[12,"tv_usec","","",19,null],[3,"timespec","","",null,null],[12,"tv_sec","","",20,null],[12,"tv_nsec","","",20,null],[6,"suseconds_t","","",null,null],[6,"__fd_mask","","",null,null],[3,"fd_set","","",null,null],[12,"__fds_bits","","",21,null],[6,"fd_mask","","",null,null],[6,"blksize_t","","",null,null],[6,"blkcnt_t","","",null,null],[6,"fsblkcnt_t","","",null,null],[6,"fsfilcnt_t","","",null,null],[3,"__pthread_rwlock_arch_t","","",null,null],[12,"__readers","","",22,null],[12,"__writers","","",22,null],[12,"__wrphase_futex","","",22,null],[12,"__writers_futex","","",22,null],[12,"__pad3","","",22,null],[12,"__pad4","","",22,null],[12,"__cur_writer","","",22,null],[12,"__shared","","",22,null],[12,"__rwelision","","",22,null],[12,"__pad1","","",22,null],[12,"__pad2","","",22,null],[12,"__flags","","",22,null],[3,"__pthread_internal_list","","",null,null],[12,"__prev","","",23,null],[12,"__next","","",23,null],[6,"__pthread_list_t","","",null,null],[3,"__pthread_mutex_s","","",null,null],[12,"__lock","","",24,null],[12,"__count","","",24,null],[12,"__owner","","",24,null],[12,"__nusers","","",24,null],[12,"__kind","","",24,null],[12,"__spins","","",24,null],[12,"__elision","","",24,null],[12,"__list","","",24,null],[3,"__pthread_cond_s","","",null,null],[12,"__bindgen_anon_1","","",25,null],[12,"__bindgen_anon_2","","",25,null],[12,"__g_refs","","",25,null],[12,"__g_size","","",25,null],[12,"__g1_orig_size","","",25,null],[12,"__wrefs","","",25,null],[12,"__g_signals","","",25,null],[19,"__pthread_cond_s__bindgen_ty_1","","",null,null],[12,"__wseq","","",26,null],[12,"__wseq32","","",26,null],[3,"__pthread_cond_s__bindgen_ty_1__bindgen_ty_1","","",null,null],[12,"__low","","",27,null],[12,"__high","","",27,null],[19,"__pthread_cond_s__bindgen_ty_2","","",null,null],[12,"__g1_start","","",28,null],[12,"__g1_start32","","",28,null],[3,"__pthread_cond_s__bindgen_ty_2__bindgen_ty_1","","",null,null],[12,"__low","","",29,null],[12,"__high","","",29,null],[6,"pthread_t","","",null,null],[19,"pthread_mutexattr_t","","",null,null],[12,"__size","","",30,null],[12,"__align","","",30,null],[19,"pthread_condattr_t","","",null,null],[12,"__size","","",31,null],[12,"__align","","",31,null],[6,"pthread_key_t","","",null,null],[6,"pthread_once_t","","",null,null],[19,"pthread_attr_t","","",null,null],[12,"__size","","",32,null],[12,"__align","","",32,null],[19,"pthread_mutex_t","","",null,null],[12,"__data","","",33,null],[12,"__size","","",33,null],[12,"__align","","",33,null],[19,"pthread_cond_t","","",null,null],[12,"__data","","",34,null],[12,"__size","","",34,null],[12,"__align","","",34,null],[19,"pthread_rwlock_t","","",null,null],[12,"__data","","",35,null],[12,"__size","","",35,null],[12,"__align","","",35,null],[19,"pthread_rwlockattr_t","","",null,null],[12,"__size","","",36,null],[12,"__align","","",36,null],[6,"pthread_spinlock_t","","",null,null],[19,"pthread_barrier_t","","",null,null],[12,"__size","","",37,null],[12,"__align","","",37,null],[19,"pthread_barrierattr_t","","",null,null],[12,"__size","","",38,null],[12,"__align","","",38,null],[3,"random_data","","",null,null],[12,"fptr","","",39,null],[12,"rptr","","",39,null],[12,"state","","",39,null],[12,"rand_type","","",39,null],[12,"rand_deg","","",39,null],[12,"rand_sep","","",39,null],[12,"end_ptr","","",39,null],[3,"drand48_data","","",null,null],[12,"__x","","",40,null],[12,"__old_x","","",40,null],[12,"__c","","",40,null],[12,"__init","","",40,null],[12,"__a","","",40,null],[6,"__compar_fn_t","","",null,null],[6,"__m128d","","",null,null],[6,"__m128i","","",null,null],[6,"__v2df","","",null,null],[6,"__v2di","","",null,null],[6,"__v8hi","","",null,null],[6,"__v16qi","","",null,null],[6,"__v2du","","",null,null],[6,"__v8hu","","",null,null],[6,"__v16qu","","",null,null],[6,"__v16qs","","",null,null],[17,"SDL_PIXELTYPE_UNKNOWN","","",null,null],[17,"SDL_PIXELTYPE_INDEX1","","",null,null],[17,"SDL_PIXELTYPE_INDEX4","","",null,null],[17,"SDL_PIXELTYPE_INDEX8","","",null,null],[17,"SDL_PIXELTYPE_PACKED8","","",null,null],[17,"SDL_PIXELTYPE_PACKED16","","",null,null],[17,"SDL_PIXELTYPE_PACKED32","","",null,null],[17,"SDL_PIXELTYPE_ARRAYU8","","",null,null],[17,"SDL_PIXELTYPE_ARRAYU16","","",null,null],[17,"SDL_PIXELTYPE_ARRAYU32","","",null,null],[17,"SDL_PIXELTYPE_ARRAYF16","","",null,null],[17,"SDL_PIXELTYPE_ARRAYF32","","",null,null],[4,"_bindgen_ty_1","","Pixel type.",null,null],[13,"SDL_PIXELTYPE_UNKNOWN","","",41,null],[13,"SDL_PIXELTYPE_INDEX1","","",41,null],[13,"SDL_PIXELTYPE_INDEX4","","",41,null],[13,"SDL_PIXELTYPE_INDEX8","","",41,null],[13,"SDL_PIXELTYPE_PACKED8","","",41,null],[13,"SDL_PIXELTYPE_PACKED16","","",41,null],[13,"SDL_PIXELTYPE_PACKED32","","",41,null],[13,"SDL_PIXELTYPE_ARRAYU8","","",41,null],[13,"SDL_PIXELTYPE_ARRAYU16","","",41,null],[13,"SDL_PIXELTYPE_ARRAYU32","","",41,null],[13,"SDL_PIXELTYPE_ARRAYF16","","",41,null],[13,"SDL_PIXELTYPE_ARRAYF32","","",41,null],[17,"SDL_BITMAPORDER_NONE","","",null,null],[17,"SDL_BITMAPORDER_4321","","",null,null],[17,"SDL_BITMAPORDER_1234","","",null,null],[4,"_bindgen_ty_2","","Bitmap pixel order, high bit -> low bit.",null,null],[13,"SDL_BITMAPORDER_NONE","","",42,null],[13,"SDL_BITMAPORDER_4321","","",42,null],[13,"SDL_BITMAPORDER_1234","","",42,null],[17,"SDL_PACKEDORDER_NONE","","",null,null],[17,"SDL_PACKEDORDER_XRGB","","",null,null],[17,"SDL_PACKEDORDER_RGBX","","",null,null],[17,"SDL_PACKEDORDER_ARGB","","",null,null],[17,"SDL_PACKEDORDER_RGBA","","",null,null],[17,"SDL_PACKEDORDER_XBGR","","",null,null],[17,"SDL_PACKEDORDER_BGRX","","",null,null],[17,"SDL_PACKEDORDER_ABGR","","",null,null],[17,"SDL_PACKEDORDER_BGRA","","",null,null],[4,"_bindgen_ty_3","","Packed component order, high bit -> low bit.",null,null],[13,"SDL_PACKEDORDER_NONE","","",43,null],[13,"SDL_PACKEDORDER_XRGB","","",43,null],[13,"SDL_PACKEDORDER_RGBX","","",43,null],[13,"SDL_PACKEDORDER_ARGB","","",43,null],[13,"SDL_PACKEDORDER_RGBA","","",43,null],[13,"SDL_PACKEDORDER_XBGR","","",43,null],[13,"SDL_PACKEDORDER_BGRX","","",43,null],[13,"SDL_PACKEDORDER_ABGR","","",43,null],[13,"SDL_PACKEDORDER_BGRA","","",43,null],[17,"SDL_ARRAYORDER_NONE","","",null,null],[17,"SDL_ARRAYORDER_RGB","","",null,null],[17,"SDL_ARRAYORDER_RGBA","","",null,null],[17,"SDL_ARRAYORDER_ARGB","","",null,null],[17,"SDL_ARRAYORDER_BGR","","",null,null],[17,"SDL_ARRAYORDER_BGRA","","",null,null],[17,"SDL_ARRAYORDER_ABGR","","",null,null],[4,"_bindgen_ty_4","","Array component order, low byte -> high byte.",null,null],[13,"SDL_ARRAYORDER_NONE","","",44,null],[13,"SDL_ARRAYORDER_RGB","","",44,null],[13,"SDL_ARRAYORDER_RGBA","","",44,null],[13,"SDL_ARRAYORDER_ARGB","","",44,null],[13,"SDL_ARRAYORDER_BGR","","",44,null],[13,"SDL_ARRAYORDER_BGRA","","",44,null],[13,"SDL_ARRAYORDER_ABGR","","",44,null],[17,"SDL_PACKEDLAYOUT_NONE","","",null,null],[17,"SDL_PACKEDLAYOUT_332","","",null,null],[17,"SDL_PACKEDLAYOUT_4444","","",null,null],[17,"SDL_PACKEDLAYOUT_1555","","",null,null],[17,"SDL_PACKEDLAYOUT_5551","","",null,null],[17,"SDL_PACKEDLAYOUT_565","","",null,null],[17,"SDL_PACKEDLAYOUT_8888","","",null,null],[17,"SDL_PACKEDLAYOUT_2101010","","",null,null],[17,"SDL_PACKEDLAYOUT_1010102","","",null,null],[4,"_bindgen_ty_5","","Packed component layout.",null,null],[13,"SDL_PACKEDLAYOUT_NONE","","",45,null],[13,"SDL_PACKEDLAYOUT_332","","",45,null],[13,"SDL_PACKEDLAYOUT_4444","","",45,null],[13,"SDL_PACKEDLAYOUT_1555","","",45,null],[13,"SDL_PACKEDLAYOUT_5551","","",45,null],[13,"SDL_PACKEDLAYOUT_565","","",45,null],[13,"SDL_PACKEDLAYOUT_8888","","",45,null],[13,"SDL_PACKEDLAYOUT_2101010","","",45,null],[13,"SDL_PACKEDLAYOUT_1010102","","",45,null],[17,"SDL_PIXELFORMAT_UNKNOWN","","",null,null],[17,"SDL_PIXELFORMAT_INDEX1LSB","","",null,null],[17,"SDL_PIXELFORMAT_INDEX1MSB","","",null,null],[17,"SDL_PIXELFORMAT_INDEX4LSB","","",null,null],[17,"SDL_PIXELFORMAT_INDEX4MSB","","",null,null],[17,"SDL_PIXELFORMAT_INDEX8","","",null,null],[17,"SDL_PIXELFORMAT_RGB332","","",null,null],[17,"SDL_PIXELFORMAT_RGB444","","",null,null],[17,"SDL_PIXELFORMAT_RGB555","","",null,null],[17,"SDL_PIXELFORMAT_BGR555","","",null,null],[17,"SDL_PIXELFORMAT_ARGB4444","","",null,null],[17,"SDL_PIXELFORMAT_RGBA4444","","",null,null],[17,"SDL_PIXELFORMAT_ABGR4444","","",null,null],[17,"SDL_PIXELFORMAT_BGRA4444","","",null,null],[17,"SDL_PIXELFORMAT_ARGB1555","","",null,null],[17,"SDL_PIXELFORMAT_RGBA5551","","",null,null],[17,"SDL_PIXELFORMAT_ABGR1555","","",null,null],[17,"SDL_PIXELFORMAT_BGRA5551","","",null,null],[17,"SDL_PIXELFORMAT_RGB565","","",null,null],[17,"SDL_PIXELFORMAT_BGR565","","",null,null],[17,"SDL_PIXELFORMAT_RGB24","","",null,null],[17,"SDL_PIXELFORMAT_BGR24","","",null,null],[17,"SDL_PIXELFORMAT_RGB888","","",null,null],[17,"SDL_PIXELFORMAT_RGBX8888","","",null,null],[17,"SDL_PIXELFORMAT_BGR888","","",null,null],[17,"SDL_PIXELFORMAT_BGRX8888","","",null,null],[17,"SDL_PIXELFORMAT_ARGB8888","","",null,null],[17,"SDL_PIXELFORMAT_RGBA8888","","",null,null],[17,"SDL_PIXELFORMAT_ABGR8888","","",null,null],[17,"SDL_PIXELFORMAT_BGRA8888","","",null,null],[17,"SDL_PIXELFORMAT_ARGB2101010","","",null,null],[17,"SDL_PIXELFORMAT_RGBA32","","",null,null],[17,"SDL_PIXELFORMAT_ARGB32","","",null,null],[17,"SDL_PIXELFORMAT_BGRA32","","",null,null],[17,"SDL_PIXELFORMAT_ABGR32","","",null,null],[17,"SDL_PIXELFORMAT_YV12","","",null,null],[17,"SDL_PIXELFORMAT_IYUV","","",null,null],[17,"SDL_PIXELFORMAT_YUY2","","",null,null],[17,"SDL_PIXELFORMAT_UYVY","","",null,null],[17,"SDL_PIXELFORMAT_YVYU","","",null,null],[17,"SDL_PIXELFORMAT_NV12","","",null,null],[17,"SDL_PIXELFORMAT_NV21","","",null,null],[4,"_bindgen_ty_6","","",null,null],[13,"SDL_PIXELFORMAT_UNKNOWN","","",46,null],[13,"SDL_PIXELFORMAT_INDEX1LSB","","",46,null],[13,"SDL_PIXELFORMAT_INDEX1MSB","","",46,null],[13,"SDL_PIXELFORMAT_INDEX4LSB","","",46,null],[13,"SDL_PIXELFORMAT_INDEX4MSB","","",46,null],[13,"SDL_PIXELFORMAT_INDEX8","","",46,null],[13,"SDL_PIXELFORMAT_RGB332","","",46,null],[13,"SDL_PIXELFORMAT_RGB444","","",46,null],[13,"SDL_PIXELFORMAT_RGB555","","",46,null],[13,"SDL_PIXELFORMAT_BGR555","","",46,null],[13,"SDL_PIXELFORMAT_ARGB4444","","",46,null],[13,"SDL_PIXELFORMAT_RGBA4444","","",46,null],[13,"SDL_PIXELFORMAT_ABGR4444","","",46,null],[13,"SDL_PIXELFORMAT_BGRA4444","","",46,null],[13,"SDL_PIXELFORMAT_ARGB1555","","",46,null],[13,"SDL_PIXELFORMAT_RGBA5551","","",46,null],[13,"SDL_PIXELFORMAT_ABGR1555","","",46,null],[13,"SDL_PIXELFORMAT_BGRA5551","","",46,null],[13,"SDL_PIXELFORMAT_RGB565","","",46,null],[13,"SDL_PIXELFORMAT_BGR565","","",46,null],[13,"SDL_PIXELFORMAT_RGB24","","",46,null],[13,"SDL_PIXELFORMAT_BGR24","","",46,null],[13,"SDL_PIXELFORMAT_RGB888","","",46,null],[13,"SDL_PIXELFORMAT_RGBX8888","","",46,null],[13,"SDL_PIXELFORMAT_BGR888","","",46,null],[13,"SDL_PIXELFORMAT_BGRX8888","","",46,null],[13,"SDL_PIXELFORMAT_ARGB8888","","",46,null],[13,"SDL_PIXELFORMAT_RGBA8888","","",46,null],[13,"SDL_PIXELFORMAT_ABGR8888","","",46,null],[13,"SDL_PIXELFORMAT_BGRA8888","","",46,null],[13,"SDL_PIXELFORMAT_ARGB2101010","","",46,null],[13,"SDL_PIXELFORMAT_YV12","","",46,null],[13,"SDL_PIXELFORMAT_IYUV","","",46,null],[13,"SDL_PIXELFORMAT_YUY2","","",46,null],[13,"SDL_PIXELFORMAT_UYVY","","",46,null],[13,"SDL_PIXELFORMAT_YVYU","","",46,null],[13,"SDL_PIXELFORMAT_NV12","","",46,null],[13,"SDL_PIXELFORMAT_NV21","","",46,null],[3,"SDL_Color","","",null,null],[12,"r","","",47,null],[12,"g","","",47,null],[12,"b","","",47,null],[12,"a","","",47,null],[3,"SDL_Palette","","",null,null],[12,"ncolors","","",48,null],[12,"colors","","",48,null],[12,"version","","",48,null],[12,"refcount","","",48,null],[3,"SDL_PixelFormat","","\\\\note Everything in the pixel format structure is …",null,null],[12,"format","","",49,null],[12,"palette","","",49,null],[12,"BitsPerPixel","","",49,null],[12,"BytesPerPixel","","",49,null],[12,"padding","","",49,null],[12,"Rmask","","",49,null],[12,"Gmask","","",49,null],[12,"Bmask","","",49,null],[12,"Amask","","",49,null],[12,"Rloss","","",49,null],[12,"Gloss","","",49,null],[12,"Bloss","","",49,null],[12,"Aloss","","",49,null],[12,"Rshift","","",49,null],[12,"Gshift","","",49,null],[12,"Bshift","","",49,null],[12,"Ashift","","",49,null],[12,"refcount","","",49,null],[12,"next","","",49,null],[3,"SDL_Point","","\\\\brief  The structure that defines a point",null,null],[12,"x","","",50,null],[12,"y","","",50,null],[3,"SDL_Rect","","\\\\brief A rectangle, with the origin at the upper left.",null,null],[12,"x","","",51,null],[12,"y","","",51,null],[12,"w","","",51,null],[12,"h","","",51,null],[4,"SDL_BlendMode","","\\\\brief The blend mode used in SDL_RenderCopy() and …",null,null],[13,"SDL_BLENDMODE_NONE","","",52,null],[13,"SDL_BLENDMODE_BLEND","","",52,null],[13,"SDL_BLENDMODE_ADD","","",52,null],[13,"SDL_BLENDMODE_MOD","","",52,null],[13,"SDL_BLENDMODE_INVALID","","",52,null],[4,"SDL_BlendOperation","","\\\\brief The blend operation used when combining source and …",null,null],[13,"SDL_BLENDOPERATION_ADD","","",53,null],[13,"SDL_BLENDOPERATION_SUBTRACT","","",53,null],[13,"SDL_BLENDOPERATION_REV_SUBTRACT","","",53,null],[13,"SDL_BLENDOPERATION_MINIMUM","","",53,null],[13,"SDL_BLENDOPERATION_MAXIMUM","","",53,null],[4,"SDL_BlendFactor","","\\\\brief The normalized factor used to multiply pixel …",null,null],[13,"SDL_BLENDFACTOR_ZERO","","",54,null],[13,"SDL_BLENDFACTOR_ONE","","",54,null],[13,"SDL_BLENDFACTOR_SRC_COLOR","","",54,null],[13,"SDL_BLENDFACTOR_ONE_MINUS_SRC_COLOR","","",54,null],[13,"SDL_BLENDFACTOR_SRC_ALPHA","","",54,null],[13,"SDL_BLENDFACTOR_ONE_MINUS_SRC_ALPHA","","",54,null],[13,"SDL_BLENDFACTOR_DST_COLOR","","",54,null],[13,"SDL_BLENDFACTOR_ONE_MINUS_DST_COLOR","","",54,null],[13,"SDL_BLENDFACTOR_DST_ALPHA","","",54,null],[13,"SDL_BLENDFACTOR_ONE_MINUS_DST_ALPHA","","",54,null],[3,"SDL_Surface","","\\\\brief A collection of pixels used in software blitting.",null,null],[12,"flags","","< Read-only",55,null],[12,"format","","< Read-only",55,null],[12,"w","","< Read-only",55,null],[12,"h","","< Read-only",55,null],[12,"pitch","","< Read-only",55,null],[12,"pixels","","< Read-write",55,null],[12,"userdata","","< Read-write",55,null],[12,"locked","","< Read-only",55,null],[12,"lock_data","","< Read-only",55,null],[12,"clip_rect","","< Read-only",55,null],[12,"map","","< Private",55,null],[12,"refcount","","< Read-mostly",55,null],[6,"SDL_blit","","\\\\brief The type of function used for surface blitting …",null,null],[3,"SDL_DisplayMode","","\\\\brief  The structure that defines a display mode",null,null],[12,"format","","< pixel format",56,null],[12,"w","","< width, in screen coordinates",56,null],[12,"h","","< height, in screen coordinates",56,null],[12,"refresh_rate","","< refresh rate (or zero for unspecified)",56,null],[12,"driverdata","","< driver-specific data, initialize to 0",56,null],[3,"SDL_Window","","",null,null],[4,"SDL_WindowFlags","","\\\\brief The flags on a window",null,null],[13,"SDL_WINDOW_FULLSCREEN","","",57,null],[13,"SDL_WINDOW_OPENGL","","",57,null],[13,"SDL_WINDOW_SHOWN","","",57,null],[13,"SDL_WINDOW_HIDDEN","","",57,null],[13,"SDL_WINDOW_BORDERLESS","","",57,null],[13,"SDL_WINDOW_RESIZABLE","","",57,null],[13,"SDL_WINDOW_MINIMIZED","","",57,null],[13,"SDL_WINDOW_MAXIMIZED","","",57,null],[13,"SDL_WINDOW_INPUT_GRABBED","","",57,null],[13,"SDL_WINDOW_INPUT_FOCUS","","",57,null],[13,"SDL_WINDOW_MOUSE_FOCUS","","",57,null],[13,"SDL_WINDOW_FULLSCREEN_DESKTOP","","",57,null],[13,"SDL_WINDOW_FOREIGN","","",57,null],[13,"SDL_WINDOW_ALLOW_HIGHDPI","","",57,null],[13,"SDL_WINDOW_MOUSE_CAPTURE","","",57,null],[13,"SDL_WINDOW_ALWAYS_ON_TOP","","",57,null],[13,"SDL_WINDOW_SKIP_TASKBAR","","",57,null],[13,"SDL_WINDOW_UTILITY","","",57,null],[13,"SDL_WINDOW_TOOLTIP","","",57,null],[13,"SDL_WINDOW_POPUP_MENU","","",57,null],[13,"SDL_WINDOW_VULKAN","","",57,null],[4,"SDL_WindowEventID","","\\\\brief Event subtype for window events",null,null],[13,"SDL_WINDOWEVENT_NONE","","",58,null],[13,"SDL_WINDOWEVENT_SHOWN","","",58,null],[13,"SDL_WINDOWEVENT_HIDDEN","","",58,null],[13,"SDL_WINDOWEVENT_EXPOSED","","",58,null],[13,"SDL_WINDOWEVENT_MOVED","","",58,null],[13,"SDL_WINDOWEVENT_RESIZED","","",58,null],[13,"SDL_WINDOWEVENT_SIZE_CHANGED","","",58,null],[13,"SDL_WINDOWEVENT_MINIMIZED","","",58,null],[13,"SDL_WINDOWEVENT_MAXIMIZED","","",58,null],[13,"SDL_WINDOWEVENT_RESTORED","","",58,null],[13,"SDL_WINDOWEVENT_ENTER","","",58,null],[13,"SDL_WINDOWEVENT_LEAVE","","",58,null],[13,"SDL_WINDOWEVENT_FOCUS_GAINED","","",58,null],[13,"SDL_WINDOWEVENT_FOCUS_LOST","","",58,null],[13,"SDL_WINDOWEVENT_CLOSE","","",58,null],[13,"SDL_WINDOWEVENT_TAKE_FOCUS","","",58,null],[13,"SDL_WINDOWEVENT_HIT_TEST","","",58,null],[6,"SDL_GLContext","","\\\\brief An opaque handle to an OpenGL context.",null,null],[4,"SDL_GLattr","","\\\\brief OpenGL configuration attributes",null,null],[13,"SDL_GL_RED_SIZE","","",59,null],[13,"SDL_GL_GREEN_SIZE","","",59,null],[13,"SDL_GL_BLUE_SIZE","","",59,null],[13,"SDL_GL_ALPHA_SIZE","","",59,null],[13,"SDL_GL_BUFFER_SIZE","","",59,null],[13,"SDL_GL_DOUBLEBUFFER","","",59,null],[13,"SDL_GL_DEPTH_SIZE","","",59,null],[13,"SDL_GL_STENCIL_SIZE","","",59,null],[13,"SDL_GL_ACCUM_RED_SIZE","","",59,null],[13,"SDL_GL_ACCUM_GREEN_SIZE","","",59,null],[13,"SDL_GL_ACCUM_BLUE_SIZE","","",59,null],[13,"SDL_GL_ACCUM_ALPHA_SIZE","","",59,null],[13,"SDL_GL_STEREO","","",59,null],[13,"SDL_GL_MULTISAMPLEBUFFERS","","",59,null],[13,"SDL_GL_MULTISAMPLESAMPLES","","",59,null],[13,"SDL_GL_ACCELERATED_VISUAL","","",59,null],[13,"SDL_GL_RETAINED_BACKING","","",59,null],[13,"SDL_GL_CONTEXT_MAJOR_VERSION","","",59,null],[13,"SDL_GL_CONTEXT_MINOR_VERSION","","",59,null],[13,"SDL_GL_CONTEXT_EGL","","",59,null],[13,"SDL_GL_CONTEXT_FLAGS","","",59,null],[13,"SDL_GL_CONTEXT_PROFILE_MASK","","",59,null],[13,"SDL_GL_SHARE_WITH_CURRENT_CONTEXT","","",59,null],[13,"SDL_GL_FRAMEBUFFER_SRGB_CAPABLE","","",59,null],[13,"SDL_GL_CONTEXT_RELEASE_BEHAVIOR","","",59,null],[13,"SDL_GL_CONTEXT_RESET_NOTIFICATION","","",59,null],[13,"SDL_GL_CONTEXT_NO_ERROR","","",59,null],[4,"SDL_GLprofile","","",null,null],[13,"SDL_GL_CONTEXT_PROFILE_CORE","","",60,null],[13,"SDL_GL_CONTEXT_PROFILE_COMPATIBILITY","","",60,null],[13,"SDL_GL_CONTEXT_PROFILE_ES","","",60,null],[4,"SDL_GLcontextFlag","","",null,null],[13,"SDL_GL_CONTEXT_DEBUG_FLAG","","",61,null],[13,"SDL_GL_CONTEXT_FORWARD_COMPATIBLE_FLAG","","",61,null],[13,"SDL_GL_CONTEXT_ROBUST_ACCESS_FLAG","","",61,null],[13,"SDL_GL_CONTEXT_RESET_ISOLATION_FLAG","","",61,null],[4,"SDL_GLcontextReleaseFlag","","",null,null],[13,"SDL_GL_CONTEXT_RELEASE_BEHAVIOR_NONE","","",62,null],[13,"SDL_GL_CONTEXT_RELEASE_BEHAVIOR_FLUSH","","",62,null],[4,"SDL_GLContextResetNotification","","",null,null],[13,"SDL_GL_CONTEXT_RESET_NO_NOTIFICATION","","",63,null],[13,"SDL_GL_CONTEXT_RESET_LOSE_CONTEXT","","",63,null],[4,"SDL_HitTestResult","","\\\\brief Possible return values from the SDL_HitTest …",null,null],[13,"SDL_HITTEST_NORMAL","","",64,null],[13,"SDL_HITTEST_DRAGGABLE","","",64,null],[13,"SDL_HITTEST_RESIZE_TOPLEFT","","",64,null],[13,"SDL_HITTEST_RESIZE_TOP","","",64,null],[13,"SDL_HITTEST_RESIZE_TOPRIGHT","","",64,null],[13,"SDL_HITTEST_RESIZE_RIGHT","","",64,null],[13,"SDL_HITTEST_RESIZE_BOTTOMRIGHT","","",64,null],[13,"SDL_HITTEST_RESIZE_BOTTOM","","",64,null],[13,"SDL_HITTEST_RESIZE_BOTTOMLEFT","","",64,null],[13,"SDL_HITTEST_RESIZE_LEFT","","",64,null],[6,"SDL_HitTest","","\\\\brief Callback used for hit-testing.",null,null],[4,"SDL_Scancode","","\\\\brief The SDL keyboard scancode representation.",null,null],[13,"SDL_SCANCODE_UNKNOWN","","",65,null],[13,"SDL_SCANCODE_A","","",65,null],[13,"SDL_SCANCODE_B","","",65,null],[13,"SDL_SCANCODE_C","","",65,null],[13,"SDL_SCANCODE_D","","",65,null],[13,"SDL_SCANCODE_E","","",65,null],[13,"SDL_SCANCODE_F","","",65,null],[13,"SDL_SCANCODE_G","","",65,null],[13,"SDL_SCANCODE_H","","",65,null],[13,"SDL_SCANCODE_I","","",65,null],[13,"SDL_SCANCODE_J","","",65,null],[13,"SDL_SCANCODE_K","","",65,null],[13,"SDL_SCANCODE_L","","",65,null],[13,"SDL_SCANCODE_M","","",65,null],[13,"SDL_SCANCODE_N","","",65,null],[13,"SDL_SCANCODE_O","","",65,null],[13,"SDL_SCANCODE_P","","",65,null],[13,"SDL_SCANCODE_Q","","",65,null],[13,"SDL_SCANCODE_R","","",65,null],[13,"SDL_SCANCODE_S","","",65,null],[13,"SDL_SCANCODE_T","","",65,null],[13,"SDL_SCANCODE_U","","",65,null],[13,"SDL_SCANCODE_V","","",65,null],[13,"SDL_SCANCODE_W","","",65,null],[13,"SDL_SCANCODE_X","","",65,null],[13,"SDL_SCANCODE_Y","","",65,null],[13,"SDL_SCANCODE_Z","","",65,null],[13,"SDL_SCANCODE_1","","",65,null],[13,"SDL_SCANCODE_2","","",65,null],[13,"SDL_SCANCODE_3","","",65,null],[13,"SDL_SCANCODE_4","","",65,null],[13,"SDL_SCANCODE_5","","",65,null],[13,"SDL_SCANCODE_6","","",65,null],[13,"SDL_SCANCODE_7","","",65,null],[13,"SDL_SCANCODE_8","","",65,null],[13,"SDL_SCANCODE_9","","",65,null],[13,"SDL_SCANCODE_0","","",65,null],[13,"SDL_SCANCODE_RETURN","","",65,null],[13,"SDL_SCANCODE_ESCAPE","","",65,null],[13,"SDL_SCANCODE_BACKSPACE","","",65,null],[13,"SDL_SCANCODE_TAB","","",65,null],[13,"SDL_SCANCODE_SPACE","","",65,null],[13,"SDL_SCANCODE_MINUS","","",65,null],[13,"SDL_SCANCODE_EQUALS","","",65,null],[13,"SDL_SCANCODE_LEFTBRACKET","","",65,null],[13,"SDL_SCANCODE_RIGHTBRACKET","","",65,null],[13,"SDL_SCANCODE_BACKSLASH","","",65,null],[13,"SDL_SCANCODE_NONUSHASH","","",65,null],[13,"SDL_SCANCODE_SEMICOLON","","",65,null],[13,"SDL_SCANCODE_APOSTROPHE","","",65,null],[13,"SDL_SCANCODE_GRAVE","","",65,null],[13,"SDL_SCANCODE_COMMA","","",65,null],[13,"SDL_SCANCODE_PERIOD","","",65,null],[13,"SDL_SCANCODE_SLASH","","",65,null],[13,"SDL_SCANCODE_CAPSLOCK","","",65,null],[13,"SDL_SCANCODE_F1","","",65,null],[13,"SDL_SCANCODE_F2","","",65,null],[13,"SDL_SCANCODE_F3","","",65,null],[13,"SDL_SCANCODE_F4","","",65,null],[13,"SDL_SCANCODE_F5","","",65,null],[13,"SDL_SCANCODE_F6","","",65,null],[13,"SDL_SCANCODE_F7","","",65,null],[13,"SDL_SCANCODE_F8","","",65,null],[13,"SDL_SCANCODE_F9","","",65,null],[13,"SDL_SCANCODE_F10","","",65,null],[13,"SDL_SCANCODE_F11","","",65,null],[13,"SDL_SCANCODE_F12","","",65,null],[13,"SDL_SCANCODE_PRINTSCREEN","","",65,null],[13,"SDL_SCANCODE_SCROLLLOCK","","",65,null],[13,"SDL_SCANCODE_PAUSE","","",65,null],[13,"SDL_SCANCODE_INSERT","","",65,null],[13,"SDL_SCANCODE_HOME","","",65,null],[13,"SDL_SCANCODE_PAGEUP","","",65,null],[13,"SDL_SCANCODE_DELETE","","",65,null],[13,"SDL_SCANCODE_END","","",65,null],[13,"SDL_SCANCODE_PAGEDOWN","","",65,null],[13,"SDL_SCANCODE_RIGHT","","",65,null],[13,"SDL_SCANCODE_LEFT","","",65,null],[13,"SDL_SCANCODE_DOWN","","",65,null],[13,"SDL_SCANCODE_UP","","",65,null],[13,"SDL_SCANCODE_NUMLOCKCLEAR","","",65,null],[13,"SDL_SCANCODE_KP_DIVIDE","","",65,null],[13,"SDL_SCANCODE_KP_MULTIPLY","","",65,null],[13,"SDL_SCANCODE_KP_MINUS","","",65,null],[13,"SDL_SCANCODE_KP_PLUS","","",65,null],[13,"SDL_SCANCODE_KP_ENTER","","",65,null],[13,"SDL_SCANCODE_KP_1","","",65,null],[13,"SDL_SCANCODE_KP_2","","",65,null],[13,"SDL_SCANCODE_KP_3","","",65,null],[13,"SDL_SCANCODE_KP_4","","",65,null],[13,"SDL_SCANCODE_KP_5","","",65,null],[13,"SDL_SCANCODE_KP_6","","",65,null],[13,"SDL_SCANCODE_KP_7","","",65,null],[13,"SDL_SCANCODE_KP_8","","",65,null],[13,"SDL_SCANCODE_KP_9","","",65,null],[13,"SDL_SCANCODE_KP_0","","",65,null],[13,"SDL_SCANCODE_KP_PERIOD","","",65,null],[13,"SDL_SCANCODE_NONUSBACKSLASH","","",65,null],[13,"SDL_SCANCODE_APPLICATION","","",65,null],[13,"SDL_SCANCODE_POWER","","",65,null],[13,"SDL_SCANCODE_KP_EQUALS","","",65,null],[13,"SDL_SCANCODE_F13","","",65,null],[13,"SDL_SCANCODE_F14","","",65,null],[13,"SDL_SCANCODE_F15","","",65,null],[13,"SDL_SCANCODE_F16","","",65,null],[13,"SDL_SCANCODE_F17","","",65,null],[13,"SDL_SCANCODE_F18","","",65,null],[13,"SDL_SCANCODE_F19","","",65,null],[13,"SDL_SCANCODE_F20","","",65,null],[13,"SDL_SCANCODE_F21","","",65,null],[13,"SDL_SCANCODE_F22","","",65,null],[13,"SDL_SCANCODE_F23","","",65,null],[13,"SDL_SCANCODE_F24","","",65,null],[13,"SDL_SCANCODE_EXECUTE","","",65,null],[13,"SDL_SCANCODE_HELP","","",65,null],[13,"SDL_SCANCODE_MENU","","",65,null],[13,"SDL_SCANCODE_SELECT","","",65,null],[13,"SDL_SCANCODE_STOP","","",65,null],[13,"SDL_SCANCODE_AGAIN","","",65,null],[13,"SDL_SCANCODE_UNDO","","",65,null],[13,"SDL_SCANCODE_CUT","","",65,null],[13,"SDL_SCANCODE_COPY","","",65,null],[13,"SDL_SCANCODE_PASTE","","",65,null],[13,"SDL_SCANCODE_FIND","","",65,null],[13,"SDL_SCANCODE_MUTE","","",65,null],[13,"SDL_SCANCODE_VOLUMEUP","","",65,null],[13,"SDL_SCANCODE_VOLUMEDOWN","","",65,null],[13,"SDL_SCANCODE_KP_COMMA","","",65,null],[13,"SDL_SCANCODE_KP_EQUALSAS400","","",65,null],[13,"SDL_SCANCODE_INTERNATIONAL1","","",65,null],[13,"SDL_SCANCODE_INTERNATIONAL2","","",65,null],[13,"SDL_SCANCODE_INTERNATIONAL3","","",65,null],[13,"SDL_SCANCODE_INTERNATIONAL4","","",65,null],[13,"SDL_SCANCODE_INTERNATIONAL5","","",65,null],[13,"SDL_SCANCODE_INTERNATIONAL6","","",65,null],[13,"SDL_SCANCODE_INTERNATIONAL7","","",65,null],[13,"SDL_SCANCODE_INTERNATIONAL8","","",65,null],[13,"SDL_SCANCODE_INTERNATIONAL9","","",65,null],[13,"SDL_SCANCODE_LANG1","","",65,null],[13,"SDL_SCANCODE_LANG2","","",65,null],[13,"SDL_SCANCODE_LANG3","","",65,null],[13,"SDL_SCANCODE_LANG4","","",65,null],[13,"SDL_SCANCODE_LANG5","","",65,null],[13,"SDL_SCANCODE_LANG6","","",65,null],[13,"SDL_SCANCODE_LANG7","","",65,null],[13,"SDL_SCANCODE_LANG8","","",65,null],[13,"SDL_SCANCODE_LANG9","","",65,null],[13,"SDL_SCANCODE_ALTERASE","","",65,null],[13,"SDL_SCANCODE_SYSREQ","","",65,null],[13,"SDL_SCANCODE_CANCEL","","",65,null],[13,"SDL_SCANCODE_CLEAR","","",65,null],[13,"SDL_SCANCODE_PRIOR","","",65,null],[13,"SDL_SCANCODE_RETURN2","","",65,null],[13,"SDL_SCANCODE_SEPARATOR","","",65,null],[13,"SDL_SCANCODE_OUT","","",65,null],[13,"SDL_SCANCODE_OPER","","",65,null],[13,"SDL_SCANCODE_CLEARAGAIN","","",65,null],[13,"SDL_SCANCODE_CRSEL","","",65,null],[13,"SDL_SCANCODE_EXSEL","","",65,null],[13,"SDL_SCANCODE_KP_00","","",65,null],[13,"SDL_SCANCODE_KP_000","","",65,null],[13,"SDL_SCANCODE_THOUSANDSSEPARATOR","","",65,null],[13,"SDL_SCANCODE_DECIMALSEPARATOR","","",65,null],[13,"SDL_SCANCODE_CURRENCYUNIT","","",65,null],[13,"SDL_SCANCODE_CURRENCYSUBUNIT","","",65,null],[13,"SDL_SCANCODE_KP_LEFTPAREN","","",65,null],[13,"SDL_SCANCODE_KP_RIGHTPAREN","","",65,null],[13,"SDL_SCANCODE_KP_LEFTBRACE","","",65,null],[13,"SDL_SCANCODE_KP_RIGHTBRACE","","",65,null],[13,"SDL_SCANCODE_KP_TAB","","",65,null],[13,"SDL_SCANCODE_KP_BACKSPACE","","",65,null],[13,"SDL_SCANCODE_KP_A","","",65,null],[13,"SDL_SCANCODE_KP_B","","",65,null],[13,"SDL_SCANCODE_KP_C","","",65,null],[13,"SDL_SCANCODE_KP_D","","",65,null],[13,"SDL_SCANCODE_KP_E","","",65,null],[13,"SDL_SCANCODE_KP_F","","",65,null],[13,"SDL_SCANCODE_KP_XOR","","",65,null],[13,"SDL_SCANCODE_KP_POWER","","",65,null],[13,"SDL_SCANCODE_KP_PERCENT","","",65,null],[13,"SDL_SCANCODE_KP_LESS","","",65,null],[13,"SDL_SCANCODE_KP_GREATER","","",65,null],[13,"SDL_SCANCODE_KP_AMPERSAND","","",65,null],[13,"SDL_SCANCODE_KP_DBLAMPERSAND","","",65,null],[13,"SDL_SCANCODE_KP_VERTICALBAR","","",65,null],[13,"SDL_SCANCODE_KP_DBLVERTICALBAR","","",65,null],[13,"SDL_SCANCODE_KP_COLON","","",65,null],[13,"SDL_SCANCODE_KP_HASH","","",65,null],[13,"SDL_SCANCODE_KP_SPACE","","",65,null],[13,"SDL_SCANCODE_KP_AT","","",65,null],[13,"SDL_SCANCODE_KP_EXCLAM","","",65,null],[13,"SDL_SCANCODE_KP_MEMSTORE","","",65,null],[13,"SDL_SCANCODE_KP_MEMRECALL","","",65,null],[13,"SDL_SCANCODE_KP_MEMCLEAR","","",65,null],[13,"SDL_SCANCODE_KP_MEMADD","","",65,null],[13,"SDL_SCANCODE_KP_MEMSUBTRACT","","",65,null],[13,"SDL_SCANCODE_KP_MEMMULTIPLY","","",65,null],[13,"SDL_SCANCODE_KP_MEMDIVIDE","","",65,null],[13,"SDL_SCANCODE_KP_PLUSMINUS","","",65,null],[13,"SDL_SCANCODE_KP_CLEAR","","",65,null],[13,"SDL_SCANCODE_KP_CLEARENTRY","","",65,null],[13,"SDL_SCANCODE_KP_BINARY","","",65,null],[13,"SDL_SCANCODE_KP_OCTAL","","",65,null],[13,"SDL_SCANCODE_KP_DECIMAL","","",65,null],[13,"SDL_SCANCODE_KP_HEXADECIMAL","","",65,null],[13,"SDL_SCANCODE_LCTRL","","",65,null],[13,"SDL_SCANCODE_LSHIFT","","",65,null],[13,"SDL_SCANCODE_LALT","","",65,null],[13,"SDL_SCANCODE_LGUI","","",65,null],[13,"SDL_SCANCODE_RCTRL","","",65,null],[13,"SDL_SCANCODE_RSHIFT","","",65,null],[13,"SDL_SCANCODE_RALT","","",65,null],[13,"SDL_SCANCODE_RGUI","","",65,null],[13,"SDL_SCANCODE_MODE","","",65,null],[13,"SDL_SCANCODE_AUDIONEXT","","",65,null],[13,"SDL_SCANCODE_AUDIOPREV","","",65,null],[13,"SDL_SCANCODE_AUDIOSTOP","","",65,null],[13,"SDL_SCANCODE_AUDIOPLAY","","",65,null],[13,"SDL_SCANCODE_AUDIOMUTE","","",65,null],[13,"SDL_SCANCODE_MEDIASELECT","","",65,null],[13,"SDL_SCANCODE_WWW","","",65,null],[13,"SDL_SCANCODE_MAIL","","",65,null],[13,"SDL_SCANCODE_CALCULATOR","","",65,null],[13,"SDL_SCANCODE_COMPUTER","","",65,null],[13,"SDL_SCANCODE_AC_SEARCH","","",65,null],[13,"SDL_SCANCODE_AC_HOME","","",65,null],[13,"SDL_SCANCODE_AC_BACK","","",65,null],[13,"SDL_SCANCODE_AC_FORWARD","","",65,null],[13,"SDL_SCANCODE_AC_STOP","","",65,null],[13,"SDL_SCANCODE_AC_REFRESH","","",65,null],[13,"SDL_SCANCODE_AC_BOOKMARKS","","",65,null],[13,"SDL_SCANCODE_BRIGHTNESSDOWN","","",65,null],[13,"SDL_SCANCODE_BRIGHTNESSUP","","",65,null],[13,"SDL_SCANCODE_DISPLAYSWITCH","","",65,null],[13,"SDL_SCANCODE_KBDILLUMTOGGLE","","",65,null],[13,"SDL_SCANCODE_KBDILLUMDOWN","","",65,null],[13,"SDL_SCANCODE_KBDILLUMUP","","",65,null],[13,"SDL_SCANCODE_EJECT","","",65,null],[13,"SDL_SCANCODE_SLEEP","","",65,null],[13,"SDL_SCANCODE_APP1","","",65,null],[13,"SDL_SCANCODE_APP2","","",65,null],[13,"SDL_SCANCODE_AUDIOREWIND","","",65,null],[13,"SDL_SCANCODE_AUDIOFASTFORWARD","","",65,null],[13,"SDL_NUM_SCANCODES","","",65,null],[6,"SDL_Keycode","","\\\\brief The SDL virtual key representation.",null,null],[17,"SDLK_UNKNOWN","","",null,null],[17,"SDLK_RETURN","","",null,null],[17,"SDLK_ESCAPE","","",null,null],[17,"SDLK_BACKSPACE","","",null,null],[17,"SDLK_TAB","","",null,null],[17,"SDLK_SPACE","","",null,null],[17,"SDLK_EXCLAIM","","",null,null],[17,"SDLK_QUOTEDBL","","",null,null],[17,"SDLK_HASH","","",null,null],[17,"SDLK_PERCENT","","",null,null],[17,"SDLK_DOLLAR","","",null,null],[17,"SDLK_AMPERSAND","","",null,null],[17,"SDLK_QUOTE","","",null,null],[17,"SDLK_LEFTPAREN","","",null,null],[17,"SDLK_RIGHTPAREN","","",null,null],[17,"SDLK_ASTERISK","","",null,null],[17,"SDLK_PLUS","","",null,null],[17,"SDLK_COMMA","","",null,null],[17,"SDLK_MINUS","","",null,null],[17,"SDLK_PERIOD","","",null,null],[17,"SDLK_SLASH","","",null,null],[17,"SDLK_0","","",null,null],[17,"SDLK_1","","",null,null],[17,"SDLK_2","","",null,null],[17,"SDLK_3","","",null,null],[17,"SDLK_4","","",null,null],[17,"SDLK_5","","",null,null],[17,"SDLK_6","","",null,null],[17,"SDLK_7","","",null,null],[17,"SDLK_8","","",null,null],[17,"SDLK_9","","",null,null],[17,"SDLK_COLON","","",null,null],[17,"SDLK_SEMICOLON","","",null,null],[17,"SDLK_LESS","","",null,null],[17,"SDLK_EQUALS","","",null,null],[17,"SDLK_GREATER","","",null,null],[17,"SDLK_QUESTION","","",null,null],[17,"SDLK_AT","","",null,null],[17,"SDLK_LEFTBRACKET","","",null,null],[17,"SDLK_BACKSLASH","","",null,null],[17,"SDLK_RIGHTBRACKET","","",null,null],[17,"SDLK_CARET","","",null,null],[17,"SDLK_UNDERSCORE","","",null,null],[17,"SDLK_BACKQUOTE","","",null,null],[17,"SDLK_a","","",null,null],[17,"SDLK_b","","",null,null],[17,"SDLK_c","","",null,null],[17,"SDLK_d","","",null,null],[17,"SDLK_e","","",null,null],[17,"SDLK_f","","",null,null],[17,"SDLK_g","","",null,null],[17,"SDLK_h","","",null,null],[17,"SDLK_i","","",null,null],[17,"SDLK_j","","",null,null],[17,"SDLK_k","","",null,null],[17,"SDLK_l","","",null,null],[17,"SDLK_m","","",null,null],[17,"SDLK_n","","",null,null],[17,"SDLK_o","","",null,null],[17,"SDLK_p","","",null,null],[17,"SDLK_q","","",null,null],[17,"SDLK_r","","",null,null],[17,"SDLK_s","","",null,null],[17,"SDLK_t","","",null,null],[17,"SDLK_u","","",null,null],[17,"SDLK_v","","",null,null],[17,"SDLK_w","","",null,null],[17,"SDLK_x","","",null,null],[17,"SDLK_y","","",null,null],[17,"SDLK_z","","",null,null],[17,"SDLK_CAPSLOCK","","",null,null],[17,"SDLK_F1","","",null,null],[17,"SDLK_F2","","",null,null],[17,"SDLK_F3","","",null,null],[17,"SDLK_F4","","",null,null],[17,"SDLK_F5","","",null,null],[17,"SDLK_F6","","",null,null],[17,"SDLK_F7","","",null,null],[17,"SDLK_F8","","",null,null],[17,"SDLK_F9","","",null,null],[17,"SDLK_F10","","",null,null],[17,"SDLK_F11","","",null,null],[17,"SDLK_F12","","",null,null],[17,"SDLK_PRINTSCREEN","","",null,null],[17,"SDLK_SCROLLLOCK","","",null,null],[17,"SDLK_PAUSE","","",null,null],[17,"SDLK_INSERT","","",null,null],[17,"SDLK_HOME","","",null,null],[17,"SDLK_PAGEUP","","",null,null],[17,"SDLK_DELETE","","",null,null],[17,"SDLK_END","","",null,null],[17,"SDLK_PAGEDOWN","","",null,null],[17,"SDLK_RIGHT","","",null,null],[17,"SDLK_LEFT","","",null,null],[17,"SDLK_DOWN","","",null,null],[17,"SDLK_UP","","",null,null],[17,"SDLK_NUMLOCKCLEAR","","",null,null],[17,"SDLK_KP_DIVIDE","","",null,null],[17,"SDLK_KP_MULTIPLY","","",null,null],[17,"SDLK_KP_MINUS","","",null,null],[17,"SDLK_KP_PLUS","","",null,null],[17,"SDLK_KP_ENTER","","",null,null],[17,"SDLK_KP_1","","",null,null],[17,"SDLK_KP_2","","",null,null],[17,"SDLK_KP_3","","",null,null],[17,"SDLK_KP_4","","",null,null],[17,"SDLK_KP_5","","",null,null],[17,"SDLK_KP_6","","",null,null],[17,"SDLK_KP_7","","",null,null],[17,"SDLK_KP_8","","",null,null],[17,"SDLK_KP_9","","",null,null],[17,"SDLK_KP_0","","",null,null],[17,"SDLK_KP_PERIOD","","",null,null],[17,"SDLK_APPLICATION","","",null,null],[17,"SDLK_POWER","","",null,null],[17,"SDLK_KP_EQUALS","","",null,null],[17,"SDLK_F13","","",null,null],[17,"SDLK_F14","","",null,null],[17,"SDLK_F15","","",null,null],[17,"SDLK_F16","","",null,null],[17,"SDLK_F17","","",null,null],[17,"SDLK_F18","","",null,null],[17,"SDLK_F19","","",null,null],[17,"SDLK_F20","","",null,null],[17,"SDLK_F21","","",null,null],[17,"SDLK_F22","","",null,null],[17,"SDLK_F23","","",null,null],[17,"SDLK_F24","","",null,null],[17,"SDLK_EXECUTE","","",null,null],[17,"SDLK_HELP","","",null,null],[17,"SDLK_MENU","","",null,null],[17,"SDLK_SELECT","","",null,null],[17,"SDLK_STOP","","",null,null],[17,"SDLK_AGAIN","","",null,null],[17,"SDLK_UNDO","","",null,null],[17,"SDLK_CUT","","",null,null],[17,"SDLK_COPY","","",null,null],[17,"SDLK_PASTE","","",null,null],[17,"SDLK_FIND","","",null,null],[17,"SDLK_MUTE","","",null,null],[17,"SDLK_VOLUMEUP","","",null,null],[17,"SDLK_VOLUMEDOWN","","",null,null],[17,"SDLK_KP_COMMA","","",null,null],[17,"SDLK_KP_EQUALSAS400","","",null,null],[17,"SDLK_ALTERASE","","",null,null],[17,"SDLK_SYSREQ","","",null,null],[17,"SDLK_CANCEL","","",null,null],[17,"SDLK_CLEAR","","",null,null],[17,"SDLK_PRIOR","","",null,null],[17,"SDLK_RETURN2","","",null,null],[17,"SDLK_SEPARATOR","","",null,null],[17,"SDLK_OUT","","",null,null],[17,"SDLK_OPER","","",null,null],[17,"SDLK_CLEARAGAIN","","",null,null],[17,"SDLK_CRSEL","","",null,null],[17,"SDLK_EXSEL","","",null,null],[17,"SDLK_KP_00","","",null,null],[17,"SDLK_KP_000","","",null,null],[17,"SDLK_THOUSANDSSEPARATOR","","",null,null],[17,"SDLK_DECIMALSEPARATOR","","",null,null],[17,"SDLK_CURRENCYUNIT","","",null,null],[17,"SDLK_CURRENCYSUBUNIT","","",null,null],[17,"SDLK_KP_LEFTPAREN","","",null,null],[17,"SDLK_KP_RIGHTPAREN","","",null,null],[17,"SDLK_KP_LEFTBRACE","","",null,null],[17,"SDLK_KP_RIGHTBRACE","","",null,null],[17,"SDLK_KP_TAB","","",null,null],[17,"SDLK_KP_BACKSPACE","","",null,null],[17,"SDLK_KP_A","","",null,null],[17,"SDLK_KP_B","","",null,null],[17,"SDLK_KP_C","","",null,null],[17,"SDLK_KP_D","","",null,null],[17,"SDLK_KP_E","","",null,null],[17,"SDLK_KP_F","","",null,null],[17,"SDLK_KP_XOR","","",null,null],[17,"SDLK_KP_POWER","","",null,null],[17,"SDLK_KP_PERCENT","","",null,null],[17,"SDLK_KP_LESS","","",null,null],[17,"SDLK_KP_GREATER","","",null,null],[17,"SDLK_KP_AMPERSAND","","",null,null],[17,"SDLK_KP_DBLAMPERSAND","","",null,null],[17,"SDLK_KP_VERTICALBAR","","",null,null],[17,"SDLK_KP_DBLVERTICALBAR","","",null,null],[17,"SDLK_KP_COLON","","",null,null],[17,"SDLK_KP_HASH","","",null,null],[17,"SDLK_KP_SPACE","","",null,null],[17,"SDLK_KP_AT","","",null,null],[17,"SDLK_KP_EXCLAM","","",null,null],[17,"SDLK_KP_MEMSTORE","","",null,null],[17,"SDLK_KP_MEMRECALL","","",null,null],[17,"SDLK_KP_MEMCLEAR","","",null,null],[17,"SDLK_KP_MEMADD","","",null,null],[17,"SDLK_KP_MEMSUBTRACT","","",null,null],[17,"SDLK_KP_MEMMULTIPLY","","",null,null],[17,"SDLK_KP_MEMDIVIDE","","",null,null],[17,"SDLK_KP_PLUSMINUS","","",null,null],[17,"SDLK_KP_CLEAR","","",null,null],[17,"SDLK_KP_CLEARENTRY","","",null,null],[17,"SDLK_KP_BINARY","","",null,null],[17,"SDLK_KP_OCTAL","","",null,null],[17,"SDLK_KP_DECIMAL","","",null,null],[17,"SDLK_KP_HEXADECIMAL","","",null,null],[17,"SDLK_LCTRL","","",null,null],[17,"SDLK_LSHIFT","","",null,null],[17,"SDLK_LALT","","",null,null],[17,"SDLK_LGUI","","",null,null],[17,"SDLK_RCTRL","","",null,null],[17,"SDLK_RSHIFT","","",null,null],[17,"SDLK_RALT","","",null,null],[17,"SDLK_RGUI","","",null,null],[17,"SDLK_MODE","","",null,null],[17,"SDLK_AUDIONEXT","","",null,null],[17,"SDLK_AUDIOPREV","","",null,null],[17,"SDLK_AUDIOSTOP","","",null,null],[17,"SDLK_AUDIOPLAY","","",null,null],[17,"SDLK_AUDIOMUTE","","",null,null],[17,"SDLK_MEDIASELECT","","",null,null],[17,"SDLK_WWW","","",null,null],[17,"SDLK_MAIL","","",null,null],[17,"SDLK_CALCULATOR","","",null,null],[17,"SDLK_COMPUTER","","",null,null],[17,"SDLK_AC_SEARCH","","",null,null],[17,"SDLK_AC_HOME","","",null,null],[17,"SDLK_AC_BACK","","",null,null],[17,"SDLK_AC_FORWARD","","",null,null],[17,"SDLK_AC_STOP","","",null,null],[17,"SDLK_AC_REFRESH","","",null,null],[17,"SDLK_AC_BOOKMARKS","","",null,null],[17,"SDLK_BRIGHTNESSDOWN","","",null,null],[17,"SDLK_BRIGHTNESSUP","","",null,null],[17,"SDLK_DISPLAYSWITCH","","",null,null],[17,"SDLK_KBDILLUMTOGGLE","","",null,null],[17,"SDLK_KBDILLUMDOWN","","",null,null],[17,"SDLK_KBDILLUMUP","","",null,null],[17,"SDLK_EJECT","","",null,null],[17,"SDLK_SLEEP","","",null,null],[17,"SDLK_APP1","","",null,null],[17,"SDLK_APP2","","",null,null],[17,"SDLK_AUDIOREWIND","","",null,null],[17,"SDLK_AUDIOFASTFORWARD","","",null,null],[4,"_bindgen_ty_7","","",null,null],[13,"SDLK_UNKNOWN","","",66,null],[13,"SDLK_RETURN","","",66,null],[13,"SDLK_ESCAPE","","",66,null],[13,"SDLK_BACKSPACE","","",66,null],[13,"SDLK_TAB","","",66,null],[13,"SDLK_SPACE","","",66,null],[13,"SDLK_EXCLAIM","","",66,null],[13,"SDLK_QUOTEDBL","","",66,null],[13,"SDLK_HASH","","",66,null],[13,"SDLK_PERCENT","","",66,null],[13,"SDLK_DOLLAR","","",66,null],[13,"SDLK_AMPERSAND","","",66,null],[13,"SDLK_QUOTE","","",66,null],[13,"SDLK_LEFTPAREN","","",66,null],[13,"SDLK_RIGHTPAREN","","",66,null],[13,"SDLK_ASTERISK","","",66,null],[13,"SDLK_PLUS","","",66,null],[13,"SDLK_COMMA","","",66,null],[13,"SDLK_MINUS","","",66,null],[13,"SDLK_PERIOD","","",66,null],[13,"SDLK_SLASH","","",66,null],[13,"SDLK_0","","",66,null],[13,"SDLK_1","","",66,null],[13,"SDLK_2","","",66,null],[13,"SDLK_3","","",66,null],[13,"SDLK_4","","",66,null],[13,"SDLK_5","","",66,null],[13,"SDLK_6","","",66,null],[13,"SDLK_7","","",66,null],[13,"SDLK_8","","",66,null],[13,"SDLK_9","","",66,null],[13,"SDLK_COLON","","",66,null],[13,"SDLK_SEMICOLON","","",66,null],[13,"SDLK_LESS","","",66,null],[13,"SDLK_EQUALS","","",66,null],[13,"SDLK_GREATER","","",66,null],[13,"SDLK_QUESTION","","",66,null],[13,"SDLK_AT","","",66,null],[13,"SDLK_LEFTBRACKET","","",66,null],[13,"SDLK_BACKSLASH","","",66,null],[13,"SDLK_RIGHTBRACKET","","",66,null],[13,"SDLK_CARET","","",66,null],[13,"SDLK_UNDERSCORE","","",66,null],[13,"SDLK_BACKQUOTE","","",66,null],[13,"SDLK_a","","",66,null],[13,"SDLK_b","","",66,null],[13,"SDLK_c","","",66,null],[13,"SDLK_d","","",66,null],[13,"SDLK_e","","",66,null],[13,"SDLK_f","","",66,null],[13,"SDLK_g","","",66,null],[13,"SDLK_h","","",66,null],[13,"SDLK_i","","",66,null],[13,"SDLK_j","","",66,null],[13,"SDLK_k","","",66,null],[13,"SDLK_l","","",66,null],[13,"SDLK_m","","",66,null],[13,"SDLK_n","","",66,null],[13,"SDLK_o","","",66,null],[13,"SDLK_p","","",66,null],[13,"SDLK_q","","",66,null],[13,"SDLK_r","","",66,null],[13,"SDLK_s","","",66,null],[13,"SDLK_t","","",66,null],[13,"SDLK_u","","",66,null],[13,"SDLK_v","","",66,null],[13,"SDLK_w","","",66,null],[13,"SDLK_x","","",66,null],[13,"SDLK_y","","",66,null],[13,"SDLK_z","","",66,null],[13,"SDLK_CAPSLOCK","","",66,null],[13,"SDLK_F1","","",66,null],[13,"SDLK_F2","","",66,null],[13,"SDLK_F3","","",66,null],[13,"SDLK_F4","","",66,null],[13,"SDLK_F5","","",66,null],[13,"SDLK_F6","","",66,null],[13,"SDLK_F7","","",66,null],[13,"SDLK_F8","","",66,null],[13,"SDLK_F9","","",66,null],[13,"SDLK_F10","","",66,null],[13,"SDLK_F11","","",66,null],[13,"SDLK_F12","","",66,null],[13,"SDLK_PRINTSCREEN","","",66,null],[13,"SDLK_SCROLLLOCK","","",66,null],[13,"SDLK_PAUSE","","",66,null],[13,"SDLK_INSERT","","",66,null],[13,"SDLK_HOME","","",66,null],[13,"SDLK_PAGEUP","","",66,null],[13,"SDLK_DELETE","","",66,null],[13,"SDLK_END","","",66,null],[13,"SDLK_PAGEDOWN","","",66,null],[13,"SDLK_RIGHT","","",66,null],[13,"SDLK_LEFT","","",66,null],[13,"SDLK_DOWN","","",66,null],[13,"SDLK_UP","","",66,null],[13,"SDLK_NUMLOCKCLEAR","","",66,null],[13,"SDLK_KP_DIVIDE","","",66,null],[13,"SDLK_KP_MULTIPLY","","",66,null],[13,"SDLK_KP_MINUS","","",66,null],[13,"SDLK_KP_PLUS","","",66,null],[13,"SDLK_KP_ENTER","","",66,null],[13,"SDLK_KP_1","","",66,null],[13,"SDLK_KP_2","","",66,null],[13,"SDLK_KP_3","","",66,null],[13,"SDLK_KP_4","","",66,null],[13,"SDLK_KP_5","","",66,null],[13,"SDLK_KP_6","","",66,null],[13,"SDLK_KP_7","","",66,null],[13,"SDLK_KP_8","","",66,null],[13,"SDLK_KP_9","","",66,null],[13,"SDLK_KP_0","","",66,null],[13,"SDLK_KP_PERIOD","","",66,null],[13,"SDLK_APPLICATION","","",66,null],[13,"SDLK_POWER","","",66,null],[13,"SDLK_KP_EQUALS","","",66,null],[13,"SDLK_F13","","",66,null],[13,"SDLK_F14","","",66,null],[13,"SDLK_F15","","",66,null],[13,"SDLK_F16","","",66,null],[13,"SDLK_F17","","",66,null],[13,"SDLK_F18","","",66,null],[13,"SDLK_F19","","",66,null],[13,"SDLK_F20","","",66,null],[13,"SDLK_F21","","",66,null],[13,"SDLK_F22","","",66,null],[13,"SDLK_F23","","",66,null],[13,"SDLK_F24","","",66,null],[13,"SDLK_EXECUTE","","",66,null],[13,"SDLK_HELP","","",66,null],[13,"SDLK_MENU","","",66,null],[13,"SDLK_SELECT","","",66,null],[13,"SDLK_STOP","","",66,null],[13,"SDLK_AGAIN","","",66,null],[13,"SDLK_UNDO","","",66,null],[13,"SDLK_CUT","","",66,null],[13,"SDLK_COPY","","",66,null],[13,"SDLK_PASTE","","",66,null],[13,"SDLK_FIND","","",66,null],[13,"SDLK_MUTE","","",66,null],[13,"SDLK_VOLUMEUP","","",66,null],[13,"SDLK_VOLUMEDOWN","","",66,null],[13,"SDLK_KP_COMMA","","",66,null],[13,"SDLK_KP_EQUALSAS400","","",66,null],[13,"SDLK_ALTERASE","","",66,null],[13,"SDLK_SYSREQ","","",66,null],[13,"SDLK_CANCEL","","",66,null],[13,"SDLK_CLEAR","","",66,null],[13,"SDLK_PRIOR","","",66,null],[13,"SDLK_RETURN2","","",66,null],[13,"SDLK_SEPARATOR","","",66,null],[13,"SDLK_OUT","","",66,null],[13,"SDLK_OPER","","",66,null],[13,"SDLK_CLEARAGAIN","","",66,null],[13,"SDLK_CRSEL","","",66,null],[13,"SDLK_EXSEL","","",66,null],[13,"SDLK_KP_00","","",66,null],[13,"SDLK_KP_000","","",66,null],[13,"SDLK_THOUSANDSSEPARATOR","","",66,null],[13,"SDLK_DECIMALSEPARATOR","","",66,null],[13,"SDLK_CURRENCYUNIT","","",66,null],[13,"SDLK_CURRENCYSUBUNIT","","",66,null],[13,"SDLK_KP_LEFTPAREN","","",66,null],[13,"SDLK_KP_RIGHTPAREN","","",66,null],[13,"SDLK_KP_LEFTBRACE","","",66,null],[13,"SDLK_KP_RIGHTBRACE","","",66,null],[13,"SDLK_KP_TAB","","",66,null],[13,"SDLK_KP_BACKSPACE","","",66,null],[13,"SDLK_KP_A","","",66,null],[13,"SDLK_KP_B","","",66,null],[13,"SDLK_KP_C","","",66,null],[13,"SDLK_KP_D","","",66,null],[13,"SDLK_KP_E","","",66,null],[13,"SDLK_KP_F","","",66,null],[13,"SDLK_KP_XOR","","",66,null],[13,"SDLK_KP_POWER","","",66,null],[13,"SDLK_KP_PERCENT","","",66,null],[13,"SDLK_KP_LESS","","",66,null],[13,"SDLK_KP_GREATER","","",66,null],[13,"SDLK_KP_AMPERSAND","","",66,null],[13,"SDLK_KP_DBLAMPERSAND","","",66,null],[13,"SDLK_KP_VERTICALBAR","","",66,null],[13,"SDLK_KP_DBLVERTICALBAR","","",66,null],[13,"SDLK_KP_COLON","","",66,null],[13,"SDLK_KP_HASH","","",66,null],[13,"SDLK_KP_SPACE","","",66,null],[13,"SDLK_KP_AT","","",66,null],[13,"SDLK_KP_EXCLAM","","",66,null],[13,"SDLK_KP_MEMSTORE","","",66,null],[13,"SDLK_KP_MEMRECALL","","",66,null],[13,"SDLK_KP_MEMCLEAR","","",66,null],[13,"SDLK_KP_MEMADD","","",66,null],[13,"SDLK_KP_MEMSUBTRACT","","",66,null],[13,"SDLK_KP_MEMMULTIPLY","","",66,null],[13,"SDLK_KP_MEMDIVIDE","","",66,null],[13,"SDLK_KP_PLUSMINUS","","",66,null],[13,"SDLK_KP_CLEAR","","",66,null],[13,"SDLK_KP_CLEARENTRY","","",66,null],[13,"SDLK_KP_BINARY","","",66,null],[13,"SDLK_KP_OCTAL","","",66,null],[13,"SDLK_KP_DECIMAL","","",66,null],[13,"SDLK_KP_HEXADECIMAL","","",66,null],[13,"SDLK_LCTRL","","",66,null],[13,"SDLK_LSHIFT","","",66,null],[13,"SDLK_LALT","","",66,null],[13,"SDLK_LGUI","","",66,null],[13,"SDLK_RCTRL","","",66,null],[13,"SDLK_RSHIFT","","",66,null],[13,"SDLK_RALT","","",66,null],[13,"SDLK_RGUI","","",66,null],[13,"SDLK_MODE","","",66,null],[13,"SDLK_AUDIONEXT","","",66,null],[13,"SDLK_AUDIOPREV","","",66,null],[13,"SDLK_AUDIOSTOP","","",66,null],[13,"SDLK_AUDIOPLAY","","",66,null],[13,"SDLK_AUDIOMUTE","","",66,null],[13,"SDLK_MEDIASELECT","","",66,null],[13,"SDLK_WWW","","",66,null],[13,"SDLK_MAIL","","",66,null],[13,"SDLK_CALCULATOR","","",66,null],[13,"SDLK_COMPUTER","","",66,null],[13,"SDLK_AC_SEARCH","","",66,null],[13,"SDLK_AC_HOME","","",66,null],[13,"SDLK_AC_BACK","","",66,null],[13,"SDLK_AC_FORWARD","","",66,null],[13,"SDLK_AC_STOP","","",66,null],[13,"SDLK_AC_REFRESH","","",66,null],[13,"SDLK_AC_BOOKMARKS","","",66,null],[13,"SDLK_BRIGHTNESSDOWN","","",66,null],[13,"SDLK_BRIGHTNESSUP","","",66,null],[13,"SDLK_DISPLAYSWITCH","","",66,null],[13,"SDLK_KBDILLUMTOGGLE","","",66,null],[13,"SDLK_KBDILLUMDOWN","","",66,null],[13,"SDLK_KBDILLUMUP","","",66,null],[13,"SDLK_EJECT","","",66,null],[13,"SDLK_SLEEP","","",66,null],[13,"SDLK_APP1","","",66,null],[13,"SDLK_APP2","","",66,null],[13,"SDLK_AUDIOREWIND","","",66,null],[13,"SDLK_AUDIOFASTFORWARD","","",66,null],[4,"SDL_Keymod","","\\\\brief Enumeration of valid key mods (possibly OR\'d …",null,null],[13,"KMOD_NONE","","",67,null],[13,"KMOD_LSHIFT","","",67,null],[13,"KMOD_RSHIFT","","",67,null],[13,"KMOD_LCTRL","","",67,null],[13,"KMOD_RCTRL","","",67,null],[13,"KMOD_LALT","","",67,null],[13,"KMOD_RALT","","",67,null],[13,"KMOD_LGUI","","",67,null],[13,"KMOD_RGUI","","",67,null],[13,"KMOD_NUM","","",67,null],[13,"KMOD_CAPS","","",67,null],[13,"KMOD_MODE","","",67,null],[13,"KMOD_RESERVED","","",67,null],[3,"SDL_Keysym","","\\\\brief The SDL keysym structure, used in key events.",null,null],[12,"scancode","","< SDL physical key code - see ::SDL_Scancode for details",68,null],[12,"sym","","< SDL virtual key code - see ::SDL_Keycode for details",68,null],[12,"mod_","","< current key modifiers",68,null],[12,"unused","","",68,null],[3,"SDL_Cursor","","",null,null],[4,"SDL_SystemCursor","","\\\\brief Cursor types for SDL_CreateSystemCursor().",null,null],[13,"SDL_SYSTEM_CURSOR_ARROW","","",69,null],[13,"SDL_SYSTEM_CURSOR_IBEAM","","",69,null],[13,"SDL_SYSTEM_CURSOR_WAIT","","",69,null],[13,"SDL_SYSTEM_CURSOR_CROSSHAIR","","",69,null],[13,"SDL_SYSTEM_CURSOR_WAITARROW","","",69,null],[13,"SDL_SYSTEM_CURSOR_SIZENWSE","","",69,null],[13,"SDL_SYSTEM_CURSOR_SIZENESW","","",69,null],[13,"SDL_SYSTEM_CURSOR_SIZEWE","","",69,null],[13,"SDL_SYSTEM_CURSOR_SIZENS","","",69,null],[13,"SDL_SYSTEM_CURSOR_SIZEALL","","",69,null],[13,"SDL_SYSTEM_CURSOR_NO","","",69,null],[13,"SDL_SYSTEM_CURSOR_HAND","","",69,null],[13,"SDL_NUM_SYSTEM_CURSORS","","",69,null],[4,"SDL_MouseWheelDirection","","\\\\brief Scroll direction types for the Scroll event",null,null],[13,"SDL_MOUSEWHEEL_NORMAL","","",70,null],[13,"SDL_MOUSEWHEEL_FLIPPED","","",70,null],[3,"_SDL_Joystick","","",null,null],[6,"SDL_Joystick","","",null,null],[3,"SDL_JoystickGUID","","",null,null],[12,"data","","",71,null],[6,"SDL_JoystickID","","This is a unique ID for a joystick for the time it is …",null,null],[4,"SDL_JoystickType","","",null,null],[13,"SDL_JOYSTICK_TYPE_UNKNOWN","","",72,null],[13,"SDL_JOYSTICK_TYPE_GAMECONTROLLER","","",72,null],[13,"SDL_JOYSTICK_TYPE_WHEEL","","",72,null],[13,"SDL_JOYSTICK_TYPE_ARCADE_STICK","","",72,null],[13,"SDL_JOYSTICK_TYPE_FLIGHT_STICK","","",72,null],[13,"SDL_JOYSTICK_TYPE_DANCE_PAD","","",72,null],[13,"SDL_JOYSTICK_TYPE_GUITAR","","",72,null],[13,"SDL_JOYSTICK_TYPE_DRUM_KIT","","",72,null],[13,"SDL_JOYSTICK_TYPE_ARCADE_PAD","","",72,null],[13,"SDL_JOYSTICK_TYPE_THROTTLE","","",72,null],[4,"SDL_JoystickPowerLevel","","",null,null],[13,"SDL_JOYSTICK_POWER_UNKNOWN","","",73,null],[13,"SDL_JOYSTICK_POWER_EMPTY","","",73,null],[13,"SDL_JOYSTICK_POWER_LOW","","",73,null],[13,"SDL_JOYSTICK_POWER_MEDIUM","","",73,null],[13,"SDL_JOYSTICK_POWER_FULL","","",73,null],[13,"SDL_JOYSTICK_POWER_WIRED","","",73,null],[13,"SDL_JOYSTICK_POWER_MAX","","",73,null],[3,"_SDL_GameController","","",null,null],[6,"SDL_GameController","","",null,null],[4,"SDL_GameControllerBindType","","",null,null],[13,"SDL_CONTROLLER_BINDTYPE_NONE","","",74,null],[13,"SDL_CONTROLLER_BINDTYPE_BUTTON","","",74,null],[13,"SDL_CONTROLLER_BINDTYPE_AXIS","","",74,null],[13,"SDL_CONTROLLER_BINDTYPE_HAT","","",74,null],[3,"SDL_GameControllerButtonBind","","Get the SDL joystick layer binding for this controller …",null,null],[12,"bindType","","",75,null],[12,"value","","",75,null],[19,"SDL_GameControllerButtonBind__bindgen_ty_1","","",null,null],[12,"button","","",76,null],[12,"axis","","",76,null],[12,"hat","","",76,null],[3,"SDL_GameControllerButtonBind__bindgen_ty_1__bindgen_ty_1","","",null,null],[12,"hat","","",77,null],[12,"hat_mask","","",77,null],[4,"SDL_GameControllerAxis","","The list of axes available from a controller",null,null],[13,"SDL_CONTROLLER_AXIS_INVALID","","",78,null],[13,"SDL_CONTROLLER_AXIS_LEFTX","","",78,null],[13,"SDL_CONTROLLER_AXIS_LEFTY","","",78,null],[13,"SDL_CONTROLLER_AXIS_RIGHTX","","",78,null],[13,"SDL_CONTROLLER_AXIS_RIGHTY","","",78,null],[13,"SDL_CONTROLLER_AXIS_TRIGGERLEFT","","",78,null],[13,"SDL_CONTROLLER_AXIS_TRIGGERRIGHT","","",78,null],[13,"SDL_CONTROLLER_AXIS_MAX","","",78,null],[4,"SDL_GameControllerButton","","The list of buttons available from a controller",null,null],[13,"SDL_CONTROLLER_BUTTON_INVALID","","",79,null],[13,"SDL_CONTROLLER_BUTTON_A","","",79,null],[13,"SDL_CONTROLLER_BUTTON_B","","",79,null],[13,"SDL_CONTROLLER_BUTTON_X","","",79,null],[13,"SDL_CONTROLLER_BUTTON_Y","","",79,null],[13,"SDL_CONTROLLER_BUTTON_BACK","","",79,null],[13,"SDL_CONTROLLER_BUTTON_GUIDE","","",79,null],[13,"SDL_CONTROLLER_BUTTON_START","","",79,null],[13,"SDL_CONTROLLER_BUTTON_LEFTSTICK","","",79,null],[13,"SDL_CONTROLLER_BUTTON_RIGHTSTICK","","",79,null],[13,"SDL_CONTROLLER_BUTTON_LEFTSHOULDER","","",79,null],[13,"SDL_CONTROLLER_BUTTON_RIGHTSHOULDER","","",79,null],[13,"SDL_CONTROLLER_BUTTON_DPAD_UP","","",79,null],[13,"SDL_CONTROLLER_BUTTON_DPAD_DOWN","","",79,null],[13,"SDL_CONTROLLER_BUTTON_DPAD_LEFT","","",79,null],[13,"SDL_CONTROLLER_BUTTON_DPAD_RIGHT","","",79,null],[13,"SDL_CONTROLLER_BUTTON_MAX","","",79,null],[6,"SDL_TouchID","","",null,null],[6,"SDL_FingerID","","",null,null],[3,"SDL_Finger","","",null,null],[12,"id","","",80,null],[12,"x","","",80,null],[12,"y","","",80,null],[12,"pressure","","",80,null],[6,"SDL_GestureID","","",null,null],[4,"SDL_EventType","","\\\\brief The types of events that can be delivered.",null,null],[13,"SDL_FIRSTEVENT","","",81,null],[13,"SDL_QUIT","","",81,null],[13,"SDL_APP_TERMINATING","","",81,null],[13,"SDL_APP_LOWMEMORY","","",81,null],[13,"SDL_APP_WILLENTERBACKGROUND","","",81,null],[13,"SDL_APP_DIDENTERBACKGROUND","","",81,null],[13,"SDL_APP_WILLENTERFOREGROUND","","",81,null],[13,"SDL_APP_DIDENTERFOREGROUND","","",81,null],[13,"SDL_WINDOWEVENT","","",81,null],[13,"SDL_SYSWMEVENT","","",81,null],[13,"SDL_KEYDOWN","","",81,null],[13,"SDL_KEYUP","","",81,null],[13,"SDL_TEXTEDITING","","",81,null],[13,"SDL_TEXTINPUT","","",81,null],[13,"SDL_KEYMAPCHANGED","","",81,null],[13,"SDL_MOUSEMOTION","","",81,null],[13,"SDL_MOUSEBUTTONDOWN","","",81,null],[13,"SDL_MOUSEBUTTONUP","","",81,null],[13,"SDL_MOUSEWHEEL","","",81,null],[13,"SDL_JOYAXISMOTION","","",81,null],[13,"SDL_JOYBALLMOTION","","",81,null],[13,"SDL_JOYHATMOTION","","",81,null],[13,"SDL_JOYBUTTONDOWN","","",81,null],[13,"SDL_JOYBUTTONUP","","",81,null],[13,"SDL_JOYDEVICEADDED","","",81,null],[13,"SDL_JOYDEVICEREMOVED","","",81,null],[13,"SDL_CONTROLLERAXISMOTION","","",81,null],[13,"SDL_CONTROLLERBUTTONDOWN","","",81,null],[13,"SDL_CONTROLLERBUTTONUP","","",81,null],[13,"SDL_CONTROLLERDEVICEADDED","","",81,null],[13,"SDL_CONTROLLERDEVICEREMOVED","","",81,null],[13,"SDL_CONTROLLERDEVICEREMAPPED","","",81,null],[13,"SDL_FINGERDOWN","","",81,null],[13,"SDL_FINGERUP","","",81,null],[13,"SDL_FINGERMOTION","","",81,null],[13,"SDL_DOLLARGESTURE","","",81,null],[13,"SDL_DOLLARRECORD","","",81,null],[13,"SDL_MULTIGESTURE","","",81,null],[13,"SDL_CLIPBOARDUPDATE","","",81,null],[13,"SDL_DROPFILE","","",81,null],[13,"SDL_DROPTEXT","","",81,null],[13,"SDL_DROPBEGIN","","",81,null],[13,"SDL_DROPCOMPLETE","","",81,null],[13,"SDL_AUDIODEVICEADDED","","",81,null],[13,"SDL_AUDIODEVICEREMOVED","","",81,null],[13,"SDL_RENDER_TARGETS_RESET","","",81,null],[13,"SDL_RENDER_DEVICE_RESET","","",81,null],[13,"SDL_USEREVENT","","",81,null],[13,"SDL_LASTEVENT","","",81,null],[3,"SDL_CommonEvent","","\\\\brief Fields shared by every event",null,null],[12,"type_","","",82,null],[12,"timestamp","","< In milliseconds, populated using SDL_GetTicks()",82,null],[3,"SDL_WindowEvent","","\\\\brief Window state change event data (event.window.*)",null,null],[12,"type_","","< ::SDL_WINDOWEVENT",83,null],[12,"timestamp","","< In milliseconds, populated using SDL_GetTicks()",83,null],[12,"windowID","","< The associated window",83,null],[12,"event","","< ::SDL_WindowEventID",83,null],[12,"padding1","","",83,null],[12,"padding2","","",83,null],[12,"padding3","","",83,null],[12,"data1","","< event dependent data",83,null],[12,"data2","","< event dependent data",83,null],[3,"SDL_KeyboardEvent","","\\\\brief Keyboard button event structure (event.key.*)",null,null],[12,"type_","","< ::SDL_KEYDOWN or ::SDL_KEYUP",84,null],[12,"timestamp","","< In milliseconds, populated using SDL_GetTicks()",84,null],[12,"windowID","","< The window with keyboard focus, if any",84,null],[12,"state","","< ::SDL_PRESSED or ::SDL_RELEASED",84,null],[12,"repeat","","< Non-zero if this is a key repeat",84,null],[12,"padding2","","",84,null],[12,"padding3","","",84,null],[12,"keysym","","< The key that was pressed or released",84,null],[3,"SDL_TextEditingEvent","","\\\\brief Keyboard text editing event structure (event.edit.*…",null,null],[12,"type_","","< ::SDL_TEXTEDITING",85,null],[12,"timestamp","","< In milliseconds, populated using SDL_GetTicks()",85,null],[12,"windowID","","< The window with keyboard focus, if any",85,null],[12,"text","","< The editing text",85,null],[12,"start","","< The start cursor of selected editing text",85,null],[12,"length","","< The length of selected editing text",85,null],[3,"SDL_TextInputEvent","","\\\\brief Keyboard text input event structure (event.text.*)",null,null],[12,"type_","","< ::SDL_TEXTINPUT",86,null],[12,"timestamp","","< In milliseconds, populated using SDL_GetTicks()",86,null],[12,"windowID","","< The window with keyboard focus, if any",86,null],[12,"text","","< The input text",86,null],[3,"SDL_MouseMotionEvent","","\\\\brief Mouse motion event structure (event.motion.*)",null,null],[12,"type_","","< ::SDL_MOUSEMOTION",87,null],[12,"timestamp","","< In milliseconds, populated using SDL_GetTicks()",87,null],[12,"windowID","","< The window with mouse focus, if any",87,null],[12,"which","","< The mouse instance id, or SDL_TOUCH_MOUSEID",87,null],[12,"state","","< The current button state",87,null],[12,"x","","< X coordinate, relative to window",87,null],[12,"y","","< Y coordinate, relative to window",87,null],[12,"xrel","","< The relative motion in the X direction",87,null],[12,"yrel","","< The relative motion in the Y direction",87,null],[3,"SDL_MouseButtonEvent","","\\\\brief Mouse button event structure (event.button.*)",null,null],[12,"type_","","< ::SDL_MOUSEBUTTONDOWN or ::SDL_MOUSEBUTTONUP",88,null],[12,"timestamp","","< In milliseconds, populated using SDL_GetTicks()",88,null],[12,"windowID","","< The window with mouse focus, if any",88,null],[12,"which","","< The mouse instance id, or SDL_TOUCH_MOUSEID",88,null],[12,"button","","< The mouse button index",88,null],[12,"state","","< ::SDL_PRESSED or ::SDL_RELEASED",88,null],[12,"clicks","","< 1 for single-click, 2 for double-click, etc.",88,null],[12,"padding1","","",88,null],[12,"x","","< X coordinate, relative to window",88,null],[12,"y","","< Y coordinate, relative to window",88,null],[3,"SDL_MouseWheelEvent","","\\\\brief Mouse wheel event structure (event.wheel.*)",null,null],[12,"type_","","< ::SDL_MOUSEWHEEL",89,null],[12,"timestamp","","< In milliseconds, populated using SDL_GetTicks()",89,null],[12,"windowID","","< The window with mouse focus, if any",89,null],[12,"which","","< The mouse instance id, or SDL_TOUCH_MOUSEID",89,null],[12,"x","","< The amount scrolled horizontally, positive to the right …",89,null],[12,"y","","< The amount scrolled vertically, positive away from the …",89,null],[12,"direction","","< Set to one of the SDL_MOUSEWHEEL_* defines. When …",89,null],[3,"SDL_JoyAxisEvent","","\\\\brief Joystick axis motion event structure (event.jaxis.*…",null,null],[12,"type_","","< ::SDL_JOYAXISMOTION",90,null],[12,"timestamp","","< In milliseconds, populated using SDL_GetTicks()",90,null],[12,"which","","< The joystick instance id",90,null],[12,"axis","","< The joystick axis index",90,null],[12,"padding1","","",90,null],[12,"padding2","","",90,null],[12,"padding3","","",90,null],[12,"value","","< The axis value (range: -32768 to 32767)",90,null],[12,"padding4","","",90,null],[3,"SDL_JoyBallEvent","","\\\\brief Joystick trackball motion event structure …",null,null],[12,"type_","","< ::SDL_JOYBALLMOTION",91,null],[12,"timestamp","","< In milliseconds, populated using SDL_GetTicks()",91,null],[12,"which","","< The joystick instance id",91,null],[12,"ball","","< The joystick trackball index",91,null],[12,"padding1","","",91,null],[12,"padding2","","",91,null],[12,"padding3","","",91,null],[12,"xrel","","< The relative motion in the X direction",91,null],[12,"yrel","","< The relative motion in the Y direction",91,null],[3,"SDL_JoyHatEvent","","\\\\brief Joystick hat position change event structure …",null,null],[12,"type_","","< ::SDL_JOYHATMOTION",92,null],[12,"timestamp","","< In milliseconds, populated using SDL_GetTicks()",92,null],[12,"which","","< The joystick instance id",92,null],[12,"hat","","< The joystick hat index",92,null],[12,"value","","< The hat position value. \\\\sa ::SDL_HAT_LEFTUP …",92,null],[12,"padding1","","",92,null],[12,"padding2","","",92,null],[3,"SDL_JoyButtonEvent","","\\\\brief Joystick button event structure (event.jbutton.*)",null,null],[12,"type_","","< ::SDL_JOYBUTTONDOWN or ::SDL_JOYBUTTONUP",93,null],[12,"timestamp","","< In milliseconds, populated using SDL_GetTicks()",93,null],[12,"which","","< The joystick instance id",93,null],[12,"button","","< The joystick button index",93,null],[12,"state","","< ::SDL_PRESSED or ::SDL_RELEASED",93,null],[12,"padding1","","",93,null],[12,"padding2","","",93,null],[3,"SDL_JoyDeviceEvent","","\\\\brief Joystick device event structure (event.jdevice.*)",null,null],[12,"type_","","< ::SDL_JOYDEVICEADDED or ::SDL_JOYDEVICEREMOVED",94,null],[12,"timestamp","","< In milliseconds, populated using SDL_GetTicks()",94,null],[12,"which","","< The joystick device index for the ADDED event, instance …",94,null],[3,"SDL_ControllerAxisEvent","","\\\\brief Game controller axis motion event structure …",null,null],[12,"type_","","< ::SDL_CONTROLLERAXISMOTION",95,null],[12,"timestamp","","< In milliseconds, populated using SDL_GetTicks()",95,null],[12,"which","","< The joystick instance id",95,null],[12,"axis","","< The controller axis (SDL_GameControllerAxis)",95,null],[12,"padding1","","",95,null],[12,"padding2","","",95,null],[12,"padding3","","",95,null],[12,"value","","< The axis value (range: -32768 to 32767)",95,null],[12,"padding4","","",95,null],[3,"SDL_ControllerButtonEvent","","\\\\brief Game controller button event structure …",null,null],[12,"type_","","< ::SDL_CONTROLLERBUTTONDOWN or ::SDL_CONTROLLERBUTTONUP",96,null],[12,"timestamp","","< In milliseconds, populated using SDL_GetTicks()",96,null],[12,"which","","< The joystick instance id",96,null],[12,"button","","< The controller button (SDL_GameControllerButton)",96,null],[12,"state","","< ::SDL_PRESSED or ::SDL_RELEASED",96,null],[12,"padding1","","",96,null],[12,"padding2","","",96,null],[3,"SDL_ControllerDeviceEvent","","\\\\brief Controller device event structure (event.cdevice.*)",null,null],[12,"type_","","< ::SDL_CONTROLLERDEVICEADDED, …",97,null],[12,"timestamp","","< In milliseconds, populated using SDL_GetTicks()",97,null],[12,"which","","< The joystick device index for the ADDED event, instance …",97,null],[3,"SDL_AudioDeviceEvent","","\\\\brief Audio device event structure (event.adevice.*)",null,null],[12,"type_","","< ::SDL_AUDIODEVICEADDED, or ::SDL_AUDIODEVICEREMOVED",98,null],[12,"timestamp","","< In milliseconds, populated using SDL_GetTicks()",98,null],[12,"which","","< The audio device index for the ADDED event (valid until …",98,null],[12,"iscapture","","< zero if an output device, non-zero if a capture device.",98,null],[12,"padding1","","",98,null],[12,"padding2","","",98,null],[12,"padding3","","",98,null],[3,"SDL_TouchFingerEvent","","\\\\brief Touch finger event structure (event.tfinger.*)",null,null],[12,"type_","","< ::SDL_FINGERMOTION or ::SDL_FINGERDOWN or ::SDL_FINGERUP",99,null],[12,"timestamp","","< In milliseconds, populated using SDL_GetTicks()",99,null],[12,"touchId","","< The touch device id",99,null],[12,"fingerId","","",99,null],[12,"x","","< Normalized in the range 0...1",99,null],[12,"y","","< Normalized in the range 0...1",99,null],[12,"dx","","< Normalized in the range -1...1",99,null],[12,"dy","","< Normalized in the range -1...1",99,null],[12,"pressure","","< Normalized in the range 0...1",99,null],[3,"SDL_MultiGestureEvent","","\\\\brief Multiple Finger Gesture Event (event.mgesture.*)",null,null],[12,"type_","","< ::SDL_MULTIGESTURE",100,null],[12,"timestamp","","< In milliseconds, populated using SDL_GetTicks()",100,null],[12,"touchId","","< The touch device id",100,null],[12,"dTheta","","",100,null],[12,"dDist","","",100,null],[12,"x","","",100,null],[12,"y","","",100,null],[12,"numFingers","","",100,null],[12,"padding","","",100,null],[3,"SDL_DollarGestureEvent","","\\\\brief Dollar Gesture Event (event.dgesture.*)",null,null],[12,"type_","","< ::SDL_DOLLARGESTURE or ::SDL_DOLLARRECORD",101,null],[12,"timestamp","","< In milliseconds, populated using SDL_GetTicks()",101,null],[12,"touchId","","< The touch device id",101,null],[12,"gestureId","","",101,null],[12,"numFingers","","",101,null],[12,"error","","",101,null],[12,"x","","< Normalized center of gesture",101,null],[12,"y","","< Normalized center of gesture",101,null],[3,"SDL_DropEvent","","\\\\brief An event used to request a file open by the system …",null,null],[12,"type_","","< ::SDL_DROPBEGIN or ::SDL_DROPFILE or ::SDL_DROPTEXT or …",102,null],[12,"timestamp","","< In milliseconds, populated using SDL_GetTicks()",102,null],[12,"file","","< The file name, which should be freed with SDL_free(), …",102,null],[12,"windowID","","< The window that was dropped on, if any",102,null],[3,"SDL_QuitEvent","","\\\\brief The \\\"quit requested\\\" event",null,null],[12,"type_","","< ::SDL_QUIT",103,null],[12,"timestamp","","< In milliseconds, populated using SDL_GetTicks()",103,null],[3,"SDL_OSEvent","","\\\\brief OS Specific event",null,null],[12,"type_","","< ::SDL_QUIT",104,null],[12,"timestamp","","< In milliseconds, populated using SDL_GetTicks()",104,null],[3,"SDL_UserEvent","","\\\\brief A user-defined event type (event.user.*)",null,null],[12,"type_","","< ::SDL_USEREVENT through ::SDL_LASTEVENT-1",105,null],[12,"timestamp","","< In milliseconds, populated using SDL_GetTicks()",105,null],[12,"windowID","","< The associated window if any",105,null],[12,"code","","< User defined event code",105,null],[12,"data1","","< User defined data pointer",105,null],[12,"data2","","< User defined data pointer",105,null],[3,"SDL_SysWMmsg","","",null,null],[3,"SDL_SysWMEvent","","\\\\brief A video driver dependent system event (event.syswm.…",null,null],[12,"type_","","< ::SDL_SYSWMEVENT",106,null],[12,"timestamp","","< In milliseconds, populated using SDL_GetTicks()",106,null],[12,"msg","","< driver dependent data, defined in SDL_syswm.h",106,null],[19,"SDL_Event","","\\\\brief General event structure",null,null],[12,"type_","","< Event type, shared with all events",107,null],[12,"common","","< Common event data",107,null],[12,"window","","< Window event data",107,null],[12,"key","","< Keyboard event data",107,null],[12,"edit","","< Text editing event data",107,null],[12,"text","","< Text input event data",107,null],[12,"motion","","< Mouse motion event data",107,null],[12,"button","","< Mouse button event data",107,null],[12,"wheel","","< Mouse wheel event data",107,null],[12,"jaxis","","< Joystick axis event data",107,null],[12,"jball","","< Joystick ball event data",107,null],[12,"jhat","","< Joystick hat event data",107,null],[12,"jbutton","","< Joystick button event data",107,null],[12,"jdevice","","< Joystick device change event data",107,null],[12,"caxis","","< Game Controller axis event data",107,null],[12,"cbutton","","< Game Controller button event data",107,null],[12,"cdevice","","< Game Controller device event data",107,null],[12,"adevice","","< Audio device event data",107,null],[12,"quit","","< Quit request event data",107,null],[12,"user","","< Custom event data",107,null],[12,"syswm","","< System dependent window event data",107,null],[12,"tfinger","","< Touch finger event data",107,null],[12,"mgesture","","< Gesture event data",107,null],[12,"dgesture","","< Gesture event data",107,null],[12,"drop","","< Drag and drop event data",107,null],[12,"padding","","",107,null],[4,"SDL_eventaction","","",null,null],[13,"SDL_ADDEVENT","","",108,null],[13,"SDL_PEEKEVENT","","",108,null],[13,"SDL_GETEVENT","","",108,null],[6,"SDL_EventFilter","","",null,null],[3,"_SDL_Haptic","","",null,null],[6,"SDL_Haptic","","",null,null],[3,"SDL_HapticDirection","","\\\\brief Structure that represents a haptic direction.",null,null],[12,"type_","","< The type of encoding.",109,null],[12,"dir","","< The encoded direction.",109,null],[3,"SDL_HapticConstant","","\\\\brief A structure containing a template for a Constant …",null,null],[12,"type_","","< ::SDL_HAPTIC_CONSTANT",110,null],[12,"direction","","< Direction of the effect.",110,null],[12,"length","","< Duration of the effect.",110,null],[12,"delay","","< Delay before starting the effect.",110,null],[12,"button","","< Button that triggers the effect.",110,null],[12,"interval","","< How soon it can be triggered again after button.",110,null],[12,"level","","< Strength of the constant effect.",110,null],[12,"attack_length","","< Duration of the attack.",110,null],[12,"attack_level","","< Level at the start of the attack.",110,null],[12,"fade_length","","< Duration of the fade.",110,null],[12,"fade_level","","< Level at the end of the fade.",110,null],[3,"SDL_HapticPeriodic","","\\\\brief A structure containing a template for a Periodic …",null,null],[12,"type_","","< ::SDL_HAPTIC_SINE, ::SDL_HAPTIC_LEFTRIGHT, …",111,null],[12,"direction","","< Direction of the effect.",111,null],[12,"length","","< Duration of the effect.",111,null],[12,"delay","","< Delay before starting the effect.",111,null],[12,"button","","< Button that triggers the effect.",111,null],[12,"interval","","< How soon it can be triggered again after button.",111,null],[12,"period","","< Period of the wave.",111,null],[12,"magnitude","","< Peak value; if negative, equivalent to 180 degrees …",111,null],[12,"offset","","< Mean value of the wave.",111,null],[12,"phase","","< Positive phase shift given by hundredth of a degree.",111,null],[12,"attack_length","","< Duration of the attack.",111,null],[12,"attack_level","","< Level at the start of the attack.",111,null],[12,"fade_length","","< Duration of the fade.",111,null],[12,"fade_level","","< Level at the end of the fade.",111,null],[3,"SDL_HapticCondition","","\\\\brief A structure containing a template for a Condition …",null,null],[12,"type_","","< ::SDL_HAPTIC_SPRING, ::SDL_HAPTIC_DAMPER, …",112,null],[12,"direction","","< Direction of the effect - Not used ATM.",112,null],[12,"length","","< Duration of the effect.",112,null],[12,"delay","","< Delay before starting the effect.",112,null],[12,"button","","< Button that triggers the effect.",112,null],[12,"interval","","< How soon it can be triggered again after button.",112,null],[12,"right_sat","","< Level when joystick is to the positive side; max 0xFFFF.",112,null],[12,"left_sat","","< Level when joystick is to the negative side; max 0xFFFF.",112,null],[12,"right_coeff","","< How fast to increase the force towards the positive …",112,null],[12,"left_coeff","","< How fast to increase the force towards the negative …",112,null],[12,"deadband","","< Size of the dead zone; max 0xFFFF: whole axis-range …",112,null],[12,"center","","< Position of the dead zone.",112,null],[3,"SDL_HapticRamp","","\\\\brief A structure containing a template for a Ramp …",null,null],[12,"type_","","< ::SDL_HAPTIC_RAMP",113,null],[12,"direction","","< Direction of the effect.",113,null],[12,"length","","< Duration of the effect.",113,null],[12,"delay","","< Delay before starting the effect.",113,null],[12,"button","","< Button that triggers the effect.",113,null],[12,"interval","","< How soon it can be triggered again after button.",113,null],[12,"start","","< Beginning strength level.",113,null],[12,"end","","< Ending strength level.",113,null],[12,"attack_length","","< Duration of the attack.",113,null],[12,"attack_level","","< Level at the start of the attack.",113,null],[12,"fade_length","","< Duration of the fade.",113,null],[12,"fade_level","","< Level at the end of the fade.",113,null],[3,"SDL_HapticLeftRight","","\\\\brief A structure containing a template for a Left/Right …",null,null],[12,"type_","","< ::SDL_HAPTIC_LEFTRIGHT",114,null],[12,"length","","< Duration of the effect.",114,null],[12,"large_magnitude","","< Control of the large controller motor.",114,null],[12,"small_magnitude","","< Control of the small controller motor.",114,null],[3,"SDL_HapticCustom","","\\\\brief A structure containing a template for the …",null,null],[12,"type_","","< ::SDL_HAPTIC_CUSTOM",115,null],[12,"direction","","< Direction of the effect.",115,null],[12,"length","","< Duration of the effect.",115,null],[12,"delay","","< Delay before starting the effect.",115,null],[12,"button","","< Button that triggers the effect.",115,null],[12,"interval","","< How soon it can be triggered again after button.",115,null],[12,"channels","","< Axes to use, minimum of one.",115,null],[12,"period","","< Sample periods.",115,null],[12,"samples","","< Amount of samples.",115,null],[12,"data","","< Should contain channels*samples items.",115,null],[12,"attack_length","","< Duration of the attack.",115,null],[12,"attack_level","","< Level at the start of the attack.",115,null],[12,"fade_length","","< Duration of the fade.",115,null],[12,"fade_level","","< Level at the end of the fade.",115,null],[19,"SDL_HapticEffect","","\\\\brief The generic template for any haptic effect.",null,null],[12,"type_","","< Effect type.",116,null],[12,"constant","","< Constant effect.",116,null],[12,"periodic","","< Periodic effect.",116,null],[12,"condition","","< Condition effect.",116,null],[12,"ramp","","< Ramp effect.",116,null],[12,"leftright","","< Left/Right effect.",116,null],[12,"custom","","< Custom effect.",116,null],[4,"SDL_HintPriority","","\\\\brief  An enumeration of hint priorities",null,null],[13,"SDL_HINT_DEFAULT","","",117,null],[13,"SDL_HINT_NORMAL","","",117,null],[13,"SDL_HINT_OVERRIDE","","",117,null],[6,"SDL_HintCallback","","\\\\brief type definition of the hint callback function.",null,null],[17,"SDL_LOG_CATEGORY_APPLICATION","","",null,null],[17,"SDL_LOG_CATEGORY_ERROR","","",null,null],[17,"SDL_LOG_CATEGORY_ASSERT","","",null,null],[17,"SDL_LOG_CATEGORY_SYSTEM","","",null,null],[17,"SDL_LOG_CATEGORY_AUDIO","","",null,null],[17,"SDL_LOG_CATEGORY_VIDEO","","",null,null],[17,"SDL_LOG_CATEGORY_RENDER","","",null,null],[17,"SDL_LOG_CATEGORY_INPUT","","",null,null],[17,"SDL_LOG_CATEGORY_TEST","","",null,null],[17,"SDL_LOG_CATEGORY_RESERVED1","","",null,null],[17,"SDL_LOG_CATEGORY_RESERVED2","","",null,null],[17,"SDL_LOG_CATEGORY_RESERVED3","","",null,null],[17,"SDL_LOG_CATEGORY_RESERVED4","","",null,null],[17,"SDL_LOG_CATEGORY_RESERVED5","","",null,null],[17,"SDL_LOG_CATEGORY_RESERVED6","","",null,null],[17,"SDL_LOG_CATEGORY_RESERVED7","","",null,null],[17,"SDL_LOG_CATEGORY_RESERVED8","","",null,null],[17,"SDL_LOG_CATEGORY_RESERVED9","","",null,null],[17,"SDL_LOG_CATEGORY_RESERVED10","","",null,null],[17,"SDL_LOG_CATEGORY_CUSTOM","","",null,null],[4,"_bindgen_ty_8","","\\\\brief The predefined log categories",null,null],[13,"SDL_LOG_CATEGORY_APPLICATION","","",118,null],[13,"SDL_LOG_CATEGORY_ERROR","","",118,null],[13,"SDL_LOG_CATEGORY_ASSERT","","",118,null],[13,"SDL_LOG_CATEGORY_SYSTEM","","",118,null],[13,"SDL_LOG_CATEGORY_AUDIO","","",118,null],[13,"SDL_LOG_CATEGORY_VIDEO","","",118,null],[13,"SDL_LOG_CATEGORY_RENDER","","",118,null],[13,"SDL_LOG_CATEGORY_INPUT","","",118,null],[13,"SDL_LOG_CATEGORY_TEST","","",118,null],[13,"SDL_LOG_CATEGORY_RESERVED1","","",118,null],[13,"SDL_LOG_CATEGORY_RESERVED2","","",118,null],[13,"SDL_LOG_CATEGORY_RESERVED3","","",118,null],[13,"SDL_LOG_CATEGORY_RESERVED4","","",118,null],[13,"SDL_LOG_CATEGORY_RESERVED5","","",118,null],[13,"SDL_LOG_CATEGORY_RESERVED6","","",118,null],[13,"SDL_LOG_CATEGORY_RESERVED7","","",118,null],[13,"SDL_LOG_CATEGORY_RESERVED8","","",118,null],[13,"SDL_LOG_CATEGORY_RESERVED9","","",118,null],[13,"SDL_LOG_CATEGORY_RESERVED10","","",118,null],[13,"SDL_LOG_CATEGORY_CUSTOM","","",118,null],[4,"SDL_LogPriority","","\\\\brief The predefined log priorities",null,null],[13,"SDL_LOG_PRIORITY_VERBOSE","","",119,null],[13,"SDL_LOG_PRIORITY_DEBUG","","",119,null],[13,"SDL_LOG_PRIORITY_INFO","","",119,null],[13,"SDL_LOG_PRIORITY_WARN","","",119,null],[13,"SDL_LOG_PRIORITY_ERROR","","",119,null],[13,"SDL_LOG_PRIORITY_CRITICAL","","",119,null],[13,"SDL_NUM_LOG_PRIORITIES","","",119,null],[6,"SDL_LogOutputFunction","","\\\\brief The prototype for the log output function",null,null],[4,"SDL_MessageBoxFlags","","\\\\brief SDL_MessageBox flags. If supported will display …",null,null],[13,"SDL_MESSAGEBOX_ERROR","","",120,null],[13,"SDL_MESSAGEBOX_WARNING","","",120,null],[13,"SDL_MESSAGEBOX_INFORMATION","","",120,null],[4,"SDL_MessageBoxButtonFlags","","\\\\brief Flags for SDL_MessageBoxButtonData.",null,null],[13,"SDL_MESSAGEBOX_BUTTON_RETURNKEY_DEFAULT","","",121,null],[13,"SDL_MESSAGEBOX_BUTTON_ESCAPEKEY_DEFAULT","","",121,null],[3,"SDL_MessageBoxButtonData","","\\\\brief Individual button data.",null,null],[12,"flags","","< ::SDL_MessageBoxButtonFlags",122,null],[12,"buttonid","","< User defined button id (value returned via …",122,null],[12,"text","","< The UTF-8 button text",122,null],[3,"SDL_MessageBoxColor","","\\\\brief RGB value used in a message box color scheme",null,null],[12,"r","","",123,null],[12,"g","","",123,null],[12,"b","","",123,null],[4,"SDL_MessageBoxColorType","","",null,null],[13,"SDL_MESSAGEBOX_COLOR_BACKGROUND","","",124,null],[13,"SDL_MESSAGEBOX_COLOR_TEXT","","",124,null],[13,"SDL_MESSAGEBOX_COLOR_BUTTON_BORDER","","",124,null],[13,"SDL_MESSAGEBOX_COLOR_BUTTON_BACKGROUND","","",124,null],[13,"SDL_MESSAGEBOX_COLOR_BUTTON_SELECTED","","",124,null],[13,"SDL_MESSAGEBOX_COLOR_MAX","","",124,null],[3,"SDL_MessageBoxColorScheme","","\\\\brief A set of colors to use for message box dialogs",null,null],[12,"colors","","",125,null],[3,"SDL_MessageBoxData","","\\\\brief MessageBox structure containing title, text, …",null,null],[12,"flags","","< ::SDL_MessageBoxFlags",126,null],[12,"window","","< Parent window, can be NULL",126,null],[12,"title","","< UTF-8 title",126,null],[12,"message","","< UTF-8 message text",126,null],[12,"numbuttons","","",126,null],[12,"buttons","","",126,null],[12,"colorScheme","","< ::SDL_MessageBoxColorScheme, can be NULL to use system …",126,null],[4,"SDL_PowerState","","\\\\brief The basic state for the system\'s power supply.",null,null],[13,"SDL_POWERSTATE_UNKNOWN","","",127,null],[13,"SDL_POWERSTATE_ON_BATTERY","","",127,null],[13,"SDL_POWERSTATE_NO_BATTERY","","",127,null],[13,"SDL_POWERSTATE_CHARGING","","",127,null],[13,"SDL_POWERSTATE_CHARGED","","",127,null],[4,"SDL_RendererFlags","","\\\\brief Flags used when creating a rendering context",null,null],[13,"SDL_RENDERER_SOFTWARE","","",128,null],[13,"SDL_RENDERER_ACCELERATED","","",128,null],[13,"SDL_RENDERER_PRESENTVSYNC","","",128,null],[13,"SDL_RENDERER_TARGETTEXTURE","","",128,null],[3,"SDL_RendererInfo","","\\\\brief Information on the capabilities of a render driver …",null,null],[12,"name","","< The name of the renderer",129,null],[12,"flags","","< Supported ::SDL_RendererFlags",129,null],[12,"num_texture_formats","","< The number of available texture formats",129,null],[12,"texture_formats","","< The available texture formats",129,null],[12,"max_texture_width","","< The maximum texture width",129,null],[12,"max_texture_height","","< The maximum texture height",129,null],[4,"SDL_TextureAccess","","\\\\brief The access pattern allowed for a texture.",null,null],[13,"SDL_TEXTUREACCESS_STATIC","","",130,null],[13,"SDL_TEXTUREACCESS_STREAMING","","",130,null],[13,"SDL_TEXTUREACCESS_TARGET","","",130,null],[4,"SDL_TextureModulate","","\\\\brief The texture channel modulation used in …",null,null],[13,"SDL_TEXTUREMODULATE_NONE","","",131,null],[13,"SDL_TEXTUREMODULATE_COLOR","","",131,null],[13,"SDL_TEXTUREMODULATE_ALPHA","","",131,null],[4,"SDL_RendererFlip","","\\\\brief Flip constants for SDL_RenderCopyEx",null,null],[13,"SDL_FLIP_NONE","","",132,null],[13,"SDL_FLIP_HORIZONTAL","","",132,null],[13,"SDL_FLIP_VERTICAL","","",132,null],[3,"SDL_Renderer","","",null,null],[3,"SDL_Texture","","",null,null],[4,"WindowShapeMode","","\\\\brief An enum denoting the specific type of contents …",null,null],[13,"ShapeModeDefault","","",133,null],[13,"ShapeModeBinarizeAlpha","","",133,null],[13,"ShapeModeReverseBinarizeAlpha","","",133,null],[13,"ShapeModeColorKey","","",133,null],[19,"SDL_WindowShapeParams","","\\\\brief A union containing parameters for shaped windows.",null,null],[12,"binarizationCutoff","","\\\\brief A cutoff alpha value for binarization of the …",134,null],[12,"colorKey","","",134,null],[3,"SDL_WindowShapeMode","","\\\\brief A struct that tags the SDL_WindowShapeParams union …",null,null],[12,"mode","","\\\\brief The mode of these window-shape parameters.",135,null],[12,"parameters","","\\\\brief Window-shape parameters.",135,null],[6,"SDL_TimerCallback","","Function prototype for the timer callback function.",null,null],[6,"SDL_TimerID","","Definition of the timer ID type.",null,null],[3,"SDL_version","","\\\\brief Information the version of SDL in use.",null,null],[12,"major","","< major version",136,null],[12,"minor","","< minor version",136,null],[12,"patch","","< update version",136,null],[6,"__builtin_va_list","","",null,null],[3,"__va_list_tag","","",null,null],[12,"gp_offset","","",137,null],[12,"fp_offset","","",137,null],[12,"overflow_arg_area","","",137,null],[12,"reg_save_area","","",137,null],[3,"SDL_BlitMap","","< Private",null,null],[12,"_address","","",138,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",139,[[]]],[11,"into","","",139,[[]]],[11,"to_owned","","",139,[[]]],[11,"clone_into","","",139,[[]]],[11,"borrow","","",139,[[]]],[11,"borrow_mut","","",139,[[]]],[11,"try_from","","",139,[[],["result",4]]],[11,"try_into","","",139,[[],["result",4]]],[11,"type_id","","",139,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",140,[[]]],[11,"into","","",140,[[]]],[11,"to_owned","","",140,[[]]],[11,"clone_into","","",140,[[]]],[11,"borrow","","",140,[[]]],[11,"borrow_mut","","",140,[[]]],[11,"try_from","","",140,[[],["result",4]]],[11,"try_into","","",140,[[],["result",4]]],[11,"type_id","","",140,[[],["typeid",3]]],[11,"from","","",141,[[]]],[11,"into","","",141,[[]]],[11,"to_owned","","",141,[[]]],[11,"clone_into","","",141,[[]]],[11,"borrow","","",141,[[]]],[11,"borrow_mut","","",141,[[]]],[11,"try_from","","",141,[[],["result",4]]],[11,"try_into","","",141,[[],["result",4]]],[11,"type_id","","",141,[[],["typeid",3]]],[11,"from","","",142,[[]]],[11,"into","","",142,[[]]],[11,"to_owned","","",142,[[]]],[11,"clone_into","","",142,[[]]],[11,"borrow","","",142,[[]]],[11,"borrow_mut","","",142,[[]]],[11,"try_from","","",142,[[],["result",4]]],[11,"try_into","","",142,[[],["result",4]]],[11,"type_id","","",142,[[],["typeid",3]]],[11,"from","","",143,[[]]],[11,"into","","",143,[[]]],[11,"to_owned","","",143,[[]]],[11,"clone_into","","",143,[[]]],[11,"borrow","","",143,[[]]],[11,"borrow_mut","","",143,[[]]],[11,"try_from","","",143,[[],["result",4]]],[11,"try_into","","",143,[[],["result",4]]],[11,"type_id","","",143,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"to_owned","","",41,[[]]],[11,"clone_into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_owned","","",44,[[]]],[11,"clone_into","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"to_owned","","",45,[[]]],[11,"clone_into","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"to_owned","","",46,[[]]],[11,"clone_into","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"to_owned","","",48,[[]]],[11,"clone_into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"to_owned","","",49,[[]]],[11,"clone_into","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"to_owned","","",50,[[]]],[11,"clone_into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"to_owned","","",51,[[]]],[11,"clone_into","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"to_owned","","",52,[[]]],[11,"clone_into","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"to_owned","","",53,[[]]],[11,"clone_into","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"to_owned","","",54,[[]]],[11,"clone_into","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"to_owned","","",55,[[]]],[11,"clone_into","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"to_owned","","",56,[[]]],[11,"clone_into","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"from","","",144,[[]]],[11,"into","","",144,[[]]],[11,"to_owned","","",144,[[]]],[11,"clone_into","","",144,[[]]],[11,"borrow","","",144,[[]]],[11,"borrow_mut","","",144,[[]]],[11,"try_from","","",144,[[],["result",4]]],[11,"try_into","","",144,[[],["result",4]]],[11,"type_id","","",144,[[],["typeid",3]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"to_owned","","",57,[[]]],[11,"clone_into","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"to_owned","","",58,[[]]],[11,"clone_into","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"from","","",59,[[]]],[11,"into","","",59,[[]]],[11,"to_owned","","",59,[[]]],[11,"clone_into","","",59,[[]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"from","","",60,[[]]],[11,"into","","",60,[[]]],[11,"to_owned","","",60,[[]]],[11,"clone_into","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"from","","",61,[[]]],[11,"into","","",61,[[]]],[11,"to_owned","","",61,[[]]],[11,"clone_into","","",61,[[]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"from","","",62,[[]]],[11,"into","","",62,[[]]],[11,"to_owned","","",62,[[]]],[11,"clone_into","","",62,[[]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"from","","",63,[[]]],[11,"into","","",63,[[]]],[11,"to_owned","","",63,[[]]],[11,"clone_into","","",63,[[]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"from","","",64,[[]]],[11,"into","","",64,[[]]],[11,"to_owned","","",64,[[]]],[11,"clone_into","","",64,[[]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"from","","",65,[[]]],[11,"into","","",65,[[]]],[11,"to_owned","","",65,[[]]],[11,"clone_into","","",65,[[]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"try_into","","",65,[[],["result",4]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"from","","",66,[[]]],[11,"into","","",66,[[]]],[11,"to_owned","","",66,[[]]],[11,"clone_into","","",66,[[]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"from","","",67,[[]]],[11,"into","","",67,[[]]],[11,"to_owned","","",67,[[]]],[11,"clone_into","","",67,[[]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"try_into","","",67,[[],["result",4]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"from","","",68,[[]]],[11,"into","","",68,[[]]],[11,"to_owned","","",68,[[]]],[11,"clone_into","","",68,[[]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"try_into","","",68,[[],["result",4]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"from","","",145,[[]]],[11,"into","","",145,[[]]],[11,"to_owned","","",145,[[]]],[11,"clone_into","","",145,[[]]],[11,"borrow","","",145,[[]]],[11,"borrow_mut","","",145,[[]]],[11,"try_from","","",145,[[],["result",4]]],[11,"try_into","","",145,[[],["result",4]]],[11,"type_id","","",145,[[],["typeid",3]]],[11,"from","","",69,[[]]],[11,"into","","",69,[[]]],[11,"to_owned","","",69,[[]]],[11,"clone_into","","",69,[[]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"try_into","","",69,[[],["result",4]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"from","","",70,[[]]],[11,"into","","",70,[[]]],[11,"to_owned","","",70,[[]]],[11,"clone_into","","",70,[[]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"try_into","","",70,[[],["result",4]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"from","","",146,[[]]],[11,"into","","",146,[[]]],[11,"to_owned","","",146,[[]]],[11,"clone_into","","",146,[[]]],[11,"borrow","","",146,[[]]],[11,"borrow_mut","","",146,[[]]],[11,"try_from","","",146,[[],["result",4]]],[11,"try_into","","",146,[[],["result",4]]],[11,"type_id","","",146,[[],["typeid",3]]],[11,"from","","",71,[[]]],[11,"into","","",71,[[]]],[11,"to_owned","","",71,[[]]],[11,"clone_into","","",71,[[]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"try_into","","",71,[[],["result",4]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"from","","",72,[[]]],[11,"into","","",72,[[]]],[11,"to_owned","","",72,[[]]],[11,"clone_into","","",72,[[]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"try_into","","",72,[[],["result",4]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"from","","",73,[[]]],[11,"into","","",73,[[]]],[11,"to_owned","","",73,[[]]],[11,"clone_into","","",73,[[]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"try_into","","",73,[[],["result",4]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"from","","",147,[[]]],[11,"into","","",147,[[]]],[11,"to_owned","","",147,[[]]],[11,"clone_into","","",147,[[]]],[11,"borrow","","",147,[[]]],[11,"borrow_mut","","",147,[[]]],[11,"try_from","","",147,[[],["result",4]]],[11,"try_into","","",147,[[],["result",4]]],[11,"type_id","","",147,[[],["typeid",3]]],[11,"from","","",74,[[]]],[11,"into","","",74,[[]]],[11,"to_owned","","",74,[[]]],[11,"clone_into","","",74,[[]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"try_into","","",74,[[],["result",4]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"from","","",75,[[]]],[11,"into","","",75,[[]]],[11,"to_owned","","",75,[[]]],[11,"clone_into","","",75,[[]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"try_into","","",75,[[],["result",4]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"from","","",76,[[]]],[11,"into","","",76,[[]]],[11,"to_owned","","",76,[[]]],[11,"clone_into","","",76,[[]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"try_into","","",76,[[],["result",4]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"from","","",77,[[]]],[11,"into","","",77,[[]]],[11,"to_owned","","",77,[[]]],[11,"clone_into","","",77,[[]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"try_into","","",77,[[],["result",4]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"from","","",78,[[]]],[11,"into","","",78,[[]]],[11,"to_owned","","",78,[[]]],[11,"clone_into","","",78,[[]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"try_into","","",78,[[],["result",4]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"from","","",79,[[]]],[11,"into","","",79,[[]]],[11,"to_owned","","",79,[[]]],[11,"clone_into","","",79,[[]]],[11,"borrow","","",79,[[]]],[11,"borrow_mut","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"try_into","","",79,[[],["result",4]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"from","","",80,[[]]],[11,"into","","",80,[[]]],[11,"to_owned","","",80,[[]]],[11,"clone_into","","",80,[[]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"try_into","","",80,[[],["result",4]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"from","","",81,[[]]],[11,"into","","",81,[[]]],[11,"to_owned","","",81,[[]]],[11,"clone_into","","",81,[[]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"try_into","","",81,[[],["result",4]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"from","","",82,[[]]],[11,"into","","",82,[[]]],[11,"to_owned","","",82,[[]]],[11,"clone_into","","",82,[[]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"try_into","","",82,[[],["result",4]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"from","","",83,[[]]],[11,"into","","",83,[[]]],[11,"to_owned","","",83,[[]]],[11,"clone_into","","",83,[[]]],[11,"borrow","","",83,[[]]],[11,"borrow_mut","","",83,[[]]],[11,"try_from","","",83,[[],["result",4]]],[11,"try_into","","",83,[[],["result",4]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"from","","",84,[[]]],[11,"into","","",84,[[]]],[11,"to_owned","","",84,[[]]],[11,"clone_into","","",84,[[]]],[11,"borrow","","",84,[[]]],[11,"borrow_mut","","",84,[[]]],[11,"try_from","","",84,[[],["result",4]]],[11,"try_into","","",84,[[],["result",4]]],[11,"type_id","","",84,[[],["typeid",3]]],[11,"from","","",85,[[]]],[11,"into","","",85,[[]]],[11,"to_owned","","",85,[[]]],[11,"clone_into","","",85,[[]]],[11,"borrow","","",85,[[]]],[11,"borrow_mut","","",85,[[]]],[11,"try_from","","",85,[[],["result",4]]],[11,"try_into","","",85,[[],["result",4]]],[11,"type_id","","",85,[[],["typeid",3]]],[11,"from","","",86,[[]]],[11,"into","","",86,[[]]],[11,"to_owned","","",86,[[]]],[11,"clone_into","","",86,[[]]],[11,"borrow","","",86,[[]]],[11,"borrow_mut","","",86,[[]]],[11,"try_from","","",86,[[],["result",4]]],[11,"try_into","","",86,[[],["result",4]]],[11,"type_id","","",86,[[],["typeid",3]]],[11,"from","","",87,[[]]],[11,"into","","",87,[[]]],[11,"to_owned","","",87,[[]]],[11,"clone_into","","",87,[[]]],[11,"borrow","","",87,[[]]],[11,"borrow_mut","","",87,[[]]],[11,"try_from","","",87,[[],["result",4]]],[11,"try_into","","",87,[[],["result",4]]],[11,"type_id","","",87,[[],["typeid",3]]],[11,"from","","",88,[[]]],[11,"into","","",88,[[]]],[11,"to_owned","","",88,[[]]],[11,"clone_into","","",88,[[]]],[11,"borrow","","",88,[[]]],[11,"borrow_mut","","",88,[[]]],[11,"try_from","","",88,[[],["result",4]]],[11,"try_into","","",88,[[],["result",4]]],[11,"type_id","","",88,[[],["typeid",3]]],[11,"from","","",89,[[]]],[11,"into","","",89,[[]]],[11,"to_owned","","",89,[[]]],[11,"clone_into","","",89,[[]]],[11,"borrow","","",89,[[]]],[11,"borrow_mut","","",89,[[]]],[11,"try_from","","",89,[[],["result",4]]],[11,"try_into","","",89,[[],["result",4]]],[11,"type_id","","",89,[[],["typeid",3]]],[11,"from","","",90,[[]]],[11,"into","","",90,[[]]],[11,"to_owned","","",90,[[]]],[11,"clone_into","","",90,[[]]],[11,"borrow","","",90,[[]]],[11,"borrow_mut","","",90,[[]]],[11,"try_from","","",90,[[],["result",4]]],[11,"try_into","","",90,[[],["result",4]]],[11,"type_id","","",90,[[],["typeid",3]]],[11,"from","","",91,[[]]],[11,"into","","",91,[[]]],[11,"to_owned","","",91,[[]]],[11,"clone_into","","",91,[[]]],[11,"borrow","","",91,[[]]],[11,"borrow_mut","","",91,[[]]],[11,"try_from","","",91,[[],["result",4]]],[11,"try_into","","",91,[[],["result",4]]],[11,"type_id","","",91,[[],["typeid",3]]],[11,"from","","",92,[[]]],[11,"into","","",92,[[]]],[11,"to_owned","","",92,[[]]],[11,"clone_into","","",92,[[]]],[11,"borrow","","",92,[[]]],[11,"borrow_mut","","",92,[[]]],[11,"try_from","","",92,[[],["result",4]]],[11,"try_into","","",92,[[],["result",4]]],[11,"type_id","","",92,[[],["typeid",3]]],[11,"from","","",93,[[]]],[11,"into","","",93,[[]]],[11,"to_owned","","",93,[[]]],[11,"clone_into","","",93,[[]]],[11,"borrow","","",93,[[]]],[11,"borrow_mut","","",93,[[]]],[11,"try_from","","",93,[[],["result",4]]],[11,"try_into","","",93,[[],["result",4]]],[11,"type_id","","",93,[[],["typeid",3]]],[11,"from","","",94,[[]]],[11,"into","","",94,[[]]],[11,"to_owned","","",94,[[]]],[11,"clone_into","","",94,[[]]],[11,"borrow","","",94,[[]]],[11,"borrow_mut","","",94,[[]]],[11,"try_from","","",94,[[],["result",4]]],[11,"try_into","","",94,[[],["result",4]]],[11,"type_id","","",94,[[],["typeid",3]]],[11,"from","","",95,[[]]],[11,"into","","",95,[[]]],[11,"to_owned","","",95,[[]]],[11,"clone_into","","",95,[[]]],[11,"borrow","","",95,[[]]],[11,"borrow_mut","","",95,[[]]],[11,"try_from","","",95,[[],["result",4]]],[11,"try_into","","",95,[[],["result",4]]],[11,"type_id","","",95,[[],["typeid",3]]],[11,"from","","",96,[[]]],[11,"into","","",96,[[]]],[11,"to_owned","","",96,[[]]],[11,"clone_into","","",96,[[]]],[11,"borrow","","",96,[[]]],[11,"borrow_mut","","",96,[[]]],[11,"try_from","","",96,[[],["result",4]]],[11,"try_into","","",96,[[],["result",4]]],[11,"type_id","","",96,[[],["typeid",3]]],[11,"from","","",97,[[]]],[11,"into","","",97,[[]]],[11,"to_owned","","",97,[[]]],[11,"clone_into","","",97,[[]]],[11,"borrow","","",97,[[]]],[11,"borrow_mut","","",97,[[]]],[11,"try_from","","",97,[[],["result",4]]],[11,"try_into","","",97,[[],["result",4]]],[11,"type_id","","",97,[[],["typeid",3]]],[11,"from","","",98,[[]]],[11,"into","","",98,[[]]],[11,"to_owned","","",98,[[]]],[11,"clone_into","","",98,[[]]],[11,"borrow","","",98,[[]]],[11,"borrow_mut","","",98,[[]]],[11,"try_from","","",98,[[],["result",4]]],[11,"try_into","","",98,[[],["result",4]]],[11,"type_id","","",98,[[],["typeid",3]]],[11,"from","","",99,[[]]],[11,"into","","",99,[[]]],[11,"to_owned","","",99,[[]]],[11,"clone_into","","",99,[[]]],[11,"borrow","","",99,[[]]],[11,"borrow_mut","","",99,[[]]],[11,"try_from","","",99,[[],["result",4]]],[11,"try_into","","",99,[[],["result",4]]],[11,"type_id","","",99,[[],["typeid",3]]],[11,"from","","",100,[[]]],[11,"into","","",100,[[]]],[11,"to_owned","","",100,[[]]],[11,"clone_into","","",100,[[]]],[11,"borrow","","",100,[[]]],[11,"borrow_mut","","",100,[[]]],[11,"try_from","","",100,[[],["result",4]]],[11,"try_into","","",100,[[],["result",4]]],[11,"type_id","","",100,[[],["typeid",3]]],[11,"from","","",101,[[]]],[11,"into","","",101,[[]]],[11,"to_owned","","",101,[[]]],[11,"clone_into","","",101,[[]]],[11,"borrow","","",101,[[]]],[11,"borrow_mut","","",101,[[]]],[11,"try_from","","",101,[[],["result",4]]],[11,"try_into","","",101,[[],["result",4]]],[11,"type_id","","",101,[[],["typeid",3]]],[11,"from","","",102,[[]]],[11,"into","","",102,[[]]],[11,"to_owned","","",102,[[]]],[11,"clone_into","","",102,[[]]],[11,"borrow","","",102,[[]]],[11,"borrow_mut","","",102,[[]]],[11,"try_from","","",102,[[],["result",4]]],[11,"try_into","","",102,[[],["result",4]]],[11,"type_id","","",102,[[],["typeid",3]]],[11,"from","","",103,[[]]],[11,"into","","",103,[[]]],[11,"to_owned","","",103,[[]]],[11,"clone_into","","",103,[[]]],[11,"borrow","","",103,[[]]],[11,"borrow_mut","","",103,[[]]],[11,"try_from","","",103,[[],["result",4]]],[11,"try_into","","",103,[[],["result",4]]],[11,"type_id","","",103,[[],["typeid",3]]],[11,"from","","",104,[[]]],[11,"into","","",104,[[]]],[11,"to_owned","","",104,[[]]],[11,"clone_into","","",104,[[]]],[11,"borrow","","",104,[[]]],[11,"borrow_mut","","",104,[[]]],[11,"try_from","","",104,[[],["result",4]]],[11,"try_into","","",104,[[],["result",4]]],[11,"type_id","","",104,[[],["typeid",3]]],[11,"from","","",105,[[]]],[11,"into","","",105,[[]]],[11,"to_owned","","",105,[[]]],[11,"clone_into","","",105,[[]]],[11,"borrow","","",105,[[]]],[11,"borrow_mut","","",105,[[]]],[11,"try_from","","",105,[[],["result",4]]],[11,"try_into","","",105,[[],["result",4]]],[11,"type_id","","",105,[[],["typeid",3]]],[11,"from","","",148,[[]]],[11,"into","","",148,[[]]],[11,"to_owned","","",148,[[]]],[11,"clone_into","","",148,[[]]],[11,"borrow","","",148,[[]]],[11,"borrow_mut","","",148,[[]]],[11,"try_from","","",148,[[],["result",4]]],[11,"try_into","","",148,[[],["result",4]]],[11,"type_id","","",148,[[],["typeid",3]]],[11,"from","","",106,[[]]],[11,"into","","",106,[[]]],[11,"to_owned","","",106,[[]]],[11,"clone_into","","",106,[[]]],[11,"borrow","","",106,[[]]],[11,"borrow_mut","","",106,[[]]],[11,"try_from","","",106,[[],["result",4]]],[11,"try_into","","",106,[[],["result",4]]],[11,"type_id","","",106,[[],["typeid",3]]],[11,"from","","",107,[[]]],[11,"into","","",107,[[]]],[11,"to_owned","","",107,[[]]],[11,"clone_into","","",107,[[]]],[11,"borrow","","",107,[[]]],[11,"borrow_mut","","",107,[[]]],[11,"try_from","","",107,[[],["result",4]]],[11,"try_into","","",107,[[],["result",4]]],[11,"type_id","","",107,[[],["typeid",3]]],[11,"from","","",108,[[]]],[11,"into","","",108,[[]]],[11,"to_owned","","",108,[[]]],[11,"clone_into","","",108,[[]]],[11,"borrow","","",108,[[]]],[11,"borrow_mut","","",108,[[]]],[11,"try_from","","",108,[[],["result",4]]],[11,"try_into","","",108,[[],["result",4]]],[11,"type_id","","",108,[[],["typeid",3]]],[11,"from","","",149,[[]]],[11,"into","","",149,[[]]],[11,"to_owned","","",149,[[]]],[11,"clone_into","","",149,[[]]],[11,"borrow","","",149,[[]]],[11,"borrow_mut","","",149,[[]]],[11,"try_from","","",149,[[],["result",4]]],[11,"try_into","","",149,[[],["result",4]]],[11,"type_id","","",149,[[],["typeid",3]]],[11,"from","","",109,[[]]],[11,"into","","",109,[[]]],[11,"to_owned","","",109,[[]]],[11,"clone_into","","",109,[[]]],[11,"borrow","","",109,[[]]],[11,"borrow_mut","","",109,[[]]],[11,"try_from","","",109,[[],["result",4]]],[11,"try_into","","",109,[[],["result",4]]],[11,"type_id","","",109,[[],["typeid",3]]],[11,"from","","",110,[[]]],[11,"into","","",110,[[]]],[11,"to_owned","","",110,[[]]],[11,"clone_into","","",110,[[]]],[11,"borrow","","",110,[[]]],[11,"borrow_mut","","",110,[[]]],[11,"try_from","","",110,[[],["result",4]]],[11,"try_into","","",110,[[],["result",4]]],[11,"type_id","","",110,[[],["typeid",3]]],[11,"from","","",111,[[]]],[11,"into","","",111,[[]]],[11,"to_owned","","",111,[[]]],[11,"clone_into","","",111,[[]]],[11,"borrow","","",111,[[]]],[11,"borrow_mut","","",111,[[]]],[11,"try_from","","",111,[[],["result",4]]],[11,"try_into","","",111,[[],["result",4]]],[11,"type_id","","",111,[[],["typeid",3]]],[11,"from","","",112,[[]]],[11,"into","","",112,[[]]],[11,"to_owned","","",112,[[]]],[11,"clone_into","","",112,[[]]],[11,"borrow","","",112,[[]]],[11,"borrow_mut","","",112,[[]]],[11,"try_from","","",112,[[],["result",4]]],[11,"try_into","","",112,[[],["result",4]]],[11,"type_id","","",112,[[],["typeid",3]]],[11,"from","","",113,[[]]],[11,"into","","",113,[[]]],[11,"to_owned","","",113,[[]]],[11,"clone_into","","",113,[[]]],[11,"borrow","","",113,[[]]],[11,"borrow_mut","","",113,[[]]],[11,"try_from","","",113,[[],["result",4]]],[11,"try_into","","",113,[[],["result",4]]],[11,"type_id","","",113,[[],["typeid",3]]],[11,"from","","",114,[[]]],[11,"into","","",114,[[]]],[11,"to_owned","","",114,[[]]],[11,"clone_into","","",114,[[]]],[11,"borrow","","",114,[[]]],[11,"borrow_mut","","",114,[[]]],[11,"try_from","","",114,[[],["result",4]]],[11,"try_into","","",114,[[],["result",4]]],[11,"type_id","","",114,[[],["typeid",3]]],[11,"from","","",115,[[]]],[11,"into","","",115,[[]]],[11,"to_owned","","",115,[[]]],[11,"clone_into","","",115,[[]]],[11,"borrow","","",115,[[]]],[11,"borrow_mut","","",115,[[]]],[11,"try_from","","",115,[[],["result",4]]],[11,"try_into","","",115,[[],["result",4]]],[11,"type_id","","",115,[[],["typeid",3]]],[11,"from","","",116,[[]]],[11,"into","","",116,[[]]],[11,"to_owned","","",116,[[]]],[11,"clone_into","","",116,[[]]],[11,"borrow","","",116,[[]]],[11,"borrow_mut","","",116,[[]]],[11,"try_from","","",116,[[],["result",4]]],[11,"try_into","","",116,[[],["result",4]]],[11,"type_id","","",116,[[],["typeid",3]]],[11,"from","","",117,[[]]],[11,"into","","",117,[[]]],[11,"to_owned","","",117,[[]]],[11,"clone_into","","",117,[[]]],[11,"borrow","","",117,[[]]],[11,"borrow_mut","","",117,[[]]],[11,"try_from","","",117,[[],["result",4]]],[11,"try_into","","",117,[[],["result",4]]],[11,"type_id","","",117,[[],["typeid",3]]],[11,"from","","",118,[[]]],[11,"into","","",118,[[]]],[11,"to_owned","","",118,[[]]],[11,"clone_into","","",118,[[]]],[11,"borrow","","",118,[[]]],[11,"borrow_mut","","",118,[[]]],[11,"try_from","","",118,[[],["result",4]]],[11,"try_into","","",118,[[],["result",4]]],[11,"type_id","","",118,[[],["typeid",3]]],[11,"from","","",119,[[]]],[11,"into","","",119,[[]]],[11,"to_owned","","",119,[[]]],[11,"clone_into","","",119,[[]]],[11,"borrow","","",119,[[]]],[11,"borrow_mut","","",119,[[]]],[11,"try_from","","",119,[[],["result",4]]],[11,"try_into","","",119,[[],["result",4]]],[11,"type_id","","",119,[[],["typeid",3]]],[11,"from","","",120,[[]]],[11,"into","","",120,[[]]],[11,"to_owned","","",120,[[]]],[11,"clone_into","","",120,[[]]],[11,"borrow","","",120,[[]]],[11,"borrow_mut","","",120,[[]]],[11,"try_from","","",120,[[],["result",4]]],[11,"try_into","","",120,[[],["result",4]]],[11,"type_id","","",120,[[],["typeid",3]]],[11,"from","","",121,[[]]],[11,"into","","",121,[[]]],[11,"to_owned","","",121,[[]]],[11,"clone_into","","",121,[[]]],[11,"borrow","","",121,[[]]],[11,"borrow_mut","","",121,[[]]],[11,"try_from","","",121,[[],["result",4]]],[11,"try_into","","",121,[[],["result",4]]],[11,"type_id","","",121,[[],["typeid",3]]],[11,"from","","",122,[[]]],[11,"into","","",122,[[]]],[11,"to_owned","","",122,[[]]],[11,"clone_into","","",122,[[]]],[11,"borrow","","",122,[[]]],[11,"borrow_mut","","",122,[[]]],[11,"try_from","","",122,[[],["result",4]]],[11,"try_into","","",122,[[],["result",4]]],[11,"type_id","","",122,[[],["typeid",3]]],[11,"from","","",123,[[]]],[11,"into","","",123,[[]]],[11,"to_owned","","",123,[[]]],[11,"clone_into","","",123,[[]]],[11,"borrow","","",123,[[]]],[11,"borrow_mut","","",123,[[]]],[11,"try_from","","",123,[[],["result",4]]],[11,"try_into","","",123,[[],["result",4]]],[11,"type_id","","",123,[[],["typeid",3]]],[11,"from","","",124,[[]]],[11,"into","","",124,[[]]],[11,"to_owned","","",124,[[]]],[11,"clone_into","","",124,[[]]],[11,"borrow","","",124,[[]]],[11,"borrow_mut","","",124,[[]]],[11,"try_from","","",124,[[],["result",4]]],[11,"try_into","","",124,[[],["result",4]]],[11,"type_id","","",124,[[],["typeid",3]]],[11,"from","","",125,[[]]],[11,"into","","",125,[[]]],[11,"to_owned","","",125,[[]]],[11,"clone_into","","",125,[[]]],[11,"borrow","","",125,[[]]],[11,"borrow_mut","","",125,[[]]],[11,"try_from","","",125,[[],["result",4]]],[11,"try_into","","",125,[[],["result",4]]],[11,"type_id","","",125,[[],["typeid",3]]],[11,"from","","",126,[[]]],[11,"into","","",126,[[]]],[11,"to_owned","","",126,[[]]],[11,"clone_into","","",126,[[]]],[11,"borrow","","",126,[[]]],[11,"borrow_mut","","",126,[[]]],[11,"try_from","","",126,[[],["result",4]]],[11,"try_into","","",126,[[],["result",4]]],[11,"type_id","","",126,[[],["typeid",3]]],[11,"from","","",127,[[]]],[11,"into","","",127,[[]]],[11,"to_owned","","",127,[[]]],[11,"clone_into","","",127,[[]]],[11,"borrow","","",127,[[]]],[11,"borrow_mut","","",127,[[]]],[11,"try_from","","",127,[[],["result",4]]],[11,"try_into","","",127,[[],["result",4]]],[11,"type_id","","",127,[[],["typeid",3]]],[11,"from","","",128,[[]]],[11,"into","","",128,[[]]],[11,"to_owned","","",128,[[]]],[11,"clone_into","","",128,[[]]],[11,"borrow","","",128,[[]]],[11,"borrow_mut","","",128,[[]]],[11,"try_from","","",128,[[],["result",4]]],[11,"try_into","","",128,[[],["result",4]]],[11,"type_id","","",128,[[],["typeid",3]]],[11,"from","","",129,[[]]],[11,"into","","",129,[[]]],[11,"to_owned","","",129,[[]]],[11,"clone_into","","",129,[[]]],[11,"borrow","","",129,[[]]],[11,"borrow_mut","","",129,[[]]],[11,"try_from","","",129,[[],["result",4]]],[11,"try_into","","",129,[[],["result",4]]],[11,"type_id","","",129,[[],["typeid",3]]],[11,"from","","",130,[[]]],[11,"into","","",130,[[]]],[11,"to_owned","","",130,[[]]],[11,"clone_into","","",130,[[]]],[11,"borrow","","",130,[[]]],[11,"borrow_mut","","",130,[[]]],[11,"try_from","","",130,[[],["result",4]]],[11,"try_into","","",130,[[],["result",4]]],[11,"type_id","","",130,[[],["typeid",3]]],[11,"from","","",131,[[]]],[11,"into","","",131,[[]]],[11,"to_owned","","",131,[[]]],[11,"clone_into","","",131,[[]]],[11,"borrow","","",131,[[]]],[11,"borrow_mut","","",131,[[]]],[11,"try_from","","",131,[[],["result",4]]],[11,"try_into","","",131,[[],["result",4]]],[11,"type_id","","",131,[[],["typeid",3]]],[11,"from","","",132,[[]]],[11,"into","","",132,[[]]],[11,"to_owned","","",132,[[]]],[11,"clone_into","","",132,[[]]],[11,"borrow","","",132,[[]]],[11,"borrow_mut","","",132,[[]]],[11,"try_from","","",132,[[],["result",4]]],[11,"try_into","","",132,[[],["result",4]]],[11,"type_id","","",132,[[],["typeid",3]]],[11,"from","","",150,[[]]],[11,"into","","",150,[[]]],[11,"to_owned","","",150,[[]]],[11,"clone_into","","",150,[[]]],[11,"borrow","","",150,[[]]],[11,"borrow_mut","","",150,[[]]],[11,"try_from","","",150,[[],["result",4]]],[11,"try_into","","",150,[[],["result",4]]],[11,"type_id","","",150,[[],["typeid",3]]],[11,"from","","",151,[[]]],[11,"into","","",151,[[]]],[11,"to_owned","","",151,[[]]],[11,"clone_into","","",151,[[]]],[11,"borrow","","",151,[[]]],[11,"borrow_mut","","",151,[[]]],[11,"try_from","","",151,[[],["result",4]]],[11,"try_into","","",151,[[],["result",4]]],[11,"type_id","","",151,[[],["typeid",3]]],[11,"from","","",133,[[]]],[11,"into","","",133,[[]]],[11,"to_owned","","",133,[[]]],[11,"clone_into","","",133,[[]]],[11,"borrow","","",133,[[]]],[11,"borrow_mut","","",133,[[]]],[11,"try_from","","",133,[[],["result",4]]],[11,"try_into","","",133,[[],["result",4]]],[11,"type_id","","",133,[[],["typeid",3]]],[11,"from","","",134,[[]]],[11,"into","","",134,[[]]],[11,"to_owned","","",134,[[]]],[11,"clone_into","","",134,[[]]],[11,"borrow","","",134,[[]]],[11,"borrow_mut","","",134,[[]]],[11,"try_from","","",134,[[],["result",4]]],[11,"try_into","","",134,[[],["result",4]]],[11,"type_id","","",134,[[],["typeid",3]]],[11,"from","","",135,[[]]],[11,"into","","",135,[[]]],[11,"to_owned","","",135,[[]]],[11,"clone_into","","",135,[[]]],[11,"borrow","","",135,[[]]],[11,"borrow_mut","","",135,[[]]],[11,"try_from","","",135,[[],["result",4]]],[11,"try_into","","",135,[[],["result",4]]],[11,"type_id","","",135,[[],["typeid",3]]],[11,"from","","",136,[[]]],[11,"into","","",136,[[]]],[11,"to_owned","","",136,[[]]],[11,"clone_into","","",136,[[]]],[11,"borrow","","",136,[[]]],[11,"borrow_mut","","",136,[[]]],[11,"try_from","","",136,[[],["result",4]]],[11,"try_into","","",136,[[],["result",4]]],[11,"type_id","","",136,[[],["typeid",3]]],[11,"from","","",137,[[]]],[11,"into","","",137,[[]]],[11,"to_owned","","",137,[[]]],[11,"clone_into","","",137,[[]]],[11,"borrow","","",137,[[]]],[11,"borrow_mut","","",137,[[]]],[11,"try_from","","",137,[[],["result",4]]],[11,"try_into","","",137,[[],["result",4]]],[11,"type_id","","",137,[[],["typeid",3]]],[11,"from","","",138,[[]]],[11,"into","","",138,[[]]],[11,"to_owned","","",138,[[]]],[11,"clone_into","","",138,[[]]],[11,"borrow","","",138,[[]]],[11,"borrow_mut","","",138,[[]]],[11,"try_from","","",138,[[],["result",4]]],[11,"try_into","","",138,[[],["result",4]]],[11,"type_id","","",138,[[],["typeid",3]]],[11,"clone","","",0,[[]]],[11,"clone","","",1,[[],["sdl_bool",4]]],[11,"clone","","",2,[[],["sdl_dummy_enum",4]]],[11,"clone","","",139,[[],["_sdl_iconv_t",3]]],[11,"clone","","",3,[[],["sdl_assertstate",4]]],[11,"clone","","",4,[[]]],[11,"clone","","",5,[[]]],[11,"clone","","",6,[[],["sdl_errorcode",4]]],[11,"clone","","",140,[[],["sdl_mutex",3]]],[11,"clone","","",141,[[],["sdl_semaphore",3]]],[11,"clone","","",142,[[],["sdl_cond",3]]],[11,"clone","","",143,[[],["sdl_thread",3]]],[11,"clone","","",7,[[],["sdl_threadpriority",4]]],[11,"clone","","",10,[[]]],[11,"clone","","",11,[[]]],[11,"clone","","",9,[[]]],[11,"clone","","",8,[[]]],[11,"clone","","",12,[[]]],[11,"clone","","",13,[[]]],[11,"clone","","",14,[[],["sdl_audiostatus",4]]],[11,"clone","","",15,[[]]],[11,"clone","","",16,[[]]],[11,"clone","","",17,[[]]],[11,"clone","","",18,[[]]],[11,"clone","","",19,[[]]],[11,"clone","","",20,[[]]],[11,"clone","","",21,[[]]],[11,"clone","","",22,[[]]],[11,"clone","","",23,[[]]],[11,"clone","","",24,[[]]],[11,"clone","","",27,[[]]],[11,"clone","","",26,[[]]],[11,"clone","","",29,[[]]],[11,"clone","","",28,[[]]],[11,"clone","","",25,[[]]],[11,"clone","","",30,[[]]],[11,"clone","","",31,[[]]],[11,"clone","","",32,[[]]],[11,"clone","","",33,[[]]],[11,"clone","","",34,[[]]],[11,"clone","","",35,[[]]],[11,"clone","","",36,[[]]],[11,"clone","","",37,[[]]],[11,"clone","","",38,[[]]],[11,"clone","","",39,[[]]],[11,"clone","","",40,[[]]],[11,"clone","","",41,[[],["_bindgen_ty_1",4]]],[11,"clone","","",42,[[],["_bindgen_ty_2",4]]],[11,"clone","","",43,[[],["_bindgen_ty_3",4]]],[11,"clone","","",44,[[],["_bindgen_ty_4",4]]],[11,"clone","","",45,[[],["_bindgen_ty_5",4]]],[11,"clone","","",46,[[],["_bindgen_ty_6",4]]],[11,"clone","","",47,[[]]],[11,"clone","","",48,[[]]],[11,"clone","","",49,[[]]],[11,"clone","","",50,[[]]],[11,"clone","","",51,[[]]],[11,"clone","","",52,[[],["sdl_blendmode",4]]],[11,"clone","","",53,[[],["sdl_blendoperation",4]]],[11,"clone","","",54,[[],["sdl_blendfactor",4]]],[11,"clone","","",55,[[]]],[11,"clone","","",56,[[]]],[11,"clone","","",144,[[],["sdl_window",3]]],[11,"clone","","",57,[[],["sdl_windowflags",4]]],[11,"clone","","",58,[[],["sdl_windoweventid",4]]],[11,"clone","","",59,[[],["sdl_glattr",4]]],[11,"clone","","",60,[[],["sdl_glprofile",4]]],[11,"clone","","",61,[[],["sdl_glcontextflag",4]]],[11,"clone","","",62,[[],["sdl_glcontextreleaseflag",4]]],[11,"clone","","",63,[[],["sdl_glcontextresetnotification",4]]],[11,"clone","","",64,[[],["sdl_hittestresult",4]]],[11,"clone","","",65,[[],["sdl_scancode",4]]],[11,"clone","","",66,[[],["_bindgen_ty_7",4]]],[11,"clone","","",67,[[],["sdl_keymod",4]]],[11,"clone","","",68,[[]]],[11,"clone","","",145,[[],["sdl_cursor",3]]],[11,"clone","","",69,[[],["sdl_systemcursor",4]]],[11,"clone","","",70,[[],["sdl_mousewheeldirection",4]]],[11,"clone","","",146,[[],["_sdl_joystick",3]]],[11,"clone","","",71,[[]]],[11,"clone","","",72,[[],["sdl_joysticktype",4]]],[11,"clone","","",73,[[],["sdl_joystickpowerlevel",4]]],[11,"clone","","",147,[[],["_sdl_gamecontroller",3]]],[11,"clone","","",74,[[],["sdl_gamecontrollerbindtype",4]]],[11,"clone","","",77,[[]]],[11,"clone","","",76,[[]]],[11,"clone","","",75,[[]]],[11,"clone","","",78,[[],["sdl_gamecontrolleraxis",4]]],[11,"clone","","",79,[[],["sdl_gamecontrollerbutton",4]]],[11,"clone","","",80,[[]]],[11,"clone","","",81,[[],["sdl_eventtype",4]]],[11,"clone","","",82,[[]]],[11,"clone","","",83,[[]]],[11,"clone","","",84,[[]]],[11,"clone","","",85,[[]]],[11,"clone","","",86,[[]]],[11,"clone","","",87,[[]]],[11,"clone","","",88,[[]]],[11,"clone","","",89,[[]]],[11,"clone","","",90,[[]]],[11,"clone","","",91,[[]]],[11,"clone","","",92,[[]]],[11,"clone","","",93,[[]]],[11,"clone","","",94,[[]]],[11,"clone","","",95,[[]]],[11,"clone","","",96,[[]]],[11,"clone","","",97,[[]]],[11,"clone","","",98,[[]]],[11,"clone","","",99,[[]]],[11,"clone","","",100,[[]]],[11,"clone","","",101,[[]]],[11,"clone","","",102,[[]]],[11,"clone","","",103,[[]]],[11,"clone","","",104,[[]]],[11,"clone","","",105,[[]]],[11,"clone","","",148,[[],["sdl_syswmmsg",3]]],[11,"clone","","",106,[[]]],[11,"clone","","",107,[[]]],[11,"clone","","",108,[[],["sdl_eventaction",4]]],[11,"clone","","",149,[[],["_sdl_haptic",3]]],[11,"clone","","",109,[[]]],[11,"clone","","",110,[[]]],[11,"clone","","",111,[[]]],[11,"clone","","",112,[[]]],[11,"clone","","",113,[[]]],[11,"clone","","",114,[[]]],[11,"clone","","",115,[[]]],[11,"clone","","",116,[[]]],[11,"clone","","",117,[[],["sdl_hintpriority",4]]],[11,"clone","","",118,[[],["_bindgen_ty_8",4]]],[11,"clone","","",119,[[],["sdl_logpriority",4]]],[11,"clone","","",120,[[],["sdl_messageboxflags",4]]],[11,"clone","","",121,[[],["sdl_messageboxbuttonflags",4]]],[11,"clone","","",122,[[]]],[11,"clone","","",123,[[]]],[11,"clone","","",124,[[],["sdl_messageboxcolortype",4]]],[11,"clone","","",125,[[]]],[11,"clone","","",126,[[]]],[11,"clone","","",127,[[],["sdl_powerstate",4]]],[11,"clone","","",128,[[],["sdl_rendererflags",4]]],[11,"clone","","",129,[[]]],[11,"clone","","",130,[[],["sdl_textureaccess",4]]],[11,"clone","","",131,[[],["sdl_texturemodulate",4]]],[11,"clone","","",132,[[],["sdl_rendererflip",4]]],[11,"clone","","",150,[[],["sdl_renderer",3]]],[11,"clone","","",151,[[],["sdl_texture",3]]],[11,"clone","","",133,[[],["windowshapemode",4]]],[11,"clone","","",134,[[]]],[11,"clone","","",135,[[]]],[11,"clone","","",136,[[]]],[11,"clone","","",137,[[]]],[11,"clone","","",138,[[]]],[11,"eq","","",1,[[["sdl_bool",4]],["bool",15]]],[11,"eq","","",2,[[["sdl_dummy_enum",4]],["bool",15]]],[11,"eq","","",3,[[["sdl_assertstate",4]],["bool",15]]],[11,"eq","","",6,[[["sdl_errorcode",4]],["bool",15]]],[11,"eq","","",7,[[["sdl_threadpriority",4]],["bool",15]]],[11,"eq","","",14,[[["sdl_audiostatus",4]],["bool",15]]],[11,"eq","","",41,[[["_bindgen_ty_1",4]],["bool",15]]],[11,"eq","","",42,[[["_bindgen_ty_2",4]],["bool",15]]],[11,"eq","","",43,[[["_bindgen_ty_3",4]],["bool",15]]],[11,"eq","","",44,[[["_bindgen_ty_4",4]],["bool",15]]],[11,"eq","","",45,[[["_bindgen_ty_5",4]],["bool",15]]],[11,"eq","","",46,[[["_bindgen_ty_6",4]],["bool",15]]],[11,"eq","","",52,[[["sdl_blendmode",4]],["bool",15]]],[11,"eq","","",53,[[["sdl_blendoperation",4]],["bool",15]]],[11,"eq","","",54,[[["sdl_blendfactor",4]],["bool",15]]],[11,"eq","","",57,[[["sdl_windowflags",4]],["bool",15]]],[11,"eq","","",58,[[["sdl_windoweventid",4]],["bool",15]]],[11,"eq","","",59,[[["sdl_glattr",4]],["bool",15]]],[11,"eq","","",60,[[["sdl_glprofile",4]],["bool",15]]],[11,"eq","","",61,[[["sdl_glcontextflag",4]],["bool",15]]],[11,"eq","","",62,[[["sdl_glcontextreleaseflag",4]],["bool",15]]],[11,"eq","","",63,[[["sdl_glcontextresetnotification",4]],["bool",15]]],[11,"eq","","",64,[[["sdl_hittestresult",4]],["bool",15]]],[11,"eq","","",65,[[["sdl_scancode",4]],["bool",15]]],[11,"eq","","",66,[[["_bindgen_ty_7",4]],["bool",15]]],[11,"eq","","",67,[[["sdl_keymod",4]],["bool",15]]],[11,"eq","","",69,[[["sdl_systemcursor",4]],["bool",15]]],[11,"eq","","",70,[[["sdl_mousewheeldirection",4]],["bool",15]]],[11,"eq","","",72,[[["sdl_joysticktype",4]],["bool",15]]],[11,"eq","","",73,[[["sdl_joystickpowerlevel",4]],["bool",15]]],[11,"eq","","",74,[[["sdl_gamecontrollerbindtype",4]],["bool",15]]],[11,"eq","","",78,[[["sdl_gamecontrolleraxis",4]],["bool",15]]],[11,"eq","","",79,[[["sdl_gamecontrollerbutton",4]],["bool",15]]],[11,"eq","","",81,[[["sdl_eventtype",4]],["bool",15]]],[11,"eq","","",108,[[["sdl_eventaction",4]],["bool",15]]],[11,"eq","","",117,[[["sdl_hintpriority",4]],["bool",15]]],[11,"eq","","",118,[[["_bindgen_ty_8",4]],["bool",15]]],[11,"eq","","",119,[[["sdl_logpriority",4]],["bool",15]]],[11,"eq","","",120,[[["sdl_messageboxflags",4]],["bool",15]]],[11,"eq","","",121,[[["sdl_messageboxbuttonflags",4]],["bool",15]]],[11,"eq","","",124,[[["sdl_messageboxcolortype",4]],["bool",15]]],[11,"eq","","",127,[[["sdl_powerstate",4]],["bool",15]]],[11,"eq","","",128,[[["sdl_rendererflags",4]],["bool",15]]],[11,"eq","","",130,[[["sdl_textureaccess",4]],["bool",15]]],[11,"eq","","",131,[[["sdl_texturemodulate",4]],["bool",15]]],[11,"eq","","",132,[[["sdl_rendererflip",4]],["bool",15]]],[11,"eq","","",133,[[["windowshapemode",4]],["bool",15]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",139,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",140,[[["formatter",3]],["result",6]]],[11,"fmt","","",141,[[["formatter",3]],["result",6]]],[11,"fmt","","",142,[[["formatter",3]],["result",6]]],[11,"fmt","","",143,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",39,[[["formatter",3]],["result",6]]],[11,"fmt","","",40,[[["formatter",3]],["result",6]]],[11,"fmt","","",41,[[["formatter",3]],["result",6]]],[11,"fmt","","",42,[[["formatter",3]],["result",6]]],[11,"fmt","","",43,[[["formatter",3]],["result",6]]],[11,"fmt","","",44,[[["formatter",3]],["result",6]]],[11,"fmt","","",45,[[["formatter",3]],["result",6]]],[11,"fmt","","",46,[[["formatter",3]],["result",6]]],[11,"fmt","","",47,[[["formatter",3]],["result",6]]],[11,"fmt","","",48,[[["formatter",3]],["result",6]]],[11,"fmt","","",49,[[["formatter",3]],["result",6]]],[11,"fmt","","",50,[[["formatter",3]],["result",6]]],[11,"fmt","","",51,[[["formatter",3]],["result",6]]],[11,"fmt","","",52,[[["formatter",3]],["result",6]]],[11,"fmt","","",53,[[["formatter",3]],["result",6]]],[11,"fmt","","",54,[[["formatter",3]],["result",6]]],[11,"fmt","","",55,[[["formatter",3]],["result",6]]],[11,"fmt","","",56,[[["formatter",3]],["result",6]]],[11,"fmt","","",144,[[["formatter",3]],["result",6]]],[11,"fmt","","",57,[[["formatter",3]],["result",6]]],[11,"fmt","","",58,[[["formatter",3]],["result",6]]],[11,"fmt","","",59,[[["formatter",3]],["result",6]]],[11,"fmt","","",60,[[["formatter",3]],["result",6]]],[11,"fmt","","",61,[[["formatter",3]],["result",6]]],[11,"fmt","","",62,[[["formatter",3]],["result",6]]],[11,"fmt","","",63,[[["formatter",3]],["result",6]]],[11,"fmt","","",64,[[["formatter",3]],["result",6]]],[11,"fmt","","",65,[[["formatter",3]],["result",6]]],[11,"fmt","","",66,[[["formatter",3]],["result",6]]],[11,"fmt","","",67,[[["formatter",3]],["result",6]]],[11,"fmt","","",68,[[["formatter",3]],["result",6]]],[11,"fmt","","",145,[[["formatter",3]],["result",6]]],[11,"fmt","","",69,[[["formatter",3]],["result",6]]],[11,"fmt","","",70,[[["formatter",3]],["result",6]]],[11,"fmt","","",146,[[["formatter",3]],["result",6]]],[11,"fmt","","",71,[[["formatter",3]],["result",6]]],[11,"fmt","","",72,[[["formatter",3]],["result",6]]],[11,"fmt","","",73,[[["formatter",3]],["result",6]]],[11,"fmt","","",147,[[["formatter",3]],["result",6]]],[11,"fmt","","",74,[[["formatter",3]],["result",6]]],[11,"fmt","","",77,[[["formatter",3]],["result",6]]],[11,"fmt","","",78,[[["formatter",3]],["result",6]]],[11,"fmt","","",79,[[["formatter",3]],["result",6]]],[11,"fmt","","",80,[[["formatter",3]],["result",6]]],[11,"fmt","","",81,[[["formatter",3]],["result",6]]],[11,"fmt","","",82,[[["formatter",3]],["result",6]]],[11,"fmt","","",83,[[["formatter",3]],["result",6]]],[11,"fmt","","",84,[[["formatter",3]],["result",6]]],[11,"fmt","","",85,[[["formatter",3]],["result",6]]],[11,"fmt","","",86,[[["formatter",3]],["result",6]]],[11,"fmt","","",87,[[["formatter",3]],["result",6]]],[11,"fmt","","",88,[[["formatter",3]],["result",6]]],[11,"fmt","","",89,[[["formatter",3]],["result",6]]],[11,"fmt","","",90,[[["formatter",3]],["result",6]]],[11,"fmt","","",91,[[["formatter",3]],["result",6]]],[11,"fmt","","",92,[[["formatter",3]],["result",6]]],[11,"fmt","","",93,[[["formatter",3]],["result",6]]],[11,"fmt","","",94,[[["formatter",3]],["result",6]]],[11,"fmt","","",95,[[["formatter",3]],["result",6]]],[11,"fmt","","",96,[[["formatter",3]],["result",6]]],[11,"fmt","","",97,[[["formatter",3]],["result",6]]],[11,"fmt","","",98,[[["formatter",3]],["result",6]]],[11,"fmt","","",99,[[["formatter",3]],["result",6]]],[11,"fmt","","",100,[[["formatter",3]],["result",6]]],[11,"fmt","","",101,[[["formatter",3]],["result",6]]],[11,"fmt","","",102,[[["formatter",3]],["result",6]]],[11,"fmt","","",103,[[["formatter",3]],["result",6]]],[11,"fmt","","",104,[[["formatter",3]],["result",6]]],[11,"fmt","","",105,[[["formatter",3]],["result",6]]],[11,"fmt","","",148,[[["formatter",3]],["result",6]]],[11,"fmt","","",106,[[["formatter",3]],["result",6]]],[11,"fmt","","",108,[[["formatter",3]],["result",6]]],[11,"fmt","","",149,[[["formatter",3]],["result",6]]],[11,"fmt","","",109,[[["formatter",3]],["result",6]]],[11,"fmt","","",110,[[["formatter",3]],["result",6]]],[11,"fmt","","",111,[[["formatter",3]],["result",6]]],[11,"fmt","","",112,[[["formatter",3]],["result",6]]],[11,"fmt","","",113,[[["formatter",3]],["result",6]]],[11,"fmt","","",114,[[["formatter",3]],["result",6]]],[11,"fmt","","",115,[[["formatter",3]],["result",6]]],[11,"fmt","","",117,[[["formatter",3]],["result",6]]],[11,"fmt","","",118,[[["formatter",3]],["result",6]]],[11,"fmt","","",119,[[["formatter",3]],["result",6]]],[11,"fmt","","",120,[[["formatter",3]],["result",6]]],[11,"fmt","","",121,[[["formatter",3]],["result",6]]],[11,"fmt","","",122,[[["formatter",3]],["result",6]]],[11,"fmt","","",123,[[["formatter",3]],["result",6]]],[11,"fmt","","",124,[[["formatter",3]],["result",6]]],[11,"fmt","","",125,[[["formatter",3]],["result",6]]],[11,"fmt","","",126,[[["formatter",3]],["result",6]]],[11,"fmt","","",127,[[["formatter",3]],["result",6]]],[11,"fmt","","",128,[[["formatter",3]],["result",6]]],[11,"fmt","","",129,[[["formatter",3]],["result",6]]],[11,"fmt","","",130,[[["formatter",3]],["result",6]]],[11,"fmt","","",131,[[["formatter",3]],["result",6]]],[11,"fmt","","",132,[[["formatter",3]],["result",6]]],[11,"fmt","","",150,[[["formatter",3]],["result",6]]],[11,"fmt","","",151,[[["formatter",3]],["result",6]]],[11,"fmt","","",133,[[["formatter",3]],["result",6]]],[11,"fmt","","",136,[[["formatter",3]],["result",6]]],[11,"fmt","","",137,[[["formatter",3]],["result",6]]],[11,"fmt","","",138,[[["formatter",3]],["result",6]]],[11,"hash","","",1,[[]]],[11,"hash","","",2,[[]]],[11,"hash","","",3,[[]]],[11,"hash","","",6,[[]]],[11,"hash","","",7,[[]]],[11,"hash","","",14,[[]]],[11,"hash","","",41,[[]]],[11,"hash","","",42,[[]]],[11,"hash","","",43,[[]]],[11,"hash","","",44,[[]]],[11,"hash","","",45,[[]]],[11,"hash","","",46,[[]]],[11,"hash","","",52,[[]]],[11,"hash","","",53,[[]]],[11,"hash","","",54,[[]]],[11,"hash","","",57,[[]]],[11,"hash","","",58,[[]]],[11,"hash","","",59,[[]]],[11,"hash","","",60,[[]]],[11,"hash","","",61,[[]]],[11,"hash","","",62,[[]]],[11,"hash","","",63,[[]]],[11,"hash","","",64,[[]]],[11,"hash","","",65,[[]]],[11,"hash","","",66,[[]]],[11,"hash","","",67,[[]]],[11,"hash","","",69,[[]]],[11,"hash","","",70,[[]]],[11,"hash","","",72,[[]]],[11,"hash","","",73,[[]]],[11,"hash","","",74,[[]]],[11,"hash","","",78,[[]]],[11,"hash","","",79,[[]]],[11,"hash","","",81,[[]]],[11,"hash","","",108,[[]]],[11,"hash","","",117,[[]]],[11,"hash","","",118,[[]]],[11,"hash","","",119,[[]]],[11,"hash","","",120,[[]]],[11,"hash","","",121,[[]]],[11,"hash","","",124,[[]]],[11,"hash","","",127,[[]]],[11,"hash","","",128,[[]]],[11,"hash","","",130,[[]]],[11,"hash","","",131,[[]]],[11,"hash","","",132,[[]]],[11,"hash","","",133,[[]]]],"p":[[3,"__fsid_t"],[4,"SDL_bool"],[4,"SDL_DUMMY_ENUM"],[4,"SDL_AssertState"],[3,"SDL_AssertData"],[3,"SDL_atomic_t"],[4,"SDL_errorcode"],[4,"SDL_ThreadPriority"],[3,"SDL_RWops"],[19,"SDL_RWops__bindgen_ty_1"],[3,"SDL_RWops__bindgen_ty_1__bindgen_ty_1"],[3,"SDL_RWops__bindgen_ty_1__bindgen_ty_2"],[3,"SDL_AudioSpec"],[3,"SDL_AudioCVT"],[4,"SDL_AudioStatus"],[3,"div_t"],[3,"ldiv_t"],[3,"lldiv_t"],[3,"__sigset_t"],[3,"timeval"],[3,"timespec"],[3,"fd_set"],[3,"__pthread_rwlock_arch_t"],[3,"__pthread_internal_list"],[3,"__pthread_mutex_s"],[3,"__pthread_cond_s"],[19,"__pthread_cond_s__bindgen_ty_1"],[3,"__pthread_cond_s__bindgen_ty_1__bindgen_ty_1"],[19,"__pthread_cond_s__bindgen_ty_2"],[3,"__pthread_cond_s__bindgen_ty_2__bindgen_ty_1"],[19,"pthread_mutexattr_t"],[19,"pthread_condattr_t"],[19,"pthread_attr_t"],[19,"pthread_mutex_t"],[19,"pthread_cond_t"],[19,"pthread_rwlock_t"],[19,"pthread_rwlockattr_t"],[19,"pthread_barrier_t"],[19,"pthread_barrierattr_t"],[3,"random_data"],[3,"drand48_data"],[4,"_bindgen_ty_1"],[4,"_bindgen_ty_2"],[4,"_bindgen_ty_3"],[4,"_bindgen_ty_4"],[4,"_bindgen_ty_5"],[4,"_bindgen_ty_6"],[3,"SDL_Color"],[3,"SDL_Palette"],[3,"SDL_PixelFormat"],[3,"SDL_Point"],[3,"SDL_Rect"],[4,"SDL_BlendMode"],[4,"SDL_BlendOperation"],[4,"SDL_BlendFactor"],[3,"SDL_Surface"],[3,"SDL_DisplayMode"],[4,"SDL_WindowFlags"],[4,"SDL_WindowEventID"],[4,"SDL_GLattr"],[4,"SDL_GLprofile"],[4,"SDL_GLcontextFlag"],[4,"SDL_GLcontextReleaseFlag"],[4,"SDL_GLContextResetNotification"],[4,"SDL_HitTestResult"],[4,"SDL_Scancode"],[4,"_bindgen_ty_7"],[4,"SDL_Keymod"],[3,"SDL_Keysym"],[4,"SDL_SystemCursor"],[4,"SDL_MouseWheelDirection"],[3,"SDL_JoystickGUID"],[4,"SDL_JoystickType"],[4,"SDL_JoystickPowerLevel"],[4,"SDL_GameControllerBindType"],[3,"SDL_GameControllerButtonBind"],[19,"SDL_GameControllerButtonBind__bindgen_ty_1"],[3,"SDL_GameControllerButtonBind__bindgen_ty_1__bindgen_ty_1"],[4,"SDL_GameControllerAxis"],[4,"SDL_GameControllerButton"],[3,"SDL_Finger"],[4,"SDL_EventType"],[3,"SDL_CommonEvent"],[3,"SDL_WindowEvent"],[3,"SDL_KeyboardEvent"],[3,"SDL_TextEditingEvent"],[3,"SDL_TextInputEvent"],[3,"SDL_MouseMotionEvent"],[3,"SDL_MouseButtonEvent"],[3,"SDL_MouseWheelEvent"],[3,"SDL_JoyAxisEvent"],[3,"SDL_JoyBallEvent"],[3,"SDL_JoyHatEvent"],[3,"SDL_JoyButtonEvent"],[3,"SDL_JoyDeviceEvent"],[3,"SDL_ControllerAxisEvent"],[3,"SDL_ControllerButtonEvent"],[3,"SDL_ControllerDeviceEvent"],[3,"SDL_AudioDeviceEvent"],[3,"SDL_TouchFingerEvent"],[3,"SDL_MultiGestureEvent"],[3,"SDL_DollarGestureEvent"],[3,"SDL_DropEvent"],[3,"SDL_QuitEvent"],[3,"SDL_OSEvent"],[3,"SDL_UserEvent"],[3,"SDL_SysWMEvent"],[19,"SDL_Event"],[4,"SDL_eventaction"],[3,"SDL_HapticDirection"],[3,"SDL_HapticConstant"],[3,"SDL_HapticPeriodic"],[3,"SDL_HapticCondition"],[3,"SDL_HapticRamp"],[3,"SDL_HapticLeftRight"],[3,"SDL_HapticCustom"],[19,"SDL_HapticEffect"],[4,"SDL_HintPriority"],[4,"_bindgen_ty_8"],[4,"SDL_LogPriority"],[4,"SDL_MessageBoxFlags"],[4,"SDL_MessageBoxButtonFlags"],[3,"SDL_MessageBoxButtonData"],[3,"SDL_MessageBoxColor"],[4,"SDL_MessageBoxColorType"],[3,"SDL_MessageBoxColorScheme"],[3,"SDL_MessageBoxData"],[4,"SDL_PowerState"],[4,"SDL_RendererFlags"],[3,"SDL_RendererInfo"],[4,"SDL_TextureAccess"],[4,"SDL_TextureModulate"],[4,"SDL_RendererFlip"],[4,"WindowShapeMode"],[19,"SDL_WindowShapeParams"],[3,"SDL_WindowShapeMode"],[3,"SDL_version"],[3,"__va_list_tag"],[3,"SDL_BlitMap"],[3,"_SDL_iconv_t"],[3,"SDL_mutex"],[3,"SDL_semaphore"],[3,"SDL_cond"],[3,"SDL_Thread"],[3,"SDL_Window"],[3,"SDL_Cursor"],[3,"_SDL_Joystick"],[3,"_SDL_GameController"],[3,"SDL_SysWMmsg"],[3,"_SDL_Haptic"],[3,"SDL_Renderer"],[3,"SDL_Texture"]]},\
"sdl2_window":{"doc":"A SDL2 window back-end for the Piston game engine.","i":[[4,"OpenGL","sdl2_window","",null,null],[13,"V2_0","","",0,null],[13,"V2_1","","",0,null],[13,"V3_0","","",0,null],[13,"V3_1","","",0,null],[13,"V3_2","","",0,null],[13,"V3_3","","",0,null],[13,"V4_0","","",0,null],[13,"V4_1","","",0,null],[13,"V4_2","","",0,null],[13,"V4_3","","",0,null],[13,"V4_4","","",0,null],[13,"V4_5","","",0,null],[3,"Sdl2Window","","A window implemented by SDL2 back-end.",null,null],[12,"window","","SDL window handle.",1,null],[12,"context","","Allow dead code because this keeps track of the OpenGL …",1,null],[12,"sdl_context","","SDL context.",1,null],[12,"video_subsystem","","Video subsystem.",1,null],[11,"new","","Creates a new game window for SDL2. This will initialize …",1,[[["windowsettings",3]],[["result",4],["string",3]]]],[11,"with_subsystem","","Creates a window with the supplied SDL Video subsystem.",1,[[["videosubsystem",3],["windowsettings",3]],[["result",4],["string",3]]]],[11,"init_joysticks","","Initialize the joystick subsystem. Required before …",1,[[],[["u32",15],["result",4],["string",3]]]],[5,"sdl2_map_key","","Maps a SDL2 key to piston-input key.",null,[[["keycode",4]],["key",4]]],[5,"sdl2_map_mouse","","Maps a SDL2 mouse button to piston-input button.",null,[[["mousebutton",4]],["mousebutton",4]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"partial_cmp","","",0,[[["opengl",4]],[["option",4],["ordering",4]]]],[11,"clone","","",0,[[],["opengl",4]]],[11,"from_str","","",0,[[["str",15]],[["opengl",4],["result",4]]]],[11,"fmt","","",0,[[["formatter",3]],[["error",3],["result",4]]]],[11,"eq","","",0,[[["opengl",4]],["bool",15]]],[11,"cmp","","",0,[[["opengl",4]],["ordering",4]]],[11,"drop","","",1,[[]]],[11,"should_close","","",1,[[],["bool",15]]],[11,"set_should_close","","",1,[[["bool",15]]]],[11,"swap_buffers","","",1,[[]]],[11,"size","","",1,[[],["size",3]]],[11,"wait_event","","",1,[[],["input",4]]],[11,"wait_event_timeout","","",1,[[["duration",3]],[["input",4],["option",4]]]],[11,"poll_event","","",1,[[],[["input",4],["option",4]]]],[11,"draw_size","","",1,[[],["size",3]]],[11,"build_from_window_settings","","",1,[[["windowsettings",3]],[["result",4],["string",3]]]],[11,"get_title","","",1,[[],["string",3]]],[11,"set_title","","",1,[[["string",3]]]],[11,"get_exit_on_esc","","",1,[[],["bool",15]]],[11,"set_exit_on_esc","","",1,[[["bool",15]]]],[11,"set_capture_cursor","","",1,[[["bool",15]]]],[11,"show","","",1,[[]]],[11,"hide","","",1,[[]]],[11,"get_position","","",1,[[],[["position",3],["option",4]]]],[11,"set_position","","",1,[[["position",3],["into",8]]]],[11,"set_size","","",1,[[["into",8],["size",3]]]],[11,"get_proc_address","","",1,[[["str",15]],["procaddress",6]]],[11,"is_current","","",1,[[],["bool",15]]],[11,"make_current","","",1,[[]]],[11,"get_major_minor","","Gets the minor version of OpenGL.",0,[[]]],[11,"to_glsl","","Gets GLSL version associated with OpenGL.",0,[[],["glsl",4]]]],"p":[[4,"OpenGL"],[3,"Sdl2Window"]]},\
"serde":{"doc":"SerdeSerde is a framework for <em><strong>ser</strong></em>ializing and <em><strong>de</strong></em>…","i":[[0,"de","serde","Generic data structure deserialization framework.",null,null],[0,"value","serde::de","Building blocks for deserializing basic values using the …",null,null],[3,"Error","serde::de::value","A minimal representation of all possible errors that can …",null,null],[3,"UnitDeserializer","","A deserializer holding a <code>()</code>.",null,null],[3,"BoolDeserializer","","A deserializer holding a <code>bool</code>.",null,null],[3,"I8Deserializer","","A deserializer holding an <code>i8</code>.",null,null],[3,"I16Deserializer","","A deserializer holding an <code>i16</code>.",null,null],[3,"I32Deserializer","","A deserializer holding an <code>i32</code>.",null,null],[3,"I64Deserializer","","A deserializer holding an <code>i64</code>.",null,null],[3,"IsizeDeserializer","","A deserializer holding an <code>isize</code>.",null,null],[3,"U8Deserializer","","A deserializer holding a <code>u8</code>.",null,null],[3,"U16Deserializer","","A deserializer holding a <code>u16</code>.",null,null],[3,"U64Deserializer","","A deserializer holding a <code>u64</code>.",null,null],[3,"UsizeDeserializer","","A deserializer holding a <code>usize</code>.",null,null],[3,"F32Deserializer","","A deserializer holding an <code>f32</code>.",null,null],[3,"F64Deserializer","","A deserializer holding an <code>f64</code>.",null,null],[3,"CharDeserializer","","A deserializer holding a <code>char</code>.",null,null],[3,"I128Deserializer","","A deserializer holding an <code>i128</code>.",null,null],[3,"U128Deserializer","","A deserializer holding a <code>u128</code>.",null,null],[3,"U32Deserializer","","A deserializer holding a <code>u32</code>.",null,null],[3,"StrDeserializer","","A deserializer holding a <code>&str</code>.",null,null],[3,"BorrowedStrDeserializer","","A deserializer holding a <code>&str</code> with a lifetime tied to …",null,null],[11,"new","","Create a new borrowed deserializer from the given string.",0,[[["str",15]],["borrowedstrdeserializer",3]]],[3,"StringDeserializer","","A deserializer holding a <code>String</code>.",null,null],[3,"CowStrDeserializer","","A deserializer holding a <code>Cow<str></code>.",null,null],[3,"BorrowedBytesDeserializer","","A deserializer holding a <code>&[u8]</code> with a lifetime tied to …",null,null],[11,"new","","Create a new borrowed deserializer from the given byte …",1,[[],["borrowedbytesdeserializer",3]]],[3,"SeqDeserializer","","A deserializer that iterates over a sequence.",null,null],[11,"new","","Construct a new <code>SeqDeserializer<I, E></code>.",2,[[]]],[11,"end","","Check for remaining elements after passing a …",2,[[],["result",4]]],[3,"SeqAccessDeserializer","","A deserializer holding a <code>SeqAccess</code>.",null,null],[11,"new","","Construct a new <code>SeqAccessDeserializer<A></code>.",3,[[]]],[3,"MapDeserializer","","A deserializer that iterates over a map.",null,null],[11,"new","","Construct a new <code>MapDeserializer<I, E></code>.",4,[[]]],[11,"end","","Check for remaining elements after passing a …",4,[[],["result",4]]],[3,"MapAccessDeserializer","","A deserializer holding a <code>MapAccess</code>.",null,null],[11,"new","","Construct a new <code>MapAccessDeserializer<A></code>.",5,[[]]],[3,"IgnoredAny","serde::de","An efficient way of discarding data from a deserializer.",null,null],[8,"Error","","The <code>Error</code> trait allows <code>Deserialize</code> implementations to …",null,null],[10,"custom","","Raised when there is general error when deserializing a …",6,[[]]],[11,"invalid_type","","Raised when a <code>Deserialize</code> receives a type different from …",6,[[["unexpected",4],["expected",8]]]],[11,"invalid_value","","Raised when a <code>Deserialize</code> receives a value of the right …",6,[[["unexpected",4],["expected",8]]]],[11,"invalid_length","","Raised when deserializing a sequence or map and the input …",6,[[["usize",15],["expected",8]]]],[11,"unknown_variant","","Raised when a <code>Deserialize</code> enum type received a variant …",6,[[["str",15]]]],[11,"unknown_field","","Raised when a <code>Deserialize</code> struct type received a field …",6,[[["str",15]]]],[11,"missing_field","","Raised when a <code>Deserialize</code> struct type expected to receive …",6,[[["str",15]]]],[11,"duplicate_field","","Raised when a <code>Deserialize</code> struct type received more than …",6,[[["str",15]]]],[4,"Unexpected","","<code>Unexpected</code> represents an unexpected invocation of any one …",null,null],[13,"Bool","","The input contained a boolean value that was not expected.",7,null],[13,"Unsigned","","The input contained an unsigned integer <code>u8</code>, <code>u16</code>, <code>u32</code> or …",7,null],[13,"Signed","","The input contained a signed integer <code>i8</code>, <code>i16</code>, <code>i32</code> or <code>i64</code> …",7,null],[13,"Float","","The input contained a floating point <code>f32</code> or <code>f64</code> that was …",7,null],[13,"Char","","The input contained a <code>char</code> that was not expected.",7,null],[13,"Str","","The input contained a <code>&str</code> or <code>String</code> that was not …",7,null],[13,"Bytes","","The input contained a <code>&[u8]</code> or <code>Vec<u8></code> that was not …",7,null],[13,"Unit","","The input contained a unit <code>()</code> that was not expected.",7,null],[13,"Option","","The input contained an <code>Option<T></code> that was not expected.",7,null],[13,"NewtypeStruct","","The input contained a newtype struct that was not …",7,null],[13,"Seq","","The input contained a sequence that was not expected.",7,null],[13,"Map","","The input contained a map that was not expected.",7,null],[13,"Enum","","The input contained an enum that was not expected.",7,null],[13,"UnitVariant","","The input contained a unit variant that was not expected.",7,null],[13,"NewtypeVariant","","The input contained a newtype variant that was not …",7,null],[13,"TupleVariant","","The input contained a tuple variant that was not expected.",7,null],[13,"StructVariant","","The input contained a struct variant that was not …",7,null],[13,"Other","","A message stating what uncategorized thing the input …",7,null],[8,"Expected","","<code>Expected</code> represents an explanation of what data a <code>Visitor</code> …",null,null],[10,"fmt","","Format an explanation of what data was being expected. …",8,[[["formatter",3]],["result",6]]],[8,"Deserialize","","A <strong>data structure</strong> that can be deserialized from any data …",null,null],[10,"deserialize","","Deserialize this value from the given Serde deserializer.",9,[[],["result",4]]],[8,"DeserializeOwned","","A data structure that can be deserialized without …",null,null],[8,"DeserializeSeed","","<code>DeserializeSeed</code> is the stateful form of the <code>Deserialize</code> …",null,null],[16,"Value","","The type produced by using this seed.",10,null],[10,"deserialize","","Equivalent to the more common <code>Deserialize::deserialize</code> …",10,[[],["result",4]]],[8,"Deserializer","","A <strong>data format</strong> that can deserialize any data structure …",null,null],[16,"Error","","The error type that can be returned if some error occurs …",11,null],[10,"deserialize_any","","Require the <code>Deserializer</code> to figure out how to drive the …",11,[[],["result",4]]],[10,"deserialize_bool","","Hint that the <code>Deserialize</code> type is expecting a <code>bool</code> value.",11,[[],["result",4]]],[10,"deserialize_i8","","Hint that the <code>Deserialize</code> type is expecting an <code>i8</code> value.",11,[[],["result",4]]],[10,"deserialize_i16","","Hint that the <code>Deserialize</code> type is expecting an <code>i16</code> value.",11,[[],["result",4]]],[10,"deserialize_i32","","Hint that the <code>Deserialize</code> type is expecting an <code>i32</code> value.",11,[[],["result",4]]],[10,"deserialize_i64","","Hint that the <code>Deserialize</code> type is expecting an <code>i64</code> value.",11,[[],["result",4]]],[11,"deserialize_i128","","Hint that the <code>Deserialize</code> type is expecting an <code>i128</code> value.",11,[[],["result",4]]],[10,"deserialize_u8","","Hint that the <code>Deserialize</code> type is expecting a <code>u8</code> value.",11,[[],["result",4]]],[10,"deserialize_u16","","Hint that the <code>Deserialize</code> type is expecting a <code>u16</code> value.",11,[[],["result",4]]],[10,"deserialize_u32","","Hint that the <code>Deserialize</code> type is expecting a <code>u32</code> value.",11,[[],["result",4]]],[10,"deserialize_u64","","Hint that the <code>Deserialize</code> type is expecting a <code>u64</code> value.",11,[[],["result",4]]],[11,"deserialize_u128","","Hint that the <code>Deserialize</code> type is expecting an <code>u128</code> value.",11,[[],["result",4]]],[10,"deserialize_f32","","Hint that the <code>Deserialize</code> type is expecting a <code>f32</code> value.",11,[[],["result",4]]],[10,"deserialize_f64","","Hint that the <code>Deserialize</code> type is expecting a <code>f64</code> value.",11,[[],["result",4]]],[10,"deserialize_char","","Hint that the <code>Deserialize</code> type is expecting a <code>char</code> value.",11,[[],["result",4]]],[10,"deserialize_str","","Hint that the <code>Deserialize</code> type is expecting a string …",11,[[],["result",4]]],[10,"deserialize_string","","Hint that the <code>Deserialize</code> type is expecting a string …",11,[[],["result",4]]],[10,"deserialize_bytes","","Hint that the <code>Deserialize</code> type is expecting a byte array …",11,[[],["result",4]]],[10,"deserialize_byte_buf","","Hint that the <code>Deserialize</code> type is expecting a byte array …",11,[[],["result",4]]],[10,"deserialize_option","","Hint that the <code>Deserialize</code> type is expecting an optional …",11,[[],["result",4]]],[10,"deserialize_unit","","Hint that the <code>Deserialize</code> type is expecting a unit value.",11,[[],["result",4]]],[10,"deserialize_unit_struct","","Hint that the <code>Deserialize</code> type is expecting a unit struct …",11,[[["str",15]],["result",4]]],[10,"deserialize_newtype_struct","","Hint that the <code>Deserialize</code> type is expecting a newtype …",11,[[["str",15]],["result",4]]],[10,"deserialize_seq","","Hint that the <code>Deserialize</code> type is expecting a sequence of …",11,[[],["result",4]]],[10,"deserialize_tuple","","Hint that the <code>Deserialize</code> type is expecting a sequence of …",11,[[["usize",15]],["result",4]]],[10,"deserialize_tuple_struct","","Hint that the <code>Deserialize</code> type is expecting a tuple …",11,[[["usize",15],["str",15]],["result",4]]],[10,"deserialize_map","","Hint that the <code>Deserialize</code> type is expecting a map of …",11,[[],["result",4]]],[10,"deserialize_struct","","Hint that the <code>Deserialize</code> type is expecting a struct with …",11,[[["str",15]],["result",4]]],[10,"deserialize_enum","","Hint that the <code>Deserialize</code> type is expecting an enum value …",11,[[["str",15]],["result",4]]],[10,"deserialize_identifier","","Hint that the <code>Deserialize</code> type is expecting the name of a …",11,[[],["result",4]]],[10,"deserialize_ignored_any","","Hint that the <code>Deserialize</code> type needs to deserialize a …",11,[[],["result",4]]],[11,"is_human_readable","","Determine whether <code>Deserialize</code> implementations should …",11,[[],["bool",15]]],[8,"Visitor","","This trait represents a visitor that walks through a …",null,null],[16,"Value","","The value produced by this visitor.",12,null],[10,"expecting","","Format a message stating what data this Visitor expects …",12,[[["formatter",3]],["result",6]]],[11,"visit_bool","","The input contains a boolean.",12,[[["bool",15]],["result",4]]],[11,"visit_i8","","The input contains an <code>i8</code>.",12,[[["i8",15]],["result",4]]],[11,"visit_i16","","The input contains an <code>i16</code>.",12,[[["i16",15]],["result",4]]],[11,"visit_i32","","The input contains an <code>i32</code>.",12,[[["i32",15]],["result",4]]],[11,"visit_i64","","The input contains an <code>i64</code>.",12,[[["i64",15]],["result",4]]],[11,"visit_i128","","The input contains a <code>i128</code>.",12,[[["i128",15]],["result",4]]],[11,"visit_u8","","The input contains a <code>u8</code>.",12,[[["u8",15]],["result",4]]],[11,"visit_u16","","The input contains a <code>u16</code>.",12,[[["u16",15]],["result",4]]],[11,"visit_u32","","The input contains a <code>u32</code>.",12,[[["u32",15]],["result",4]]],[11,"visit_u64","","The input contains a <code>u64</code>.",12,[[["u64",15]],["result",4]]],[11,"visit_u128","","The input contains a <code>u128</code>.",12,[[["u128",15]],["result",4]]],[11,"visit_f32","","The input contains an <code>f32</code>.",12,[[["f32",15]],["result",4]]],[11,"visit_f64","","The input contains an <code>f64</code>.",12,[[["f64",15]],["result",4]]],[11,"visit_char","","The input contains a <code>char</code>.",12,[[["char",15]],["result",4]]],[11,"visit_str","","The input contains a string. The lifetime of the string …",12,[[["str",15]],["result",4]]],[11,"visit_borrowed_str","","The input contains a string that lives at least as long …",12,[[["str",15]],["result",4]]],[11,"visit_string","","The input contains a string and ownership of the string …",12,[[["string",3]],["result",4]]],[11,"visit_bytes","","The input contains a byte array. The lifetime of the byte …",12,[[],["result",4]]],[11,"visit_borrowed_bytes","","The input contains a byte array that lives at least as …",12,[[],["result",4]]],[11,"visit_byte_buf","","The input contains a byte array and ownership of the byte …",12,[[["vec",3],["u8",15]],["result",4]]],[11,"visit_none","","The input contains an optional that is absent.",12,[[],["result",4]]],[11,"visit_some","","The input contains an optional that is present.",12,[[],["result",4]]],[11,"visit_unit","","The input contains a unit <code>()</code>.",12,[[],["result",4]]],[11,"visit_newtype_struct","","The input contains a newtype struct.",12,[[],["result",4]]],[11,"visit_seq","","The input contains a sequence of elements.",12,[[],["result",4]]],[11,"visit_map","","The input contains a key-value map.",12,[[],["result",4]]],[11,"visit_enum","","The input contains an enum.",12,[[],["result",4]]],[8,"SeqAccess","","Provides a <code>Visitor</code> access to each element of a sequence …",null,null],[16,"Error","","The error type that can be returned if some error occurs …",13,null],[10,"next_element_seed","","This returns <code>Ok(Some(value))</code> for the next value in the …",13,[[],[["result",4],["option",4]]]],[11,"next_element","","This returns <code>Ok(Some(value))</code> for the next value in the …",13,[[],[["result",4],["option",4]]]],[11,"size_hint","","Returns the number of elements remaining in the sequence, …",13,[[],[["option",4],["usize",15]]]],[8,"MapAccess","","Provides a <code>Visitor</code> access to each entry of a map in the …",null,null],[16,"Error","","The error type that can be returned if some error occurs …",14,null],[10,"next_key_seed","","This returns <code>Ok(Some(key))</code> for the next key in the map, …",14,[[],[["result",4],["option",4]]]],[10,"next_value_seed","","This returns a <code>Ok(value)</code> for the next value in the map.",14,[[],["result",4]]],[11,"next_entry_seed","","This returns <code>Ok(Some((key, value)))</code> for the next …",14,[[],[["option",4],["result",4]]]],[11,"next_key","","This returns <code>Ok(Some(key))</code> for the next key in the map, …",14,[[],[["result",4],["option",4]]]],[11,"next_value","","This returns a <code>Ok(value)</code> for the next value in the map.",14,[[],["result",4]]],[11,"next_entry","","This returns <code>Ok(Some((key, value)))</code> for the next …",14,[[],[["result",4],["option",4]]]],[11,"size_hint","","Returns the number of entries remaining in the map, if …",14,[[],[["option",4],["usize",15]]]],[8,"EnumAccess","","Provides a <code>Visitor</code> access to the data of an enum in the …",null,null],[16,"Error","","The error type that can be returned if some error occurs …",15,null],[16,"Variant","","The <code>Visitor</code> that will be used to deserialize the content …",15,null],[10,"variant_seed","","<code>variant</code> is called to identify which variant to …",15,[[],["result",4]]],[11,"variant","","<code>variant</code> is called to identify which variant to …",15,[[],["result",4]]],[8,"VariantAccess","","<code>VariantAccess</code> is a visitor that is created by the …",null,null],[16,"Error","","The error type that can be returned if some error occurs …",16,null],[10,"unit_variant","","Called when deserializing a variant with no values.",16,[[],["result",4]]],[10,"newtype_variant_seed","","Called when deserializing a variant with a single value.",16,[[],["result",4]]],[11,"newtype_variant","","Called when deserializing a variant with a single value.",16,[[],["result",4]]],[10,"tuple_variant","","Called when deserializing a tuple-like variant.",16,[[["usize",15]],["result",4]]],[10,"struct_variant","","Called when deserializing a struct-like variant.",16,[[],["result",4]]],[8,"IntoDeserializer","","Converts an existing value into a <code>Deserializer</code> from which …",null,null],[16,"Deserializer","","The type of the deserializer being converted into.",17,null],[10,"into_deserializer","","Convert this value into a deserializer.",17,[[]]],[0,"ser","serde","Generic data structure serialization framework.",null,null],[3,"Impossible","serde::ser","Helper type for implementing a <code>Serializer</code> that does not …",null,null],[8,"Error","","Trait used by <code>Serialize</code> implementations to generically …",null,null],[10,"custom","","Used when a <code>Serialize</code> implementation encounters any error …",18,[[]]],[8,"Serialize","","A <strong>data structure</strong> that can be serialized into any data …",null,null],[10,"serialize","","Serialize this value into the given Serde serializer.",19,[[],["result",4]]],[8,"Serializer","","A <strong>data format</strong> that can serialize any data structure …",null,null],[16,"Ok","","The output type produced by this <code>Serializer</code> during …",20,null],[16,"Error","","The error type when some error occurs during …",20,null],[16,"SerializeSeq","","Type returned from <code>serialize_seq</code> for serializing the …",20,null],[16,"SerializeTuple","","Type returned from <code>serialize_tuple</code> for serializing the …",20,null],[16,"SerializeTupleStruct","","Type returned from <code>serialize_tuple_struct</code> for serializing …",20,null],[16,"SerializeTupleVariant","","Type returned from <code>serialize_tuple_variant</code> for …",20,null],[16,"SerializeMap","","Type returned from <code>serialize_map</code> for serializing the …",20,null],[16,"SerializeStruct","","Type returned from <code>serialize_struct</code> for serializing the …",20,null],[16,"SerializeStructVariant","","Type returned from <code>serialize_struct_variant</code> for …",20,null],[10,"serialize_bool","","Serialize a <code>bool</code> value.",20,[[["bool",15]],["result",4]]],[10,"serialize_i8","","Serialize an <code>i8</code> value.",20,[[["i8",15]],["result",4]]],[10,"serialize_i16","","Serialize an <code>i16</code> value.",20,[[["i16",15]],["result",4]]],[10,"serialize_i32","","Serialize an <code>i32</code> value.",20,[[["i32",15]],["result",4]]],[10,"serialize_i64","","Serialize an <code>i64</code> value.",20,[[["i64",15]],["result",4]]],[11,"serialize_i128","","Serialize an <code>i128</code> value.",20,[[["i128",15]],["result",4]]],[10,"serialize_u8","","Serialize a <code>u8</code> value.",20,[[["u8",15]],["result",4]]],[10,"serialize_u16","","Serialize a <code>u16</code> value.",20,[[["u16",15]],["result",4]]],[10,"serialize_u32","","Serialize a <code>u32</code> value.",20,[[["u32",15]],["result",4]]],[10,"serialize_u64","","Serialize a <code>u64</code> value.",20,[[["u64",15]],["result",4]]],[11,"serialize_u128","","Serialize a <code>u128</code> value.",20,[[["u128",15]],["result",4]]],[10,"serialize_f32","","Serialize an <code>f32</code> value.",20,[[["f32",15]],["result",4]]],[10,"serialize_f64","","Serialize an <code>f64</code> value.",20,[[["f64",15]],["result",4]]],[10,"serialize_char","","Serialize a character.",20,[[["char",15]],["result",4]]],[10,"serialize_str","","Serialize a <code>&str</code>.",20,[[["str",15]],["result",4]]],[10,"serialize_bytes","","Serialize a chunk of raw byte data.",20,[[],["result",4]]],[10,"serialize_none","","Serialize a <code>None</code> value.",20,[[],["result",4]]],[10,"serialize_some","","Serialize a <code>Some(T)</code> value.",20,[[],["result",4]]],[10,"serialize_unit","","Serialize a <code>()</code> value.",20,[[],["result",4]]],[10,"serialize_unit_struct","","Serialize a unit struct like <code>struct Unit</code> or <code>PhantomData<T></code>…",20,[[["str",15]],["result",4]]],[10,"serialize_unit_variant","","Serialize a unit variant like <code>E::A</code> in <code>enum E { A, B }</code>.",20,[[["u32",15],["str",15]],["result",4]]],[10,"serialize_newtype_struct","","Serialize a newtype struct like <code>struct Millimeters(u8)</code>.",20,[[["str",15]],["result",4]]],[10,"serialize_newtype_variant","","Serialize a newtype variant like <code>E::N</code> in <code>enum E { N(u8) }</code>.",20,[[["u32",15],["str",15]],["result",4]]],[10,"serialize_seq","","Begin to serialize a variably sized sequence. This call …",20,[[["option",4],["usize",15]],["result",4]]],[10,"serialize_tuple","","Begin to serialize a statically sized sequence whose …",20,[[["usize",15]],["result",4]]],[10,"serialize_tuple_struct","","Begin to serialize a tuple struct like …",20,[[["usize",15],["str",15]],["result",4]]],[10,"serialize_tuple_variant","","Begin to serialize a tuple variant like <code>E::T</code> in …",20,[[["u32",15],["str",15],["usize",15]],["result",4]]],[10,"serialize_map","","Begin to serialize a map. This call must be followed by …",20,[[["option",4],["usize",15]],["result",4]]],[10,"serialize_struct","","Begin to serialize a struct like …",20,[[["usize",15],["str",15]],["result",4]]],[10,"serialize_struct_variant","","Begin to serialize a struct variant like <code>E::S</code> in …",20,[[["u32",15],["str",15],["usize",15]],["result",4]]],[11,"collect_seq","","Collect an iterator as a sequence.",20,[[],["result",4]]],[11,"collect_map","","Collect an iterator as a map.",20,[[],["result",4]]],[11,"collect_str","","Serialize a string produced by an implementation of …",20,[[],["result",4]]],[11,"is_human_readable","","Determine whether <code>Serialize</code> implementations should …",20,[[],["bool",15]]],[8,"SerializeSeq","","Returned from <code>Serializer::serialize_seq</code>.",null,null],[16,"Ok","","Must match the <code>Ok</code> type of our <code>Serializer</code>.",21,null],[16,"Error","","Must match the <code>Error</code> type of our <code>Serializer</code>.",21,null],[10,"serialize_element","","Serialize a sequence element.",21,[[],["result",4]]],[10,"end","","Finish serializing a sequence.",21,[[],["result",4]]],[8,"SerializeTuple","","Returned from <code>Serializer::serialize_tuple</code>.",null,null],[16,"Ok","","Must match the <code>Ok</code> type of our <code>Serializer</code>.",22,null],[16,"Error","","Must match the <code>Error</code> type of our <code>Serializer</code>.",22,null],[10,"serialize_element","","Serialize a tuple element.",22,[[],["result",4]]],[10,"end","","Finish serializing a tuple.",22,[[],["result",4]]],[8,"SerializeTupleStruct","","Returned from <code>Serializer::serialize_tuple_struct</code>.",null,null],[16,"Ok","","Must match the <code>Ok</code> type of our <code>Serializer</code>.",23,null],[16,"Error","","Must match the <code>Error</code> type of our <code>Serializer</code>.",23,null],[10,"serialize_field","","Serialize a tuple struct field.",23,[[],["result",4]]],[10,"end","","Finish serializing a tuple struct.",23,[[],["result",4]]],[8,"SerializeTupleVariant","","Returned from <code>Serializer::serialize_tuple_variant</code>.",null,null],[16,"Ok","","Must match the <code>Ok</code> type of our <code>Serializer</code>.",24,null],[16,"Error","","Must match the <code>Error</code> type of our <code>Serializer</code>.",24,null],[10,"serialize_field","","Serialize a tuple variant field.",24,[[],["result",4]]],[10,"end","","Finish serializing a tuple variant.",24,[[],["result",4]]],[8,"SerializeMap","","Returned from <code>Serializer::serialize_map</code>.",null,null],[16,"Ok","","Must match the <code>Ok</code> type of our <code>Serializer</code>.",25,null],[16,"Error","","Must match the <code>Error</code> type of our <code>Serializer</code>.",25,null],[10,"serialize_key","","Serialize a map key.",25,[[],["result",4]]],[10,"serialize_value","","Serialize a map value.",25,[[],["result",4]]],[11,"serialize_entry","","Serialize a map entry consisting of a key and a value.",25,[[],["result",4]]],[10,"end","","Finish serializing a map.",25,[[],["result",4]]],[8,"SerializeStruct","","Returned from <code>Serializer::serialize_struct</code>.",null,null],[16,"Ok","","Must match the <code>Ok</code> type of our <code>Serializer</code>.",26,null],[16,"Error","","Must match the <code>Error</code> type of our <code>Serializer</code>.",26,null],[10,"serialize_field","","Serialize a struct field.",26,[[["str",15]],["result",4]]],[11,"skip_field","","Indicate that a struct field has been skipped.",26,[[["str",15]],["result",4]]],[10,"end","","Finish serializing a struct.",26,[[],["result",4]]],[8,"SerializeStructVariant","","Returned from <code>Serializer::serialize_struct_variant</code>.",null,null],[16,"Ok","","Must match the <code>Ok</code> type of our <code>Serializer</code>.",27,null],[16,"Error","","Must match the <code>Error</code> type of our <code>Serializer</code>.",27,null],[10,"serialize_field","","Serialize a struct variant field.",27,[[["str",15]],["result",4]]],[11,"skip_field","","Indicate that a struct variant field has been skipped.",27,[[["str",15]],["result",4]]],[10,"end","","Finish serializing a struct variant.",27,[[],["result",4]]],[8,"Deserialize","serde","A <strong>data structure</strong> that can be deserialized from any data …",null,null],[10,"deserialize","","Deserialize this value from the given Serde deserializer.",9,[[],["result",4]]],[8,"Deserializer","","A <strong>data format</strong> that can deserialize any data structure …",null,null],[16,"Error","","The error type that can be returned if some error occurs …",11,null],[10,"deserialize_any","","Require the <code>Deserializer</code> to figure out how to drive the …",11,[[],["result",4]]],[10,"deserialize_bool","","Hint that the <code>Deserialize</code> type is expecting a <code>bool</code> value.",11,[[],["result",4]]],[10,"deserialize_i8","","Hint that the <code>Deserialize</code> type is expecting an <code>i8</code> value.",11,[[],["result",4]]],[10,"deserialize_i16","","Hint that the <code>Deserialize</code> type is expecting an <code>i16</code> value.",11,[[],["result",4]]],[10,"deserialize_i32","","Hint that the <code>Deserialize</code> type is expecting an <code>i32</code> value.",11,[[],["result",4]]],[10,"deserialize_i64","","Hint that the <code>Deserialize</code> type is expecting an <code>i64</code> value.",11,[[],["result",4]]],[11,"deserialize_i128","","Hint that the <code>Deserialize</code> type is expecting an <code>i128</code> value.",11,[[],["result",4]]],[10,"deserialize_u8","","Hint that the <code>Deserialize</code> type is expecting a <code>u8</code> value.",11,[[],["result",4]]],[10,"deserialize_u16","","Hint that the <code>Deserialize</code> type is expecting a <code>u16</code> value.",11,[[],["result",4]]],[10,"deserialize_u32","","Hint that the <code>Deserialize</code> type is expecting a <code>u32</code> value.",11,[[],["result",4]]],[10,"deserialize_u64","","Hint that the <code>Deserialize</code> type is expecting a <code>u64</code> value.",11,[[],["result",4]]],[11,"deserialize_u128","","Hint that the <code>Deserialize</code> type is expecting an <code>u128</code> value.",11,[[],["result",4]]],[10,"deserialize_f32","","Hint that the <code>Deserialize</code> type is expecting a <code>f32</code> value.",11,[[],["result",4]]],[10,"deserialize_f64","","Hint that the <code>Deserialize</code> type is expecting a <code>f64</code> value.",11,[[],["result",4]]],[10,"deserialize_char","","Hint that the <code>Deserialize</code> type is expecting a <code>char</code> value.",11,[[],["result",4]]],[10,"deserialize_str","","Hint that the <code>Deserialize</code> type is expecting a string …",11,[[],["result",4]]],[10,"deserialize_string","","Hint that the <code>Deserialize</code> type is expecting a string …",11,[[],["result",4]]],[10,"deserialize_bytes","","Hint that the <code>Deserialize</code> type is expecting a byte array …",11,[[],["result",4]]],[10,"deserialize_byte_buf","","Hint that the <code>Deserialize</code> type is expecting a byte array …",11,[[],["result",4]]],[10,"deserialize_option","","Hint that the <code>Deserialize</code> type is expecting an optional …",11,[[],["result",4]]],[10,"deserialize_unit","","Hint that the <code>Deserialize</code> type is expecting a unit value.",11,[[],["result",4]]],[10,"deserialize_unit_struct","","Hint that the <code>Deserialize</code> type is expecting a unit struct …",11,[[["str",15]],["result",4]]],[10,"deserialize_newtype_struct","","Hint that the <code>Deserialize</code> type is expecting a newtype …",11,[[["str",15]],["result",4]]],[10,"deserialize_seq","","Hint that the <code>Deserialize</code> type is expecting a sequence of …",11,[[],["result",4]]],[10,"deserialize_tuple","","Hint that the <code>Deserialize</code> type is expecting a sequence of …",11,[[["usize",15]],["result",4]]],[10,"deserialize_tuple_struct","","Hint that the <code>Deserialize</code> type is expecting a tuple …",11,[[["usize",15],["str",15]],["result",4]]],[10,"deserialize_map","","Hint that the <code>Deserialize</code> type is expecting a map of …",11,[[],["result",4]]],[10,"deserialize_struct","","Hint that the <code>Deserialize</code> type is expecting a struct with …",11,[[["str",15]],["result",4]]],[10,"deserialize_enum","","Hint that the <code>Deserialize</code> type is expecting an enum value …",11,[[["str",15]],["result",4]]],[10,"deserialize_identifier","","Hint that the <code>Deserialize</code> type is expecting the name of a …",11,[[],["result",4]]],[10,"deserialize_ignored_any","","Hint that the <code>Deserialize</code> type needs to deserialize a …",11,[[],["result",4]]],[11,"is_human_readable","","Determine whether <code>Deserialize</code> implementations should …",11,[[],["bool",15]]],[8,"Serialize","","A <strong>data structure</strong> that can be serialized into any data …",null,null],[10,"serialize","","Serialize this value into the given Serde serializer.",19,[[],["result",4]]],[8,"Serializer","","A <strong>data format</strong> that can serialize any data structure …",null,null],[16,"Ok","","The output type produced by this <code>Serializer</code> during …",20,null],[16,"Error","","The error type when some error occurs during …",20,null],[16,"SerializeSeq","","Type returned from <code>serialize_seq</code> for serializing the …",20,null],[16,"SerializeTuple","","Type returned from <code>serialize_tuple</code> for serializing the …",20,null],[16,"SerializeTupleStruct","","Type returned from <code>serialize_tuple_struct</code> for serializing …",20,null],[16,"SerializeTupleVariant","","Type returned from <code>serialize_tuple_variant</code> for …",20,null],[16,"SerializeMap","","Type returned from <code>serialize_map</code> for serializing the …",20,null],[16,"SerializeStruct","","Type returned from <code>serialize_struct</code> for serializing the …",20,null],[16,"SerializeStructVariant","","Type returned from <code>serialize_struct_variant</code> for …",20,null],[10,"serialize_bool","","Serialize a <code>bool</code> value.",20,[[["bool",15]],["result",4]]],[10,"serialize_i8","","Serialize an <code>i8</code> value.",20,[[["i8",15]],["result",4]]],[10,"serialize_i16","","Serialize an <code>i16</code> value.",20,[[["i16",15]],["result",4]]],[10,"serialize_i32","","Serialize an <code>i32</code> value.",20,[[["i32",15]],["result",4]]],[10,"serialize_i64","","Serialize an <code>i64</code> value.",20,[[["i64",15]],["result",4]]],[11,"serialize_i128","","Serialize an <code>i128</code> value.",20,[[["i128",15]],["result",4]]],[10,"serialize_u8","","Serialize a <code>u8</code> value.",20,[[["u8",15]],["result",4]]],[10,"serialize_u16","","Serialize a <code>u16</code> value.",20,[[["u16",15]],["result",4]]],[10,"serialize_u32","","Serialize a <code>u32</code> value.",20,[[["u32",15]],["result",4]]],[10,"serialize_u64","","Serialize a <code>u64</code> value.",20,[[["u64",15]],["result",4]]],[11,"serialize_u128","","Serialize a <code>u128</code> value.",20,[[["u128",15]],["result",4]]],[10,"serialize_f32","","Serialize an <code>f32</code> value.",20,[[["f32",15]],["result",4]]],[10,"serialize_f64","","Serialize an <code>f64</code> value.",20,[[["f64",15]],["result",4]]],[10,"serialize_char","","Serialize a character.",20,[[["char",15]],["result",4]]],[10,"serialize_str","","Serialize a <code>&str</code>.",20,[[["str",15]],["result",4]]],[10,"serialize_bytes","","Serialize a chunk of raw byte data.",20,[[],["result",4]]],[10,"serialize_none","","Serialize a <code>None</code> value.",20,[[],["result",4]]],[10,"serialize_some","","Serialize a <code>Some(T)</code> value.",20,[[],["result",4]]],[10,"serialize_unit","","Serialize a <code>()</code> value.",20,[[],["result",4]]],[10,"serialize_unit_struct","","Serialize a unit struct like <code>struct Unit</code> or <code>PhantomData<T></code>…",20,[[["str",15]],["result",4]]],[10,"serialize_unit_variant","","Serialize a unit variant like <code>E::A</code> in <code>enum E { A, B }</code>.",20,[[["u32",15],["str",15]],["result",4]]],[10,"serialize_newtype_struct","","Serialize a newtype struct like <code>struct Millimeters(u8)</code>.",20,[[["str",15]],["result",4]]],[10,"serialize_newtype_variant","","Serialize a newtype variant like <code>E::N</code> in <code>enum E { N(u8) }</code>.",20,[[["u32",15],["str",15]],["result",4]]],[10,"serialize_seq","","Begin to serialize a variably sized sequence. This call …",20,[[["option",4],["usize",15]],["result",4]]],[10,"serialize_tuple","","Begin to serialize a statically sized sequence whose …",20,[[["usize",15]],["result",4]]],[10,"serialize_tuple_struct","","Begin to serialize a tuple struct like …",20,[[["usize",15],["str",15]],["result",4]]],[10,"serialize_tuple_variant","","Begin to serialize a tuple variant like <code>E::T</code> in …",20,[[["u32",15],["str",15],["usize",15]],["result",4]]],[10,"serialize_map","","Begin to serialize a map. This call must be followed by …",20,[[["option",4],["usize",15]],["result",4]]],[10,"serialize_struct","","Begin to serialize a struct like …",20,[[["usize",15],["str",15]],["result",4]]],[10,"serialize_struct_variant","","Begin to serialize a struct variant like <code>E::S</code> in …",20,[[["u32",15],["str",15],["usize",15]],["result",4]]],[11,"collect_seq","","Collect an iterator as a sequence.",20,[[],["result",4]]],[11,"collect_map","","Collect an iterator as a map.",20,[[],["result",4]]],[11,"collect_str","","Serialize a string produced by an implementation of …",20,[[],["result",4]]],[11,"is_human_readable","","Determine whether <code>Serialize</code> implementations should …",20,[[],["bool",15]]],[14,"forward_to_deserialize_any","","Helper macro when implementing the <code>Deserializer</code> part of a …",null,null],[14,"serde_if_integer128","","Conditional compilation depending on whether Serde is …",null,null],[11,"from","serde::de::value","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"to_string","","",28,[[],["string",3]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"to_owned","","",41,[[]]],[11,"clone_into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_owned","","",44,[[]]],[11,"clone_into","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"to_owned","","",45,[[]]],[11,"clone_into","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"to_owned","","",46,[[]]],[11,"clone_into","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"to_owned","","",48,[[]]],[11,"clone_into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"fmt","serde::de","",49,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"to_owned","","",49,[[]]],[11,"clone_into","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"to_string","","",7,[[],["string",3]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","serde::ser","",50,[[]]],[11,"into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"deserialize","serde::de","",49,[[],[["result",4],["ignoredany",3]]]],[11,"deserialize_bool","serde::de::value","",29,[[],["result",4]]],[11,"deserialize_i8","","",29,[[],["result",4]]],[11,"deserialize_i16","","",29,[[],["result",4]]],[11,"deserialize_i32","","",29,[[],["result",4]]],[11,"deserialize_i64","","",29,[[],["result",4]]],[11,"deserialize_i128","","",29,[[],["result",4]]],[11,"deserialize_u8","","",29,[[],["result",4]]],[11,"deserialize_u16","","",29,[[],["result",4]]],[11,"deserialize_u32","","",29,[[],["result",4]]],[11,"deserialize_u64","","",29,[[],["result",4]]],[11,"deserialize_u128","","",29,[[],["result",4]]],[11,"deserialize_f32","","",29,[[],["result",4]]],[11,"deserialize_f64","","",29,[[],["result",4]]],[11,"deserialize_char","","",29,[[],["result",4]]],[11,"deserialize_str","","",29,[[],["result",4]]],[11,"deserialize_string","","",29,[[],["result",4]]],[11,"deserialize_bytes","","",29,[[],["result",4]]],[11,"deserialize_byte_buf","","",29,[[],["result",4]]],[11,"deserialize_unit","","",29,[[],["result",4]]],[11,"deserialize_unit_struct","","",29,[[["str",15]],["result",4]]],[11,"deserialize_newtype_struct","","",29,[[["str",15]],["result",4]]],[11,"deserialize_seq","","",29,[[],["result",4]]],[11,"deserialize_tuple","","",29,[[["usize",15]],["result",4]]],[11,"deserialize_tuple_struct","","",29,[[["usize",15],["str",15]],["result",4]]],[11,"deserialize_map","","",29,[[],["result",4]]],[11,"deserialize_struct","","",29,[[["str",15]],["result",4]]],[11,"deserialize_enum","","",29,[[["str",15]],["result",4]]],[11,"deserialize_identifier","","",29,[[],["result",4]]],[11,"deserialize_ignored_any","","",29,[[],["result",4]]],[11,"deserialize_any","","",29,[[],["result",4]]],[11,"deserialize_option","","",29,[[],["result",4]]],[11,"deserialize_bool","","",30,[[],["result",4]]],[11,"deserialize_i8","","",30,[[],["result",4]]],[11,"deserialize_i16","","",30,[[],["result",4]]],[11,"deserialize_i32","","",30,[[],["result",4]]],[11,"deserialize_i64","","",30,[[],["result",4]]],[11,"deserialize_i128","","",30,[[],["result",4]]],[11,"deserialize_u8","","",30,[[],["result",4]]],[11,"deserialize_u16","","",30,[[],["result",4]]],[11,"deserialize_u32","","",30,[[],["result",4]]],[11,"deserialize_u64","","",30,[[],["result",4]]],[11,"deserialize_u128","","",30,[[],["result",4]]],[11,"deserialize_f32","","",30,[[],["result",4]]],[11,"deserialize_f64","","",30,[[],["result",4]]],[11,"deserialize_char","","",30,[[],["result",4]]],[11,"deserialize_str","","",30,[[],["result",4]]],[11,"deserialize_string","","",30,[[],["result",4]]],[11,"deserialize_bytes","","",30,[[],["result",4]]],[11,"deserialize_byte_buf","","",30,[[],["result",4]]],[11,"deserialize_option","","",30,[[],["result",4]]],[11,"deserialize_unit","","",30,[[],["result",4]]],[11,"deserialize_unit_struct","","",30,[[["str",15]],["result",4]]],[11,"deserialize_newtype_struct","","",30,[[["str",15]],["result",4]]],[11,"deserialize_seq","","",30,[[],["result",4]]],[11,"deserialize_tuple","","",30,[[["usize",15]],["result",4]]],[11,"deserialize_tuple_struct","","",30,[[["usize",15],["str",15]],["result",4]]],[11,"deserialize_map","","",30,[[],["result",4]]],[11,"deserialize_struct","","",30,[[["str",15]],["result",4]]],[11,"deserialize_enum","","",30,[[["str",15]],["result",4]]],[11,"deserialize_identifier","","",30,[[],["result",4]]],[11,"deserialize_ignored_any","","",30,[[],["result",4]]],[11,"deserialize_any","","",30,[[],["result",4]]],[11,"deserialize_bool","","",31,[[],["result",4]]],[11,"deserialize_i8","","",31,[[],["result",4]]],[11,"deserialize_i16","","",31,[[],["result",4]]],[11,"deserialize_i32","","",31,[[],["result",4]]],[11,"deserialize_i64","","",31,[[],["result",4]]],[11,"deserialize_i128","","",31,[[],["result",4]]],[11,"deserialize_u8","","",31,[[],["result",4]]],[11,"deserialize_u16","","",31,[[],["result",4]]],[11,"deserialize_u32","","",31,[[],["result",4]]],[11,"deserialize_u64","","",31,[[],["result",4]]],[11,"deserialize_u128","","",31,[[],["result",4]]],[11,"deserialize_f32","","",31,[[],["result",4]]],[11,"deserialize_f64","","",31,[[],["result",4]]],[11,"deserialize_char","","",31,[[],["result",4]]],[11,"deserialize_str","","",31,[[],["result",4]]],[11,"deserialize_string","","",31,[[],["result",4]]],[11,"deserialize_bytes","","",31,[[],["result",4]]],[11,"deserialize_byte_buf","","",31,[[],["result",4]]],[11,"deserialize_option","","",31,[[],["result",4]]],[11,"deserialize_unit","","",31,[[],["result",4]]],[11,"deserialize_unit_struct","","",31,[[["str",15]],["result",4]]],[11,"deserialize_newtype_struct","","",31,[[["str",15]],["result",4]]],[11,"deserialize_seq","","",31,[[],["result",4]]],[11,"deserialize_tuple","","",31,[[["usize",15]],["result",4]]],[11,"deserialize_tuple_struct","","",31,[[["usize",15],["str",15]],["result",4]]],[11,"deserialize_map","","",31,[[],["result",4]]],[11,"deserialize_struct","","",31,[[["str",15]],["result",4]]],[11,"deserialize_enum","","",31,[[["str",15]],["result",4]]],[11,"deserialize_identifier","","",31,[[],["result",4]]],[11,"deserialize_ignored_any","","",31,[[],["result",4]]],[11,"deserialize_any","","",31,[[],["result",4]]],[11,"deserialize_bool","","",32,[[],["result",4]]],[11,"deserialize_i8","","",32,[[],["result",4]]],[11,"deserialize_i16","","",32,[[],["result",4]]],[11,"deserialize_i32","","",32,[[],["result",4]]],[11,"deserialize_i64","","",32,[[],["result",4]]],[11,"deserialize_i128","","",32,[[],["result",4]]],[11,"deserialize_u8","","",32,[[],["result",4]]],[11,"deserialize_u16","","",32,[[],["result",4]]],[11,"deserialize_u32","","",32,[[],["result",4]]],[11,"deserialize_u64","","",32,[[],["result",4]]],[11,"deserialize_u128","","",32,[[],["result",4]]],[11,"deserialize_f32","","",32,[[],["result",4]]],[11,"deserialize_f64","","",32,[[],["result",4]]],[11,"deserialize_char","","",32,[[],["result",4]]],[11,"deserialize_str","","",32,[[],["result",4]]],[11,"deserialize_string","","",32,[[],["result",4]]],[11,"deserialize_bytes","","",32,[[],["result",4]]],[11,"deserialize_byte_buf","","",32,[[],["result",4]]],[11,"deserialize_option","","",32,[[],["result",4]]],[11,"deserialize_unit","","",32,[[],["result",4]]],[11,"deserialize_unit_struct","","",32,[[["str",15]],["result",4]]],[11,"deserialize_newtype_struct","","",32,[[["str",15]],["result",4]]],[11,"deserialize_seq","","",32,[[],["result",4]]],[11,"deserialize_tuple","","",32,[[["usize",15]],["result",4]]],[11,"deserialize_tuple_struct","","",32,[[["usize",15],["str",15]],["result",4]]],[11,"deserialize_map","","",32,[[],["result",4]]],[11,"deserialize_struct","","",32,[[["str",15]],["result",4]]],[11,"deserialize_enum","","",32,[[["str",15]],["result",4]]],[11,"deserialize_identifier","","",32,[[],["result",4]]],[11,"deserialize_ignored_any","","",32,[[],["result",4]]],[11,"deserialize_any","","",32,[[],["result",4]]],[11,"deserialize_bool","","",33,[[],["result",4]]],[11,"deserialize_i8","","",33,[[],["result",4]]],[11,"deserialize_i16","","",33,[[],["result",4]]],[11,"deserialize_i32","","",33,[[],["result",4]]],[11,"deserialize_i64","","",33,[[],["result",4]]],[11,"deserialize_i128","","",33,[[],["result",4]]],[11,"deserialize_u8","","",33,[[],["result",4]]],[11,"deserialize_u16","","",33,[[],["result",4]]],[11,"deserialize_u32","","",33,[[],["result",4]]],[11,"deserialize_u64","","",33,[[],["result",4]]],[11,"deserialize_u128","","",33,[[],["result",4]]],[11,"deserialize_f32","","",33,[[],["result",4]]],[11,"deserialize_f64","","",33,[[],["result",4]]],[11,"deserialize_char","","",33,[[],["result",4]]],[11,"deserialize_str","","",33,[[],["result",4]]],[11,"deserialize_string","","",33,[[],["result",4]]],[11,"deserialize_bytes","","",33,[[],["result",4]]],[11,"deserialize_byte_buf","","",33,[[],["result",4]]],[11,"deserialize_option","","",33,[[],["result",4]]],[11,"deserialize_unit","","",33,[[],["result",4]]],[11,"deserialize_unit_struct","","",33,[[["str",15]],["result",4]]],[11,"deserialize_newtype_struct","","",33,[[["str",15]],["result",4]]],[11,"deserialize_seq","","",33,[[],["result",4]]],[11,"deserialize_tuple","","",33,[[["usize",15]],["result",4]]],[11,"deserialize_tuple_struct","","",33,[[["usize",15],["str",15]],["result",4]]],[11,"deserialize_map","","",33,[[],["result",4]]],[11,"deserialize_struct","","",33,[[["str",15]],["result",4]]],[11,"deserialize_enum","","",33,[[["str",15]],["result",4]]],[11,"deserialize_identifier","","",33,[[],["result",4]]],[11,"deserialize_ignored_any","","",33,[[],["result",4]]],[11,"deserialize_any","","",33,[[],["result",4]]],[11,"deserialize_bool","","",34,[[],["result",4]]],[11,"deserialize_i8","","",34,[[],["result",4]]],[11,"deserialize_i16","","",34,[[],["result",4]]],[11,"deserialize_i32","","",34,[[],["result",4]]],[11,"deserialize_i64","","",34,[[],["result",4]]],[11,"deserialize_i128","","",34,[[],["result",4]]],[11,"deserialize_u8","","",34,[[],["result",4]]],[11,"deserialize_u16","","",34,[[],["result",4]]],[11,"deserialize_u32","","",34,[[],["result",4]]],[11,"deserialize_u64","","",34,[[],["result",4]]],[11,"deserialize_u128","","",34,[[],["result",4]]],[11,"deserialize_f32","","",34,[[],["result",4]]],[11,"deserialize_f64","","",34,[[],["result",4]]],[11,"deserialize_char","","",34,[[],["result",4]]],[11,"deserialize_str","","",34,[[],["result",4]]],[11,"deserialize_string","","",34,[[],["result",4]]],[11,"deserialize_bytes","","",34,[[],["result",4]]],[11,"deserialize_byte_buf","","",34,[[],["result",4]]],[11,"deserialize_option","","",34,[[],["result",4]]],[11,"deserialize_unit","","",34,[[],["result",4]]],[11,"deserialize_unit_struct","","",34,[[["str",15]],["result",4]]],[11,"deserialize_newtype_struct","","",34,[[["str",15]],["result",4]]],[11,"deserialize_seq","","",34,[[],["result",4]]],[11,"deserialize_tuple","","",34,[[["usize",15]],["result",4]]],[11,"deserialize_tuple_struct","","",34,[[["usize",15],["str",15]],["result",4]]],[11,"deserialize_map","","",34,[[],["result",4]]],[11,"deserialize_struct","","",34,[[["str",15]],["result",4]]],[11,"deserialize_enum","","",34,[[["str",15]],["result",4]]],[11,"deserialize_identifier","","",34,[[],["result",4]]],[11,"deserialize_ignored_any","","",34,[[],["result",4]]],[11,"deserialize_any","","",34,[[],["result",4]]],[11,"deserialize_bool","","",35,[[],["result",4]]],[11,"deserialize_i8","","",35,[[],["result",4]]],[11,"deserialize_i16","","",35,[[],["result",4]]],[11,"deserialize_i32","","",35,[[],["result",4]]],[11,"deserialize_i64","","",35,[[],["result",4]]],[11,"deserialize_i128","","",35,[[],["result",4]]],[11,"deserialize_u8","","",35,[[],["result",4]]],[11,"deserialize_u16","","",35,[[],["result",4]]],[11,"deserialize_u32","","",35,[[],["result",4]]],[11,"deserialize_u64","","",35,[[],["result",4]]],[11,"deserialize_u128","","",35,[[],["result",4]]],[11,"deserialize_f32","","",35,[[],["result",4]]],[11,"deserialize_f64","","",35,[[],["result",4]]],[11,"deserialize_char","","",35,[[],["result",4]]],[11,"deserialize_str","","",35,[[],["result",4]]],[11,"deserialize_string","","",35,[[],["result",4]]],[11,"deserialize_bytes","","",35,[[],["result",4]]],[11,"deserialize_byte_buf","","",35,[[],["result",4]]],[11,"deserialize_option","","",35,[[],["result",4]]],[11,"deserialize_unit","","",35,[[],["result",4]]],[11,"deserialize_unit_struct","","",35,[[["str",15]],["result",4]]],[11,"deserialize_newtype_struct","","",35,[[["str",15]],["result",4]]],[11,"deserialize_seq","","",35,[[],["result",4]]],[11,"deserialize_tuple","","",35,[[["usize",15]],["result",4]]],[11,"deserialize_tuple_struct","","",35,[[["usize",15],["str",15]],["result",4]]],[11,"deserialize_map","","",35,[[],["result",4]]],[11,"deserialize_struct","","",35,[[["str",15]],["result",4]]],[11,"deserialize_enum","","",35,[[["str",15]],["result",4]]],[11,"deserialize_identifier","","",35,[[],["result",4]]],[11,"deserialize_ignored_any","","",35,[[],["result",4]]],[11,"deserialize_any","","",35,[[],["result",4]]],[11,"deserialize_bool","","",36,[[],["result",4]]],[11,"deserialize_i8","","",36,[[],["result",4]]],[11,"deserialize_i16","","",36,[[],["result",4]]],[11,"deserialize_i32","","",36,[[],["result",4]]],[11,"deserialize_i64","","",36,[[],["result",4]]],[11,"deserialize_i128","","",36,[[],["result",4]]],[11,"deserialize_u8","","",36,[[],["result",4]]],[11,"deserialize_u16","","",36,[[],["result",4]]],[11,"deserialize_u32","","",36,[[],["result",4]]],[11,"deserialize_u64","","",36,[[],["result",4]]],[11,"deserialize_u128","","",36,[[],["result",4]]],[11,"deserialize_f32","","",36,[[],["result",4]]],[11,"deserialize_f64","","",36,[[],["result",4]]],[11,"deserialize_char","","",36,[[],["result",4]]],[11,"deserialize_str","","",36,[[],["result",4]]],[11,"deserialize_string","","",36,[[],["result",4]]],[11,"deserialize_bytes","","",36,[[],["result",4]]],[11,"deserialize_byte_buf","","",36,[[],["result",4]]],[11,"deserialize_option","","",36,[[],["result",4]]],[11,"deserialize_unit","","",36,[[],["result",4]]],[11,"deserialize_unit_struct","","",36,[[["str",15]],["result",4]]],[11,"deserialize_newtype_struct","","",36,[[["str",15]],["result",4]]],[11,"deserialize_seq","","",36,[[],["result",4]]],[11,"deserialize_tuple","","",36,[[["usize",15]],["result",4]]],[11,"deserialize_tuple_struct","","",36,[[["usize",15],["str",15]],["result",4]]],[11,"deserialize_map","","",36,[[],["result",4]]],[11,"deserialize_struct","","",36,[[["str",15]],["result",4]]],[11,"deserialize_enum","","",36,[[["str",15]],["result",4]]],[11,"deserialize_identifier","","",36,[[],["result",4]]],[11,"deserialize_ignored_any","","",36,[[],["result",4]]],[11,"deserialize_any","","",36,[[],["result",4]]],[11,"deserialize_bool","","",37,[[],["result",4]]],[11,"deserialize_i8","","",37,[[],["result",4]]],[11,"deserialize_i16","","",37,[[],["result",4]]],[11,"deserialize_i32","","",37,[[],["result",4]]],[11,"deserialize_i64","","",37,[[],["result",4]]],[11,"deserialize_i128","","",37,[[],["result",4]]],[11,"deserialize_u8","","",37,[[],["result",4]]],[11,"deserialize_u16","","",37,[[],["result",4]]],[11,"deserialize_u32","","",37,[[],["result",4]]],[11,"deserialize_u64","","",37,[[],["result",4]]],[11,"deserialize_u128","","",37,[[],["result",4]]],[11,"deserialize_f32","","",37,[[],["result",4]]],[11,"deserialize_f64","","",37,[[],["result",4]]],[11,"deserialize_char","","",37,[[],["result",4]]],[11,"deserialize_str","","",37,[[],["result",4]]],[11,"deserialize_string","","",37,[[],["result",4]]],[11,"deserialize_bytes","","",37,[[],["result",4]]],[11,"deserialize_byte_buf","","",37,[[],["result",4]]],[11,"deserialize_option","","",37,[[],["result",4]]],[11,"deserialize_unit","","",37,[[],["result",4]]],[11,"deserialize_unit_struct","","",37,[[["str",15]],["result",4]]],[11,"deserialize_newtype_struct","","",37,[[["str",15]],["result",4]]],[11,"deserialize_seq","","",37,[[],["result",4]]],[11,"deserialize_tuple","","",37,[[["usize",15]],["result",4]]],[11,"deserialize_tuple_struct","","",37,[[["usize",15],["str",15]],["result",4]]],[11,"deserialize_map","","",37,[[],["result",4]]],[11,"deserialize_struct","","",37,[[["str",15]],["result",4]]],[11,"deserialize_enum","","",37,[[["str",15]],["result",4]]],[11,"deserialize_identifier","","",37,[[],["result",4]]],[11,"deserialize_ignored_any","","",37,[[],["result",4]]],[11,"deserialize_any","","",37,[[],["result",4]]],[11,"deserialize_bool","","",38,[[],["result",4]]],[11,"deserialize_i8","","",38,[[],["result",4]]],[11,"deserialize_i16","","",38,[[],["result",4]]],[11,"deserialize_i32","","",38,[[],["result",4]]],[11,"deserialize_i64","","",38,[[],["result",4]]],[11,"deserialize_i128","","",38,[[],["result",4]]],[11,"deserialize_u8","","",38,[[],["result",4]]],[11,"deserialize_u16","","",38,[[],["result",4]]],[11,"deserialize_u32","","",38,[[],["result",4]]],[11,"deserialize_u64","","",38,[[],["result",4]]],[11,"deserialize_u128","","",38,[[],["result",4]]],[11,"deserialize_f32","","",38,[[],["result",4]]],[11,"deserialize_f64","","",38,[[],["result",4]]],[11,"deserialize_char","","",38,[[],["result",4]]],[11,"deserialize_str","","",38,[[],["result",4]]],[11,"deserialize_string","","",38,[[],["result",4]]],[11,"deserialize_bytes","","",38,[[],["result",4]]],[11,"deserialize_byte_buf","","",38,[[],["result",4]]],[11,"deserialize_option","","",38,[[],["result",4]]],[11,"deserialize_unit","","",38,[[],["result",4]]],[11,"deserialize_unit_struct","","",38,[[["str",15]],["result",4]]],[11,"deserialize_newtype_struct","","",38,[[["str",15]],["result",4]]],[11,"deserialize_seq","","",38,[[],["result",4]]],[11,"deserialize_tuple","","",38,[[["usize",15]],["result",4]]],[11,"deserialize_tuple_struct","","",38,[[["usize",15],["str",15]],["result",4]]],[11,"deserialize_map","","",38,[[],["result",4]]],[11,"deserialize_struct","","",38,[[["str",15]],["result",4]]],[11,"deserialize_enum","","",38,[[["str",15]],["result",4]]],[11,"deserialize_identifier","","",38,[[],["result",4]]],[11,"deserialize_ignored_any","","",38,[[],["result",4]]],[11,"deserialize_any","","",38,[[],["result",4]]],[11,"deserialize_bool","","",39,[[],["result",4]]],[11,"deserialize_i8","","",39,[[],["result",4]]],[11,"deserialize_i16","","",39,[[],["result",4]]],[11,"deserialize_i32","","",39,[[],["result",4]]],[11,"deserialize_i64","","",39,[[],["result",4]]],[11,"deserialize_i128","","",39,[[],["result",4]]],[11,"deserialize_u8","","",39,[[],["result",4]]],[11,"deserialize_u16","","",39,[[],["result",4]]],[11,"deserialize_u32","","",39,[[],["result",4]]],[11,"deserialize_u64","","",39,[[],["result",4]]],[11,"deserialize_u128","","",39,[[],["result",4]]],[11,"deserialize_f32","","",39,[[],["result",4]]],[11,"deserialize_f64","","",39,[[],["result",4]]],[11,"deserialize_char","","",39,[[],["result",4]]],[11,"deserialize_str","","",39,[[],["result",4]]],[11,"deserialize_string","","",39,[[],["result",4]]],[11,"deserialize_bytes","","",39,[[],["result",4]]],[11,"deserialize_byte_buf","","",39,[[],["result",4]]],[11,"deserialize_option","","",39,[[],["result",4]]],[11,"deserialize_unit","","",39,[[],["result",4]]],[11,"deserialize_unit_struct","","",39,[[["str",15]],["result",4]]],[11,"deserialize_newtype_struct","","",39,[[["str",15]],["result",4]]],[11,"deserialize_seq","","",39,[[],["result",4]]],[11,"deserialize_tuple","","",39,[[["usize",15]],["result",4]]],[11,"deserialize_tuple_struct","","",39,[[["usize",15],["str",15]],["result",4]]],[11,"deserialize_map","","",39,[[],["result",4]]],[11,"deserialize_struct","","",39,[[["str",15]],["result",4]]],[11,"deserialize_enum","","",39,[[["str",15]],["result",4]]],[11,"deserialize_identifier","","",39,[[],["result",4]]],[11,"deserialize_ignored_any","","",39,[[],["result",4]]],[11,"deserialize_any","","",39,[[],["result",4]]],[11,"deserialize_bool","","",40,[[],["result",4]]],[11,"deserialize_i8","","",40,[[],["result",4]]],[11,"deserialize_i16","","",40,[[],["result",4]]],[11,"deserialize_i32","","",40,[[],["result",4]]],[11,"deserialize_i64","","",40,[[],["result",4]]],[11,"deserialize_i128","","",40,[[],["result",4]]],[11,"deserialize_u8","","",40,[[],["result",4]]],[11,"deserialize_u16","","",40,[[],["result",4]]],[11,"deserialize_u32","","",40,[[],["result",4]]],[11,"deserialize_u64","","",40,[[],["result",4]]],[11,"deserialize_u128","","",40,[[],["result",4]]],[11,"deserialize_f32","","",40,[[],["result",4]]],[11,"deserialize_f64","","",40,[[],["result",4]]],[11,"deserialize_char","","",40,[[],["result",4]]],[11,"deserialize_str","","",40,[[],["result",4]]],[11,"deserialize_string","","",40,[[],["result",4]]],[11,"deserialize_bytes","","",40,[[],["result",4]]],[11,"deserialize_byte_buf","","",40,[[],["result",4]]],[11,"deserialize_option","","",40,[[],["result",4]]],[11,"deserialize_unit","","",40,[[],["result",4]]],[11,"deserialize_unit_struct","","",40,[[["str",15]],["result",4]]],[11,"deserialize_newtype_struct","","",40,[[["str",15]],["result",4]]],[11,"deserialize_seq","","",40,[[],["result",4]]],[11,"deserialize_tuple","","",40,[[["usize",15]],["result",4]]],[11,"deserialize_tuple_struct","","",40,[[["usize",15],["str",15]],["result",4]]],[11,"deserialize_map","","",40,[[],["result",4]]],[11,"deserialize_struct","","",40,[[["str",15]],["result",4]]],[11,"deserialize_enum","","",40,[[["str",15]],["result",4]]],[11,"deserialize_identifier","","",40,[[],["result",4]]],[11,"deserialize_ignored_any","","",40,[[],["result",4]]],[11,"deserialize_any","","",40,[[],["result",4]]],[11,"deserialize_bool","","",41,[[],["result",4]]],[11,"deserialize_i8","","",41,[[],["result",4]]],[11,"deserialize_i16","","",41,[[],["result",4]]],[11,"deserialize_i32","","",41,[[],["result",4]]],[11,"deserialize_i64","","",41,[[],["result",4]]],[11,"deserialize_i128","","",41,[[],["result",4]]],[11,"deserialize_u8","","",41,[[],["result",4]]],[11,"deserialize_u16","","",41,[[],["result",4]]],[11,"deserialize_u32","","",41,[[],["result",4]]],[11,"deserialize_u64","","",41,[[],["result",4]]],[11,"deserialize_u128","","",41,[[],["result",4]]],[11,"deserialize_f32","","",41,[[],["result",4]]],[11,"deserialize_f64","","",41,[[],["result",4]]],[11,"deserialize_char","","",41,[[],["result",4]]],[11,"deserialize_str","","",41,[[],["result",4]]],[11,"deserialize_string","","",41,[[],["result",4]]],[11,"deserialize_bytes","","",41,[[],["result",4]]],[11,"deserialize_byte_buf","","",41,[[],["result",4]]],[11,"deserialize_option","","",41,[[],["result",4]]],[11,"deserialize_unit","","",41,[[],["result",4]]],[11,"deserialize_unit_struct","","",41,[[["str",15]],["result",4]]],[11,"deserialize_newtype_struct","","",41,[[["str",15]],["result",4]]],[11,"deserialize_seq","","",41,[[],["result",4]]],[11,"deserialize_tuple","","",41,[[["usize",15]],["result",4]]],[11,"deserialize_tuple_struct","","",41,[[["usize",15],["str",15]],["result",4]]],[11,"deserialize_map","","",41,[[],["result",4]]],[11,"deserialize_struct","","",41,[[["str",15]],["result",4]]],[11,"deserialize_enum","","",41,[[["str",15]],["result",4]]],[11,"deserialize_identifier","","",41,[[],["result",4]]],[11,"deserialize_ignored_any","","",41,[[],["result",4]]],[11,"deserialize_any","","",41,[[],["result",4]]],[11,"deserialize_bool","","",42,[[],["result",4]]],[11,"deserialize_i8","","",42,[[],["result",4]]],[11,"deserialize_i16","","",42,[[],["result",4]]],[11,"deserialize_i32","","",42,[[],["result",4]]],[11,"deserialize_i64","","",42,[[],["result",4]]],[11,"deserialize_i128","","",42,[[],["result",4]]],[11,"deserialize_u8","","",42,[[],["result",4]]],[11,"deserialize_u16","","",42,[[],["result",4]]],[11,"deserialize_u32","","",42,[[],["result",4]]],[11,"deserialize_u64","","",42,[[],["result",4]]],[11,"deserialize_u128","","",42,[[],["result",4]]],[11,"deserialize_f32","","",42,[[],["result",4]]],[11,"deserialize_f64","","",42,[[],["result",4]]],[11,"deserialize_char","","",42,[[],["result",4]]],[11,"deserialize_str","","",42,[[],["result",4]]],[11,"deserialize_string","","",42,[[],["result",4]]],[11,"deserialize_bytes","","",42,[[],["result",4]]],[11,"deserialize_byte_buf","","",42,[[],["result",4]]],[11,"deserialize_option","","",42,[[],["result",4]]],[11,"deserialize_unit","","",42,[[],["result",4]]],[11,"deserialize_unit_struct","","",42,[[["str",15]],["result",4]]],[11,"deserialize_newtype_struct","","",42,[[["str",15]],["result",4]]],[11,"deserialize_seq","","",42,[[],["result",4]]],[11,"deserialize_tuple","","",42,[[["usize",15]],["result",4]]],[11,"deserialize_tuple_struct","","",42,[[["usize",15],["str",15]],["result",4]]],[11,"deserialize_map","","",42,[[],["result",4]]],[11,"deserialize_struct","","",42,[[["str",15]],["result",4]]],[11,"deserialize_enum","","",42,[[["str",15]],["result",4]]],[11,"deserialize_identifier","","",42,[[],["result",4]]],[11,"deserialize_ignored_any","","",42,[[],["result",4]]],[11,"deserialize_any","","",42,[[],["result",4]]],[11,"deserialize_bool","","",43,[[],["result",4]]],[11,"deserialize_i8","","",43,[[],["result",4]]],[11,"deserialize_i16","","",43,[[],["result",4]]],[11,"deserialize_i32","","",43,[[],["result",4]]],[11,"deserialize_i64","","",43,[[],["result",4]]],[11,"deserialize_i128","","",43,[[],["result",4]]],[11,"deserialize_u8","","",43,[[],["result",4]]],[11,"deserialize_u16","","",43,[[],["result",4]]],[11,"deserialize_u32","","",43,[[],["result",4]]],[11,"deserialize_u64","","",43,[[],["result",4]]],[11,"deserialize_u128","","",43,[[],["result",4]]],[11,"deserialize_f32","","",43,[[],["result",4]]],[11,"deserialize_f64","","",43,[[],["result",4]]],[11,"deserialize_char","","",43,[[],["result",4]]],[11,"deserialize_str","","",43,[[],["result",4]]],[11,"deserialize_string","","",43,[[],["result",4]]],[11,"deserialize_bytes","","",43,[[],["result",4]]],[11,"deserialize_byte_buf","","",43,[[],["result",4]]],[11,"deserialize_option","","",43,[[],["result",4]]],[11,"deserialize_unit","","",43,[[],["result",4]]],[11,"deserialize_unit_struct","","",43,[[["str",15]],["result",4]]],[11,"deserialize_newtype_struct","","",43,[[["str",15]],["result",4]]],[11,"deserialize_seq","","",43,[[],["result",4]]],[11,"deserialize_tuple","","",43,[[["usize",15]],["result",4]]],[11,"deserialize_tuple_struct","","",43,[[["usize",15],["str",15]],["result",4]]],[11,"deserialize_map","","",43,[[],["result",4]]],[11,"deserialize_struct","","",43,[[["str",15]],["result",4]]],[11,"deserialize_enum","","",43,[[["str",15]],["result",4]]],[11,"deserialize_identifier","","",43,[[],["result",4]]],[11,"deserialize_ignored_any","","",43,[[],["result",4]]],[11,"deserialize_any","","",43,[[],["result",4]]],[11,"deserialize_bool","","",44,[[],["result",4]]],[11,"deserialize_i8","","",44,[[],["result",4]]],[11,"deserialize_i16","","",44,[[],["result",4]]],[11,"deserialize_i32","","",44,[[],["result",4]]],[11,"deserialize_i64","","",44,[[],["result",4]]],[11,"deserialize_i128","","",44,[[],["result",4]]],[11,"deserialize_u8","","",44,[[],["result",4]]],[11,"deserialize_u16","","",44,[[],["result",4]]],[11,"deserialize_u32","","",44,[[],["result",4]]],[11,"deserialize_u64","","",44,[[],["result",4]]],[11,"deserialize_u128","","",44,[[],["result",4]]],[11,"deserialize_f32","","",44,[[],["result",4]]],[11,"deserialize_f64","","",44,[[],["result",4]]],[11,"deserialize_char","","",44,[[],["result",4]]],[11,"deserialize_str","","",44,[[],["result",4]]],[11,"deserialize_string","","",44,[[],["result",4]]],[11,"deserialize_bytes","","",44,[[],["result",4]]],[11,"deserialize_byte_buf","","",44,[[],["result",4]]],[11,"deserialize_option","","",44,[[],["result",4]]],[11,"deserialize_unit","","",44,[[],["result",4]]],[11,"deserialize_unit_struct","","",44,[[["str",15]],["result",4]]],[11,"deserialize_newtype_struct","","",44,[[["str",15]],["result",4]]],[11,"deserialize_seq","","",44,[[],["result",4]]],[11,"deserialize_tuple","","",44,[[["usize",15]],["result",4]]],[11,"deserialize_tuple_struct","","",44,[[["usize",15],["str",15]],["result",4]]],[11,"deserialize_map","","",44,[[],["result",4]]],[11,"deserialize_struct","","",44,[[["str",15]],["result",4]]],[11,"deserialize_enum","","",44,[[["str",15]],["result",4]]],[11,"deserialize_identifier","","",44,[[],["result",4]]],[11,"deserialize_ignored_any","","",44,[[],["result",4]]],[11,"deserialize_any","","",44,[[],["result",4]]],[11,"deserialize_bool","","",45,[[],["result",4]]],[11,"deserialize_i8","","",45,[[],["result",4]]],[11,"deserialize_i16","","",45,[[],["result",4]]],[11,"deserialize_i32","","",45,[[],["result",4]]],[11,"deserialize_i64","","",45,[[],["result",4]]],[11,"deserialize_i128","","",45,[[],["result",4]]],[11,"deserialize_u8","","",45,[[],["result",4]]],[11,"deserialize_u16","","",45,[[],["result",4]]],[11,"deserialize_u32","","",45,[[],["result",4]]],[11,"deserialize_u64","","",45,[[],["result",4]]],[11,"deserialize_u128","","",45,[[],["result",4]]],[11,"deserialize_f32","","",45,[[],["result",4]]],[11,"deserialize_f64","","",45,[[],["result",4]]],[11,"deserialize_char","","",45,[[],["result",4]]],[11,"deserialize_str","","",45,[[],["result",4]]],[11,"deserialize_string","","",45,[[],["result",4]]],[11,"deserialize_bytes","","",45,[[],["result",4]]],[11,"deserialize_byte_buf","","",45,[[],["result",4]]],[11,"deserialize_option","","",45,[[],["result",4]]],[11,"deserialize_unit","","",45,[[],["result",4]]],[11,"deserialize_unit_struct","","",45,[[["str",15]],["result",4]]],[11,"deserialize_newtype_struct","","",45,[[["str",15]],["result",4]]],[11,"deserialize_seq","","",45,[[],["result",4]]],[11,"deserialize_tuple","","",45,[[["usize",15]],["result",4]]],[11,"deserialize_tuple_struct","","",45,[[["usize",15],["str",15]],["result",4]]],[11,"deserialize_map","","",45,[[],["result",4]]],[11,"deserialize_struct","","",45,[[["str",15]],["result",4]]],[11,"deserialize_identifier","","",45,[[],["result",4]]],[11,"deserialize_ignored_any","","",45,[[],["result",4]]],[11,"deserialize_any","","",45,[[],["result",4]]],[11,"deserialize_enum","","",45,[[["str",15]],["result",4]]],[11,"deserialize_any","","",46,[[],["result",4]]],[11,"deserialize_enum","","",46,[[["str",15]],["result",4]]],[11,"deserialize_bool","","",46,[[],["result",4]]],[11,"deserialize_i8","","",46,[[],["result",4]]],[11,"deserialize_i16","","",46,[[],["result",4]]],[11,"deserialize_i32","","",46,[[],["result",4]]],[11,"deserialize_i64","","",46,[[],["result",4]]],[11,"deserialize_i128","","",46,[[],["result",4]]],[11,"deserialize_u8","","",46,[[],["result",4]]],[11,"deserialize_u16","","",46,[[],["result",4]]],[11,"deserialize_u32","","",46,[[],["result",4]]],[11,"deserialize_u64","","",46,[[],["result",4]]],[11,"deserialize_u128","","",46,[[],["result",4]]],[11,"deserialize_f32","","",46,[[],["result",4]]],[11,"deserialize_f64","","",46,[[],["result",4]]],[11,"deserialize_char","","",46,[[],["result",4]]],[11,"deserialize_str","","",46,[[],["result",4]]],[11,"deserialize_string","","",46,[[],["result",4]]],[11,"deserialize_bytes","","",46,[[],["result",4]]],[11,"deserialize_byte_buf","","",46,[[],["result",4]]],[11,"deserialize_option","","",46,[[],["result",4]]],[11,"deserialize_unit","","",46,[[],["result",4]]],[11,"deserialize_unit_struct","","",46,[[["str",15]],["result",4]]],[11,"deserialize_newtype_struct","","",46,[[["str",15]],["result",4]]],[11,"deserialize_seq","","",46,[[],["result",4]]],[11,"deserialize_tuple","","",46,[[["usize",15]],["result",4]]],[11,"deserialize_tuple_struct","","",46,[[["usize",15],["str",15]],["result",4]]],[11,"deserialize_map","","",46,[[],["result",4]]],[11,"deserialize_struct","","",46,[[["str",15]],["result",4]]],[11,"deserialize_identifier","","",46,[[],["result",4]]],[11,"deserialize_ignored_any","","",46,[[],["result",4]]],[11,"deserialize_any","","",0,[[],["result",4]]],[11,"deserialize_enum","","",0,[[["str",15]],["result",4]]],[11,"deserialize_bool","","",0,[[],["result",4]]],[11,"deserialize_i8","","",0,[[],["result",4]]],[11,"deserialize_i16","","",0,[[],["result",4]]],[11,"deserialize_i32","","",0,[[],["result",4]]],[11,"deserialize_i64","","",0,[[],["result",4]]],[11,"deserialize_i128","","",0,[[],["result",4]]],[11,"deserialize_u8","","",0,[[],["result",4]]],[11,"deserialize_u16","","",0,[[],["result",4]]],[11,"deserialize_u32","","",0,[[],["result",4]]],[11,"deserialize_u64","","",0,[[],["result",4]]],[11,"deserialize_u128","","",0,[[],["result",4]]],[11,"deserialize_f32","","",0,[[],["result",4]]],[11,"deserialize_f64","","",0,[[],["result",4]]],[11,"deserialize_char","","",0,[[],["result",4]]],[11,"deserialize_str","","",0,[[],["result",4]]],[11,"deserialize_string","","",0,[[],["result",4]]],[11,"deserialize_bytes","","",0,[[],["result",4]]],[11,"deserialize_byte_buf","","",0,[[],["result",4]]],[11,"deserialize_option","","",0,[[],["result",4]]],[11,"deserialize_unit","","",0,[[],["result",4]]],[11,"deserialize_unit_struct","","",0,[[["str",15]],["result",4]]],[11,"deserialize_newtype_struct","","",0,[[["str",15]],["result",4]]],[11,"deserialize_seq","","",0,[[],["result",4]]],[11,"deserialize_tuple","","",0,[[["usize",15]],["result",4]]],[11,"deserialize_tuple_struct","","",0,[[["usize",15],["str",15]],["result",4]]],[11,"deserialize_map","","",0,[[],["result",4]]],[11,"deserialize_struct","","",0,[[["str",15]],["result",4]]],[11,"deserialize_identifier","","",0,[[],["result",4]]],[11,"deserialize_ignored_any","","",0,[[],["result",4]]],[11,"deserialize_any","","",47,[[],["result",4]]],[11,"deserialize_enum","","",47,[[["str",15]],["result",4]]],[11,"deserialize_bool","","",47,[[],["result",4]]],[11,"deserialize_i8","","",47,[[],["result",4]]],[11,"deserialize_i16","","",47,[[],["result",4]]],[11,"deserialize_i32","","",47,[[],["result",4]]],[11,"deserialize_i64","","",47,[[],["result",4]]],[11,"deserialize_i128","","",47,[[],["result",4]]],[11,"deserialize_u8","","",47,[[],["result",4]]],[11,"deserialize_u16","","",47,[[],["result",4]]],[11,"deserialize_u32","","",47,[[],["result",4]]],[11,"deserialize_u64","","",47,[[],["result",4]]],[11,"deserialize_u128","","",47,[[],["result",4]]],[11,"deserialize_f32","","",47,[[],["result",4]]],[11,"deserialize_f64","","",47,[[],["result",4]]],[11,"deserialize_char","","",47,[[],["result",4]]],[11,"deserialize_str","","",47,[[],["result",4]]],[11,"deserialize_string","","",47,[[],["result",4]]],[11,"deserialize_bytes","","",47,[[],["result",4]]],[11,"deserialize_byte_buf","","",47,[[],["result",4]]],[11,"deserialize_option","","",47,[[],["result",4]]],[11,"deserialize_unit","","",47,[[],["result",4]]],[11,"deserialize_unit_struct","","",47,[[["str",15]],["result",4]]],[11,"deserialize_newtype_struct","","",47,[[["str",15]],["result",4]]],[11,"deserialize_seq","","",47,[[],["result",4]]],[11,"deserialize_tuple","","",47,[[["usize",15]],["result",4]]],[11,"deserialize_tuple_struct","","",47,[[["usize",15],["str",15]],["result",4]]],[11,"deserialize_map","","",47,[[],["result",4]]],[11,"deserialize_struct","","",47,[[["str",15]],["result",4]]],[11,"deserialize_identifier","","",47,[[],["result",4]]],[11,"deserialize_ignored_any","","",47,[[],["result",4]]],[11,"deserialize_any","","",48,[[],["result",4]]],[11,"deserialize_enum","","",48,[[["str",15]],["result",4]]],[11,"deserialize_bool","","",48,[[],["result",4]]],[11,"deserialize_i8","","",48,[[],["result",4]]],[11,"deserialize_i16","","",48,[[],["result",4]]],[11,"deserialize_i32","","",48,[[],["result",4]]],[11,"deserialize_i64","","",48,[[],["result",4]]],[11,"deserialize_i128","","",48,[[],["result",4]]],[11,"deserialize_u8","","",48,[[],["result",4]]],[11,"deserialize_u16","","",48,[[],["result",4]]],[11,"deserialize_u32","","",48,[[],["result",4]]],[11,"deserialize_u64","","",48,[[],["result",4]]],[11,"deserialize_u128","","",48,[[],["result",4]]],[11,"deserialize_f32","","",48,[[],["result",4]]],[11,"deserialize_f64","","",48,[[],["result",4]]],[11,"deserialize_char","","",48,[[],["result",4]]],[11,"deserialize_str","","",48,[[],["result",4]]],[11,"deserialize_string","","",48,[[],["result",4]]],[11,"deserialize_bytes","","",48,[[],["result",4]]],[11,"deserialize_byte_buf","","",48,[[],["result",4]]],[11,"deserialize_option","","",48,[[],["result",4]]],[11,"deserialize_unit","","",48,[[],["result",4]]],[11,"deserialize_unit_struct","","",48,[[["str",15]],["result",4]]],[11,"deserialize_newtype_struct","","",48,[[["str",15]],["result",4]]],[11,"deserialize_seq","","",48,[[],["result",4]]],[11,"deserialize_tuple","","",48,[[["usize",15]],["result",4]]],[11,"deserialize_tuple_struct","","",48,[[["usize",15],["str",15]],["result",4]]],[11,"deserialize_map","","",48,[[],["result",4]]],[11,"deserialize_struct","","",48,[[["str",15]],["result",4]]],[11,"deserialize_identifier","","",48,[[],["result",4]]],[11,"deserialize_ignored_any","","",48,[[],["result",4]]],[11,"deserialize_any","","",1,[[],["result",4]]],[11,"deserialize_bool","","",1,[[],["result",4]]],[11,"deserialize_i8","","",1,[[],["result",4]]],[11,"deserialize_i16","","",1,[[],["result",4]]],[11,"deserialize_i32","","",1,[[],["result",4]]],[11,"deserialize_i64","","",1,[[],["result",4]]],[11,"deserialize_i128","","",1,[[],["result",4]]],[11,"deserialize_u8","","",1,[[],["result",4]]],[11,"deserialize_u16","","",1,[[],["result",4]]],[11,"deserialize_u32","","",1,[[],["result",4]]],[11,"deserialize_u64","","",1,[[],["result",4]]],[11,"deserialize_u128","","",1,[[],["result",4]]],[11,"deserialize_f32","","",1,[[],["result",4]]],[11,"deserialize_f64","","",1,[[],["result",4]]],[11,"deserialize_char","","",1,[[],["result",4]]],[11,"deserialize_str","","",1,[[],["result",4]]],[11,"deserialize_string","","",1,[[],["result",4]]],[11,"deserialize_bytes","","",1,[[],["result",4]]],[11,"deserialize_byte_buf","","",1,[[],["result",4]]],[11,"deserialize_option","","",1,[[],["result",4]]],[11,"deserialize_unit","","",1,[[],["result",4]]],[11,"deserialize_unit_struct","","",1,[[["str",15]],["result",4]]],[11,"deserialize_newtype_struct","","",1,[[["str",15]],["result",4]]],[11,"deserialize_seq","","",1,[[],["result",4]]],[11,"deserialize_tuple","","",1,[[["usize",15]],["result",4]]],[11,"deserialize_tuple_struct","","",1,[[["usize",15],["str",15]],["result",4]]],[11,"deserialize_map","","",1,[[],["result",4]]],[11,"deserialize_struct","","",1,[[["str",15]],["result",4]]],[11,"deserialize_identifier","","",1,[[],["result",4]]],[11,"deserialize_ignored_any","","",1,[[],["result",4]]],[11,"deserialize_enum","","",1,[[["str",15]],["result",4]]],[11,"deserialize_any","","",2,[[],["result",4]]],[11,"deserialize_bool","","",2,[[],["result",4]]],[11,"deserialize_i8","","",2,[[],["result",4]]],[11,"deserialize_i16","","",2,[[],["result",4]]],[11,"deserialize_i32","","",2,[[],["result",4]]],[11,"deserialize_i64","","",2,[[],["result",4]]],[11,"deserialize_i128","","",2,[[],["result",4]]],[11,"deserialize_u8","","",2,[[],["result",4]]],[11,"deserialize_u16","","",2,[[],["result",4]]],[11,"deserialize_u32","","",2,[[],["result",4]]],[11,"deserialize_u64","","",2,[[],["result",4]]],[11,"deserialize_u128","","",2,[[],["result",4]]],[11,"deserialize_f32","","",2,[[],["result",4]]],[11,"deserialize_f64","","",2,[[],["result",4]]],[11,"deserialize_char","","",2,[[],["result",4]]],[11,"deserialize_str","","",2,[[],["result",4]]],[11,"deserialize_string","","",2,[[],["result",4]]],[11,"deserialize_bytes","","",2,[[],["result",4]]],[11,"deserialize_byte_buf","","",2,[[],["result",4]]],[11,"deserialize_option","","",2,[[],["result",4]]],[11,"deserialize_unit","","",2,[[],["result",4]]],[11,"deserialize_unit_struct","","",2,[[["str",15]],["result",4]]],[11,"deserialize_newtype_struct","","",2,[[["str",15]],["result",4]]],[11,"deserialize_seq","","",2,[[],["result",4]]],[11,"deserialize_tuple","","",2,[[["usize",15]],["result",4]]],[11,"deserialize_tuple_struct","","",2,[[["usize",15],["str",15]],["result",4]]],[11,"deserialize_map","","",2,[[],["result",4]]],[11,"deserialize_struct","","",2,[[["str",15]],["result",4]]],[11,"deserialize_enum","","",2,[[["str",15]],["result",4]]],[11,"deserialize_identifier","","",2,[[],["result",4]]],[11,"deserialize_ignored_any","","",2,[[],["result",4]]],[11,"deserialize_any","","",3,[[],["result",4]]],[11,"deserialize_bool","","",3,[[],["result",4]]],[11,"deserialize_i8","","",3,[[],["result",4]]],[11,"deserialize_i16","","",3,[[],["result",4]]],[11,"deserialize_i32","","",3,[[],["result",4]]],[11,"deserialize_i64","","",3,[[],["result",4]]],[11,"deserialize_i128","","",3,[[],["result",4]]],[11,"deserialize_u8","","",3,[[],["result",4]]],[11,"deserialize_u16","","",3,[[],["result",4]]],[11,"deserialize_u32","","",3,[[],["result",4]]],[11,"deserialize_u64","","",3,[[],["result",4]]],[11,"deserialize_u128","","",3,[[],["result",4]]],[11,"deserialize_f32","","",3,[[],["result",4]]],[11,"deserialize_f64","","",3,[[],["result",4]]],[11,"deserialize_char","","",3,[[],["result",4]]],[11,"deserialize_str","","",3,[[],["result",4]]],[11,"deserialize_string","","",3,[[],["result",4]]],[11,"deserialize_bytes","","",3,[[],["result",4]]],[11,"deserialize_byte_buf","","",3,[[],["result",4]]],[11,"deserialize_option","","",3,[[],["result",4]]],[11,"deserialize_unit","","",3,[[],["result",4]]],[11,"deserialize_unit_struct","","",3,[[["str",15]],["result",4]]],[11,"deserialize_newtype_struct","","",3,[[["str",15]],["result",4]]],[11,"deserialize_seq","","",3,[[],["result",4]]],[11,"deserialize_tuple","","",3,[[["usize",15]],["result",4]]],[11,"deserialize_tuple_struct","","",3,[[["usize",15],["str",15]],["result",4]]],[11,"deserialize_map","","",3,[[],["result",4]]],[11,"deserialize_struct","","",3,[[["str",15]],["result",4]]],[11,"deserialize_enum","","",3,[[["str",15]],["result",4]]],[11,"deserialize_identifier","","",3,[[],["result",4]]],[11,"deserialize_ignored_any","","",3,[[],["result",4]]],[11,"deserialize_any","","",4,[[],["result",4]]],[11,"deserialize_seq","","",4,[[],["result",4]]],[11,"deserialize_tuple","","",4,[[["usize",15]],["result",4]]],[11,"deserialize_bool","","",4,[[],["result",4]]],[11,"deserialize_i8","","",4,[[],["result",4]]],[11,"deserialize_i16","","",4,[[],["result",4]]],[11,"deserialize_i32","","",4,[[],["result",4]]],[11,"deserialize_i64","","",4,[[],["result",4]]],[11,"deserialize_i128","","",4,[[],["result",4]]],[11,"deserialize_u8","","",4,[[],["result",4]]],[11,"deserialize_u16","","",4,[[],["result",4]]],[11,"deserialize_u32","","",4,[[],["result",4]]],[11,"deserialize_u64","","",4,[[],["result",4]]],[11,"deserialize_u128","","",4,[[],["result",4]]],[11,"deserialize_f32","","",4,[[],["result",4]]],[11,"deserialize_f64","","",4,[[],["result",4]]],[11,"deserialize_char","","",4,[[],["result",4]]],[11,"deserialize_str","","",4,[[],["result",4]]],[11,"deserialize_string","","",4,[[],["result",4]]],[11,"deserialize_bytes","","",4,[[],["result",4]]],[11,"deserialize_byte_buf","","",4,[[],["result",4]]],[11,"deserialize_option","","",4,[[],["result",4]]],[11,"deserialize_unit","","",4,[[],["result",4]]],[11,"deserialize_unit_struct","","",4,[[["str",15]],["result",4]]],[11,"deserialize_newtype_struct","","",4,[[["str",15]],["result",4]]],[11,"deserialize_tuple_struct","","",4,[[["usize",15],["str",15]],["result",4]]],[11,"deserialize_map","","",4,[[],["result",4]]],[11,"deserialize_struct","","",4,[[["str",15]],["result",4]]],[11,"deserialize_enum","","",4,[[["str",15]],["result",4]]],[11,"deserialize_identifier","","",4,[[],["result",4]]],[11,"deserialize_ignored_any","","",4,[[],["result",4]]],[11,"deserialize_any","","",5,[[],["result",4]]],[11,"deserialize_enum","","",5,[[["str",15]],["result",4]]],[11,"deserialize_bool","","",5,[[],["result",4]]],[11,"deserialize_i8","","",5,[[],["result",4]]],[11,"deserialize_i16","","",5,[[],["result",4]]],[11,"deserialize_i32","","",5,[[],["result",4]]],[11,"deserialize_i64","","",5,[[],["result",4]]],[11,"deserialize_i128","","",5,[[],["result",4]]],[11,"deserialize_u8","","",5,[[],["result",4]]],[11,"deserialize_u16","","",5,[[],["result",4]]],[11,"deserialize_u32","","",5,[[],["result",4]]],[11,"deserialize_u64","","",5,[[],["result",4]]],[11,"deserialize_u128","","",5,[[],["result",4]]],[11,"deserialize_f32","","",5,[[],["result",4]]],[11,"deserialize_f64","","",5,[[],["result",4]]],[11,"deserialize_char","","",5,[[],["result",4]]],[11,"deserialize_str","","",5,[[],["result",4]]],[11,"deserialize_string","","",5,[[],["result",4]]],[11,"deserialize_bytes","","",5,[[],["result",4]]],[11,"deserialize_byte_buf","","",5,[[],["result",4]]],[11,"deserialize_option","","",5,[[],["result",4]]],[11,"deserialize_unit","","",5,[[],["result",4]]],[11,"deserialize_unit_struct","","",5,[[["str",15]],["result",4]]],[11,"deserialize_newtype_struct","","",5,[[["str",15]],["result",4]]],[11,"deserialize_seq","","",5,[[],["result",4]]],[11,"deserialize_tuple","","",5,[[["usize",15]],["result",4]]],[11,"deserialize_tuple_struct","","",5,[[["usize",15],["str",15]],["result",4]]],[11,"deserialize_map","","",5,[[],["result",4]]],[11,"deserialize_struct","","",5,[[["str",15]],["result",4]]],[11,"deserialize_identifier","","",5,[[],["result",4]]],[11,"deserialize_ignored_any","","",5,[[],["result",4]]],[11,"expecting","serde::de","",49,[[["formatter",3]],["result",6]]],[11,"visit_bool","","",49,[[["bool",15]],["result",4]]],[11,"visit_i64","","",49,[[["i64",15]],["result",4]]],[11,"visit_u64","","",49,[[["u64",15]],["result",4]]],[11,"visit_f64","","",49,[[["f64",15]],["result",4]]],[11,"visit_str","","",49,[[["str",15]],["result",4]]],[11,"visit_none","","",49,[[],["result",4]]],[11,"visit_some","","",49,[[],["result",4]]],[11,"visit_newtype_struct","","",49,[[],["result",4]]],[11,"visit_unit","","",49,[[],["result",4]]],[11,"visit_seq","","",49,[[],["result",4]]],[11,"visit_map","","",49,[[],["result",4]]],[11,"visit_bytes","","",49,[[],["result",4]]],[11,"visit_enum","","",49,[[],["result",4]]],[11,"next_element_seed","serde::de::value","",2,[[],[["option",4],["result",4]]]],[11,"size_hint","","",2,[[],[["option",4],["usize",15]]]],[11,"next_element_seed","","",4,[[],[["result",4],["option",4]]]],[11,"size_hint","","",4,[[],[["option",4],["usize",15]]]],[11,"next_key_seed","","",4,[[],[["result",4],["option",4]]]],[11,"next_value_seed","","",4,[[],["result",4]]],[11,"next_entry_seed","","",4,[[],[["result",4],["option",4]]]],[11,"size_hint","","",4,[[],[["option",4],["usize",15]]]],[11,"variant_seed","","",45,[[],["result",4]]],[11,"variant_seed","","",46,[[],["result",4]]],[11,"variant_seed","","",0,[[],["result",4]]],[11,"variant_seed","","",47,[[],["result",4]]],[11,"variant_seed","","",48,[[],["result",4]]],[11,"variant_seed","","",5,[[],["result",4]]],[11,"serialize_element","serde::ser","",50,[[],["result",4]]],[11,"end","","",50,[[],["result",4]]],[11,"serialize_element","","",50,[[],["result",4]]],[11,"end","","",50,[[],["result",4]]],[11,"serialize_field","","",50,[[],["result",4]]],[11,"end","","",50,[[],["result",4]]],[11,"serialize_field","","",50,[[],["result",4]]],[11,"end","","",50,[[],["result",4]]],[11,"serialize_key","","",50,[[],["result",4]]],[11,"serialize_value","","",50,[[],["result",4]]],[11,"end","","",50,[[],["result",4]]],[11,"serialize_field","","",50,[[["str",15]],["result",4]]],[11,"end","","",50,[[],["result",4]]],[11,"serialize_field","","",50,[[["str",15]],["result",4]]],[11,"end","","",50,[[],["result",4]]],[11,"custom","serde::de::value","",28,[[]]],[11,"custom","","",28,[[]]],[11,"clone","","",28,[[],["error",3]]],[11,"clone","","",29,[[]]],[11,"clone","","",30,[[]]],[11,"clone","","",31,[[]]],[11,"clone","","",32,[[]]],[11,"clone","","",33,[[]]],[11,"clone","","",34,[[]]],[11,"clone","","",35,[[]]],[11,"clone","","",36,[[]]],[11,"clone","","",37,[[]]],[11,"clone","","",38,[[]]],[11,"clone","","",39,[[]]],[11,"clone","","",40,[[]]],[11,"clone","","",41,[[]]],[11,"clone","","",42,[[]]],[11,"clone","","",43,[[]]],[11,"clone","","",44,[[]]],[11,"clone","","",45,[[]]],[11,"clone","","",46,[[]]],[11,"clone","","",0,[[]]],[11,"clone","","",47,[[]]],[11,"clone","","",48,[[]]],[11,"clone","","",1,[[]]],[11,"clone","","",2,[[],["seqdeserializer",3]]],[11,"clone","","",3,[[],["seqaccessdeserializer",3]]],[11,"clone","","",4,[[]]],[11,"clone","","",5,[[],["mapaccessdeserializer",3]]],[11,"clone","serde::de","",49,[[],["ignoredany",3]]],[11,"clone","","",7,[[],["unexpected",4]]],[11,"default","","",49,[[],["ignoredany",3]]],[11,"eq","serde::de::value","",28,[[["error",3]],["bool",15]]],[11,"ne","","",28,[[["error",3]],["bool",15]]],[11,"eq","serde::de","",7,[[["unexpected",4]],["bool",15]]],[11,"ne","","",7,[[["unexpected",4]],["bool",15]]],[11,"fmt","serde::de::value","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","","",39,[[["formatter",3]],["result",6]]],[11,"fmt","","",40,[[["formatter",3]],["result",6]]],[11,"fmt","","",41,[[["formatter",3]],["result",6]]],[11,"fmt","","",42,[[["formatter",3]],["result",6]]],[11,"fmt","","",43,[[["formatter",3]],["result",6]]],[11,"fmt","","",44,[[["formatter",3]],["result",6]]],[11,"fmt","","",45,[[["formatter",3]],["result",6]]],[11,"fmt","","",46,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",47,[[["formatter",3]],["result",6]]],[11,"fmt","","",48,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","serde::de","",49,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","serde::de::value","",28,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","serde::de","",7,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"description","serde::de::value","",28,[[],["str",15]]]],"p":[[3,"BorrowedStrDeserializer"],[3,"BorrowedBytesDeserializer"],[3,"SeqDeserializer"],[3,"SeqAccessDeserializer"],[3,"MapDeserializer"],[3,"MapAccessDeserializer"],[8,"Error"],[4,"Unexpected"],[8,"Expected"],[8,"Deserialize"],[8,"DeserializeSeed"],[8,"Deserializer"],[8,"Visitor"],[8,"SeqAccess"],[8,"MapAccess"],[8,"EnumAccess"],[8,"VariantAccess"],[8,"IntoDeserializer"],[8,"Error"],[8,"Serialize"],[8,"Serializer"],[8,"SerializeSeq"],[8,"SerializeTuple"],[8,"SerializeTupleStruct"],[8,"SerializeTupleVariant"],[8,"SerializeMap"],[8,"SerializeStruct"],[8,"SerializeStructVariant"],[3,"Error"],[3,"UnitDeserializer"],[3,"BoolDeserializer"],[3,"I8Deserializer"],[3,"I16Deserializer"],[3,"I32Deserializer"],[3,"I64Deserializer"],[3,"IsizeDeserializer"],[3,"U8Deserializer"],[3,"U16Deserializer"],[3,"U64Deserializer"],[3,"UsizeDeserializer"],[3,"F32Deserializer"],[3,"F64Deserializer"],[3,"CharDeserializer"],[3,"I128Deserializer"],[3,"U128Deserializer"],[3,"U32Deserializer"],[3,"StrDeserializer"],[3,"StringDeserializer"],[3,"CowStrDeserializer"],[3,"IgnoredAny"],[3,"Impossible"]]},\
"serde_derive":{"doc":"This crate provides Serde\'s two derive macros.","i":[[24,"Serialize","serde_derive","",null,null],[24,"Deserialize","","",null,null]],"p":[]},\
"shader_version":{"doc":"A helper library for detecting and picking compatible …","i":[[0,"opengl","shader_version","Models versions of OpenGL",null,null],[4,"OpenGL","shader_version::opengl","",null,null],[13,"V2_0","","",0,null],[13,"V2_1","","",0,null],[13,"V3_0","","",0,null],[13,"V3_1","","",0,null],[13,"V3_2","","",0,null],[13,"V3_3","","",0,null],[13,"V4_0","","",0,null],[13,"V4_1","","",0,null],[13,"V4_2","","",0,null],[13,"V4_3","","",0,null],[13,"V4_4","","",0,null],[13,"V4_5","","",0,null],[11,"get_major_minor","","Gets the minor version of OpenGL.",0,[[]]],[11,"to_glsl","","Gets GLSL version associated with OpenGL.",0,[[],["glsl",4]]],[3,"ParseOpenGLError","","Represents an error while trying to get <code>OpenGL</code> from <code>&str</code>.",null,null],[0,"glsl","shader_version","Models versions of OpenGL Shader Language (GLSL)",null,null],[4,"GLSL","shader_version::glsl","For OpenGL version 3.3 and above, the GLSL version is the …",null,null],[13,"V1_10","","",1,null],[13,"V1_20","","",1,null],[13,"V1_30","","",1,null],[13,"V1_40","","",1,null],[13,"V1_50","","",1,null],[13,"V3_30","","",1,null],[13,"V4_00","","",1,null],[13,"V4_10","","",1,null],[13,"V4_20","","",1,null],[13,"V4_30","","",1,null],[13,"V4_40","","",1,null],[13,"V4_50","","",1,null],[11,"to_opengl","","Gets OpenGL version associated with GLSL.",1,[[],["opengl",4]]],[3,"ParseGLSLError","","Represents an error while trying to get <code>GLSL</code> from <code>&str</code>.",null,null],[3,"Shaders","shader_version","Shader picker.",null,null],[11,"new","","Creates a new shader picker.",2,[[]]],[11,"set","","Sets source for a shader version.",2,[[]]],[11,"get","","Get the closest shader to a shader version.",2,[[],["option",4]]],[8,"PickShader","","Implemented by shader version enums.",null,null],[10,"pick_shader","","Pick shader.",3,[[["shaders",3]],["option",4]]],[11,"from","shader_version::opengl","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_string","","",4,[[],["string",3]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","shader_version::glsl","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_string","","",5,[[],["string",3]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","shader_version","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"pick_shader","shader_version::glsl","",1,[[["shaders",3]],["option",4]]],[11,"clone","shader_version::opengl","",0,[[],["opengl",4]]],[11,"clone","shader_version::glsl","",1,[[],["glsl",4]]],[11,"cmp","shader_version::opengl","",0,[[["opengl",4]],["ordering",4]]],[11,"cmp","shader_version::glsl","",1,[[["glsl",4]],["ordering",4]]],[11,"eq","shader_version::opengl","",0,[[["opengl",4]],["bool",15]]],[11,"eq","shader_version::glsl","",1,[[["glsl",4]],["bool",15]]],[11,"partial_cmp","shader_version::opengl","",0,[[["opengl",4]],[["ordering",4],["option",4]]]],[11,"partial_cmp","shader_version::glsl","",1,[[["glsl",4]],[["ordering",4],["option",4]]]],[11,"fmt","shader_version::opengl","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","shader_version::glsl","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","shader_version::opengl","",4,[[["formatter",3]],["result",6]]],[11,"fmt","shader_version::glsl","",5,[[["formatter",3]],["result",6]]],[11,"from_str","shader_version::opengl","",0,[[["str",15]],["result",4]]],[11,"from_str","shader_version::glsl","",1,[[["str",15]],["result",4]]],[11,"description","shader_version::opengl","",4,[[],["str",15]]],[11,"description","shader_version::glsl","",5,[[],["str",15]]]],"p":[[4,"OpenGL"],[4,"GLSL"],[3,"Shaders"],[8,"PickShader"],[3,"ParseOpenGLError"],[3,"ParseGLSLError"]]},\
"shaders_graphics2d":{"doc":"Shaders for 2D graphics backends.","i":[[0,"colored","shaders_graphics2d","Shaders for colored rendering.",null,null],[17,"VERTEX_GLSL_120","shaders_graphics2d::colored","Vertex shader for GLSL 1.20",null,null],[17,"VERTEX_GLSL_150_CORE","","Vertex shader for GLSL 1.50",null,null],[17,"FRAGMENT_GLSL_120","","Fragment shader for GLSL 1.20",null,null],[17,"FRAGMENT_GLSL_150_CORE","","Fragmentshader for GLSL 1.50",null,null],[17,"VERTEX_GLSL_120_WEBGL","","Vertex shader for GLSL 1.20 WebGL",null,null],[17,"VERTEX_GLSL_150_CORE_WEBGL","","Vertex shader for GLSL 1.50 WebGL",null,null],[17,"FRAGMENT_GLSL_120_WEBGL","","Fragment shader for GLSL 1.20 WebGL",null,null],[17,"FRAGMENT_GLSL_150_CORE_WEBGL","","Fragmentshader for GLSL 1.50 WebGL",null,null],[0,"textured","shaders_graphics2d","Shaders for textured rendering.",null,null],[17,"VERTEX_GLSL_120","shaders_graphics2d::textured","Vertex shader for GLSL 1.20",null,null],[17,"VERTEX_GLSL_150_CORE","","Vertex shader for GLSL 1.50",null,null],[17,"FRAGMENT_GLSL_120","","Fragment shader for GLSL 1.20",null,null],[17,"FRAGMENT_GLSL_150_CORE","","Fragment shader for GLSL 1.50",null,null],[17,"VERTEX_GLSL_120_WEBGL","","Vertex shader for GLSL 1.20",null,null],[17,"VERTEX_GLSL_150_CORE_WEBGL","","Vertex shader for GLSL 1.50",null,null],[17,"FRAGMENT_GLSL_120_WEBGL","","Fragment shader for GLSL 1.20",null,null],[17,"FRAGMENT_GLSL_150_CORE_WEBGL","","Fragment shader for GLSL 1.50",null,null]],"p":[]},\
"sorting_visualization":{"doc":"sorting-visualizationCI Status","i":[[0,"algorithms","sorting_visualization","Different sorting algorithms as well as the general …",null,null],[0,"bubble","sorting_visualization::algorithms","Bubble sort",null,null],[3,"BubbleSort","sorting_visualization::algorithms::bubble","Bubble sort",null,null],[0,"cocktail","sorting_visualization::algorithms","Cocktail sort",null,null],[3,"CocktailSort","sorting_visualization::algorithms::cocktail","Cocktail sort",null,null],[0,"cycle","sorting_visualization::algorithms","Cycle sort",null,null],[3,"CycleSort","sorting_visualization::algorithms::cycle","Cycle sort",null,null],[11,"find_sorted_index","","",0,[[["usize",15],["u32",15],["array",3]],["usize",15]]],[0,"gnome","sorting_visualization::algorithms","Gnome sort",null,null],[3,"GnomeSort","sorting_visualization::algorithms::gnome","Gnome sort",null,null],[0,"heap","sorting_visualization::algorithms","Heap sort",null,null],[3,"HeapSort","sorting_visualization::algorithms::heap","Heap sort",null,null],[0,"insertion","sorting_visualization::algorithms","Insertion sort",null,null],[3,"InsertionSort","sorting_visualization::algorithms::insertion","Insertion sort",null,null],[0,"merge","sorting_visualization::algorithms","Merge sort",null,null],[3,"MergeSort","sorting_visualization::algorithms::merge","Merge sort",null,null],[5,"merge_sort","","",null,[[["usize",15],["array",3]]]],[5,"merge","","",null,[[["usize",15],["array",3]]]],[5,"sub_array","","",null,[[["usize",15],["array",3]],[["u32",15],["vec",3]]]],[0,"quicksort","sorting_visualization::algorithms","Quicksort",null,null],[3,"Quicksort","sorting_visualization::algorithms::quicksort","Quicksort",null,null],[11,"sort_slice","","",1,[[["isize",15],["array",3]]]],[11,"partition","","",1,[[["isize",15],["array",3]],["isize",15]]],[0,"selection","sorting_visualization::algorithms","Selection sort",null,null],[3,"SelectionSort","sorting_visualization::algorithms::selection","Selection sort",null,null],[0,"shellsort","sorting_visualization::algorithms","Shell sort",null,null],[3,"Shellsort","sorting_visualization::algorithms::shellsort","Shell sort",null,null],[0,"all","sorting_visualization::algorithms","",null,null],[3,"All","sorting_visualization::algorithms::all","",null,null],[8,"Algorithm","sorting_visualization::algorithms","The general trait for all sorting algorithms.",null,null],[10,"sort","","Sorts a given array. This method is called in a so called …",2,[[["array",3]]]],[10,"name","","Returns the name of the algorithm that will be displayed …",2,[[],["string",3]]],[5,"all","","Returns a hashmap of all algorithms. It is used in the cli…",null,[[],[["hashmap",3],["string",3],["box",3]]]],[0,"app","sorting_visualization","The [<code>App</code>] struct and some constants.",null,null],[17,"BACKGROUND_COLOR","sorting_visualization::app","Color that is used to clear the window before drawing.",null,null],[17,"VALUE_COLOR","","Color of rectangles that represent the array values.",null,null],[17,"ACCESSED_VALUE_COLOR","","Color of the values that have been recently accessed.",null,null],[17,"ACCESSED_VALUE_TIMEOUT","","Time in seconds after which array accesses are removed.",null,null],[17,"STATUS_TEXT_FONT_SIZE","","Font size of the status text in pixels.",null,null],[17,"STATUS_TEXT_MARGIN","","Margins between the status text and window borders.",null,null],[17,"SPEED_FACTOR","","Factor for increasing / decreasing speed of sorting array",null,null],[3,"App","","This struct contains all rendering, updating and input …",null,null],[12,"state","","",3,null],[12,"algorithm_thread","","",3,null],[11,"init","","Creates a new app (with a state constructed from the …",3,[[["u32",15],["f64",15],["algorithm",8],["box",3],["vec",3]]]],[11,"render","","Draws the current state.",3,[[["renderargs",3],["glyphcache",6],["glgraphics",3]]]],[11,"update","","Advances the state by a given amount of time.",3,[[["updateargs",3]]]],[11,"button","","Handles user input and updates the state.",3,[[["buttonargs",3]]]],[0,"array","sorting_visualization","The <code>Array</code> struct.",null,null],[3,"Array","sorting_visualization::array","A convenient wrapper around [<code>SharedState</code>] for algorithms …",null,null],[12,"0","","",4,null],[11,"new","","Creates a new array from a copy of [<code>SharedState</code>].",4,[[["sharedstate",3]]]],[11,"wait","","Puts the current thread to sleep for the specified amount …",4,[[["u64",15]]]],[11,"len","","Returns the length of the underlying vector.",4,[[],["usize",15]]],[11,"get","","Returns a value at a given index.",4,[[["usize",15]],["u32",15]]],[11,"set","","Sets a value of the at a given index.",4,[[["usize",15],["u32",15]]]],[11,"swap","","Swaps two values at given indices.",4,[[["usize",15]]]],[11,"shuffle","","Shuffles the Array.",4,[[]]],[11,"reset_color","","Resets color of the value at a given index (sets it to …",4,[[["usize",15]]]],[11,"set_color","","Sets color of the value at a given index.",4,[[["usize",15],["color",6]]]],[0,"cli","sorting_visualization","Command-line interface and command-line argument parsing. …",null,null],[17,"ALGORITHM_ARG","sorting_visualization::cli","Internal name of the algorithm argument which is used to …",null,null],[17,"LENGTH_OPT","","Internal name of the <code>--length</code>/<code>-l</code> option which is used to …",null,null],[17,"ORDER_OPT","","Internal name of the <code>--order</code>/<code>-o</code> option which is used to …",null,null],[17,"SPEED_OPT","","Internal name of the <code>--speed</code>/<code>-s</code> option which is used to …",null,null],[17,"LIST_OPT","","Internal name of the <code>--list</code> option which is used to get …",null,null],[3,"Options","","Contains all options that can be provided by a user using …",null,null],[12,"algorithm","","Instance of a sorting algorithm struct.",5,null],[12,"length","","Number of elements in the array.",5,null],[12,"order","","Order of elements in the array.",5,null],[12,"speed","","Speed factor.",5,null],[4,"Order","","Order of elements in the array.",null,null],[13,"Sorted","","Sorted in the ascending order.",6,null],[13,"Reversed","","Sorted in the descending order.",6,null],[13,"Shuffled","","Shuffled.",6,null],[5,"parse_options","","Parses command-line arguments into [<code>Options</code>]. <strong>If the …",null,[[],["options",3]]],[0,"state","sorting_visualization","Structs and type definitions that describe the app state.",null,null],[3,"SharedState","sorting_visualization::state","A wrapper around [<code>State</code>] that can be safely shared between…",null,null],[12,"0","","",7,null],[11,"new","","",7,[[["state",3]]]],[11,"get","","",7,[[],[["mutexguard",3],["state",3]]]],[3,"State","","Contains the state of the whole app.",null,null],[12,"time","","Current time in seconds. Updated if the animation is not …",8,null],[12,"speed","","Speed factor (e.g. 1.0 - normal, 2.0 - 2x faster, 0.5 - …",8,null],[12,"paused","","Is the animation paused?",8,null],[12,"array","","An array which is being sorted.",8,null],[12,"colors","","Colored <strong>overlays</strong> of each value. <strong>Overlay</strong> means that these …",8,null],[12,"array_accesses","","Contains timestamps of the most recent array accesses of …",8,null],[17,"NO_ARRAY_ACCESS","","A constant that means \\\"there\'s no array access here\\\". <em>See</em> …",null,null],[17,"OPENGL_VERSION","sorting_visualization","Required version of OpenGL.",null,null],[17,"WINDOW_TITLE","","Title of the main window.",null,null],[17,"WINDOW_SIZE","","Initial size of the main window.",null,null],[5,"main","","",null,[[]]],[5,"run","","",null,[[],[["result",4],["error",3]]]],[11,"from","sorting_visualization::algorithms::bubble","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","sorting_visualization::algorithms::cocktail","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","sorting_visualization::algorithms::cycle","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","sorting_visualization::algorithms::gnome","",11,[[]]],[11,"into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","sorting_visualization::algorithms::heap","",12,[[]]],[11,"into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","sorting_visualization::algorithms::insertion","",13,[[]]],[11,"into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","sorting_visualization::algorithms::merge","",14,[[]]],[11,"into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","sorting_visualization::algorithms::quicksort","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","sorting_visualization::algorithms::selection","",15,[[]]],[11,"into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","sorting_visualization::algorithms::shellsort","",16,[[]]],[11,"into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","sorting_visualization::algorithms::all","",17,[[]]],[11,"into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","sorting_visualization::app","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","sorting_visualization::array","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","sorting_visualization::cli","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","sorting_visualization::state","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"sort","sorting_visualization::algorithms::bubble","",9,[[["array",3]]]],[11,"name","","",9,[[],["string",3]]],[11,"sort","sorting_visualization::algorithms::cocktail","",10,[[["array",3]]]],[11,"name","","",10,[[],["string",3]]],[11,"sort","sorting_visualization::algorithms::cycle","",0,[[["array",3]]]],[11,"name","","",0,[[],["string",3]]],[11,"sort","sorting_visualization::algorithms::gnome","",11,[[["array",3]]]],[11,"name","","",11,[[],["string",3]]],[11,"sort","sorting_visualization::algorithms::heap","",12,[[["array",3]]]],[11,"name","","",12,[[],["string",3]]],[11,"sort","sorting_visualization::algorithms::insertion","",13,[[["array",3]]]],[11,"name","","",13,[[],["string",3]]],[11,"sort","sorting_visualization::algorithms::merge","",14,[[["array",3]]]],[11,"name","","",14,[[],["string",3]]],[11,"sort","sorting_visualization::algorithms::quicksort","",1,[[["array",3]]]],[11,"name","","",1,[[],["string",3]]],[11,"sort","sorting_visualization::algorithms::selection","",15,[[["array",3]]]],[11,"name","","",15,[[],["string",3]]],[11,"sort","sorting_visualization::algorithms::shellsort","",16,[[["array",3]]]],[11,"name","","",16,[[],["string",3]]],[11,"sort","sorting_visualization::algorithms::all","",17,[[["array",3]]]],[11,"name","","",17,[[],["string",3]]],[11,"clone","sorting_visualization::array","",4,[[],["array",3]]],[11,"clone","sorting_visualization::state","",7,[[],["sharedstate",3]]],[11,"fmt","sorting_visualization::app","",3,[[["formatter",3]],["result",6]]],[11,"fmt","sorting_visualization::array","",4,[[["formatter",3]],["result",6]]],[11,"fmt","sorting_visualization::state","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]]],"p":[[3,"CycleSort"],[3,"Quicksort"],[8,"Algorithm"],[3,"App"],[3,"Array"],[3,"Options"],[4,"Order"],[3,"SharedState"],[3,"State"],[3,"BubbleSort"],[3,"CocktailSort"],[3,"GnomeSort"],[3,"HeapSort"],[3,"InsertionSort"],[3,"MergeSort"],[3,"SelectionSort"],[3,"Shellsort"],[3,"All"]]},\
"strsim":{"doc":"This library implements string similarity metrics.","i":[[4,"StrSimError","strsim","",null,null],[13,"DifferentLengthArgs","","",0,null],[6,"HammingResult","","",null,null],[5,"hamming","","Calculates the number of positions in the two strings …",null,[[["str",15]],["hammingresult",6]]],[5,"jaro","","Calculates the Jaro similarity between two strings. The …",null,[[["str",15]],["f64",15]]],[5,"jaro_winkler","","Like Jaro but gives a boost to strings that have a common …",null,[[["str",15]],["f64",15]]],[5,"levenshtein","","Calculates the minimum number of insertions, deletions, …",null,[[["str",15]],["usize",15]]],[5,"normalized_levenshtein","","Calculates a normalized score of the Levenshtein …",null,[[["str",15]],["f64",15]]],[5,"osa_distance","","Like Levenshtein but allows for adjacent transpositions. …",null,[[["str",15]],["usize",15]]],[5,"damerau_levenshtein","","Like optimal string alignment, but substrings can be …",null,[[["str",15]],["usize",15]]],[5,"normalized_damerau_levenshtein","","Calculates a normalized score of the …",null,[[["str",15]],["f64",15]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"eq","","",0,[[["strsimerror",4]],["bool",15]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]]],"p":[[4,"StrSimError"]]},\
"synstructure":{"doc":"This crate provides helper types for matching against …","i":[[4,"AddBounds","synstructure","Changes how bounds are added",null,null],[13,"Both","","Add for fields and generics",0,null],[13,"Fields","","Fields only",0,null],[13,"Generics","","Generics only",0,null],[13,"None","","None",0,null],[4,"BindStyle","","The type of binding to use when generating a pattern.",null,null],[13,"Move","","<code>x</code>",1,null],[13,"MoveMut","","<code>mut x</code>",1,null],[13,"Ref","","<code>ref x</code>",1,null],[13,"RefMut","","<code>ref mut x</code>",1,null],[3,"BindingInfo","","Information about a specific binding. This contains both …",null,null],[12,"binding","","The name which this BindingInfo will bind to.",2,null],[12,"style","","The type of binding which this BindingInfo will create.",2,null],[11,"ast","","Returns a reference to the underlying <code>syn</code> AST node which …",2,[[],["field",3]]],[11,"pat","","Generates the pattern fragment for this field binding.",2,[[],["tokenstream",3]]],[11,"referenced_ty_params","","Returns a list of the type parameters which are …",2,[[],[["vec",3],["ident",3]]]],[3,"VariantAst","","This type is similar to <code>syn</code>\'s <code>Variant</code> type, however each …",null,null],[12,"attrs","","",3,null],[12,"ident","","",3,null],[12,"fields","","",3,null],[12,"discriminant","","",3,null],[3,"VariantInfo","","A wrapper around a <code>syn::DeriveInput</code>\'s variant which …",null,null],[12,"prefix","","",4,null],[11,"bindings","","Returns a slice of the bindings in this Variant.",4,[[]]],[11,"bindings_mut","","Returns a mut slice of the bindings in this Variant.",4,[[]]],[11,"ast","","Returns a <code>VariantAst</code> object which contains references to …",4,[[],["variantast",3]]],[11,"omitted_bindings","","True if any bindings were omitted due to a <code>filter</code> call.",4,[[],["bool",15]]],[11,"pat","","Generates the match-arm pattern which could be used to …",4,[[],["tokenstream",3]]],[11,"construct","","Generates the token stream required to construct the …",4,[[],["tokenstream",3]]],[11,"each","","Runs the passed-in function once for each bound field, …",4,[[],["tokenstream",3]]],[11,"fold","","Runs the passed-in function once for each bound field, …",4,[[],["tokenstream",3]]],[11,"filter","","Filter the bindings created by this <code>Variant</code> object. This …",4,[[]]],[11,"remove_binding","","Remove the binding at the given index.",4,[[["usize",15]]]],[11,"bind_with","","Updates the <code>BindStyle</code> for each of the passed-in fields by …",4,[[]]],[11,"binding_name","","Updates the binding name for each fo the passed-in fields …",4,[[]]],[11,"referenced_ty_params","","Returns a list of the type parameters which are …",4,[[],[["vec",3],["ident",3]]]],[3,"Structure","","A wrapper around a <code>syn::DeriveInput</code> which provides …",null,null],[11,"new","","Create a new <code>Structure</code> with the variants and fields from …",5,[[["deriveinput",3]]]],[11,"try_new","","Create a new <code>Structure</code> with the variants and fields from …",5,[[["deriveinput",3]],["result",6]]],[11,"variants","","Returns a slice of the variants in this Structure.",5,[[]]],[11,"variants_mut","","Returns a mut slice of the variants in this Structure.",5,[[]]],[11,"ast","","Returns a reference to the underlying <code>syn</code> AST node which …",5,[[],["deriveinput",3]]],[11,"omitted_variants","","True if any variants were omitted due to a <code>filter_variants</code>…",5,[[],["bool",15]]],[11,"each","","Runs the passed-in function once for each bound field, …",5,[[],["tokenstream",3]]],[11,"fold","","Runs the passed-in function once for each bound field, …",5,[[],["tokenstream",3]]],[11,"each_variant","","Runs the passed-in function once for each variant, …",5,[[],["tokenstream",3]]],[11,"filter","","Filter the bindings created by this <code>Structure</code> object. …",5,[[]]],[11,"add_where_predicate","","Specify additional where predicate bounds which should be …",5,[[["wherepredicate",4]]]],[11,"add_bounds","","Specify which bounds should be generated by …",5,[[["addbounds",4]]]],[11,"filter_variants","","Filter the variants matched by this <code>Structure</code> object. …",5,[[]]],[11,"remove_variant","","Remove the variant at the given index.",5,[[["usize",15]]]],[11,"bind_with","","Updates the <code>BindStyle</code> for each of the passed-in fields by …",5,[[]]],[11,"binding_name","","Updates the binding name for each fo the passed-in fields …",5,[[]]],[11,"referenced_ty_params","","Returns a list of the type parameters which are refrenced …",5,[[],[["vec",3],["ident",3]]]],[11,"add_impl_generic","","Adds an <code>impl<></code> generic parameter. This can be used when …",5,[[["genericparam",4]]]],[11,"add_trait_bounds","","Add trait bounds for a trait with the given path for each …",5,[[["addbounds",4],["traitbound",3],["option",4]]]],[11,"bound_impl","","NOTE: This methods\' features are superceded by …",5,[[["totokens",8]],["tokenstream",3]]],[11,"unsafe_bound_impl","","NOTE: This methods\' features are superceded by …",5,[[["totokens",8]],["tokenstream",3]]],[11,"unbound_impl","","NOTE: This methods\' features are superceded by …",5,[[["totokens",8]],["tokenstream",3]]],[11,"unsafe_unbound_impl","","NOTE: This methods\' features are superceded by …",5,[[["totokens",8]],["tokenstream",3]]],[11,"gen_impl","","Generate an impl block for the given struct. This impl …",5,[[["tokenstream",3]],["tokenstream",3]]],[5,"unpretty_print","","Dumps an unpretty version of a tokenstream. Takes any …",null,[[["display",8]],["string",3]]],[8,"MacroResult","","Helper trait describing values which may be returned by …",null,null],[10,"into_result","","Convert this result into a <code>Result</code> for further processing …",6,[[],[["tokenstream",3],["result",6]]]],[11,"into_stream","","Convert this result into a <code>proc_macro::TokenStream</code>, ready …",6,[[],["tokenstream",3]]],[14,"decl_derive","","The <code>decl_derive!</code> macro declares a custom derive wrapper. …",null,null],[14,"decl_attribute","","The <code>decl_attribute!</code> macro declares a custom attribute …",null,null],[14,"test_derive","","Run a test on a custom derive. This macro expands both …",null,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"span","","",1,[[],["span",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"span","","",2,[[],["span",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"clone","","",0,[[],["addbounds",4]]],[11,"clone","","",1,[[],["bindstyle",4]]],[11,"clone","","",2,[[],["bindinginfo",3]]],[11,"clone","","",3,[[],["variantast",3]]],[11,"clone","","",4,[[],["variantinfo",3]]],[11,"clone","","",5,[[],["structure",3]]],[11,"eq","","",0,[[["addbounds",4]],["bool",15]]],[11,"eq","","",1,[[["bindstyle",4]],["bool",15]]],[11,"eq","","",2,[[["bindinginfo",3]],["bool",15]]],[11,"ne","","",2,[[["bindinginfo",3]],["bool",15]]],[11,"eq","","",3,[[["variantast",3]],["bool",15]]],[11,"ne","","",3,[[["variantast",3]],["bool",15]]],[11,"eq","","",4,[[["variantinfo",3]],["bool",15]]],[11,"ne","","",4,[[["variantinfo",3]],["bool",15]]],[11,"eq","","",5,[[["structure",3]],["bool",15]]],[11,"ne","","",5,[[["structure",3]],["bool",15]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"hash","","",0,[[]]],[11,"hash","","",1,[[]]],[11,"hash","","",2,[[]]],[11,"hash","","",3,[[]]],[11,"hash","","",4,[[]]],[11,"hash","","",5,[[]]],[11,"to_tokens","","",1,[[["tokenstream",3]]]],[11,"to_tokens","","",2,[[["tokenstream",3]]]]],"p":[[4,"AddBounds"],[4,"BindStyle"],[3,"BindingInfo"],[3,"VariantAst"],[3,"VariantInfo"],[3,"Structure"],[8,"MacroResult"]]},\
"texture":{"doc":"A generic library for textures.","i":[[0,"ops","texture","Image operations for textures.",null,null],[5,"flip_vertical","texture::ops","Flips the image vertically.",null,[[["u8",15]],[["vec",3],["u8",15]]]],[5,"alpha_to_rgba8","","Converts from alpha to rgba8.",null,[[],[["vec",3],["u8",15]]]],[8,"ImageSize","texture","Implemented by all images to be used with generic …",null,null],[10,"get_size","","Get the image size.",0,[[]]],[11,"get_width","","Gets the image width.",0,[[],["u32",15]]],[11,"get_height","","Gets the image height.",0,[[],["u32",15]]],[3,"TextureSettings","","Texture creation parameters.",null,null],[11,"new","","Create default settings.",1,[[],["texturesettings",3]]],[11,"get_convert_gamma","","Gets whether to convert gamma, treated as sRGB color …",1,[[],["bool",15]]],[11,"set_convert_gamma","","Sets convert gamma.",1,[[["bool",15]]]],[11,"convert_gamma","","Sets convert gamma.",1,[[["bool",15]]]],[11,"get_compress","","Gets wheter compress on the GPU.",1,[[],["bool",15]]],[11,"set_compress","","Sets compress.",1,[[["bool",15]]]],[11,"compress","","Sets compress.",1,[[["bool",15]]]],[11,"get_generate_mipmap","","Gets generate mipmap.",1,[[],["bool",15]]],[11,"set_generate_mipmap","","Sets generate mipmap.",1,[[["bool",15]]]],[11,"generate_mipmap","","Sets generate mipmap.",1,[[["bool",15]]]],[11,"get_min","","Gets minify filter.",1,[[],["filter",4]]],[11,"set_min","","Sets minify filter.",1,[[["filter",4]]]],[11,"min","","Sets minify filter.",1,[[["filter",4]]]],[11,"get_mag","","Gets magnify filter",1,[[],["filter",4]]],[11,"set_mag","","Sets magnify filter",1,[[["filter",4]]]],[11,"mag","","Sets magnify filter",1,[[["filter",4]]]],[11,"get_mipmap","","Gets minify mipmap filter",1,[[],["filter",4]]],[11,"set_mipmap","","Sets magnify mipmap filter, and sets generate_mipmap to …",1,[[["filter",4]]]],[11,"mipmap","","Sets magnify mipmap filter, and sets generate_mipmap to …",1,[[["filter",4]]]],[11,"get_filter","","Returns the min and mag filter",1,[[]]],[11,"set_filter","","Sets the min and mag filter",1,[[["filter",4]]]],[11,"filter","","Sets the min and mag filter",1,[[["filter",4]]]],[4,"Format","","Texture format.",null,null],[13,"Rgba8","","<code>(red, green, blue, alpha)</code> with values 0-255.",2,null],[8,"CreateTexture","","Implemented by textures for creation.",null,null],[16,"Error","","The error when creating texture.",3,null],[10,"create","","Create texture from memory.",3,[[["texturesettings",3],["into",8],["format",4]],["result",4]]],[8,"UpdateTexture","","Implemented by textures for updating.",null,null],[16,"Error","","The error when updating texture.",4,null],[10,"update","","Update the texture.",4,[[["format",4]],["result",4]]],[4,"Filter","","Sampling filter",null,null],[13,"Linear","","A Weighted Linear Blend",5,null],[13,"Nearest","","Nearest Texel",5,null],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"clone","","",1,[[],["texturesettings",3]]],[11,"clone","","",2,[[],["format",4]]],[11,"clone","","",5,[[],["filter",4]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]]],"p":[[8,"ImageSize"],[3,"TextureSettings"],[4,"Format"],[8,"CreateTexture"],[8,"UpdateTexture"],[4,"Filter"]]},\
"textwrap":{"doc":"<code>textwrap</code> provides functions for word wrapping and filling …","i":[[5,"dedent","textwrap","Removes common leading whitespace from each line.",null,[[["str",15]],["string",3]]],[5,"indent","","Add prefix to each non-empty line.",null,[[["str",15]],["string",3]]],[3,"HyphenSplitter","","Simple and default way to split words: splitting on …",null,null],[3,"NoHyphenation","","Use this as a <code>Wrapper.splitter</code> to avoid any kind of …",null,null],[8,"WordSplitter","","An interface for splitting words.",null,null],[10,"split","","Return all possible splits of word. Each split is a triple…",0,[[["str",15]],["vec",3]]],[3,"Wrapper","","A Wrapper holds settings for wrapping and filling text. …",null,null],[12,"width","","The width in columns at which the text will be wrapped.",1,null],[12,"initial_indent","","Indentation used for the first line of output.",1,null],[12,"subsequent_indent","","Indentation used for subsequent lines of output.",1,null],[12,"break_words","","Allow long words to be broken if they cannot fit on a …",1,null],[12,"splitter","","The method for splitting words. If the <code>hyphenation</code> feature…",1,null],[11,"new","","Create a new Wrapper for wrapping at the specified width. …",1,[[["usize",15]],[["hyphensplitter",3],["wrapper",3]]]],[11,"with_splitter","","Use the given <code>WordSplitter</code> to create a new Wrapper for …",1,[[["usize",15]],["wrapper",3]]],[11,"initial_indent","","Change <code>self.initial_indent</code>. The initial indentation is …",1,[[["str",15]],["wrapper",3]]],[11,"subsequent_indent","","Change <code>self.subsequent_indent</code>. The subsequent indentation …",1,[[["str",15]],["wrapper",3]]],[11,"break_words","","Change <code>self.break_words</code>. This controls if words longer …",1,[[["bool",15]],["wrapper",3]]],[11,"fill","","Fill a line of text at <code>self.width</code> characters. Strings are …",1,[[["str",15]],["string",3]]],[11,"wrap","","Wrap a line of text at <code>self.width</code> characters. Strings are …",1,[[["str",15]],[["cow",4],["vec",3]]]],[11,"wrap_iter","","Lazily wrap a line of text at <code>self.width</code> characters. …",1,[[["str",15]],["wrapiter",3]]],[11,"into_wrap_iter","","Lazily wrap a line of text at <code>self.width</code> characters. …",1,[[["str",15]],["intowrapiter",3]]],[3,"IntoWrapIter","","An iterator over the lines of the input string which owns …",null,null],[3,"WrapIter","","An iterator over the lines of the input string which …",null,null],[5,"fill","","Fill a line of text at <code>width</code> characters. Strings are …",null,[[["usize",15],["str",15]],["string",3]]],[5,"wrap","","Wrap a line of text at <code>width</code> characters. Strings are …",null,[[["usize",15],["str",15]],[["cow",4],["vec",3]]]],[5,"wrap_iter","","Lazily wrap a line of text at <code>width</code> characters. Strings …",null,[[["usize",15],["str",15]],[["intowrapiter",3],["hyphensplitter",3]]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"into_iter","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"into_iter","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"split","","",2,[[["str",15]],["vec",3]]],[11,"split","","",3,[[["str",15]],["vec",3]]],[11,"next","","",4,[[],[["cow",4],["option",4]]]],[11,"next","","",5,[[],[["cow",4],["option",4]]]],[11,"clone","","",2,[[],["nohyphenation",3]]],[11,"clone","","",3,[[],["hyphensplitter",3]]],[11,"clone","","",1,[[],["wrapper",3]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]]],"p":[[8,"WordSplitter"],[3,"Wrapper"],[3,"NoHyphenation"],[3,"HyphenSplitter"],[3,"IntoWrapIter"],[3,"WrapIter"]]},\
"tiff":{"doc":"Decoding and Encoding of TIFF Images","i":[[0,"decoder","tiff","",null,null],[0,"ifd","tiff::decoder","Function for reading TIFF tags",null,null],[4,"Tag","tiff::decoder::ifd","TIFF tag",null,null],[13,"Artist","","",0,null],[13,"BitsPerSample","","",0,null],[13,"CellLength","","",0,null],[13,"CellWidth","","",0,null],[13,"ColorMap","","",0,null],[13,"Compression","","",0,null],[13,"Copyright","","",0,null],[13,"DateTime","","",0,null],[13,"ExtraSamples","","",0,null],[13,"FillOrder","","",0,null],[13,"FreeByteCounts","","",0,null],[13,"FreeOffsets","","",0,null],[13,"GrayResponseCurve","","",0,null],[13,"GrayResponseUnit","","",0,null],[13,"HostComputer","","",0,null],[13,"ImageDescription","","",0,null],[13,"ImageLength","","",0,null],[13,"ImageWidth","","",0,null],[13,"Make","","",0,null],[13,"MaxSampleValue","","",0,null],[13,"MinSampleValue","","",0,null],[13,"Model","","",0,null],[13,"NewSubfileType","","",0,null],[13,"Orientation","","",0,null],[13,"PhotometricInterpretation","","",0,null],[13,"PlanarConfiguration","","",0,null],[13,"ResolutionUnit","","",0,null],[13,"RowsPerStrip","","",0,null],[13,"SamplesPerPixel","","",0,null],[13,"Software","","",0,null],[13,"StripByteCounts","","",0,null],[13,"StripOffsets","","",0,null],[13,"SubfileType","","",0,null],[13,"Threshholding","","",0,null],[13,"XResolution","","",0,null],[13,"YResolution","","",0,null],[13,"Predictor","","",0,null],[13,"Unknown","","",0,null],[11,"from_u16","","",0,[[["u16",15]],["tag",4]]],[4,"Type","","",null,null],[13,"BYTE","","",1,null],[13,"ASCII","","",1,null],[13,"SHORT","","",1,null],[13,"LONG","","",1,null],[13,"RATIONAL","","",1,null],[4,"Value","","",null,null],[13,"Unsigned","","",2,null],[13,"List","","",2,null],[13,"Rational","","",2,null],[13,"Ascii","","",2,null],[11,"into_u32","","",2,[[],[["u32",15],["tiffresult",6]]]],[11,"into_u32_vec","","",2,[[],[["tiffresult",6],["vec",3]]]],[3,"Entry","","",null,null],[11,"new","","",3,[[["type",4],["u32",15]],["entry",3]]],[11,"val","","",3,[[["decoder",3]],[["tiffresult",6],["value",4]]]],[6,"Directory","","Type representing an Image File Directory",null,null],[4,"DecodingResult","tiff::decoder","Result of a decoding process",null,null],[13,"U8","","A vector of unsigned bytes",4,null],[13,"U16","","A vector of unsigned words",4,null],[4,"PhotometricInterpretation","","",null,null],[13,"WhiteIsZero","","",5,null],[13,"BlackIsZero","","",5,null],[13,"RGB","","",5,null],[13,"RGBPalette","","",5,null],[13,"TransparencyMask","","",5,null],[13,"CMYK","","",5,null],[13,"YCbCr","","",5,null],[13,"CIELab","","",5,null],[4,"CompressionMethod","","",null,null],[13,"None","","",6,null],[13,"Huffman","","",6,null],[13,"Fax3","","",6,null],[13,"Fax4","","",6,null],[13,"LZW","","",6,null],[13,"JPEG","","",6,null],[13,"PackBits","","",6,null],[4,"PlanarConfiguration","","",null,null],[13,"Chunky","","",7,null],[13,"Planar","","",7,null],[3,"Decoder","","The representation of a TIFF decoder",null,null],[11,"new","","Create a new decoder that decodes from the stream <code>r</code>",8,[[],[["tiffresult",6],["decoder",3]]]],[11,"dimensions","","",8,[[],["tiffresult",6]]],[11,"colortype","","",8,[[],[["tiffresult",6],["colortype",4]]]],[11,"init","","Initializes the decoder.",8,[[],[["tiffresult",6],["decoder",3]]]],[11,"next_image","","Reads in the next image. If there is no further image in …",8,[[],[["tiffresult",6],["decoder",3]]]],[11,"more_images","","Returns <code>true</code> if there is at least one more image …",8,[[],["bool",15]]],[11,"byte_order","","Returns the byte_order",8,[[],["byteorder",4]]],[11,"read_short","","Reads a TIFF short value",8,[[],[["error",3],["result",4],["u16",15]]]],[11,"read_long","","Reads a TIFF long value",8,[[],[["result",4],["u32",15],["error",3]]]],[11,"read_string","","Reads a string",8,[[["usize",15]],[["result",4],["string",3],["fromutf8error",3]]]],[11,"read_offset","","Reads a TIFF IFA offset/value field",8,[[],[["error",3],["result",4]]]],[11,"goto_offset","","Moves the cursor to the specified offset",8,[[["u32",15]],["result",6]]],[11,"find_tag","","Tries to retrieve a tag. Return <code>Ok(None)</code> if the tag is …",8,[[["tag",4]],[["tiffresult",6],["option",4]]]],[11,"find_tag_u32","","Tries to retrieve a tag and convert it to the desired …",8,[[["tag",4]],[["option",4],["tiffresult",6]]]],[11,"find_tag_u32_vec","","Tries to retrieve a tag and convert it to the desired …",8,[[["tag",4]],[["tiffresult",6],["option",4]]]],[11,"get_tag","","Tries to retrieve a tag. Returns an error if the tag is …",8,[[["tag",4]],[["tiffresult",6],["value",4]]]],[11,"get_tag_u32","","Tries to retrieve a tag and convert it to the desired …",8,[[["tag",4]],[["u32",15],["tiffresult",6]]]],[11,"get_tag_u32_vec","","Tries to retrieve a tag and convert it to the desired …",8,[[["tag",4]],[["tiffresult",6],["vec",3]]]],[11,"read_image","","Decodes the entire image and return it as a Vector",8,[[],[["tiffresult",6],["decodingresult",4]]]],[4,"TiffError","tiff","Tiff error kinds.",null,null],[13,"FormatError","","The Image is not formatted properly",9,null],[13,"UnsupportedError","","The Decoder does not support this image format",9,null],[13,"IoError","","An I/O Error occurred while decoding the image",9,null],[4,"TiffFormatError","","",null,null],[13,"TiffSignatureNotFound","","",10,null],[13,"TiffSignatureInvalid","","",10,null],[13,"ImageFileDirectoryNotFound","","",10,null],[13,"InconsistentSizesEncountered","","",10,null],[13,"InvalidTag","","",10,null],[13,"RequiredTagNotFound","","",10,null],[13,"UnknownPredictor","","",10,null],[13,"UnsignedIntegerExpected","","",10,null],[4,"TiffUnsupportedError","","",null,null],[13,"HorizontalPredictor","","",11,null],[13,"InterpretationWithBits","","",11,null],[13,"UnknownInterpretation","","",11,null],[13,"UnknownCompressionMethod","","",11,null],[13,"UnsupportedCompressionMethod","","",11,null],[13,"UnsupportedSampleDepth","","",11,null],[13,"UnsupportedColorType","","",11,null],[13,"UnsupportedBitsPerChannel","","",11,null],[13,"UnsupportedPlanarConfig","","",11,null],[13,"UnsupportedDataType","","",11,null],[6,"TiffResult","","Result of an image decoding/encoding process",null,null],[4,"ColorType","","An enumeration over supported color types and their bit …",null,null],[13,"Gray","","Pixel is grayscale",12,null],[13,"RGB","","Pixel contains R, G and B channels",12,null],[13,"Palette","","Pixel is an index into a color palette",12,null],[13,"GrayA","","Pixel is grayscale with an alpha channel",12,null],[13,"RGBA","","Pixel is RGB with an alpha channel",12,null],[13,"CMYK","","Pixel is CMYK",12,null],[11,"from","tiff::decoder::ifd","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","tiff::decoder","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","tiff","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_string","","",9,[[],["string",3]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"to_string","","",10,[[],["string",3]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"to_string","","",11,[[],["string",3]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",9,[[["error",3]],["tifferror",4]]],[11,"from","","",9,[[["fromutf8error",3]],["tifferror",4]]],[11,"clone","tiff::decoder::ifd","",0,[[],["tag",4]]],[11,"clone","","",1,[[],["type",4]]],[11,"clone","","",2,[[],["value",4]]],[11,"clone","","",3,[[],["entry",3]]],[11,"clone","tiff::decoder","",5,[[],["photometricinterpretation",4]]],[11,"clone","","",6,[[],["compressionmethod",4]]],[11,"clone","","",7,[[],["planarconfiguration",4]]],[11,"clone","tiff","",10,[[],["tiffformaterror",4]]],[11,"clone","","",11,[[],["tiffunsupportederror",4]]],[11,"clone","","",12,[[],["colortype",4]]],[11,"eq","tiff::decoder::ifd","",0,[[["tag",4]],["bool",15]]],[11,"ne","","",0,[[["tag",4]],["bool",15]]],[11,"eq","","",2,[[["value",4]],["bool",15]]],[11,"ne","","",2,[[["value",4]],["bool",15]]],[11,"eq","tiff::decoder","",5,[[["photometricinterpretation",4]],["bool",15]]],[11,"eq","","",6,[[["compressionmethod",4]],["bool",15]]],[11,"eq","","",7,[[["planarconfiguration",4]],["bool",15]]],[11,"eq","tiff","",10,[[["tiffformaterror",4]],["bool",15]]],[11,"ne","","",10,[[["tiffformaterror",4]],["bool",15]]],[11,"eq","","",11,[[["tiffunsupportederror",4]],["bool",15]]],[11,"ne","","",11,[[["tiffunsupportederror",4]],["bool",15]]],[11,"eq","","",12,[[["colortype",4]],["bool",15]]],[11,"ne","","",12,[[["colortype",4]],["bool",15]]],[11,"fmt","tiff::decoder::ifd","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","tiff::decoder","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","tiff","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",11,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",9,[[["formatter",3]],[["result",4],["error",3]]]],[11,"hash","tiff::decoder::ifd","",0,[[]]],[11,"hash","","",2,[[]]],[11,"hash","tiff::decoder","",5,[[]]],[11,"hash","","",6,[[]]],[11,"hash","","",7,[[]]],[11,"hash","tiff","",10,[[]]],[11,"hash","","",11,[[]]],[11,"hash","","",12,[[]]],[11,"description","","",9,[[],["str",15]]],[11,"cause","","",9,[[],[["option",4],["error",8]]]],[11,"from_i64","tiff::decoder::ifd","",1,[[["i64",15]],["option",4]]],[11,"from_u64","","",1,[[["u64",15]],["option",4]]],[11,"from_i64","tiff::decoder","",5,[[["i64",15]],["option",4]]],[11,"from_u64","","",5,[[["u64",15]],["option",4]]],[11,"from_i64","","",6,[[["i64",15]],["option",4]]],[11,"from_u64","","",6,[[["u64",15]],["option",4]]],[11,"from_i64","","",7,[[["i64",15]],["option",4]]],[11,"from_u64","","",7,[[["u64",15]],["option",4]]]],"p":[[4,"Tag"],[4,"Type"],[4,"Value"],[3,"Entry"],[4,"DecodingResult"],[4,"PhotometricInterpretation"],[4,"CompressionMethod"],[4,"PlanarConfiguration"],[3,"Decoder"],[4,"TiffError"],[4,"TiffFormatError"],[4,"TiffUnsupportedError"],[4,"ColorType"]]},\
"unicode_width":{"doc":"Determine displayed width of <code>char</code> and <code>str</code> types according …","i":[[17,"UNICODE_VERSION","unicode_width","The version of Unicode that this version of unicode-width …",null,null],[8,"UnicodeWidthChar","","Methods for determining displayed width of Unicode …",null,null],[10,"width","","Returns the character\'s displayed width in columns, or …",0,[[],[["usize",15],["option",4]]]],[10,"width_cjk","","Returns the character\'s displayed width in columns, or …",0,[[],[["usize",15],["option",4]]]],[8,"UnicodeWidthStr","","Methods for determining displayed width of Unicode …",null,null],[10,"width","","Returns the string\'s displayed width in columns.",1,[[],["usize",15]]],[10,"width_cjk","","Returns the string\'s displayed width in columns.",1,[[],["usize",15]]]],"p":[[8,"UnicodeWidthChar"],[8,"UnicodeWidthStr"]]},\
"vec_map":{"doc":"A simple map based on a vector for small integer keys. …","i":[[3,"VecMap","vec_map","A map optimized for small integer keys.",null,null],[4,"Entry","","A view into a single entry in a map, which may either be …",null,null],[13,"Vacant","","A vacant Entry",0,null],[13,"Occupied","","An occupied Entry",0,null],[3,"VacantEntry","","A vacant Entry.",null,null],[3,"OccupiedEntry","","An occupied Entry.",null,null],[11,"new","","Creates an empty <code>VecMap</code>.",1,[[]]],[11,"with_capacity","","Creates an empty <code>VecMap</code> with space for at least <code>capacity</code> …",1,[[["usize",15]]]],[11,"capacity","","Returns the number of elements the <code>VecMap</code> can hold without…",1,[[],["usize",15]]],[11,"reserve_len","","Reserves capacity for the given <code>VecMap</code> to contain <code>len</code> …",1,[[["usize",15]]]],[11,"reserve_len_exact","","Reserves the minimum capacity for the given <code>VecMap</code> to …",1,[[["usize",15]]]],[11,"shrink_to_fit","","Trims the <code>VecMap</code> of any excess capacity.",1,[[]]],[11,"keys","","Returns an iterator visiting all keys in ascending order …",1,[[],["keys",3]]],[11,"values","","Returns an iterator visiting all values in ascending …",1,[[],["values",3]]],[11,"values_mut","","Returns an iterator visiting all values in ascending …",1,[[],["valuesmut",3]]],[11,"iter","","Returns an iterator visiting all key-value pairs in …",1,[[],["iter",3]]],[11,"iter_mut","","Returns an iterator visiting all key-value pairs in …",1,[[],["itermut",3]]],[11,"append","","Moves all elements from <code>other</code> into the map while …",1,[[]]],[11,"split_off","","Splits the collection into two at the given key.",1,[[["usize",15]]]],[11,"drain","","Returns an iterator visiting all key-value pairs in …",1,[[],["drain",3]]],[11,"len","","Returns the number of elements in the map.",1,[[],["usize",15]]],[11,"is_empty","","Returns true if the map contains no elements.",1,[[],["bool",15]]],[11,"clear","","Clears the map, removing all key-value pairs.",1,[[]]],[11,"get","","Returns a reference to the value corresponding to the key.",1,[[["usize",15]],["option",4]]],[11,"contains_key","","Returns true if the map contains a value for the …",1,[[["usize",15]],["bool",15]]],[11,"get_mut","","Returns a mutable reference to the value corresponding to …",1,[[["usize",15]],["option",4]]],[11,"insert","","Inserts a key-value pair into the map. If the key already …",1,[[["usize",15]],["option",4]]],[11,"remove","","Removes a key from the map, returning the value at the …",1,[[["usize",15]],["option",4]]],[11,"entry","","Gets the given key\'s corresponding entry in the map for …",1,[[["usize",15]],["entry",4]]],[11,"retain","","Retains only the elements specified by the predicate.",1,[[]]],[11,"or_insert","","Ensures a value is in the entry by inserting the default …",0,[[]]],[11,"or_insert_with","","Ensures a value is in the entry by inserting the result …",0,[[["fnonce",8]]]],[11,"insert","","Sets the value of the entry with the VacantEntry\'s key, …",2,[[]]],[11,"get","","Gets a reference to the value in the entry.",3,[[]]],[11,"get_mut","","Gets a mutable reference to the value in the entry.",3,[[]]],[11,"into_mut","","Converts the entry into a mutable reference to its value.",3,[[]]],[11,"insert","","Sets the value of the entry with the OccupiedEntry\'s key, …",3,[[]]],[11,"remove","","Takes the value of the entry out of the map, and returns …",3,[[]]],[3,"Iter","","An iterator over the key-value pairs of a map.",null,null],[3,"IterMut","","An iterator over the key-value pairs of a map, with the …",null,null],[3,"Keys","","An iterator over the keys of a map.",null,null],[3,"Values","","An iterator over the values of a map.",null,null],[3,"ValuesMut","","An iterator over the values of a map.",null,null],[3,"IntoIter","","A consuming iterator over the key-value pairs of a map.",null,null],[3,"Drain","","A draining iterator over the key-value pairs of a map.",null,null],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"into_iter","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"into_iter","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"into_iter","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"into_iter","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"into_iter","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"into_iter","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into_iter","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"next_back","","",4,[[],["option",4]]],[11,"next_back","","",5,[[],["option",4]]],[11,"next_back","","",10,[[],["option",4]]],[11,"next_back","","",6,[[],[["option",4],["usize",15]]]],[11,"next_back","","",7,[[],["option",4]]],[11,"next_back","","",8,[[],["option",4]]],[11,"next_back","","",9,[[],["option",4]]],[11,"extend","","",1,[[["intoiterator",8]]]],[11,"extend","","",1,[[["intoiterator",8]]]],[11,"into_iter","","Returns an iterator visiting all key-value pairs in …",1,[[],["intoiter",3]]],[11,"next","","",4,[[],["option",4]]],[11,"size_hint","","",4,[[]]],[11,"next","","",5,[[],["option",4]]],[11,"size_hint","","",5,[[]]],[11,"next","","",10,[[],["option",4]]],[11,"size_hint","","",10,[[]]],[11,"next","","",6,[[],[["option",4],["usize",15]]]],[11,"size_hint","","",6,[[]]],[11,"next","","",7,[[],["option",4]]],[11,"size_hint","","",7,[[]]],[11,"next","","",8,[[],["option",4]]],[11,"size_hint","","",8,[[]]],[11,"next","","",9,[[],["option",4]]],[11,"size_hint","","",9,[[]]],[11,"clone","","",1,[[]]],[11,"clone_from","","",1,[[]]],[11,"clone","","",4,[[],["iter",3]]],[11,"clone","","",6,[[],["keys",3]]],[11,"clone","","",7,[[],["values",3]]],[11,"default","","",1,[[]]],[11,"cmp","","",1,[[],["ordering",4]]],[11,"eq","","",1,[[],["bool",15]]],[11,"partial_cmp","","",1,[[],[["option",4],["ordering",4]]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"index","","",1,[[["usize",15]]]],[11,"index","","",1,[[["usize",15]]]],[11,"index_mut","","",1,[[["usize",15]]]],[11,"index_mut","","",1,[[["usize",15]]]],[11,"hash","","",1,[[]]],[11,"from_iter","","",1,[[["intoiterator",8]]]]],"p":[[4,"Entry"],[3,"VecMap"],[3,"VacantEntry"],[3,"OccupiedEntry"],[3,"Iter"],[3,"IterMut"],[3,"Keys"],[3,"Values"],[3,"ValuesMut"],[3,"IntoIter"],[3,"Drain"]]},\
"vecmath":{"doc":"A simple and generic library for vector math.","i":[[0,"traits","vecmath","Various useful traits",null,null],[8,"Float","vecmath::traits","Convenience trait for floats.",null,null],[8,"Min","","Minimum value.",null,null],[10,"min","","Returns the minimum value of self or other.",0,[[]]],[8,"Max","","Maximum value.",null,null],[10,"max","","Returns the maximum value of self or other.",1,[[]]],[8,"Signum","","The sign of the number.",null,null],[10,"signum","","Returns number representing the sign of self",2,[[]]],[8,"Powf","","Floating number power.",null,null],[10,"powf","","Returns floating power of the number.",3,[[]]],[8,"Radians","","Useful constants for radians.",null,null],[10,"_90","","Returns radians corresponding to 90 degrees.",4,[[]]],[10,"_180","","Returns radians corresponding to 180 degrees.",4,[[]]],[10,"_360","","Returns radians corresponding to 360 degrees.",4,[[]]],[10,"deg_to_rad","","Convert a value to radians from degrees. Equivalent to …",4,[[]]],[10,"rad_to_deg","","Convert a value to degrees from radians. Equivalent to …",4,[[]]],[8,"One","","Number 1.",null,null],[10,"one","","Returns 1.",5,[[]]],[8,"Zero","","Number 0.",null,null],[10,"zero","","Returns 0.",6,[[]]],[8,"Sqrt","","Square root.",null,null],[10,"sqrt","","Returns square root.",7,[[]]],[8,"Trig","","Basic trigonometry functions",null,null],[10,"sin","","Returns sine of self.",8,[[]]],[10,"cos","","Returns cosine of self.",8,[[]]],[10,"tan","","Returns tangent of self.",8,[[]]],[10,"asin","","Returns inverse sine of self.",8,[[]]],[10,"acos","","Returns inverse cosine of self.",8,[[]]],[10,"atan","","Returns inverse tangent of self.",8,[[]]],[10,"atan2","","Returns the four quadrant arctangent of self (y) and …",8,[[]]],[10,"sinh","","Returns hyperbolic sine of self.",8,[[]]],[10,"cosh","","Returns hyperbolic cosine of self.",8,[[]]],[10,"tanh","","Returns hyperbolic tangent of self.",8,[[]]],[10,"asinh","","Returns inverse hyperbolic sine of self.",8,[[]]],[10,"acosh","","Returns inverse hyperbolic cosine of self.",8,[[]]],[10,"atanh","","Returns inverse hyperbolic tangent of self.",8,[[]]],[8,"Cast","","Casts into another type.",null,null],[10,"cast","","Casts into other type.",9,[[]]],[8,"FromPrimitive","","Trait for converting from different numeric types",null,null],[10,"from_f64","","from a f64",10,[[["f64",15]]]],[10,"from_f32","","from a f32",10,[[["f32",15]]]],[10,"from_isize","","from a isze",10,[[["isize",15]]]],[10,"from_u32","","from a u32",10,[[["u32",15]]]],[10,"from_i32","","from a i32",10,[[["i32",15]]]],[6,"Vector2","vecmath","A 2D vector.",null,null],[6,"Vector3","","A 3D vector.",null,null],[6,"Vector4","","A 4D vector.",null,null],[6,"Matrix2x3","","A 2x3 matrix.",null,null],[6,"Matrix3x2","","A 3x2 matrix.",null,null],[6,"Matrix3","","A 3x3 matrix.",null,null],[6,"Matrix3x4","","A 3x4 matrix.",null,null],[6,"Matrix4x3","","A 4x3 matrix.",null,null],[6,"Matrix4","","A 4x4 matrix.",null,null],[5,"col_mat3x2_mul_col","","Computes column vector in column matrix product.",null,[[["usize",15],["matrix3x2",6]],["vector2",6]]],[5,"col_mat3_mul_col","","Computes column vector in column matrix product.",null,[[["usize",15],["matrix3",6]],["vector3",6]]],[5,"col_mat4x3_mul_col","","Computes column vector in column matrix product.",null,[[["usize",15],["matrix4x3",6]],["vector3",6]]],[5,"col_mat4_mul_col","","Computes column vector in column matrix product.",null,[[["usize",15],["matrix4",6]],["vector4",6]]],[5,"row_mat2x3_mul_row","","Computes row vector in row matrix product.",null,[[["matrix2x3",6],["usize",15]],["vector3",6]]],[5,"row_mat3_mul_row","","Computes row vector in row matrix product.",null,[[["usize",15],["matrix3",6]],["vector3",6]]],[5,"row_mat3x4_mul_row","","Computes row vector in row matrix product.",null,[[["usize",15],["matrix3x4",6]],["vector4",6]]],[5,"row_mat4_mul_row","","Computes row vector in row matrix product.",null,[[["usize",15],["matrix4",6]],["vector4",6]]],[5,"col_mat3x2_mul","","Multiplies two matrices.",null,[[["matrix3x2",6]],["matrix3x2",6]]],[5,"col_mat3_mul","","Multiplies two matrices.",null,[[["matrix3",6]],["matrix3",6]]],[5,"col_mat4x3_mul","","Multiplies two matrices.",null,[[["matrix4x3",6]],["matrix4x3",6]]],[5,"col_mat4_mul","","Multiplies two matrices.",null,[[["matrix4",6]],["matrix4",6]]],[5,"row_mat2x3_mul","","Multiplies two matrices.",null,[[["matrix2x3",6]],["matrix2x3",6]]],[5,"row_mat3_mul","","Multiplies two matrices.",null,[[["matrix3",6]],["matrix3",6]]],[5,"row_mat3x4_mul","","Multiplies two matrices.",null,[[["matrix3x4",6]],["matrix3x4",6]]],[5,"row_mat4_mul","","Multiplies two matrices.",null,[[["matrix4",6]],["matrix4",6]]],[5,"mat2x3_id","","Constructs identity matrix.",null,[[],["matrix2x3",6]]],[5,"mat3x2_id","","Constructs identity matrix.",null,[[],["matrix3x2",6]]],[5,"mat3_id","","Constructs identity matrix.",null,[[],["matrix3",6]]],[5,"mat3x4_id","","Constructs identity matrix.",null,[[],["matrix3x4",6]]],[5,"mat4x3_id","","Constructs identity matrix.",null,[[],["matrix4x3",6]]],[5,"mat4_id","","Constructs identity matrix.",null,[[],["matrix4",6]]],[5,"vec2_cast","","Converts to another vector type.",null,[[["vector2",6]],["vector2",6]]],[5,"vec3_cast","","Converts to another vector type.",null,[[["vector3",6]],["vector3",6]]],[5,"vec4_cast","","Converts to another vector type.",null,[[["vector4",6]],["vector4",6]]],[5,"mat2x3_cast","","Converts to another matrix type.",null,[[["matrix2x3",6]],["matrix2x3",6]]],[5,"mat3x2_cast","","Converts to another matrix type.",null,[[["matrix3x2",6]],["matrix3x2",6]]],[5,"mat3_cast","","Converts to another matrix type.",null,[[["matrix3",6]],["matrix3",6]]],[5,"mat3x4_cast","","Converts to another matrix type.",null,[[["matrix3x4",6]],["matrix3x4",6]]],[5,"mat4x3_cast","","Converts to another matrix type.",null,[[["matrix4x3",6]],["matrix4x3",6]]],[5,"mat4_cast","","Converts to another matrix type.",null,[[["matrix4",6]],["matrix4",6]]],[5,"vec2_sub","","Subtracts \'b\' from \'a\'.",null,[[["vector2",6]],["vector2",6]]],[5,"vec3_sub","","Subtracts \'b\' from \'a\'.",null,[[["vector3",6]],["vector3",6]]],[5,"vec4_sub","","Subtracts \'b\' from \'a\'.",null,[[["vector4",6]],["vector4",6]]],[5,"mat2x3_sub","","Subtracts \'b\' from \'a\'.",null,[[["matrix2x3",6]],["matrix2x3",6]]],[5,"mat3x2_sub","","Subtracts \'b\' from \'a\'.",null,[[["matrix3x2",6]],["matrix3x2",6]]],[5,"mat3_sub","","Subtracts \'b\' from \'a\'.",null,[[["matrix3",6]],["matrix3",6]]],[5,"mat3x4_sub","","Subtracts \'b\' from \'a\'.",null,[[["matrix3x4",6]],["matrix3x4",6]]],[5,"mat4x3_sub","","Subtracts \'b\' from \'a\'.",null,[[["matrix4x3",6]],["matrix4x3",6]]],[5,"mat4_sub","","Subtracts \'b\' from \'a\'.",null,[[["matrix4",6]],["matrix4",6]]],[5,"vec2_add","","Adds two vectors.",null,[[["vector2",6]],["vector2",6]]],[5,"vec3_add","","Adds two vectors.",null,[[["vector3",6]],["vector3",6]]],[5,"vec4_add","","Adds two vectors.",null,[[["vector4",6]],["vector4",6]]],[5,"mat2x3_add","","Adds two matrices.",null,[[["matrix2x3",6]],["matrix2x3",6]]],[5,"mat3x2_add","","Adds two matrices.",null,[[["matrix3x2",6]],["matrix3x2",6]]],[5,"mat3_add","","Adds two matrices.",null,[[["matrix3",6]],["matrix3",6]]],[5,"mat3x4_add","","Adds two matrices.",null,[[["matrix3x4",6]],["matrix3x4",6]]],[5,"mat4x3_add","","Adds two matrices.",null,[[["matrix4x3",6]],["matrix4x3",6]]],[5,"mat4_add","","Adds two matrices.",null,[[["matrix4",6]],["matrix4",6]]],[5,"vec2_mul","","Multiplies two vectors component wise.",null,[[["vector2",6]],["vector2",6]]],[5,"vec3_mul","","Multiplies two vectors component wise.",null,[[["vector3",6]],["vector3",6]]],[5,"vec4_mul","","Multiplies two vectors component wise.",null,[[["vector4",6]],["vector4",6]]],[5,"vec2_dot","","Computes the dot product.",null,[[["vector2",6]]]],[5,"vec3_dot","","Computes the dot product.",null,[[["vector3",6]]]],[5,"vec4_dot","","Computes the dot product.",null,[[["vector4",6]]]],[5,"vec2_square_len","","Computes the square length of a vector.",null,[[["vector2",6]]]],[5,"vec3_square_len","","Computes the square length of a vector.",null,[[["vector3",6]]]],[5,"vec4_square_len","","Computes the square length of a vector.",null,[[["vector4",6]]]],[5,"vec2_cross","","Computes the cross product.",null,[[["vector2",6]]]],[5,"vec3_cross","","Computes the cross product.",null,[[["vector3",6]],["vector3",6]]],[5,"vec2_scale","","Multiplies the vector with a scalar.",null,[[["vector2",6]],["vector2",6]]],[5,"vec3_scale","","Multiplies the vector with a scalar.",null,[[["vector3",6]],["vector3",6]]],[5,"vec4_scale","","Multiplies the vector with a scalar.",null,[[["vector4",6]],["vector4",6]]],[5,"vec2_neg","","Negates the vector.",null,[[["vector2",6]],["vector2",6]]],[5,"vec3_neg","","Negates the vector.",null,[[["vector3",6]],["vector3",6]]],[5,"vec4_neg","","Negates the vector.",null,[[["vector4",6]],["vector4",6]]],[5,"vec2_len","","Computes the length of vector.",null,[[["vector2",6]]]],[5,"vec3_len","","Computes the length of vector.",null,[[["vector3",6]]]],[5,"vec4_len","","Computes the length of vector.",null,[[["vector4",6]]]],[5,"vec2_inv_len","","Computes the inverse length of a vector.",null,[[["vector2",6]]]],[5,"vec3_inv_len","","Computes the inverse length of a vector.",null,[[["vector3",6]]]],[5,"vec4_inv_len","","Computes the inverse length of a vector.",null,[[["vector4",6]]]],[5,"vec2_normalized","","Computes the normalized.",null,[[["vector2",6]],["vector2",6]]],[5,"vec3_normalized","","Computes the normalized.",null,[[["vector3",6]],["vector3",6]]],[5,"vec4_normalized","","Computes the normalized.",null,[[["vector4",6]],["vector4",6]]],[5,"vec2_normalized_sub","","Computes the normalized difference between two vectors.",null,[[["vector2",6]],["vector2",6]]],[5,"vec3_normalized_sub","","Computes the normalized difference between two vectors.",null,[[["vector3",6]],["vector3",6]]],[5,"vec4_normalized_sub","","Computes the normalized difference between two vectors.",null,[[["vector4",6]],["vector4",6]]],[5,"vec3_dot_vec2","","Computes transformed vector component.",null,[[["vector2",6],["vector3",6]]]],[5,"vec4_dot_vec3","","Computes transformed vector component.",null,[[["vector4",6],["vector3",6]]]],[5,"vec3_dot_pos2","","Computes transformed position component.",null,[[["vector2",6],["vector3",6]]]],[5,"vec4_dot_pos3","","Computes transformed position component.",null,[[["vector4",6],["vector3",6]]]],[5,"row_mat2x3_col","","Returns a column vector of a row matrix.",null,[[["matrix2x3",6],["usize",15],["copy",8]],[["vector2",6],["copy",8]]]],[5,"col_mat2x3_row","","Returns a row vector of a column matrix.",null,[[["matrix2x3",6],["usize",15],["copy",8]],[["vector2",6],["copy",8]]]],[5,"row_mat3x2_col","","Returns a column vector of a row matrix.",null,[[["usize",15],["matrix3x2",6],["copy",8]],[["copy",8],["vector3",6]]]],[5,"col_mat3x2_row","","Returns a row vector of a column matrix.",null,[[["usize",15],["matrix3x2",6],["copy",8]],[["copy",8],["vector3",6]]]],[5,"row_mat3_col","","Returns a column vector of a row matrix.",null,[[["usize",15],["copy",8],["matrix3",6]],[["copy",8],["vector3",6]]]],[5,"col_mat3_row","","Returns a row vector of a column matrix.",null,[[["usize",15],["copy",8],["matrix3",6]],[["copy",8],["vector3",6]]]],[5,"row_mat3x4_col","","Returns a column vector of a row matrix.",null,[[["usize",15],["matrix3x4",6],["copy",8]],[["copy",8],["vector3",6]]]],[5,"col_mat3x4_row","","Returns a row vector of a column matrix.",null,[[["usize",15],["matrix3x4",6],["copy",8]],[["copy",8],["vector3",6]]]],[5,"row_mat4x3_col","","Returns a column vector of a row matrix.",null,[[["usize",15],["copy",8],["matrix4x3",6]],[["vector4",6],["copy",8]]]],[5,"col_mat4x3_row","","Returns a column vector of a row matrix.",null,[[["usize",15],["copy",8],["matrix4x3",6]],[["vector4",6],["copy",8]]]],[5,"row_mat4_col","","Returns a column vector of a row matrix.",null,[[["usize",15],["matrix4",6],["copy",8]],[["vector4",6],["copy",8]]]],[5,"col_mat4_row","","Returns a row vector of a column matrix.",null,[[["usize",15],["matrix4",6],["copy",8]],[["vector4",6],["copy",8]]]],[5,"mat2x3_transposed","","Constructs the transpose of a matrix.",null,[[["matrix2x3",6],["copy",8]],[["matrix3x2",6],["copy",8]]]],[5,"mat3x2_transposed","","Constructs the transpose of a matrix.",null,[[["matrix3x2",6],["copy",8]],[["matrix2x3",6],["copy",8]]]],[5,"mat3_transposed","","Constructs the transpose of a matrix.",null,[[["copy",8],["matrix3",6]],[["copy",8],["matrix3",6]]]],[5,"mat3x4_transposed","","Constructs the transpose of a matrix.",null,[[["matrix3x4",6],["copy",8]],[["copy",8],["matrix4x3",6]]]],[5,"mat4x3_transposed","","Constructs the transpose of a matrix.",null,[[["copy",8],["matrix4x3",6]],[["matrix3x4",6],["copy",8]]]],[5,"mat4_transposed","","Constructs the transpose of a matrix.",null,[[["matrix4",6],["copy",8]],[["matrix4",6],["copy",8]]]],[5,"col_mat3_transform","","Transforms a 3D vector through a matrix.",null,[[["vector3",6],["matrix3",6]],["vector3",6]]],[5,"col_mat4_transform","","Transforms a 4D vector through a matrix.",null,[[["matrix4",6],["vector4",6]],["vector4",6]]],[5,"row_mat3_transform","","Transforms a 3D vector through a matrix.",null,[[["vector3",6],["matrix3",6]],["vector3",6]]],[5,"row_mat4_transform","","Transforms a 4D vector through a matrix.",null,[[["matrix4",6],["vector4",6]],["vector4",6]]],[5,"row_mat2x3_transform_pos2","","Transforms a 2D position through matrix.",null,[[["matrix2x3",6],["vector2",6]],["vector2",6]]],[5,"col_mat3x2_transform_pos2","","Transforms a 2D position through matrix.",null,[[["vector2",6],["matrix3x2",6]],["vector2",6]]],[5,"row_mat3_transform_pos2","","Transforms a 2D position through row matrix.",null,[[["vector2",6],["matrix3",6]],["vector2",6]]],[5,"col_mat3_transform_pos2","","Transforms a 2D position through column matrix.",null,[[["vector2",6],["matrix3",6]],["vector2",6]]],[5,"row_mat3x4_transform_pos3","","Transforms a 3D position through matrix.",null,[[["matrix3x4",6],["vector3",6]],["vector3",6]]],[5,"col_mat4x3_transform_pos3","","Transforms a 3D position through matrix.",null,[[["vector3",6],["matrix4x3",6]],["vector3",6]]],[5,"row_mat2x3_transform_vec2","","Transforms a 2D vector through matrix.",null,[[["matrix2x3",6],["vector2",6]],["vector2",6]]],[5,"col_mat3x2_transform_vec2","","Transforms a 2D vector through matrix.",null,[[["vector2",6],["matrix3x2",6]],["vector2",6]]],[5,"row_mat3_transform_vec2","","Transforms a 2D vector through row matrix.",null,[[["vector2",6],["matrix3",6]],["vector2",6]]],[5,"col_mat3_transform_vec2","","Transforms a 2D vector through column matrix.",null,[[["vector2",6],["matrix3",6]],["vector2",6]]],[5,"row_mat3x4_transform_vec3","","Transforms a 3D vector through matrix.",null,[[["matrix3x4",6],["vector3",6]],["vector3",6]]],[5,"col_mat4x3_transform_vec3","","Transforms a 3D vector through matrix.",null,[[["vector3",6],["matrix4x3",6]],["vector3",6]]],[5,"mat2x3_det","","Computes the determinant of a matrix.",null,[[["matrix2x3",6]]]],[5,"mat3x2_det","","Computes the determinant of a matrix.",null,[[["matrix3x2",6]]]],[5,"mat3_det","","Computes the determinant of a matrix.",null,[[["matrix3",6]]]],[5,"mat3x4_det","","Computes the determinant of a matrix.",null,[[["matrix3x4",6]]]],[5,"mat4x3_det","","Computes the determinant of a matrix.",null,[[["matrix4x3",6]]]],[5,"mat4_det","","Computes the determinant of a 4x4 matrix.",null,[[["matrix4",6]]]],[5,"mat2x3_inv_det","","Computes inverse determinant of a 2x3 matrix.",null,[[["matrix2x3",6]]]],[5,"mat3x2_inv_det","","Computes inverse determinant of a 3x2 matrix.",null,[[["matrix3x2",6]]]],[5,"mat3_inv_det","","Computes inverse determinant of a 3x3 matrix.",null,[[["matrix3",6]]]],[5,"mat3x4_inv_det","","Computes inverse determinant of a 3x4 matrix.",null,[[["matrix3x4",6]]]],[5,"mat4x3_inv_det","","Computes inverse determinant of a 4x3 matrix.",null,[[["matrix4x3",6]]]],[5,"mat4_inv_det","","Computes the inverse determinant of a 4x4 matrix.",null,[[["matrix4",6]]]],[5,"mat2x3_inv","","Computes the inverse of a 2x3 matrix.",null,[[["matrix2x3",6]],["matrix2x3",6]]],[5,"mat3x2_inv","","Computes the inverse of a 3x2 matrix.",null,[[["matrix3x2",6]],["matrix3x2",6]]],[5,"mat3_inv","","Computes the inverse of a 3x3 matrix.",null,[[["matrix3",6]],["matrix3",6]]],[5,"mat3x4_inv","","Computes the inverse of a 3x4 matrix.",null,[[["matrix3x4",6]],["matrix3x4",6]]],[5,"mat4x3_inv","","Computes the inverse of a 4x3 matrix.",null,[[["matrix4x3",6]],["matrix4x3",6]]],[5,"mat4_inv","","Computes the inverse of a 4x4 matrix.",null,[[["matrix4",6]],["matrix4",6]]]],"p":[[8,"Min"],[8,"Max"],[8,"Signum"],[8,"Powf"],[8,"Radians"],[8,"One"],[8,"Zero"],[8,"Sqrt"],[8,"Trig"],[8,"Cast"],[8,"FromPrimitive"]]},\
"viewport":{"doc":"A library for storing viewport information","i":[[3,"Viewport","viewport","Stores viewport information.",null,null],[12,"rect","","Viewport in pixels. <code>[x, y, width height]</code> where <code>(x, y)</code> is …",0,null],[12,"draw_size","","The size of frame buffer in pixels.",0,null],[12,"window_size","","The size of window in points.",0,null],[11,"abs_transform","","Computes absolute transform for 2D graphics, which uses a …",0,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"clone","","",0,[[],["viewport",3]]],[11,"eq","","",0,[[["viewport",3]],["bool",15]]],[11,"ne","","",0,[[["viewport",3]],["bool",15]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]]],"p":[[3,"Viewport"]]},\
"window":{"doc":"Window storage and interfacing traits.","i":[[3,"NoWindow","window","A window without user interface, often used in server …",null,null],[6,"ProcAddress","","The type of an OpenGL function address.",null,null],[3,"Size","","Structure to store the window size.",null,null],[12,"width","","The width.",0,null],[12,"height","","The height.",0,null],[3,"Position","","Structure to store the window position.",null,null],[12,"x","","The x coordinate.",1,null],[12,"y","","The y coordinate.",1,null],[8,"BuildFromWindowSettings","","Constructs a window from a <code>WindowSettings</code> object.",null,null],[10,"build_from_window_settings","","Builds the window from a <code>WindowSettings</code> object.",2,[[["windowsettings",3]],[["result",4],["string",3]]]],[8,"Window","","Trait representing the minimum requirements for defining …",null,null],[10,"set_should_close","","Tells the window to close or stay open.",3,[[["bool",15]]]],[10,"should_close","","Returns true if the window should close.",3,[[],["bool",15]]],[10,"size","","Gets the size of the window.",3,[[],["size",3]]],[10,"swap_buffers","","Swaps render buffers.",3,[[]]],[10,"wait_event","","Wait indefinitely for an input event to be available from …",3,[[],["input",4]]],[10,"wait_event_timeout","","Wait for an input event to be available from the window …",3,[[["duration",3]],[["option",4],["input",4]]]],[10,"poll_event","","Polls an input event from the window.",3,[[],[["option",4],["input",4]]]],[10,"draw_size","","Gets the draw size of the window.",3,[[],["size",3]]],[8,"AdvancedWindow","","Trait representing a window with the most features that …",null,null],[10,"get_title","","Gets a copy of the title of the window.",4,[[],["string",3]]],[10,"set_title","","Sets the title of the window.",4,[[["string",3]]]],[11,"title","","Sets title on window.",4,[[["string",3]]]],[10,"get_exit_on_esc","","Gets whether to exit when pressing esc.",4,[[],["bool",15]]],[10,"set_exit_on_esc","","Sets whether to exit when pressing esc.",4,[[["bool",15]]]],[11,"exit_on_esc","","Sets whether to exit when pressing the Esc button.",4,[[["bool",15]]]],[10,"set_capture_cursor","","Sets whether to capture/grab the cursor.",4,[[["bool",15]]]],[11,"capture_cursor","","Sets whether to capture/grab the cursor.",4,[[["bool",15]]]],[10,"show","","Shows the window.",4,[[]]],[10,"hide","","Hides the window.",4,[[]]],[10,"get_position","","Gets the position of window.",4,[[],[["option",4],["position",3]]]],[10,"set_position","","Sets the position of window.",4,[[["into",8],["position",3]]]],[10,"set_size","","Sets the window size.",4,[[["into",8],["size",3]]]],[11,"position","","Sets the position of window.",4,[[["into",8],["position",3]]]],[8,"OpenGLWindow","","Trait for OpenGL specific operations on a window.",null,null],[10,"get_proc_address","","Returns the address of the specified OpenGL function if …",5,[[["str",15]],["procaddress",6]]],[10,"is_current","","Returns true if this window\'s gl context is the current …",5,[[],["bool",15]]],[10,"make_current","","Make the window\'s gl context the current gl context.",5,[[]]],[3,"WindowSettings","","Settings structure for window behavior.",null,null],[11,"new","","Creates window settings with defaults.",6,[[["into",8],["string",3],["into",8],["size",3]],["windowsettings",3]]],[11,"build","","Builds window from the given settings.",6,[[],[["string",3],["buildfromwindowsettings",8],["result",4]]]],[11,"get_title","","Gets the title of built windows.",6,[[],["string",3]]],[11,"set_title","","Sets the title of built windows.",6,[[["string",3]]]],[11,"title","","Sets the title of built windows.",6,[[["string",3]]]],[11,"get_size","","Gets the size of built windows.",6,[[],["size",3]]],[11,"set_size","","Sets the size of built windows.",6,[[["size",3]]]],[11,"size","","Sets the size of built windows.",6,[[["size",3]]]],[11,"get_fullscreen","","Gets whether built windows will be fullscreen.",6,[[],["bool",15]]],[11,"set_fullscreen","","Sets whether built windows will be fullscreen.",6,[[["bool",15]]]],[11,"fullscreen","","Sets whether built windows will be fullscreen.",6,[[["bool",15]]]],[11,"get_exit_on_esc","","Gets whether built windows should exit when the Esc key …",6,[[],["bool",15]]],[11,"set_exit_on_esc","","Sets whether built windows should exit when the Esc key …",6,[[["bool",15]]]],[11,"exit_on_esc","","Sets whether built windows should exit when the Esc key …",6,[[["bool",15]]]],[11,"get_samples","","Gets the number of samples to use for anti-aliasing.",6,[[],["u8",15]]],[11,"set_samples","","Sets the number of samples to use for anti-aliasing.",6,[[["u8",15]]]],[11,"samples","","Sets the number of samples to use for anti-aliasing.",6,[[["u8",15]]]],[11,"get_vsync","","Gets whether built windows should use vsync.",6,[[],["bool",15]]],[11,"set_vsync","","Sets whether built windows should use vsync.",6,[[["bool",15]]]],[11,"vsync","","Sets whether built windows should use vsync.",6,[[["bool",15]]]],[11,"get_maybe_opengl","","Gets the OpenGL version of built windows.",6,[[],[["opengl",4],["option",4]]]],[11,"set_maybe_opengl","","Sets OpenGL version of built windows.",6,[[["opengl",4],["option",4]]]],[11,"maybe_opengl","","Sets OpenGL version of built windows.",6,[[["opengl",4],["option",4]]]],[11,"set_opengl","","Sets OpenGL version of built windows.",6,[[["opengl",4]]]],[11,"opengl","","Sets the OpenGL version of built windows.",6,[[["opengl",4]]]],[11,"get_srgb","","Gets whether built windows should use hardware …",6,[[],["bool",15]]],[11,"set_srgb","","Sets whether built windows should use hardware …",6,[[["bool",15]]]],[11,"srgb","","Sets whether built windows should use hardware …",6,[[["bool",15]]]],[11,"get_resizable","","Gets whether built windows should be resizable.",6,[[],["bool",15]]],[11,"set_resizable","","Sets whether built windows should be resizable.",6,[[["bool",15]]]],[11,"resizable","","Sets whether built windows should be resizable.",6,[[["bool",15]]]],[11,"get_decorated","","Gets whether built windows should be decorated.",6,[[],["bool",15]]],[11,"set_decorated","","Sets whether built windows should be decorated.",6,[[["bool",15]]]],[11,"decorated","","Sets whether built windows should be decorated.",6,[[["bool",15]]]],[11,"get_controllers","","Gets whether built windows should listen to controller …",6,[[],["bool",15]]],[11,"set_controllers","","Sets whether built windows should listen to controller …",6,[[["bool",15]]]],[11,"controllers","","Sets whether build windows should listen to controller …",6,[[["bool",15]]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"build_from_window_settings","","ErrorsThis function will always return without error.",7,[[["windowsettings",3]],[["result",4],["string",3]]]],[11,"should_close","","",7,[[],["bool",15]]],[11,"set_should_close","","",7,[[["bool",15]]]],[11,"size","","",7,[[],["size",3]]],[11,"swap_buffers","","",7,[[]]],[11,"wait_event","","",7,[[],["input",4]]],[11,"wait_event_timeout","","",7,[[["duration",3]],[["option",4],["input",4]]]],[11,"poll_event","","",7,[[],[["option",4],["input",4]]]],[11,"draw_size","","",7,[[],["size",3]]],[11,"get_title","","",7,[[],["string",3]]],[11,"set_title","","",7,[[["string",3]]]],[11,"get_exit_on_esc","","",7,[[],["bool",15]]],[11,"set_exit_on_esc","","",7,[[["bool",15]]]],[11,"set_capture_cursor","","",7,[[["bool",15]]]],[11,"show","","",7,[[]]],[11,"hide","","",7,[[]]],[11,"get_position","","",7,[[],[["option",4],["position",3]]]],[11,"set_position","","",7,[[["into",8],["position",3]]]],[11,"set_size","","",7,[[["into",8],["size",3]]]],[11,"from","","",0,[[],["size",3]]],[11,"from","","",0,[[],["size",3]]],[11,"from","","",0,[[],["size",3]]],[11,"from","","",0,[[],["size",3]]],[11,"from","","",1,[[],["position",3]]],[11,"from","","",1,[[],["position",3]]],[11,"clone","","",0,[[],["size",3]]],[11,"clone","","",1,[[],["position",3]]],[11,"clone","","",6,[[],["windowsettings",3]]],[11,"eq","","",0,[[["size",3]],["bool",15]]],[11,"ne","","",0,[[["size",3]],["bool",15]]],[11,"eq","","",1,[[["position",3]],["bool",15]]],[11,"ne","","",1,[[["position",3]],["bool",15]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"new","","Creates a new <code>NoWindow</code>.",7,[[["windowsettings",3]],["nowindow",3]]]],"p":[[3,"Size"],[3,"Position"],[8,"BuildFromWindowSettings"],[8,"Window"],[8,"AdvancedWindow"],[8,"OpenGLWindow"],[3,"WindowSettings"],[3,"NoWindow"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);